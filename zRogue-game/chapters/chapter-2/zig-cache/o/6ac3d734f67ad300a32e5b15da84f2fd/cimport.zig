pub const __builtin_bswap16 = @import("std").zig.c_builtins.__builtin_bswap16;
pub const __builtin_bswap32 = @import("std").zig.c_builtins.__builtin_bswap32;
pub const __builtin_bswap64 = @import("std").zig.c_builtins.__builtin_bswap64;
pub const __builtin_signbit = @import("std").zig.c_builtins.__builtin_signbit;
pub const __builtin_signbitf = @import("std").zig.c_builtins.__builtin_signbitf;
pub const __builtin_popcount = @import("std").zig.c_builtins.__builtin_popcount;
pub const __builtin_ctz = @import("std").zig.c_builtins.__builtin_ctz;
pub const __builtin_clz = @import("std").zig.c_builtins.__builtin_clz;
pub const __builtin_sqrt = @import("std").zig.c_builtins.__builtin_sqrt;
pub const __builtin_sqrtf = @import("std").zig.c_builtins.__builtin_sqrtf;
pub const __builtin_sin = @import("std").zig.c_builtins.__builtin_sin;
pub const __builtin_sinf = @import("std").zig.c_builtins.__builtin_sinf;
pub const __builtin_cos = @import("std").zig.c_builtins.__builtin_cos;
pub const __builtin_cosf = @import("std").zig.c_builtins.__builtin_cosf;
pub const __builtin_exp = @import("std").zig.c_builtins.__builtin_exp;
pub const __builtin_expf = @import("std").zig.c_builtins.__builtin_expf;
pub const __builtin_exp2 = @import("std").zig.c_builtins.__builtin_exp2;
pub const __builtin_exp2f = @import("std").zig.c_builtins.__builtin_exp2f;
pub const __builtin_log = @import("std").zig.c_builtins.__builtin_log;
pub const __builtin_logf = @import("std").zig.c_builtins.__builtin_logf;
pub const __builtin_log2 = @import("std").zig.c_builtins.__builtin_log2;
pub const __builtin_log2f = @import("std").zig.c_builtins.__builtin_log2f;
pub const __builtin_log10 = @import("std").zig.c_builtins.__builtin_log10;
pub const __builtin_log10f = @import("std").zig.c_builtins.__builtin_log10f;
pub const __builtin_abs = @import("std").zig.c_builtins.__builtin_abs;
pub const __builtin_labs = @import("std").zig.c_builtins.__builtin_labs;
pub const __builtin_llabs = @import("std").zig.c_builtins.__builtin_llabs;
pub const __builtin_fabs = @import("std").zig.c_builtins.__builtin_fabs;
pub const __builtin_fabsf = @import("std").zig.c_builtins.__builtin_fabsf;
pub const __builtin_floor = @import("std").zig.c_builtins.__builtin_floor;
pub const __builtin_floorf = @import("std").zig.c_builtins.__builtin_floorf;
pub const __builtin_ceil = @import("std").zig.c_builtins.__builtin_ceil;
pub const __builtin_ceilf = @import("std").zig.c_builtins.__builtin_ceilf;
pub const __builtin_trunc = @import("std").zig.c_builtins.__builtin_trunc;
pub const __builtin_truncf = @import("std").zig.c_builtins.__builtin_truncf;
pub const __builtin_round = @import("std").zig.c_builtins.__builtin_round;
pub const __builtin_roundf = @import("std").zig.c_builtins.__builtin_roundf;
pub const __builtin_strlen = @import("std").zig.c_builtins.__builtin_strlen;
pub const __builtin_strcmp = @import("std").zig.c_builtins.__builtin_strcmp;
pub const __builtin_object_size = @import("std").zig.c_builtins.__builtin_object_size;
pub const __builtin___memset_chk = @import("std").zig.c_builtins.__builtin___memset_chk;
pub const __builtin_memset = @import("std").zig.c_builtins.__builtin_memset;
pub const __builtin___memcpy_chk = @import("std").zig.c_builtins.__builtin___memcpy_chk;
pub const __builtin_memcpy = @import("std").zig.c_builtins.__builtin_memcpy;
pub const __builtin_expect = @import("std").zig.c_builtins.__builtin_expect;
pub const __builtin_nanf = @import("std").zig.c_builtins.__builtin_nanf;
pub const __builtin_huge_valf = @import("std").zig.c_builtins.__builtin_huge_valf;
pub const __builtin_inff = @import("std").zig.c_builtins.__builtin_inff;
pub const __builtin_isnan = @import("std").zig.c_builtins.__builtin_isnan;
pub const __builtin_isinf = @import("std").zig.c_builtins.__builtin_isinf;
pub const __builtin_isinf_sign = @import("std").zig.c_builtins.__builtin_isinf_sign;
pub const __has_builtin = @import("std").zig.c_builtins.__has_builtin;
pub const __builtin_assume = @import("std").zig.c_builtins.__builtin_assume;
pub const __builtin_unreachable = @import("std").zig.c_builtins.__builtin_unreachable;
pub const __builtin_constant_p = @import("std").zig.c_builtins.__builtin_constant_p;
pub const __builtin_mul_overflow = @import("std").zig.c_builtins.__builtin_mul_overflow;
pub const __int8_t = i8;
pub const __uint8_t = u8;
pub const __int16_t = c_short;
pub const __uint16_t = c_ushort;
pub const __int32_t = c_int;
pub const __uint32_t = c_uint;
pub const __int64_t = c_longlong;
pub const __uint64_t = c_ulonglong;
pub const __darwin_intptr_t = c_long;
pub const __darwin_natural_t = c_uint;
pub const __darwin_ct_rune_t = c_int;
pub const __mbstate_t = extern union {
    __mbstate8: [128]u8,
    _mbstateL: c_longlong,
};
pub const __darwin_mbstate_t = __mbstate_t;
pub const __darwin_ptrdiff_t = c_long;
pub const __darwin_size_t = c_ulong;
pub const __builtin_va_list = [*c]u8;
pub const __darwin_va_list = __builtin_va_list;
pub const __darwin_wchar_t = c_int;
pub const __darwin_rune_t = __darwin_wchar_t;
pub const __darwin_wint_t = c_int;
pub const __darwin_clock_t = c_ulong;
pub const __darwin_socklen_t = __uint32_t;
pub const __darwin_ssize_t = c_long;
pub const __darwin_time_t = c_long;
pub const __darwin_blkcnt_t = __int64_t;
pub const __darwin_blksize_t = __int32_t;
pub const __darwin_dev_t = __int32_t;
pub const __darwin_fsblkcnt_t = c_uint;
pub const __darwin_fsfilcnt_t = c_uint;
pub const __darwin_gid_t = __uint32_t;
pub const __darwin_id_t = __uint32_t;
pub const __darwin_ino64_t = __uint64_t;
pub const __darwin_ino_t = __darwin_ino64_t;
pub const __darwin_mach_port_name_t = __darwin_natural_t;
pub const __darwin_mach_port_t = __darwin_mach_port_name_t;
pub const __darwin_mode_t = __uint16_t;
pub const __darwin_off_t = __int64_t;
pub const __darwin_pid_t = __int32_t;
pub const __darwin_sigset_t = __uint32_t;
pub const __darwin_suseconds_t = __int32_t;
pub const __darwin_uid_t = __uint32_t;
pub const __darwin_useconds_t = __uint32_t;
pub const __darwin_uuid_t = [16]u8;
pub const __darwin_uuid_string_t = [37]u8;
pub const struct___darwin_pthread_handler_rec = extern struct {
    __routine: ?*const fn (?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) void),
    __arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __next: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
};
pub const struct__opaque_pthread_attr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_cond_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [40]u8 = @import("std").mem.zeroes([40]u8),
};
pub const struct__opaque_pthread_condattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_mutex_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_mutexattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_once_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_rwlock_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [192]u8 = @import("std").mem.zeroes([192]u8),
};
pub const struct__opaque_pthread_rwlockattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const struct__opaque_pthread_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __cleanup_stack: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
    __opaque: [8176]u8 = @import("std").mem.zeroes([8176]u8),
};
pub const __darwin_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const __darwin_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const __darwin_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const __darwin_pthread_key_t = c_ulong;
pub const __darwin_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const __darwin_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const __darwin_pthread_once_t = struct__opaque_pthread_once_t;
pub const __darwin_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const __darwin_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const __darwin_pthread_t = [*c]struct__opaque_pthread_t;
pub const __darwin_nl_item = c_int;
pub const __darwin_wctrans_t = c_int;
pub const __darwin_wctype_t = __uint32_t;
pub const u_int8_t = u8;
pub const u_int16_t = c_ushort;
pub const u_int32_t = c_uint;
pub const u_int64_t = c_ulonglong;
pub const register_t = i64;
pub const user_addr_t = u_int64_t;
pub const user_size_t = u_int64_t;
pub const user_ssize_t = i64;
pub const user_long_t = i64;
pub const user_ulong_t = u_int64_t;
pub const user_time_t = i64;
pub const user_off_t = i64;
pub const syscall_arg_t = u_int64_t;
pub const va_list = __darwin_va_list;
pub extern fn renameat(c_int, [*c]const u8, c_int, [*c]const u8) c_int;
pub extern fn renamex_np([*c]const u8, [*c]const u8, c_uint) c_int;
pub extern fn renameatx_np(c_int, [*c]const u8, c_int, [*c]const u8, c_uint) c_int;
pub const fpos_t = __darwin_off_t;
pub const struct___sbuf = extern struct {
    _base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _size: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___sFILEX = opaque {};
pub const struct___sFILE = extern struct {
    _p: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _r: c_int = @import("std").mem.zeroes(c_int),
    _w: c_int = @import("std").mem.zeroes(c_int),
    _flags: c_short = @import("std").mem.zeroes(c_short),
    _file: c_short = @import("std").mem.zeroes(c_short),
    _bf: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _lbfsize: c_int = @import("std").mem.zeroes(c_int),
    _cookie: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    _close: ?*const fn (?*anyopaque) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) c_int),
    _read: ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int),
    _seek: ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t = @import("std").mem.zeroes(?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t),
    _write: ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int),
    _ub: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _extra: ?*struct___sFILEX = @import("std").mem.zeroes(?*struct___sFILEX),
    _ur: c_int = @import("std").mem.zeroes(c_int),
    _ubuf: [3]u8 = @import("std").mem.zeroes([3]u8),
    _nbuf: [1]u8 = @import("std").mem.zeroes([1]u8),
    _lb: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _blksize: c_int = @import("std").mem.zeroes(c_int),
    _offset: fpos_t = @import("std").mem.zeroes(fpos_t),
};
pub const FILE = struct___sFILE;
pub extern var __stdinp: [*c]FILE;
pub extern var __stdoutp: [*c]FILE;
pub extern var __stderrp: [*c]FILE;
pub extern fn clearerr([*c]FILE) void;
pub extern fn fclose([*c]FILE) c_int;
pub extern fn feof([*c]FILE) c_int;
pub extern fn ferror([*c]FILE) c_int;
pub extern fn fflush([*c]FILE) c_int;
pub extern fn fgetc([*c]FILE) c_int;
pub extern fn fgetpos(noalias [*c]FILE, [*c]fpos_t) c_int;
pub extern fn fgets(noalias [*c]u8, c_int, [*c]FILE) [*c]u8;
pub extern fn fopen(__filename: [*c]const u8, __mode: [*c]const u8) [*c]FILE;
pub extern fn fprintf([*c]FILE, [*c]const u8, ...) c_int;
pub extern fn fputc(c_int, [*c]FILE) c_int;
pub extern fn fputs(noalias [*c]const u8, noalias [*c]FILE) c_int;
pub extern fn fread(__ptr: ?*anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn freopen(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]FILE) [*c]FILE;
pub extern fn fscanf(noalias [*c]FILE, noalias [*c]const u8, ...) c_int;
pub extern fn fseek([*c]FILE, c_long, c_int) c_int;
pub extern fn fsetpos([*c]FILE, [*c]const fpos_t) c_int;
pub extern fn ftell([*c]FILE) c_long;
pub extern fn fwrite(__ptr: ?*const anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn getc([*c]FILE) c_int;
pub extern fn getchar() c_int;
pub extern fn gets([*c]u8) [*c]u8;
pub extern fn perror([*c]const u8) void;
pub extern fn printf([*c]const u8, ...) c_int;
pub extern fn putc(c_int, [*c]FILE) c_int;
pub extern fn putchar(c_int) c_int;
pub extern fn puts([*c]const u8) c_int;
pub extern fn remove([*c]const u8) c_int;
pub extern fn rename(__old: [*c]const u8, __new: [*c]const u8) c_int;
pub extern fn rewind([*c]FILE) void;
pub extern fn scanf(noalias [*c]const u8, ...) c_int;
pub extern fn setbuf(noalias [*c]FILE, noalias [*c]u8) void;
pub extern fn setvbuf(noalias [*c]FILE, noalias [*c]u8, c_int, usize) c_int;
pub extern fn sprintf([*c]u8, [*c]const u8, ...) c_int;
pub extern fn sscanf(noalias [*c]const u8, noalias [*c]const u8, ...) c_int;
pub extern fn tmpfile() [*c]FILE;
pub extern fn tmpnam([*c]u8) [*c]u8;
pub extern fn ungetc(c_int, [*c]FILE) c_int;
pub extern fn vfprintf([*c]FILE, [*c]const u8, __builtin_va_list) c_int;
pub extern fn vprintf([*c]const u8, __builtin_va_list) c_int;
pub extern fn vsprintf([*c]u8, [*c]const u8, __builtin_va_list) c_int;
pub extern fn ctermid([*c]u8) [*c]u8;
pub extern fn fdopen(c_int, [*c]const u8) [*c]FILE;
pub extern fn fileno([*c]FILE) c_int;
pub extern fn pclose([*c]FILE) c_int;
pub extern fn popen([*c]const u8, [*c]const u8) [*c]FILE;
pub extern fn __srget([*c]FILE) c_int;
pub extern fn __svfscanf([*c]FILE, [*c]const u8, va_list) c_int;
pub extern fn __swbuf(c_int, [*c]FILE) c_int;
pub inline fn __sputc(arg__c: c_int, arg__p: [*c]FILE) c_int {
    var _c = arg__c;
    _ = &_c;
    var _p = arg__p;
    _ = &_p;
    if (((blk: {
        const ref = &_p.*._w;
        ref.* -= 1;
        break :blk ref.*;
    }) >= @as(c_int, 0)) or ((_p.*._w >= _p.*._lbfsize) and (@as(c_int, @bitCast(@as(c_uint, @as(u8, @bitCast(@as(i8, @truncate(_c))))))) != @as(c_int, '\n')))) return @as(c_int, @bitCast(@as(c_uint, blk: {
        const tmp = @as(u8, @bitCast(@as(i8, @truncate(_c))));
        (blk_1: {
            const ref = &_p.*._p;
            const tmp_2 = ref.*;
            ref.* += 1;
            break :blk_1 tmp_2;
        }).* = tmp;
        break :blk tmp;
    }))) else return __swbuf(_c, _p);
    return 0;
}
pub extern fn flockfile([*c]FILE) void;
pub extern fn ftrylockfile([*c]FILE) c_int;
pub extern fn funlockfile([*c]FILE) void;
pub extern fn getc_unlocked([*c]FILE) c_int;
pub extern fn getchar_unlocked() c_int;
pub extern fn putc_unlocked(c_int, [*c]FILE) c_int;
pub extern fn putchar_unlocked(c_int) c_int;
pub extern fn getw([*c]FILE) c_int;
pub extern fn putw(c_int, [*c]FILE) c_int;
pub extern fn tempnam(__dir: [*c]const u8, __prefix: [*c]const u8) [*c]u8;
pub const off_t = __darwin_off_t;
pub extern fn fseeko(__stream: [*c]FILE, __offset: off_t, __whence: c_int) c_int;
pub extern fn ftello(__stream: [*c]FILE) off_t;
pub extern fn snprintf(__str: [*c]u8, __size: c_ulong, __format: [*c]const u8, ...) c_int;
pub extern fn vfscanf(noalias __stream: [*c]FILE, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vscanf(noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsnprintf(__str: [*c]u8, __size: c_ulong, __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsscanf(noalias __str: [*c]const u8, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn dprintf(c_int, noalias [*c]const u8, ...) c_int;
pub extern fn vdprintf(c_int, noalias [*c]const u8, va_list) c_int;
pub extern fn getdelim(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, __delimiter: c_int, noalias __stream: [*c]FILE) isize;
pub extern fn getline(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, noalias __stream: [*c]FILE) isize;
pub extern fn fmemopen(noalias __buf: ?*anyopaque, __size: usize, noalias __mode: [*c]const u8) [*c]FILE;
pub extern fn open_memstream(__bufp: [*c][*c]u8, __sizep: [*c]usize) [*c]FILE;
pub extern const sys_nerr: c_int;
pub const sys_errlist: [*c]const [*c]const u8 = @extern([*c]const [*c]const u8, .{
    .name = "sys_errlist",
});
pub extern fn asprintf(noalias [*c][*c]u8, noalias [*c]const u8, ...) c_int;
pub extern fn ctermid_r([*c]u8) [*c]u8;
pub extern fn fgetln([*c]FILE, [*c]usize) [*c]u8;
pub extern fn fmtcheck([*c]const u8, [*c]const u8) [*c]const u8;
pub extern fn fpurge([*c]FILE) c_int;
pub extern fn setbuffer([*c]FILE, [*c]u8, c_int) void;
pub extern fn setlinebuf([*c]FILE) c_int;
pub extern fn vasprintf(noalias [*c][*c]u8, noalias [*c]const u8, va_list) c_int;
pub extern fn funopen(?*const anyopaque, ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int, ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int, ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t, ?*const fn (?*anyopaque) callconv(.C) c_int) [*c]FILE;
pub extern fn __sprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __snprintf_chk(noalias [*c]u8, usize, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __vsprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub extern fn __vsnprintf_chk(noalias [*c]u8, usize, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub const STBI_default: c_int = 0;
pub const STBI_grey: c_int = 1;
pub const STBI_grey_alpha: c_int = 2;
pub const STBI_rgb: c_int = 3;
pub const STBI_rgb_alpha: c_int = 4;
const enum_unnamed_1 = c_uint;
pub const P_ALL: c_int = 0;
pub const P_PID: c_int = 1;
pub const P_PGID: c_int = 2;
pub const idtype_t = c_uint;
pub const pid_t = __darwin_pid_t;
pub const id_t = __darwin_id_t;
pub const sig_atomic_t = c_int;
pub const struct___darwin_arm_exception_state = extern struct {
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __far: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_exception_state64 = extern struct {
    __far: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __esr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_thread_state = extern struct {
    __r: [13]__uint32_t = @import("std").mem.zeroes([13]__uint32_t),
    __sp: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __lr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pc: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_thread_state64 = extern struct {
    __x: [29]__uint64_t = @import("std").mem.zeroes([29]__uint64_t),
    __fp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __lr: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __sp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __pc: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pad: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_vfp_state = extern struct {
    __r: [64]__uint32_t = @import("std").mem.zeroes([64]__uint32_t),
    __fpscr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const __uint128_t = u128;
pub const struct___darwin_arm_neon_state64 = extern struct {
    __v: [32]__uint128_t = @import("std").mem.zeroes([32]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_neon_state = extern struct {
    __v: [16]__uint128_t = @import("std").mem.zeroes([16]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___arm_pagein_state = extern struct {
    __pagein_error: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___arm_legacy_debug_state = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
};
pub const struct___darwin_arm_debug_state32 = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_debug_state64 = extern struct {
    __bvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __bcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_cpmu_state64 = extern struct {
    __ctrs: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
};
pub const struct___darwin_mcontext32 = extern struct {
    __es: struct___darwin_arm_exception_state = @import("std").mem.zeroes(struct___darwin_arm_exception_state),
    __ss: struct___darwin_arm_thread_state = @import("std").mem.zeroes(struct___darwin_arm_thread_state),
    __fs: struct___darwin_arm_vfp_state = @import("std").mem.zeroes(struct___darwin_arm_vfp_state),
};
pub const struct___darwin_mcontext64 = extern struct {
    __es: struct___darwin_arm_exception_state64 = @import("std").mem.zeroes(struct___darwin_arm_exception_state64),
    __ss: struct___darwin_arm_thread_state64 = @import("std").mem.zeroes(struct___darwin_arm_thread_state64),
    __ns: struct___darwin_arm_neon_state64 = @import("std").mem.zeroes(struct___darwin_arm_neon_state64),
};
pub const mcontext_t = [*c]struct___darwin_mcontext64;
pub const pthread_attr_t = __darwin_pthread_attr_t;
pub const struct___darwin_sigaltstack = extern struct {
    ss_sp: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ss_size: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    ss_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const stack_t = struct___darwin_sigaltstack;
pub const struct___darwin_ucontext = extern struct {
    uc_onstack: c_int = @import("std").mem.zeroes(c_int),
    uc_sigmask: __darwin_sigset_t = @import("std").mem.zeroes(__darwin_sigset_t),
    uc_stack: struct___darwin_sigaltstack = @import("std").mem.zeroes(struct___darwin_sigaltstack),
    uc_link: [*c]struct___darwin_ucontext = @import("std").mem.zeroes([*c]struct___darwin_ucontext),
    uc_mcsize: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    uc_mcontext: [*c]struct___darwin_mcontext64 = @import("std").mem.zeroes([*c]struct___darwin_mcontext64),
};
pub const ucontext_t = struct___darwin_ucontext;
pub const sigset_t = __darwin_sigset_t;
pub const uid_t = __darwin_uid_t;
pub const union_sigval = extern union {
    sival_int: c_int,
    sival_ptr: ?*anyopaque,
};
pub const struct_sigevent = extern struct {
    sigev_notify: c_int = @import("std").mem.zeroes(c_int),
    sigev_signo: c_int = @import("std").mem.zeroes(c_int),
    sigev_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    sigev_notify_function: ?*const fn (union_sigval) callconv(.C) void = @import("std").mem.zeroes(?*const fn (union_sigval) callconv(.C) void),
    sigev_notify_attributes: [*c]pthread_attr_t = @import("std").mem.zeroes([*c]pthread_attr_t),
};
pub const struct___siginfo = extern struct {
    si_signo: c_int = @import("std").mem.zeroes(c_int),
    si_errno: c_int = @import("std").mem.zeroes(c_int),
    si_code: c_int = @import("std").mem.zeroes(c_int),
    si_pid: pid_t = @import("std").mem.zeroes(pid_t),
    si_uid: uid_t = @import("std").mem.zeroes(uid_t),
    si_status: c_int = @import("std").mem.zeroes(c_int),
    si_addr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    si_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    si_band: c_long = @import("std").mem.zeroes(c_long),
    __pad: [7]c_ulong = @import("std").mem.zeroes([7]c_ulong),
};
pub const siginfo_t = struct___siginfo;
pub const union___sigaction_u = extern union {
    __sa_handler: ?*const fn (c_int) callconv(.C) void,
    __sa_sigaction: ?*const fn (c_int, [*c]struct___siginfo, ?*anyopaque) callconv(.C) void,
};
pub const struct___sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_tramp: ?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.C) void),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const sig_t = ?*const fn (c_int) callconv(.C) void;
pub const struct_sigvec = extern struct {
    sv_handler: ?*const fn (c_int) callconv(.C) void = @import("std").mem.zeroes(?*const fn (c_int) callconv(.C) void),
    sv_mask: c_int = @import("std").mem.zeroes(c_int),
    sv_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigstack = extern struct {
    ss_sp: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    ss_onstack: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn signal(c_int, ?*const fn (c_int) callconv(.C) void) ?*const fn (c_int) callconv(.C) void;
pub const int_least8_t = i8;
pub const int_least16_t = i16;
pub const int_least32_t = i32;
pub const int_least64_t = i64;
pub const uint_least8_t = u8;
pub const uint_least16_t = u16;
pub const uint_least32_t = u32;
pub const uint_least64_t = u64;
pub const int_fast8_t = i8;
pub const int_fast16_t = i16;
pub const int_fast32_t = i32;
pub const int_fast64_t = i64;
pub const uint_fast8_t = u8;
pub const uint_fast16_t = u16;
pub const uint_fast32_t = u32;
pub const uint_fast64_t = u64;
pub const intmax_t = c_long;
pub const uintmax_t = c_ulong;
pub const struct_timeval = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_usec: __darwin_suseconds_t = @import("std").mem.zeroes(__darwin_suseconds_t),
};
pub const rlim_t = __uint64_t;
pub const struct_rusage = extern struct {
    ru_utime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_stime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_maxrss: c_long = @import("std").mem.zeroes(c_long),
    ru_ixrss: c_long = @import("std").mem.zeroes(c_long),
    ru_idrss: c_long = @import("std").mem.zeroes(c_long),
    ru_isrss: c_long = @import("std").mem.zeroes(c_long),
    ru_minflt: c_long = @import("std").mem.zeroes(c_long),
    ru_majflt: c_long = @import("std").mem.zeroes(c_long),
    ru_nswap: c_long = @import("std").mem.zeroes(c_long),
    ru_inblock: c_long = @import("std").mem.zeroes(c_long),
    ru_oublock: c_long = @import("std").mem.zeroes(c_long),
    ru_msgsnd: c_long = @import("std").mem.zeroes(c_long),
    ru_msgrcv: c_long = @import("std").mem.zeroes(c_long),
    ru_nsignals: c_long = @import("std").mem.zeroes(c_long),
    ru_nvcsw: c_long = @import("std").mem.zeroes(c_long),
    ru_nivcsw: c_long = @import("std").mem.zeroes(c_long),
};
pub const rusage_info_t = ?*anyopaque;
pub const struct_rusage_info_v0 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v1 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v2 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v3 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v4 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v5 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v6 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
    ri_user_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_system_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_pinstructions: u64 = @import("std").mem.zeroes(u64),
    ri_pcycles: u64 = @import("std").mem.zeroes(u64),
    ri_energy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_penergy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_reserved: [14]u64 = @import("std").mem.zeroes([14]u64),
};
pub const rusage_info_current = struct_rusage_info_v6;
pub const struct_rlimit = extern struct {
    rlim_cur: rlim_t = @import("std").mem.zeroes(rlim_t),
    rlim_max: rlim_t = @import("std").mem.zeroes(rlim_t),
};
pub const struct_proc_rlimit_control_wakeupmon = extern struct {
    wm_flags: u32 = @import("std").mem.zeroes(u32),
    wm_rate: i32 = @import("std").mem.zeroes(i32),
};
pub extern fn getpriority(c_int, id_t) c_int;
pub extern fn getiopolicy_np(c_int, c_int) c_int;
pub extern fn getrlimit(c_int, [*c]struct_rlimit) c_int;
pub extern fn getrusage(c_int, [*c]struct_rusage) c_int;
pub extern fn setpriority(c_int, id_t, c_int) c_int;
pub extern fn setiopolicy_np(c_int, c_int, c_int) c_int;
pub extern fn setrlimit(c_int, [*c]const struct_rlimit) c_int;
pub fn _OSSwapInt16(arg__data: u16) callconv(.C) u16 {
    var _data = arg__data;
    _ = &_data;
    return @as(u16, @bitCast(@as(c_short, @truncate((@as(c_int, @bitCast(@as(c_uint, _data))) << @intCast(8)) | (@as(c_int, @bitCast(@as(c_uint, _data))) >> @intCast(8))))));
}
pub fn _OSSwapInt32(arg__data: u32) callconv(.C) u32 {
    var _data = arg__data;
    _ = &_data;
    _data = __builtin_bswap32(_data);
    return _data;
}
pub fn _OSSwapInt64(arg__data: u64) callconv(.C) u64 {
    var _data = arg__data;
    _ = &_data;
    return __builtin_bswap64(_data);
}
pub const struct__OSUnalignedU16 = extern struct {
    __val: u16 align(1) = @import("std").mem.zeroes(u16),
};
pub const struct__OSUnalignedU32 = extern struct {
    __val: u32 align(1) = @import("std").mem.zeroes(u32),
};
pub const struct__OSUnalignedU64 = extern struct {
    __val: u64 align(1) = @import("std").mem.zeroes(u64),
};
pub fn OSReadSwapInt16(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u16 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt16(@as([*c]struct__OSUnalignedU16, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSReadSwapInt32(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u32 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt32(@as([*c]struct__OSUnalignedU32, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSReadSwapInt64(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u64 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt64(@as([*c]struct__OSUnalignedU64, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSWriteSwapInt16(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u16) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU16, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt16(_data);
}
pub fn OSWriteSwapInt32(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u32) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU32, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt32(_data);
}
pub fn OSWriteSwapInt64(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u64) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU64, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt64(_data);
} // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:201:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_2 = opaque {}; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:220:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_3 = opaque {};
pub const union_wait = extern union {
    w_status: c_int,
    w_T: struct_unnamed_2,
    w_S: struct_unnamed_3,
};
pub extern fn wait([*c]c_int) pid_t;
pub extern fn waitpid(pid_t, [*c]c_int, c_int) pid_t;
pub extern fn waitid(idtype_t, id_t, [*c]siginfo_t, c_int) c_int;
pub extern fn wait3([*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn wait4(pid_t, [*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn alloca(c_ulong) ?*anyopaque;
pub const ct_rune_t = __darwin_ct_rune_t;
pub const rune_t = __darwin_rune_t;
pub const wchar_t = __darwin_wchar_t;
pub const div_t = extern struct {
    quot: c_int = @import("std").mem.zeroes(c_int),
    rem: c_int = @import("std").mem.zeroes(c_int),
};
pub const ldiv_t = extern struct {
    quot: c_long = @import("std").mem.zeroes(c_long),
    rem: c_long = @import("std").mem.zeroes(c_long),
};
pub const lldiv_t = extern struct {
    quot: c_longlong = @import("std").mem.zeroes(c_longlong),
    rem: c_longlong = @import("std").mem.zeroes(c_longlong),
};
pub extern var __mb_cur_max: c_int;
pub const malloc_type_id_t = c_ulonglong;
pub extern fn malloc_type_malloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_calloc(count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_free(ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_realloc(ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_valloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_aligned_alloc(alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_posix_memalign(memptr: [*c]?*anyopaque, alignment: usize, size: usize, type_id: malloc_type_id_t) c_int;
pub const struct__malloc_zone_t = opaque {};
pub const malloc_zone_t = struct__malloc_zone_t;
pub extern fn malloc_type_zone_malloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_calloc(zone: ?*malloc_zone_t, count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_free(zone: ?*malloc_zone_t, ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_zone_realloc(zone: ?*malloc_zone_t, ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_valloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_memalign(zone: ?*malloc_zone_t, alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc(__size: c_ulong) ?*anyopaque;
pub extern fn calloc(__count: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn free(?*anyopaque) void;
pub extern fn realloc(__ptr: ?*anyopaque, __size: c_ulong) ?*anyopaque;
pub extern fn valloc(usize) ?*anyopaque;
pub extern fn aligned_alloc(__alignment: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn posix_memalign(__memptr: [*c]?*anyopaque, __alignment: usize, __size: usize) c_int;
pub extern fn abort() noreturn;
pub extern fn abs(c_int) c_int;
pub extern fn atexit(?*const fn () callconv(.C) void) c_int;
pub extern fn atof([*c]const u8) f64;
pub extern fn atoi([*c]const u8) c_int;
pub extern fn atol([*c]const u8) c_long;
pub extern fn atoll([*c]const u8) c_longlong;
pub extern fn bsearch(__key: ?*const anyopaque, __base: ?*const anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) ?*anyopaque;
pub extern fn div(c_int, c_int) div_t;
pub extern fn exit(c_int) noreturn;
pub extern fn getenv([*c]const u8) [*c]u8;
pub extern fn labs(c_long) c_long;
pub extern fn ldiv(c_long, c_long) ldiv_t;
pub extern fn llabs(c_longlong) c_longlong;
pub extern fn lldiv(c_longlong, c_longlong) lldiv_t;
pub extern fn mblen(__s: [*c]const u8, __n: usize) c_int;
pub extern fn mbstowcs(noalias [*c]wchar_t, noalias [*c]const u8, usize) usize;
pub extern fn mbtowc(noalias [*c]wchar_t, noalias [*c]const u8, usize) c_int;
pub extern fn qsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn rand() c_int;
pub extern fn srand(c_uint) void;
pub extern fn strtod([*c]const u8, [*c][*c]u8) f64;
pub extern fn strtof([*c]const u8, [*c][*c]u8) f32;
pub extern fn strtol(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_long;
pub extern fn strtold([*c]const u8, [*c][*c]u8) c_longdouble;
pub extern fn strtoll(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtoul(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulong;
pub extern fn strtoull(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern fn system([*c]const u8) c_int;
pub extern fn wcstombs(noalias [*c]u8, noalias [*c]const wchar_t, usize) usize;
pub extern fn wctomb([*c]u8, wchar_t) c_int;
pub extern fn _Exit(c_int) noreturn;
pub extern fn a64l([*c]const u8) c_long;
pub extern fn drand48() f64;
pub extern fn ecvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn erand48([*c]c_ushort) f64;
pub extern fn fcvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn gcvt(f64, c_int, [*c]u8) [*c]u8;
pub extern fn getsubopt([*c][*c]u8, [*c]const [*c]u8, [*c][*c]u8) c_int;
pub extern fn grantpt(c_int) c_int;
pub extern fn initstate(c_uint, [*c]u8, usize) [*c]u8;
pub extern fn jrand48([*c]c_ushort) c_long;
pub extern fn l64a(c_long) [*c]u8;
pub extern fn lcong48([*c]c_ushort) void;
pub extern fn lrand48() c_long;
pub extern fn mktemp([*c]u8) [*c]u8;
pub extern fn mkstemp([*c]u8) c_int;
pub extern fn mrand48() c_long;
pub extern fn nrand48([*c]c_ushort) c_long;
pub extern fn posix_openpt(c_int) c_int;
pub extern fn ptsname(c_int) [*c]u8;
pub extern fn ptsname_r(fildes: c_int, buffer: [*c]u8, buflen: usize) c_int;
pub extern fn putenv([*c]u8) c_int;
pub extern fn random() c_long;
pub extern fn rand_r([*c]c_uint) c_int;
pub extern fn realpath(noalias [*c]const u8, noalias [*c]u8) [*c]u8;
pub extern fn seed48([*c]c_ushort) [*c]c_ushort;
pub extern fn setenv(__name: [*c]const u8, __value: [*c]const u8, __overwrite: c_int) c_int;
pub extern fn setkey([*c]const u8) void;
pub extern fn setstate([*c]const u8) [*c]u8;
pub extern fn srand48(c_long) void;
pub extern fn srandom(c_uint) void;
pub extern fn unlockpt(c_int) c_int;
pub extern fn unsetenv([*c]const u8) c_int;
pub const dev_t = __darwin_dev_t;
pub const mode_t = __darwin_mode_t;
pub extern fn arc4random() u32;
pub extern fn arc4random_addrandom([*c]u8, c_int) void;
pub extern fn arc4random_buf(__buf: ?*anyopaque, __nbytes: usize) void;
pub extern fn arc4random_stir() void;
pub extern fn arc4random_uniform(__upper_bound: u32) u32; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:273:6: warning: unsupported type: 'BlockPointer'
pub const atexit_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:273:6
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:282:7: warning: unsupported type: 'BlockPointer'
pub const bsearch_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:282:7
pub extern fn cgetcap([*c]u8, [*c]const u8, c_int) [*c]u8;
pub extern fn cgetclose() c_int;
pub extern fn cgetent([*c][*c]u8, [*c][*c]u8, [*c]const u8) c_int;
pub extern fn cgetfirst([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetmatch([*c]const u8, [*c]const u8) c_int;
pub extern fn cgetnext([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetnum([*c]u8, [*c]const u8, [*c]c_long) c_int;
pub extern fn cgetset([*c]const u8) c_int;
pub extern fn cgetstr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn cgetustr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn daemon(c_int, c_int) c_int;
pub extern fn devname(dev_t, mode_t) [*c]u8;
pub extern fn devname_r(dev_t, mode_t, buf: [*c]u8, len: c_int) [*c]u8;
pub extern fn getbsize([*c]c_int, [*c]c_long) [*c]u8;
pub extern fn getloadavg([*c]f64, c_int) c_int;
pub extern fn getprogname() [*c]const u8;
pub extern fn setprogname([*c]const u8) void;
pub extern fn heapsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) c_int; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:319:6: warning: unsupported type: 'BlockPointer'
pub const heapsort_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:319:6
pub extern fn mergesort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) c_int; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:326:6: warning: unsupported type: 'BlockPointer'
pub const mergesort_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:326:6
pub extern fn psort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:334:7: warning: unsupported type: 'BlockPointer'
pub const psort_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:334:7
pub extern fn psort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:342:7: warning: unsupported type: 'BlockPointer'
pub const qsort_b = @compileError("unable to resolve prototype of function"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:342:7
pub extern fn qsort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn radixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn rpmatch([*c]const u8) c_int;
pub extern fn sradixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn sranddev() void;
pub extern fn srandomdev() void;
pub extern fn reallocf(__ptr: ?*anyopaque, __size: usize) ?*anyopaque;
pub extern fn strtonum(__numstr: [*c]const u8, __minval: c_longlong, __maxval: c_longlong, __errstrp: [*c][*c]const u8) c_longlong;
pub extern fn strtoq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtouq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern var suboptarg: [*c]u8;
pub const stbi_uc = u8;
pub const stbi_us = c_ushort;
pub const stbi_io_callbacks = extern struct {
    read: ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int),
    skip: ?*const fn (?*anyopaque, c_int) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int) callconv(.C) void),
    eof: ?*const fn (?*anyopaque) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) c_int),
};
pub extern fn stbi_load_from_memory(buffer: [*c]const stbi_uc, len: c_int, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_uc;
pub extern fn stbi_load_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_uc;
pub extern fn stbi_load(filename: [*c]const u8, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_uc;
pub extern fn stbi_load_from_file(f: [*c]FILE, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_uc;
pub extern fn stbi_load_gif_from_memory(buffer: [*c]const stbi_uc, len: c_int, delays: [*c][*c]c_int, x: [*c]c_int, y: [*c]c_int, z: [*c]c_int, comp: [*c]c_int, req_comp: c_int) [*c]stbi_uc;
pub extern fn stbi_load_16_from_memory(buffer: [*c]const stbi_uc, len: c_int, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_us;
pub extern fn stbi_load_16_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_us;
pub extern fn stbi_load_16(filename: [*c]const u8, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_us;
pub extern fn stbi_load_from_file_16(f: [*c]FILE, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]stbi_us;
pub extern fn stbi_loadf_from_memory(buffer: [*c]const stbi_uc, len: c_int, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]f32;
pub extern fn stbi_loadf_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]f32;
pub extern fn stbi_loadf(filename: [*c]const u8, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]f32;
pub extern fn stbi_loadf_from_file(f: [*c]FILE, x: [*c]c_int, y: [*c]c_int, channels_in_file: [*c]c_int, desired_channels: c_int) [*c]f32;
pub extern fn stbi_hdr_to_ldr_gamma(gamma: f32) void;
pub extern fn stbi_hdr_to_ldr_scale(scale: f32) void;
pub extern fn stbi_ldr_to_hdr_gamma(gamma: f32) void;
pub extern fn stbi_ldr_to_hdr_scale(scale: f32) void;
pub extern fn stbi_is_hdr_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque) c_int;
pub extern fn stbi_is_hdr_from_memory(buffer: [*c]const stbi_uc, len: c_int) c_int;
pub extern fn stbi_is_hdr(filename: [*c]const u8) c_int;
pub extern fn stbi_is_hdr_from_file(f: [*c]FILE) c_int;
pub extern fn stbi_failure_reason() [*c]const u8;
pub extern fn stbi_image_free(retval_from_stbi_load: ?*anyopaque) void;
pub extern fn stbi_info_from_memory(buffer: [*c]const stbi_uc, len: c_int, x: [*c]c_int, y: [*c]c_int, comp: [*c]c_int) c_int;
pub extern fn stbi_info_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque, x: [*c]c_int, y: [*c]c_int, comp: [*c]c_int) c_int;
pub extern fn stbi_is_16_bit_from_memory(buffer: [*c]const stbi_uc, len: c_int) c_int;
pub extern fn stbi_is_16_bit_from_callbacks(clbk: [*c]const stbi_io_callbacks, user: ?*anyopaque) c_int;
pub extern fn stbi_info(filename: [*c]const u8, x: [*c]c_int, y: [*c]c_int, comp: [*c]c_int) c_int;
pub extern fn stbi_info_from_file(f: [*c]FILE, x: [*c]c_int, y: [*c]c_int, comp: [*c]c_int) c_int;
pub extern fn stbi_is_16_bit(filename: [*c]const u8) c_int;
pub extern fn stbi_is_16_bit_from_file(f: [*c]FILE) c_int;
pub extern fn stbi_set_unpremultiply_on_load(flag_true_if_should_unpremultiply: c_int) void;
pub extern fn stbi_convert_iphone_png_to_rgb(flag_true_if_should_convert: c_int) void;
pub extern fn stbi_set_flip_vertically_on_load(flag_true_if_should_flip: c_int) void;
pub extern fn stbi_set_unpremultiply_on_load_thread(flag_true_if_should_unpremultiply: c_int) void;
pub extern fn stbi_convert_iphone_png_to_rgb_thread(flag_true_if_should_convert: c_int) void;
pub extern fn stbi_set_flip_vertically_on_load_thread(flag_true_if_should_flip: c_int) void;
pub extern fn stbi_zlib_decode_malloc_guesssize(buffer: [*c]const u8, len: c_int, initial_size: c_int, outlen: [*c]c_int) [*c]u8;
pub extern fn stbi_zlib_decode_malloc_guesssize_headerflag(buffer: [*c]const u8, len: c_int, initial_size: c_int, outlen: [*c]c_int, parse_header: c_int) [*c]u8;
pub extern fn stbi_zlib_decode_malloc(buffer: [*c]const u8, len: c_int, outlen: [*c]c_int) [*c]u8;
pub extern fn stbi_zlib_decode_buffer(obuffer: [*c]u8, olen: c_int, ibuffer: [*c]const u8, ilen: c_int) c_int;
pub extern fn stbi_zlib_decode_noheader_malloc(buffer: [*c]const u8, len: c_int, outlen: [*c]c_int) [*c]u8;
pub extern fn stbi_zlib_decode_noheader_buffer(obuffer: [*c]u8, olen: c_int, ibuffer: [*c]const u8, ilen: c_int) c_int;
pub extern fn SDL_GetPlatform() [*c]const u8;
pub const u_char = u8;
pub const u_short = c_ushort;
pub const u_int = c_uint;
pub const u_long = c_ulong;
pub const ushort = c_ushort;
pub const uint = c_uint;
pub const u_quad_t = u_int64_t;
pub const quad_t = i64;
pub const qaddr_t = [*c]quad_t;
pub const caddr_t = [*c]u8;
pub const daddr_t = i32;
pub const fixpt_t = u_int32_t;
pub const blkcnt_t = __darwin_blkcnt_t;
pub const blksize_t = __darwin_blksize_t;
pub const gid_t = __darwin_gid_t;
pub const in_addr_t = __uint32_t;
pub const in_port_t = __uint16_t;
pub const ino_t = __darwin_ino_t;
pub const ino64_t = __darwin_ino64_t;
pub const key_t = __int32_t;
pub const nlink_t = __uint16_t;
pub const segsz_t = i32;
pub const swblk_t = i32;
pub const clock_t = __darwin_clock_t;
pub const time_t = __darwin_time_t;
pub const useconds_t = __darwin_useconds_t;
pub const suseconds_t = __darwin_suseconds_t;
pub const rsize_t = __darwin_size_t;
pub const errno_t = c_int;
pub const struct_fd_set = extern struct {
    fds_bits: [32]__int32_t = @import("std").mem.zeroes([32]__int32_t),
};
pub const fd_set = struct_fd_set;
pub extern fn __darwin_check_fd_set_overflow(c_int, ?*const anyopaque, c_int) c_int;
pub inline fn __darwin_check_fd_set(arg__a: c_int, arg__b: ?*const anyopaque) c_int {
    var _a = arg__a;
    _ = &_a;
    var _b = arg__b;
    _ = &_b;
    if (@as(usize, @intCast(@intFromPtr(&__darwin_check_fd_set_overflow))) != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        return __darwin_check_fd_set_overflow(_a, _b, @as(c_int, 0));
    } else {
        return 1;
    }
    return 0;
}
pub inline fn __darwin_fd_isset(arg__fd: c_int, arg__p: [*c]const struct_fd_set) c_int {
    var _fd = arg__fd;
    _ = &_fd;
    var _p = arg__p;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        return _p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))] & @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
    }
    return 0;
}
pub inline fn __darwin_fd_set(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* |= @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub inline fn __darwin_fd_clr(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* &= ~@as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub const fd_mask = __int32_t;
pub const pthread_cond_t = __darwin_pthread_cond_t;
pub const pthread_condattr_t = __darwin_pthread_condattr_t;
pub const pthread_mutex_t = __darwin_pthread_mutex_t;
pub const pthread_mutexattr_t = __darwin_pthread_mutexattr_t;
pub const pthread_once_t = __darwin_pthread_once_t;
pub const pthread_rwlock_t = __darwin_pthread_rwlock_t;
pub const pthread_rwlockattr_t = __darwin_pthread_rwlockattr_t;
pub const pthread_t = __darwin_pthread_t;
pub const pthread_key_t = __darwin_pthread_key_t;
pub const fsblkcnt_t = __darwin_fsblkcnt_t;
pub const fsfilcnt_t = __darwin_fsfilcnt_t;
pub const ptrdiff_t = c_long;
pub const max_align_t = c_longdouble;
pub const __gnuc_va_list = __builtin_va_list;
pub extern fn memchr(__s: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn memcmp(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn memcpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn memmove(__dst: ?*anyopaque, __src: ?*const anyopaque, __len: c_ulong) ?*anyopaque;
pub extern fn memset(__b: ?*anyopaque, __c: c_int, __len: c_ulong) ?*anyopaque;
pub extern fn strcat(__s1: [*c]u8, __s2: [*c]const u8) [*c]u8;
pub extern fn strchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strcmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcoll(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn strcspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strerror(__errnum: c_int) [*c]u8;
pub extern fn strlen(__s: [*c]const u8) c_ulong;
pub extern fn strncat(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strncmp(__s1: [*c]const u8, __s2: [*c]const u8, __n: c_ulong) c_int;
pub extern fn strncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strpbrk(__s: [*c]const u8, __charset: [*c]const u8) [*c]u8;
pub extern fn strrchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strstr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strtok(__str: [*c]u8, __sep: [*c]const u8) [*c]u8;
pub extern fn strxfrm(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) c_ulong;
pub extern fn strtok_r(__str: [*c]u8, __sep: [*c]const u8, __lasts: [*c][*c]u8) [*c]u8;
pub extern fn strerror_r(__errnum: c_int, __strerrbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn strdup(__s1: [*c]const u8) [*c]u8;
pub extern fn memccpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn stpcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn stpncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strndup(__s1: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strnlen(__s1: [*c]const u8, __n: usize) usize;
pub extern fn strsignal(__sig: c_int) [*c]u8;
pub extern fn memset_s(__s: ?*anyopaque, __smax: rsize_t, __c: c_int, __n: rsize_t) errno_t;
pub extern fn memmem(__big: ?*const anyopaque, __big_len: usize, __little: ?*const anyopaque, __little_len: usize) ?*anyopaque;
pub extern fn memset_pattern4(__b: ?*anyopaque, __pattern4: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern8(__b: ?*anyopaque, __pattern8: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern16(__b: ?*anyopaque, __pattern16: ?*const anyopaque, __len: usize) void;
pub extern fn strcasestr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strnstr(__big: [*c]const u8, __little: [*c]const u8, __len: usize) [*c]u8;
pub extern fn strlcat(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strlcpy(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strmode(__mode: c_int, __bp: [*c]u8) void;
pub extern fn strsep(__stringp: [*c][*c]u8, __delim: [*c]const u8) [*c]u8;
pub extern fn swab(noalias ?*const anyopaque, noalias ?*anyopaque, isize) void;
pub extern fn timingsafe_bcmp(__b1: ?*const anyopaque, __b2: ?*const anyopaque, __len: usize) c_int;
pub extern fn strsignal_r(__sig: c_int, __strsignalbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn bcmp(?*const anyopaque, ?*const anyopaque, c_ulong) c_int;
pub extern fn bcopy(?*const anyopaque, ?*anyopaque, usize) void;
pub extern fn bzero(?*anyopaque, c_ulong) void;
pub extern fn index([*c]const u8, c_int) [*c]u8;
pub extern fn rindex([*c]const u8, c_int) [*c]u8;
pub extern fn ffs(c_int) c_int;
pub extern fn strcasecmp([*c]const u8, [*c]const u8) c_int;
pub extern fn strncasecmp([*c]const u8, [*c]const u8, c_ulong) c_int;
pub extern fn ffsl(c_long) c_int;
pub extern fn ffsll(c_longlong) c_int;
pub extern fn fls(c_int) c_int;
pub extern fn flsl(c_long) c_int;
pub extern fn flsll(c_longlong) c_int;
pub const mbstate_t = __darwin_mbstate_t;
pub const struct_timespec = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_nsec: c_long = @import("std").mem.zeroes(c_long),
};
pub const struct_tm = extern struct {
    tm_sec: c_int = @import("std").mem.zeroes(c_int),
    tm_min: c_int = @import("std").mem.zeroes(c_int),
    tm_hour: c_int = @import("std").mem.zeroes(c_int),
    tm_mday: c_int = @import("std").mem.zeroes(c_int),
    tm_mon: c_int = @import("std").mem.zeroes(c_int),
    tm_year: c_int = @import("std").mem.zeroes(c_int),
    tm_wday: c_int = @import("std").mem.zeroes(c_int),
    tm_yday: c_int = @import("std").mem.zeroes(c_int),
    tm_isdst: c_int = @import("std").mem.zeroes(c_int),
    tm_gmtoff: c_long = @import("std").mem.zeroes(c_long),
    tm_zone: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const tzname: [*c][*c]u8 = @extern([*c][*c]u8, .{
    .name = "tzname",
});
pub extern var getdate_err: c_int;
pub extern var timezone: c_long;
pub extern var daylight: c_int;
pub extern fn asctime([*c]const struct_tm) [*c]u8;
pub extern fn clock() clock_t;
pub extern fn ctime([*c]const time_t) [*c]u8;
pub extern fn difftime(time_t, time_t) f64;
pub extern fn getdate([*c]const u8) [*c]struct_tm;
pub extern fn gmtime([*c]const time_t) [*c]struct_tm;
pub extern fn localtime([*c]const time_t) [*c]struct_tm;
pub extern fn mktime([*c]struct_tm) time_t;
pub extern fn strftime(noalias [*c]u8, usize, noalias [*c]const u8, noalias [*c]const struct_tm) usize;
pub extern fn strptime(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]struct_tm) [*c]u8;
pub extern fn time([*c]time_t) time_t;
pub extern fn tzset() void;
pub extern fn asctime_r(noalias [*c]const struct_tm, noalias [*c]u8) [*c]u8;
pub extern fn ctime_r([*c]const time_t, [*c]u8) [*c]u8;
pub extern fn gmtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn localtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn posix2time(time_t) time_t;
pub extern fn tzsetwall() void;
pub extern fn time2posix(time_t) time_t;
pub extern fn timelocal([*c]struct_tm) time_t;
pub extern fn timegm([*c]struct_tm) time_t;
pub extern fn nanosleep(__rqtp: [*c]const struct_timespec, __rmtp: [*c]struct_timespec) c_int;
pub const _CLOCK_REALTIME: c_int = 0;
pub const _CLOCK_MONOTONIC: c_int = 6;
pub const _CLOCK_MONOTONIC_RAW: c_int = 4;
pub const _CLOCK_MONOTONIC_RAW_APPROX: c_int = 5;
pub const _CLOCK_UPTIME_RAW: c_int = 8;
pub const _CLOCK_UPTIME_RAW_APPROX: c_int = 9;
pub const _CLOCK_PROCESS_CPUTIME_ID: c_int = 12;
pub const _CLOCK_THREAD_CPUTIME_ID: c_int = 16;
pub const clockid_t = c_uint;
pub extern fn clock_getres(__clock_id: clockid_t, __res: [*c]struct_timespec) c_int;
pub extern fn clock_gettime(__clock_id: clockid_t, __tp: [*c]struct_timespec) c_int;
pub extern fn clock_gettime_nsec_np(__clock_id: clockid_t) __uint64_t;
pub extern fn clock_settime(__clock_id: clockid_t, __tp: [*c]const struct_timespec) c_int;
pub extern fn timespec_get(ts: [*c]struct_timespec, base: c_int) c_int;
pub const wint_t = __darwin_wint_t;
pub const wctype_t = __darwin_wctype_t;
pub const _RuneEntry = extern struct {
    __min: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __max: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __map: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __types: [*c]__uint32_t = @import("std").mem.zeroes([*c]__uint32_t),
};
pub const _RuneRange = extern struct {
    __nranges: c_int = @import("std").mem.zeroes(c_int),
    __ranges: [*c]_RuneEntry = @import("std").mem.zeroes([*c]_RuneEntry),
};
pub const _RuneCharClass = extern struct {
    __name: [14]u8 = @import("std").mem.zeroes([14]u8),
    __mask: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const _RuneLocale = extern struct {
    __magic: [8]u8 = @import("std").mem.zeroes([8]u8),
    __encoding: [32]u8 = @import("std").mem.zeroes([32]u8),
    __sgetrune: ?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.C) __darwin_rune_t = @import("std").mem.zeroes(?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.C) __darwin_rune_t),
    __sputrune: ?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.C) c_int),
    __invalid_rune: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __runetype: [256]__uint32_t = @import("std").mem.zeroes([256]__uint32_t),
    __maplower: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __mapupper: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __runetype_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __maplower_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __mapupper_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __variable: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __variable_len: c_int = @import("std").mem.zeroes(c_int),
    __ncharclasses: c_int = @import("std").mem.zeroes(c_int),
    __charclasses: [*c]_RuneCharClass = @import("std").mem.zeroes([*c]_RuneCharClass),
};
pub extern var _DefaultRuneLocale: _RuneLocale;
pub extern var _CurrentRuneLocale: [*c]_RuneLocale;
pub extern fn ___runetype(__darwin_ct_rune_t) c_ulong;
pub extern fn ___tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn ___toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn isascii(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return @intFromBool((_c & ~@as(c_int, 127)) == @as(c_int, 0));
}
pub extern fn __maskrune(__darwin_ct_rune_t, c_ulong) c_int;
pub fn __istype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if (isascii(_c) != 0) @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0)) else @intFromBool(!!(__maskrune(_c, _f) != 0));
}
pub fn __isctype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.C) __darwin_ct_rune_t {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if ((_c < @as(c_int, 0)) or (_c >= (@as(c_int, 1) << @intCast(8)))) @as(c_int, 0) else @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0));
}
pub extern fn __toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn __tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn __wcwidth(arg__c: __darwin_ct_rune_t) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    var _x: c_uint = undefined;
    _ = &_x;
    if (_c == @as(c_int, 0)) return @as(c_int, 0);
    _x = @as(c_uint, @bitCast(__maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, 3758096384) | @as(c_long, 262144))))));
    if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) return @as(c_int, @bitCast(@as(c_int, @truncate((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) >> @intCast(30)))));
    return if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 262144)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) @as(c_int, 1) else -@as(c_int, 1);
}
pub fn isalnum(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256) | @as(c_long, 1024))));
}
pub fn isalpha(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256))));
}
pub fn isblank(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 131072))));
}
pub fn iscntrl(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 512))));
}
pub fn isdigit(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isgraph(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2048))));
}
pub fn islower(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4096))));
}
pub fn isprint(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 262144))));
}
pub fn ispunct(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 8192))));
}
pub fn isspace(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 16384))));
}
pub fn isupper(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 32768))));
}
pub fn isxdigit(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn toascii(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return _c & @as(c_int, 127);
}
pub fn tolower(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __tolower(_c);
}
pub fn toupper(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __toupper(_c);
}
pub fn digittoint(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 15)))));
}
pub fn ishexnumber(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn isideogram(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 524288))));
}
pub fn isnumber(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isphonogram(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2097152))));
}
pub fn isrune(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4294967280))));
}
pub fn isspecial(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1048576))));
}
pub fn iswalnum(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 256) | @as(c_long, 1024))));
}
pub fn iswalpha(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 256))));
}
pub fn iswcntrl(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 512))));
}
pub fn iswctype(arg__wc: wint_t, arg__charclass: wctype_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    var _charclass = arg__charclass;
    _ = &_charclass;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_ulong, _charclass))));
}
pub fn iswdigit(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __isctype(_wc, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn iswgraph(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 2048))));
}
pub fn iswlower(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 4096))));
}
pub fn iswprint(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 262144))));
}
pub fn iswpunct(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 8192))));
}
pub fn iswspace(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 16384))));
}
pub fn iswupper(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 32768))));
}
pub fn iswxdigit(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __isctype(_wc, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn towlower(arg__wc: wint_t) callconv(.C) wint_t {
    var _wc = arg__wc;
    _ = &_wc;
    return __tolower(_wc);
}
pub fn towupper(arg__wc: wint_t) callconv(.C) wint_t {
    var _wc = arg__wc;
    _ = &_wc;
    return __toupper(_wc);
}
pub extern fn wctype([*c]const u8) wctype_t;
pub extern fn btowc(c_int) wint_t;
pub extern fn fgetwc([*c]FILE) wint_t;
pub extern fn fgetws(noalias [*c]wchar_t, c_int, noalias [*c]FILE) [*c]wchar_t;
pub extern fn fputwc(wchar_t, [*c]FILE) wint_t;
pub extern fn fputws(noalias [*c]const wchar_t, noalias [*c]FILE) c_int;
pub extern fn fwide([*c]FILE, c_int) c_int;
pub extern fn fwprintf(noalias [*c]FILE, noalias [*c]const wchar_t, ...) c_int;
pub extern fn fwscanf(noalias [*c]FILE, noalias [*c]const wchar_t, ...) c_int;
pub extern fn getwc([*c]FILE) wint_t;
pub extern fn getwchar() wint_t;
pub extern fn mbrlen(noalias [*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn mbrtowc(noalias [*c]wchar_t, noalias [*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn mbsinit([*c]const mbstate_t) c_int;
pub extern fn mbsrtowcs(noalias [*c]wchar_t, noalias [*c][*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn putwc(wchar_t, [*c]FILE) wint_t;
pub extern fn putwchar(wchar_t) wint_t;
pub extern fn swprintf(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, ...) c_int;
pub extern fn swscanf(noalias [*c]const wchar_t, noalias [*c]const wchar_t, ...) c_int;
pub extern fn ungetwc(wint_t, [*c]FILE) wint_t;
pub extern fn vfwprintf(noalias [*c]FILE, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vswprintf(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vwprintf(noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn wcrtomb(noalias [*c]u8, wchar_t, noalias [*c]mbstate_t) usize;
pub extern fn wcscat(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcschr([*c]const c_int, c_int) [*c]c_int;
pub extern fn wcscmp([*c]const c_int, [*c]const c_int) c_int;
pub extern fn wcscoll([*c]const wchar_t, [*c]const wchar_t) c_int;
pub extern fn wcscpy(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcscspn([*c]const wchar_t, [*c]const wchar_t) usize;
pub extern fn wcsftime(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, noalias [*c]const struct_tm) usize;
pub extern fn wcslen([*c]const c_int) c_ulong;
pub extern fn wcsncat(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcsncmp([*c]const c_int, [*c]const c_int, c_ulong) c_int;
pub extern fn wcsncpy(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcspbrk([*c]const wchar_t, [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcsrchr([*c]const wchar_t, wchar_t) [*c]wchar_t;
pub extern fn wcsrtombs(noalias [*c]u8, noalias [*c][*c]const wchar_t, usize, noalias [*c]mbstate_t) usize;
pub extern fn wcsspn([*c]const wchar_t, [*c]const wchar_t) usize;
pub extern fn wcsstr(noalias [*c]const wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcsxfrm(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) usize;
pub extern fn wctob(wint_t) c_int;
pub extern fn wcstod(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) f64;
pub extern fn wcstok(noalias [*c]wchar_t, noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) [*c]wchar_t;
pub extern fn wcstol(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_long;
pub extern fn wcstoul(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_ulong;
pub extern fn wmemchr([*c]const c_int, c_int, c_ulong) [*c]c_int;
pub extern fn wmemcmp([*c]const c_int, [*c]const c_int, c_ulong) c_int;
pub extern fn wmemcpy([*c]c_int, [*c]const c_int, c_ulong) [*c]c_int;
pub extern fn wmemmove([*c]c_int, [*c]const c_int, c_ulong) [*c]c_int;
pub extern fn wmemset([*c]wchar_t, wchar_t, usize) [*c]wchar_t;
pub extern fn wprintf(noalias [*c]const wchar_t, ...) c_int;
pub extern fn wscanf(noalias [*c]const wchar_t, ...) c_int;
pub extern fn wcswidth([*c]const wchar_t, usize) c_int;
pub extern fn wcwidth(wchar_t) c_int;
pub extern fn vfwscanf(noalias [*c]FILE, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vswscanf(noalias [*c]const wchar_t, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vwscanf(noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn wcstof(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) f32;
pub extern fn wcstold(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) c_longdouble;
pub extern fn wcstoll(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_longlong;
pub extern fn wcstoull(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_ulonglong;
pub extern fn mbsnrtowcs(noalias [*c]wchar_t, noalias [*c][*c]const u8, usize, usize, noalias [*c]mbstate_t) usize;
pub extern fn wcpcpy(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcpncpy(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcsdup([*c]const wchar_t) [*c]wchar_t;
pub extern fn wcscasecmp([*c]const wchar_t, [*c]const wchar_t) c_int;
pub extern fn wcsncasecmp([*c]const wchar_t, [*c]const wchar_t, n: usize) c_int;
pub extern fn wcsnlen([*c]const wchar_t, usize) usize;
pub extern fn wcsnrtombs(noalias [*c]u8, noalias [*c][*c]const wchar_t, usize, usize, noalias [*c]mbstate_t) usize;
pub extern fn open_wmemstream(__bufp: [*c][*c]wchar_t, __sizep: [*c]usize) [*c]FILE;
pub extern fn fgetwln(noalias [*c]FILE, [*c]usize) [*c]wchar_t;
pub extern fn wcslcat([*c]wchar_t, [*c]const wchar_t, usize) usize;
pub extern fn wcslcpy([*c]wchar_t, [*c]const wchar_t, usize) usize;
pub extern fn imaxabs(j: intmax_t) intmax_t;
pub const imaxdiv_t = extern struct {
    quot: intmax_t = @import("std").mem.zeroes(intmax_t),
    rem: intmax_t = @import("std").mem.zeroes(intmax_t),
};
pub extern fn imaxdiv(__numer: intmax_t, __denom: intmax_t) imaxdiv_t;
pub extern fn strtoimax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) intmax_t;
pub extern fn strtoumax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) uintmax_t;
pub extern fn wcstoimax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) intmax_t;
pub extern fn wcstoumax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) uintmax_t;
pub const float_t = f32;
pub const double_t = f64;
pub extern fn __math_errhandling() c_int;
pub extern fn __fpclassifyf(f32) c_int;
pub extern fn __fpclassifyd(f64) c_int;
pub extern fn __fpclassifyl(c_longdouble) c_int;
pub inline fn __inline_isfinitef(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__x == __x) and (__builtin_fabsf(__x) != __builtin_inff()));
} // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:195:49: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:194:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinited(arg___x: f64) c_int; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:198:26: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:197:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinitel(arg___x: c_longdouble) c_int;
pub inline fn __inline_isinff(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__builtin_fabsf(__x) == __builtin_inff());
} // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:204:35: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:203:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfd(arg___x: f64) c_int; // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:207:12: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:206:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfl(arg___x: c_longdouble) c_int;
pub inline fn __inline_isnanf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnand(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnanl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnormalf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinitef(__x) != 0) and (__builtin_fabsf(__x) >= 0.000000000000000000000000000000000000011754943508222875));
}
pub inline fn __inline_isnormald(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinited(__x) != 0) and (__builtin_fabs(__x) >= 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014));
} // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:251:39: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:250:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isnormall(arg___x: c_longdouble) c_int;
pub inline fn __inline_signbitf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_4 = extern union {
        __f: f32,
        __u: c_uint,
    };
    _ = &union_unnamed_4;
    var __u: union_unnamed_4 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(__u.__u >> @intCast(31)));
}
pub inline fn __inline_signbitd(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_5 = extern union {
        __f: f64,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_5;
    var __u: union_unnamed_5 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub inline fn __inline_signbitl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_6 = extern union {
        __f: c_longdouble,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_6;
    var __u: union_unnamed_6 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub extern fn acosf(f32) f32;
pub extern fn acos(f64) f64;
pub extern fn acosl(c_longdouble) c_longdouble;
pub extern fn asinf(f32) f32;
pub extern fn asin(f64) f64;
pub extern fn asinl(c_longdouble) c_longdouble;
pub extern fn atanf(f32) f32;
pub extern fn atan(f64) f64;
pub extern fn atanl(c_longdouble) c_longdouble;
pub extern fn atan2f(f32, f32) f32;
pub extern fn atan2(f64, f64) f64;
pub extern fn atan2l(c_longdouble, c_longdouble) c_longdouble;
pub extern fn cosf(f32) f32;
pub extern fn cos(f64) f64;
pub extern fn cosl(c_longdouble) c_longdouble;
pub extern fn sinf(f32) f32;
pub extern fn sin(f64) f64;
pub extern fn sinl(c_longdouble) c_longdouble;
pub extern fn tanf(f32) f32;
pub extern fn tan(f64) f64;
pub extern fn tanl(c_longdouble) c_longdouble;
pub extern fn acoshf(f32) f32;
pub extern fn acosh(f64) f64;
pub extern fn acoshl(c_longdouble) c_longdouble;
pub extern fn asinhf(f32) f32;
pub extern fn asinh(f64) f64;
pub extern fn asinhl(c_longdouble) c_longdouble;
pub extern fn atanhf(f32) f32;
pub extern fn atanh(f64) f64;
pub extern fn atanhl(c_longdouble) c_longdouble;
pub extern fn coshf(f32) f32;
pub extern fn cosh(f64) f64;
pub extern fn coshl(c_longdouble) c_longdouble;
pub extern fn sinhf(f32) f32;
pub extern fn sinh(f64) f64;
pub extern fn sinhl(c_longdouble) c_longdouble;
pub extern fn tanhf(f32) f32;
pub extern fn tanh(f64) f64;
pub extern fn tanhl(c_longdouble) c_longdouble;
pub extern fn expf(f32) f32;
pub extern fn exp(f64) f64;
pub extern fn expl(c_longdouble) c_longdouble;
pub extern fn exp2f(f32) f32;
pub extern fn exp2(f64) f64;
pub extern fn exp2l(c_longdouble) c_longdouble;
pub extern fn expm1f(f32) f32;
pub extern fn expm1(f64) f64;
pub extern fn expm1l(c_longdouble) c_longdouble;
pub extern fn logf(f32) f32;
pub extern fn log(f64) f64;
pub extern fn logl(c_longdouble) c_longdouble;
pub extern fn log10f(f32) f32;
pub extern fn log10(f64) f64;
pub extern fn log10l(c_longdouble) c_longdouble;
pub extern fn log2f(f32) f32;
pub extern fn log2(f64) f64;
pub extern fn log2l(c_longdouble) c_longdouble;
pub extern fn log1pf(f32) f32;
pub extern fn log1p(f64) f64;
pub extern fn log1pl(c_longdouble) c_longdouble;
pub extern fn logbf(f32) f32;
pub extern fn logb(f64) f64;
pub extern fn logbl(c_longdouble) c_longdouble;
pub extern fn modff(f32, [*c]f32) f32;
pub extern fn modf(f64, [*c]f64) f64;
pub extern fn modfl(c_longdouble, [*c]c_longdouble) c_longdouble;
pub extern fn ldexpf(f32, c_int) f32;
pub extern fn ldexp(f64, c_int) f64;
pub extern fn ldexpl(c_longdouble, c_int) c_longdouble;
pub extern fn frexpf(f32, [*c]c_int) f32;
pub extern fn frexp(f64, [*c]c_int) f64;
pub extern fn frexpl(c_longdouble, [*c]c_int) c_longdouble;
pub extern fn ilogbf(f32) c_int;
pub extern fn ilogb(f64) c_int;
pub extern fn ilogbl(c_longdouble) c_int;
pub extern fn scalbnf(f32, c_int) f32;
pub extern fn scalbn(f64, c_int) f64;
pub extern fn scalbnl(c_longdouble, c_int) c_longdouble;
pub extern fn scalblnf(f32, c_long) f32;
pub extern fn scalbln(f64, c_long) f64;
pub extern fn scalblnl(c_longdouble, c_long) c_longdouble;
pub extern fn fabsf(f32) f32;
pub extern fn fabs(f64) f64;
pub extern fn fabsl(c_longdouble) c_longdouble;
pub extern fn cbrtf(f32) f32;
pub extern fn cbrt(f64) f64;
pub extern fn cbrtl(c_longdouble) c_longdouble;
pub extern fn hypotf(f32, f32) f32;
pub extern fn hypot(f64, f64) f64;
pub extern fn hypotl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn powf(f32, f32) f32;
pub extern fn pow(f64, f64) f64;
pub extern fn powl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn sqrtf(f32) f32;
pub extern fn sqrt(f64) f64;
pub extern fn sqrtl(c_longdouble) c_longdouble;
pub extern fn erff(f32) f32;
pub extern fn erf(f64) f64;
pub extern fn erfl(c_longdouble) c_longdouble;
pub extern fn erfcf(f32) f32;
pub extern fn erfc(f64) f64;
pub extern fn erfcl(c_longdouble) c_longdouble;
pub extern fn lgammaf(f32) f32;
pub extern fn lgamma(f64) f64;
pub extern fn lgammal(c_longdouble) c_longdouble;
pub extern fn tgammaf(f32) f32;
pub extern fn tgamma(f64) f64;
pub extern fn tgammal(c_longdouble) c_longdouble;
pub extern fn ceilf(f32) f32;
pub extern fn ceil(f64) f64;
pub extern fn ceill(c_longdouble) c_longdouble;
pub extern fn floorf(f32) f32;
pub extern fn floor(f64) f64;
pub extern fn floorl(c_longdouble) c_longdouble;
pub extern fn nearbyintf(f32) f32;
pub extern fn nearbyint(f64) f64;
pub extern fn nearbyintl(c_longdouble) c_longdouble;
pub extern fn rintf(f32) f32;
pub extern fn rint(f64) f64;
pub extern fn rintl(c_longdouble) c_longdouble;
pub extern fn lrintf(f32) c_long;
pub extern fn lrint(f64) c_long;
pub extern fn lrintl(c_longdouble) c_long;
pub extern fn roundf(f32) f32;
pub extern fn round(f64) f64;
pub extern fn roundl(c_longdouble) c_longdouble;
pub extern fn lroundf(f32) c_long;
pub extern fn lround(f64) c_long;
pub extern fn lroundl(c_longdouble) c_long;
pub extern fn llrintf(f32) c_longlong;
pub extern fn llrint(f64) c_longlong;
pub extern fn llrintl(c_longdouble) c_longlong;
pub extern fn llroundf(f32) c_longlong;
pub extern fn llround(f64) c_longlong;
pub extern fn llroundl(c_longdouble) c_longlong;
pub extern fn truncf(f32) f32;
pub extern fn trunc(f64) f64;
pub extern fn truncl(c_longdouble) c_longdouble;
pub extern fn fmodf(f32, f32) f32;
pub extern fn fmod(f64, f64) f64;
pub extern fn fmodl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remainderf(f32, f32) f32;
pub extern fn remainder(f64, f64) f64;
pub extern fn remainderl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remquof(f32, f32, [*c]c_int) f32;
pub extern fn remquo(f64, f64, [*c]c_int) f64;
pub extern fn remquol(c_longdouble, c_longdouble, [*c]c_int) c_longdouble;
pub extern fn copysignf(f32, f32) f32;
pub extern fn copysign(f64, f64) f64;
pub extern fn copysignl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nanf([*c]const u8) f32;
pub extern fn nan([*c]const u8) f64;
pub extern fn nanl([*c]const u8) c_longdouble;
pub extern fn nextafterf(f32, f32) f32;
pub extern fn nextafter(f64, f64) f64;
pub extern fn nextafterl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nexttoward(f64, c_longdouble) f64;
pub extern fn nexttowardf(f32, c_longdouble) f32;
pub extern fn nexttowardl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fdimf(f32, f32) f32;
pub extern fn fdim(f64, f64) f64;
pub extern fn fdiml(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaxf(f32, f32) f32;
pub extern fn fmax(f64, f64) f64;
pub extern fn fmaxl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fminf(f32, f32) f32;
pub extern fn fmin(f64, f64) f64;
pub extern fn fminl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaf(f32, f32, f32) f32;
pub extern fn fma(f64, f64, f64) f64;
pub extern fn fmal(c_longdouble, c_longdouble, c_longdouble) c_longdouble;
pub extern fn __exp10f(f32) f32;
pub extern fn __exp10(f64) f64;
pub const struct___float2 = extern struct {
    __sinval: f32 = @import("std").mem.zeroes(f32),
    __cosval: f32 = @import("std").mem.zeroes(f32),
};
pub inline fn __sincosf(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincosf_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub const struct___double2 = extern struct {
    __sinval: f64 = @import("std").mem.zeroes(f64),
    __cosval: f64 = @import("std").mem.zeroes(f64),
};
pub inline fn __sincos(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincos_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __cospif(f32) f32;
pub extern fn __cospi(f64) f64;
pub extern fn __sinpif(f32) f32;
pub extern fn __sinpi(f64) f64;
pub extern fn __tanpif(f32) f32;
pub extern fn __tanpi(f64) f64;
pub inline fn __sincospif(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincospif_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub inline fn __sincospi(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincospi_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __sincosf_stret(f32) struct___float2;
pub extern fn __sincos_stret(f64) struct___double2;
pub extern fn __sincospif_stret(f32) struct___float2;
pub extern fn __sincospi_stret(f64) struct___double2;
pub extern fn j0(f64) f64;
pub extern fn j1(f64) f64;
pub extern fn jn(c_int, f64) f64;
pub extern fn y0(f64) f64;
pub extern fn y1(f64) f64;
pub extern fn yn(c_int, f64) f64;
pub extern fn scalb(f64, f64) f64;
pub extern var signgam: c_int;
pub const struct_exception = extern struct {
    type: c_int = @import("std").mem.zeroes(c_int),
    name: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    arg1: f64 = @import("std").mem.zeroes(f64),
    arg2: f64 = @import("std").mem.zeroes(f64),
    retval: f64 = @import("std").mem.zeroes(f64),
};
pub const SDL_FALSE: c_int = 0;
pub const SDL_TRUE: c_int = 1;
pub const SDL_bool = c_uint;
pub const Sint8 = i8;
pub const Uint8 = u8;
pub const Sint16 = i16;
pub const Uint16 = u16;
pub const Sint32 = i32;
pub const Uint32 = u32;
pub const Sint64 = i64;
pub const Uint64 = u64; // /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
// /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
pub const DUMMY_ENUM_VALUE: c_int = 0;
pub const SDL_DUMMY_ENUM = c_uint; // /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
pub extern fn SDL_malloc(size: usize) ?*anyopaque;
pub extern fn SDL_calloc(nmemb: usize, size: usize) ?*anyopaque;
pub extern fn SDL_realloc(mem: ?*anyopaque, size: usize) ?*anyopaque;
pub extern fn SDL_free(mem: ?*anyopaque) void;
pub const SDL_malloc_func = ?*const fn (usize) callconv(.C) ?*anyopaque;
pub const SDL_calloc_func = ?*const fn (usize, usize) callconv(.C) ?*anyopaque;
pub const SDL_realloc_func = ?*const fn (?*anyopaque, usize) callconv(.C) ?*anyopaque;
pub const SDL_free_func = ?*const fn (?*anyopaque) callconv(.C) void;
pub extern fn SDL_GetOriginalMemoryFunctions(malloc_func: [*c]SDL_malloc_func, calloc_func: [*c]SDL_calloc_func, realloc_func: [*c]SDL_realloc_func, free_func: [*c]SDL_free_func) void;
pub extern fn SDL_GetMemoryFunctions(malloc_func: [*c]SDL_malloc_func, calloc_func: [*c]SDL_calloc_func, realloc_func: [*c]SDL_realloc_func, free_func: [*c]SDL_free_func) void;
pub extern fn SDL_SetMemoryFunctions(malloc_func: SDL_malloc_func, calloc_func: SDL_calloc_func, realloc_func: SDL_realloc_func, free_func: SDL_free_func) c_int;
pub extern fn SDL_GetNumAllocations() c_int;
pub extern fn SDL_getenv(name: [*c]const u8) [*c]u8;
pub extern fn SDL_setenv(name: [*c]const u8, value: [*c]const u8, overwrite: c_int) c_int;
pub extern fn SDL_qsort(base: ?*anyopaque, nmemb: usize, size: usize, compare: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn SDL_bsearch(key: ?*const anyopaque, base: ?*const anyopaque, nmemb: usize, size: usize, compare: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) ?*anyopaque;
pub extern fn SDL_abs(x: c_int) c_int;
pub extern fn SDL_isalpha(x: c_int) c_int;
pub extern fn SDL_isalnum(x: c_int) c_int;
pub extern fn SDL_isblank(x: c_int) c_int;
pub extern fn SDL_iscntrl(x: c_int) c_int;
pub extern fn SDL_isdigit(x: c_int) c_int;
pub extern fn SDL_isxdigit(x: c_int) c_int;
pub extern fn SDL_ispunct(x: c_int) c_int;
pub extern fn SDL_isspace(x: c_int) c_int;
pub extern fn SDL_isupper(x: c_int) c_int;
pub extern fn SDL_islower(x: c_int) c_int;
pub extern fn SDL_isprint(x: c_int) c_int;
pub extern fn SDL_isgraph(x: c_int) c_int;
pub extern fn SDL_toupper(x: c_int) c_int;
pub extern fn SDL_tolower(x: c_int) c_int;
pub extern fn SDL_crc16(crc: Uint16, data: ?*const anyopaque, len: usize) Uint16;
pub extern fn SDL_crc32(crc: Uint32, data: ?*const anyopaque, len: usize) Uint32;
pub extern fn SDL_memset(dst: ?*anyopaque, c: c_int, len: usize) ?*anyopaque; // /opt/homebrew/include/SDL2/begin_code.h:183:25: warning: TODO implement translation of stmt class AttributedStmtClass
// /opt/homebrew/include/SDL2/SDL_stdinc.h:531:23: warning: unable to translate function, demoted to extern
pub extern fn SDL_memset4(arg_dst: ?*anyopaque, arg_val: Uint32, arg_dwords: usize) void;
pub extern fn SDL_memcpy(dst: ?*anyopaque, src: ?*const anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_memmove(dst: ?*anyopaque, src: ?*const anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_memcmp(s1: ?*const anyopaque, s2: ?*const anyopaque, len: usize) c_int;
pub extern fn SDL_wcslen(wstr: [*c]const wchar_t) usize;
pub extern fn SDL_wcslcpy(dst: [*c]wchar_t, src: [*c]const wchar_t, maxlen: usize) usize;
pub extern fn SDL_wcslcat(dst: [*c]wchar_t, src: [*c]const wchar_t, maxlen: usize) usize;
pub extern fn SDL_wcsdup(wstr: [*c]const wchar_t) [*c]wchar_t;
pub extern fn SDL_wcsstr(haystack: [*c]const wchar_t, needle: [*c]const wchar_t) [*c]wchar_t;
pub extern fn SDL_wcscmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t) c_int;
pub extern fn SDL_wcsncmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t, maxlen: usize) c_int;
pub extern fn SDL_wcscasecmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t) c_int;
pub extern fn SDL_wcsncasecmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t, len: usize) c_int;
pub extern fn SDL_strlen(str: [*c]const u8) usize;
pub extern fn SDL_strlcpy(dst: [*c]u8, src: [*c]const u8, maxlen: usize) usize;
pub extern fn SDL_utf8strlcpy(dst: [*c]u8, src: [*c]const u8, dst_bytes: usize) usize;
pub extern fn SDL_strlcat(dst: [*c]u8, src: [*c]const u8, maxlen: usize) usize;
pub extern fn SDL_strdup(str: [*c]const u8) [*c]u8;
pub extern fn SDL_strrev(str: [*c]u8) [*c]u8;
pub extern fn SDL_strupr(str: [*c]u8) [*c]u8;
pub extern fn SDL_strlwr(str: [*c]u8) [*c]u8;
pub extern fn SDL_strchr(str: [*c]const u8, c: c_int) [*c]u8;
pub extern fn SDL_strrchr(str: [*c]const u8, c: c_int) [*c]u8;
pub extern fn SDL_strstr(haystack: [*c]const u8, needle: [*c]const u8) [*c]u8;
pub extern fn SDL_strcasestr(haystack: [*c]const u8, needle: [*c]const u8) [*c]u8;
pub extern fn SDL_strtokr(s1: [*c]u8, s2: [*c]const u8, saveptr: [*c][*c]u8) [*c]u8;
pub extern fn SDL_utf8strlen(str: [*c]const u8) usize;
pub extern fn SDL_utf8strnlen(str: [*c]const u8, bytes: usize) usize;
pub extern fn SDL_itoa(value: c_int, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_uitoa(value: c_uint, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ltoa(value: c_long, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ultoa(value: c_ulong, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_lltoa(value: Sint64, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ulltoa(value: Uint64, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_atoi(str: [*c]const u8) c_int;
pub extern fn SDL_atof(str: [*c]const u8) f64;
pub extern fn SDL_strtol(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) c_long;
pub extern fn SDL_strtoul(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) c_ulong;
pub extern fn SDL_strtoll(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) Sint64;
pub extern fn SDL_strtoull(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) Uint64;
pub extern fn SDL_strtod(str: [*c]const u8, endp: [*c][*c]u8) f64;
pub extern fn SDL_strcmp(str1: [*c]const u8, str2: [*c]const u8) c_int;
pub extern fn SDL_strncmp(str1: [*c]const u8, str2: [*c]const u8, maxlen: usize) c_int;
pub extern fn SDL_strcasecmp(str1: [*c]const u8, str2: [*c]const u8) c_int;
pub extern fn SDL_strncasecmp(str1: [*c]const u8, str2: [*c]const u8, len: usize) c_int;
pub extern fn SDL_sscanf(text: [*c]const u8, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vsscanf(text: [*c]const u8, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_snprintf(text: [*c]u8, maxlen: usize, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vsnprintf(text: [*c]u8, maxlen: usize, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_asprintf(strp: [*c][*c]u8, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vasprintf(strp: [*c][*c]u8, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_acos(x: f64) f64;
pub extern fn SDL_acosf(x: f32) f32;
pub extern fn SDL_asin(x: f64) f64;
pub extern fn SDL_asinf(x: f32) f32;
pub extern fn SDL_atan(x: f64) f64;
pub extern fn SDL_atanf(x: f32) f32;
pub extern fn SDL_atan2(y: f64, x: f64) f64;
pub extern fn SDL_atan2f(y: f32, x: f32) f32;
pub extern fn SDL_ceil(x: f64) f64;
pub extern fn SDL_ceilf(x: f32) f32;
pub extern fn SDL_copysign(x: f64, y: f64) f64;
pub extern fn SDL_copysignf(x: f32, y: f32) f32;
pub extern fn SDL_cos(x: f64) f64;
pub extern fn SDL_cosf(x: f32) f32;
pub extern fn SDL_exp(x: f64) f64;
pub extern fn SDL_expf(x: f32) f32;
pub extern fn SDL_fabs(x: f64) f64;
pub extern fn SDL_fabsf(x: f32) f32;
pub extern fn SDL_floor(x: f64) f64;
pub extern fn SDL_floorf(x: f32) f32;
pub extern fn SDL_trunc(x: f64) f64;
pub extern fn SDL_truncf(x: f32) f32;
pub extern fn SDL_fmod(x: f64, y: f64) f64;
pub extern fn SDL_fmodf(x: f32, y: f32) f32;
pub extern fn SDL_log(x: f64) f64;
pub extern fn SDL_logf(x: f32) f32;
pub extern fn SDL_log10(x: f64) f64;
pub extern fn SDL_log10f(x: f32) f32;
pub extern fn SDL_pow(x: f64, y: f64) f64;
pub extern fn SDL_powf(x: f32, y: f32) f32;
pub extern fn SDL_round(x: f64) f64;
pub extern fn SDL_roundf(x: f32) f32;
pub extern fn SDL_lround(x: f64) c_long;
pub extern fn SDL_lroundf(x: f32) c_long;
pub extern fn SDL_scalbn(x: f64, n: c_int) f64;
pub extern fn SDL_scalbnf(x: f32, n: c_int) f32;
pub extern fn SDL_sin(x: f64) f64;
pub extern fn SDL_sinf(x: f32) f32;
pub extern fn SDL_sqrt(x: f64) f64;
pub extern fn SDL_sqrtf(x: f32) f32;
pub extern fn SDL_tan(x: f64) f64;
pub extern fn SDL_tanf(x: f32) f32;
pub const struct__SDL_iconv_t = opaque {};
pub const SDL_iconv_t = ?*struct__SDL_iconv_t;
pub extern fn SDL_iconv_open(tocode: [*c]const u8, fromcode: [*c]const u8) SDL_iconv_t;
pub extern fn SDL_iconv_close(cd: SDL_iconv_t) c_int;
pub extern fn SDL_iconv(cd: SDL_iconv_t, inbuf: [*c][*c]const u8, inbytesleft: [*c]usize, outbuf: [*c][*c]u8, outbytesleft: [*c]usize) usize;
pub extern fn SDL_iconv_string(tocode: [*c]const u8, fromcode: [*c]const u8, inbuf: [*c]const u8, inbytesleft: usize) [*c]u8;
pub inline fn SDL_memcpy4(arg_dst: ?*anyopaque, arg_src: ?*const anyopaque, arg_dwords: usize) ?*anyopaque {
    var dst = arg_dst;
    _ = &dst;
    var src = arg_src;
    _ = &src;
    var dwords = arg_dwords;
    _ = &dwords;
    return SDL_memcpy(dst, src, dwords *% @as(usize, @bitCast(@as(c_long, @as(c_int, 4)))));
}
pub inline fn SDL_size_mul_overflow(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    if ((a != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) and (b > (@as(c_ulong, 18446744073709551615) / a))) {
        return -@as(c_int, 1);
    }
    ret.* = a *% b;
    return 0;
}
pub inline fn _SDL_size_mul_overflow_builtin(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    return if (@as(c_int, @intFromBool(__builtin_mul_overflow(a, b, ret))) == @as(c_int, 0)) @as(c_int, 0) else -@as(c_int, 1);
}
pub inline fn SDL_size_add_overflow(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    if (b > (@as(c_ulong, 18446744073709551615) -% a)) {
        return -@as(c_int, 1);
    }
    ret.* = a +% b;
    return 0;
} // /opt/homebrew/include/SDL2/SDL_stdinc.h:831:12: warning: TODO implement function '__builtin_add_overflow' in std.zig.c_builtins
// /opt/homebrew/include/SDL2/SDL_stdinc.h:827:22: warning: unable to translate function, demoted to extern
pub extern fn _SDL_size_add_overflow_builtin(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int;
pub const SDL_main_func = ?*const fn (c_int, [*c][*c]u8) callconv(.C) c_int;
pub extern fn SDL_main(argc: c_int, argv: [*c][*c]u8) c_int;
pub extern fn SDL_SetMainReady() void;
pub const SDL_ASSERTION_RETRY: c_int = 0;
pub const SDL_ASSERTION_BREAK: c_int = 1;
pub const SDL_ASSERTION_ABORT: c_int = 2;
pub const SDL_ASSERTION_IGNORE: c_int = 3;
pub const SDL_ASSERTION_ALWAYS_IGNORE: c_int = 4;
pub const SDL_AssertState = c_uint;
pub const struct_SDL_AssertData = extern struct {
    always_ignore: c_int = @import("std").mem.zeroes(c_int),
    trigger_count: c_uint = @import("std").mem.zeroes(c_uint),
    condition: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    filename: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    linenum: c_int = @import("std").mem.zeroes(c_int),
    function: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    next: [*c]const struct_SDL_AssertData = @import("std").mem.zeroes([*c]const struct_SDL_AssertData),
};
pub const SDL_AssertData = struct_SDL_AssertData;
pub extern fn SDL_ReportAssertion([*c]SDL_AssertData, [*c]const u8, [*c]const u8, c_int) SDL_AssertState;
pub const SDL_AssertionHandler = ?*const fn ([*c]const SDL_AssertData, ?*anyopaque) callconv(.C) SDL_AssertState;
pub extern fn SDL_SetAssertionHandler(handler: SDL_AssertionHandler, userdata: ?*anyopaque) void;
pub extern fn SDL_GetDefaultAssertionHandler() SDL_AssertionHandler;
pub extern fn SDL_GetAssertionHandler(puserdata: [*c]?*anyopaque) SDL_AssertionHandler;
pub extern fn SDL_GetAssertionReport() [*c]const SDL_AssertData;
pub extern fn SDL_ResetAssertionReport() void;
pub const SDL_SpinLock = c_int;
pub extern fn SDL_AtomicTryLock(lock: [*c]SDL_SpinLock) SDL_bool;
pub extern fn SDL_AtomicLock(lock: [*c]SDL_SpinLock) void;
pub extern fn SDL_AtomicUnlock(lock: [*c]SDL_SpinLock) void;
pub extern fn SDL_MemoryBarrierReleaseFunction() void;
pub extern fn SDL_MemoryBarrierAcquireFunction() void;
pub const SDL_atomic_t = extern struct {
    value: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn SDL_AtomicCAS(a: [*c]SDL_atomic_t, oldval: c_int, newval: c_int) SDL_bool;
pub extern fn SDL_AtomicSet(a: [*c]SDL_atomic_t, v: c_int) c_int;
pub extern fn SDL_AtomicGet(a: [*c]SDL_atomic_t) c_int;
pub extern fn SDL_AtomicAdd(a: [*c]SDL_atomic_t, v: c_int) c_int;
pub extern fn SDL_AtomicCASPtr(a: [*c]?*anyopaque, oldval: ?*anyopaque, newval: ?*anyopaque) SDL_bool;
pub extern fn SDL_AtomicSetPtr(a: [*c]?*anyopaque, v: ?*anyopaque) ?*anyopaque;
pub extern fn SDL_AtomicGetPtr(a: [*c]?*anyopaque) ?*anyopaque;
pub extern fn SDL_SetError(fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_GetError() [*c]const u8;
pub extern fn SDL_GetErrorMsg(errstr: [*c]u8, maxlen: c_int) [*c]u8;
pub extern fn SDL_ClearError() void;
pub const SDL_ENOMEM: c_int = 0;
pub const SDL_EFREAD: c_int = 1;
pub const SDL_EFWRITE: c_int = 2;
pub const SDL_EFSEEK: c_int = 3;
pub const SDL_UNSUPPORTED: c_int = 4;
pub const SDL_LASTERROR: c_int = 5;
pub const SDL_errorcode = c_uint;
pub extern fn SDL_Error(code: SDL_errorcode) c_int;
pub inline fn SDL_SwapFloat(arg_x: f32) f32 {
    var x = arg_x;
    _ = &x;
    const union_unnamed_7 = extern union {
        f: f32,
        ui32: Uint32,
    };
    _ = &union_unnamed_7;
    var swapper: union_unnamed_7 = undefined;
    _ = &swapper;
    swapper.f = x;
    swapper.ui32 = __builtin_bswap32(swapper.ui32);
    return swapper.f;
}
pub const struct_SDL_mutex = opaque {};
pub const SDL_mutex = struct_SDL_mutex;
pub extern fn SDL_CreateMutex() ?*SDL_mutex;
pub extern fn SDL_LockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_TryLockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_UnlockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_DestroyMutex(mutex: ?*SDL_mutex) void;
pub const struct_SDL_semaphore = opaque {};
pub const SDL_sem = struct_SDL_semaphore;
pub extern fn SDL_CreateSemaphore(initial_value: Uint32) ?*SDL_sem;
pub extern fn SDL_DestroySemaphore(sem: ?*SDL_sem) void;
pub extern fn SDL_SemWait(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemTryWait(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemWaitTimeout(sem: ?*SDL_sem, timeout: Uint32) c_int;
pub extern fn SDL_SemPost(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemValue(sem: ?*SDL_sem) Uint32;
pub const struct_SDL_cond = opaque {};
pub const SDL_cond = struct_SDL_cond;
pub extern fn SDL_CreateCond() ?*SDL_cond;
pub extern fn SDL_DestroyCond(cond: ?*SDL_cond) void;
pub extern fn SDL_CondSignal(cond: ?*SDL_cond) c_int;
pub extern fn SDL_CondBroadcast(cond: ?*SDL_cond) c_int;
pub extern fn SDL_CondWait(cond: ?*SDL_cond, mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_CondWaitTimeout(cond: ?*SDL_cond, mutex: ?*SDL_mutex, ms: Uint32) c_int;
pub const struct_SDL_Thread = opaque {};
pub const SDL_Thread = struct_SDL_Thread;
pub const SDL_threadID = c_ulong;
pub const SDL_TLSID = c_uint;
pub const SDL_THREAD_PRIORITY_LOW: c_int = 0;
pub const SDL_THREAD_PRIORITY_NORMAL: c_int = 1;
pub const SDL_THREAD_PRIORITY_HIGH: c_int = 2;
pub const SDL_THREAD_PRIORITY_TIME_CRITICAL: c_int = 3;
pub const SDL_ThreadPriority = c_uint;
pub const SDL_ThreadFunction = ?*const fn (?*anyopaque) callconv(.C) c_int;
pub extern fn SDL_CreateThread(@"fn": SDL_ThreadFunction, name: [*c]const u8, data: ?*anyopaque) ?*SDL_Thread;
pub extern fn SDL_CreateThreadWithStackSize(@"fn": SDL_ThreadFunction, name: [*c]const u8, stacksize: usize, data: ?*anyopaque) ?*SDL_Thread;
pub extern fn SDL_GetThreadName(thread: ?*SDL_Thread) [*c]const u8;
pub extern fn SDL_ThreadID() SDL_threadID;
pub extern fn SDL_GetThreadID(thread: ?*SDL_Thread) SDL_threadID;
pub extern fn SDL_SetThreadPriority(priority: SDL_ThreadPriority) c_int;
pub extern fn SDL_WaitThread(thread: ?*SDL_Thread, status: [*c]c_int) void;
pub extern fn SDL_DetachThread(thread: ?*SDL_Thread) void;
pub extern fn SDL_TLSCreate() SDL_TLSID;
pub extern fn SDL_TLSGet(id: SDL_TLSID) ?*anyopaque;
pub extern fn SDL_TLSSet(id: SDL_TLSID, value: ?*const anyopaque, destructor: ?*const fn (?*anyopaque) callconv(.C) void) c_int;
pub extern fn SDL_TLSCleanup() void;
const struct_unnamed_9 = extern struct {
    autoclose: SDL_bool = @import("std").mem.zeroes(SDL_bool),
    fp: [*c]FILE = @import("std").mem.zeroes([*c]FILE),
};
const struct_unnamed_10 = extern struct {
    base: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
    here: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
    stop: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
};
const struct_unnamed_11 = extern struct {
    data1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    data2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
const union_unnamed_8 = extern union {
    stdio: struct_unnamed_9,
    mem: struct_unnamed_10,
    unknown: struct_unnamed_11,
};
pub const struct_SDL_RWops = extern struct {
    size: ?*const fn ([*c]struct_SDL_RWops) callconv(.C) Sint64 = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops) callconv(.C) Sint64),
    seek: ?*const fn ([*c]struct_SDL_RWops, Sint64, c_int) callconv(.C) Sint64 = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, Sint64, c_int) callconv(.C) Sint64),
    read: ?*const fn ([*c]struct_SDL_RWops, ?*anyopaque, usize, usize) callconv(.C) usize = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, ?*anyopaque, usize, usize) callconv(.C) usize),
    write: ?*const fn ([*c]struct_SDL_RWops, ?*const anyopaque, usize, usize) callconv(.C) usize = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, ?*const anyopaque, usize, usize) callconv(.C) usize),
    close: ?*const fn ([*c]struct_SDL_RWops) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops) callconv(.C) c_int),
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    hidden: union_unnamed_8 = @import("std").mem.zeroes(union_unnamed_8),
};
pub const SDL_RWops = struct_SDL_RWops;
pub extern fn SDL_RWFromFile(file: [*c]const u8, mode: [*c]const u8) [*c]SDL_RWops;
pub extern fn SDL_RWFromFP(fp: [*c]FILE, autoclose: SDL_bool) [*c]SDL_RWops;
pub extern fn SDL_RWFromMem(mem: ?*anyopaque, size: c_int) [*c]SDL_RWops;
pub extern fn SDL_RWFromConstMem(mem: ?*const anyopaque, size: c_int) [*c]SDL_RWops;
pub extern fn SDL_AllocRW() [*c]SDL_RWops;
pub extern fn SDL_FreeRW(area: [*c]SDL_RWops) void;
pub extern fn SDL_RWsize(context: [*c]SDL_RWops) Sint64;
pub extern fn SDL_RWseek(context: [*c]SDL_RWops, offset: Sint64, whence: c_int) Sint64;
pub extern fn SDL_RWtell(context: [*c]SDL_RWops) Sint64;
pub extern fn SDL_RWread(context: [*c]SDL_RWops, ptr: ?*anyopaque, size: usize, maxnum: usize) usize;
pub extern fn SDL_RWwrite(context: [*c]SDL_RWops, ptr: ?*const anyopaque, size: usize, num: usize) usize;
pub extern fn SDL_RWclose(context: [*c]SDL_RWops) c_int;
pub extern fn SDL_LoadFile_RW(src: [*c]SDL_RWops, datasize: [*c]usize, freesrc: c_int) ?*anyopaque;
pub extern fn SDL_LoadFile(file: [*c]const u8, datasize: [*c]usize) ?*anyopaque;
pub extern fn SDL_ReadU8(src: [*c]SDL_RWops) Uint8;
pub extern fn SDL_ReadLE16(src: [*c]SDL_RWops) Uint16;
pub extern fn SDL_ReadBE16(src: [*c]SDL_RWops) Uint16;
pub extern fn SDL_ReadLE32(src: [*c]SDL_RWops) Uint32;
pub extern fn SDL_ReadBE32(src: [*c]SDL_RWops) Uint32;
pub extern fn SDL_ReadLE64(src: [*c]SDL_RWops) Uint64;
pub extern fn SDL_ReadBE64(src: [*c]SDL_RWops) Uint64;
pub extern fn SDL_WriteU8(dst: [*c]SDL_RWops, value: Uint8) usize;
pub extern fn SDL_WriteLE16(dst: [*c]SDL_RWops, value: Uint16) usize;
pub extern fn SDL_WriteBE16(dst: [*c]SDL_RWops, value: Uint16) usize;
pub extern fn SDL_WriteLE32(dst: [*c]SDL_RWops, value: Uint32) usize;
pub extern fn SDL_WriteBE32(dst: [*c]SDL_RWops, value: Uint32) usize;
pub extern fn SDL_WriteLE64(dst: [*c]SDL_RWops, value: Uint64) usize;
pub extern fn SDL_WriteBE64(dst: [*c]SDL_RWops, value: Uint64) usize;
pub const SDL_AudioFormat = Uint16;
pub const SDL_AudioCallback = ?*const fn (?*anyopaque, [*c]Uint8, c_int) callconv(.C) void;
pub const struct_SDL_AudioSpec = extern struct {
    freq: c_int = @import("std").mem.zeroes(c_int),
    format: SDL_AudioFormat = @import("std").mem.zeroes(SDL_AudioFormat),
    channels: Uint8 = @import("std").mem.zeroes(Uint8),
    silence: Uint8 = @import("std").mem.zeroes(Uint8),
    samples: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
    size: Uint32 = @import("std").mem.zeroes(Uint32),
    callback: SDL_AudioCallback = @import("std").mem.zeroes(SDL_AudioCallback),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const SDL_AudioSpec = struct_SDL_AudioSpec;
pub const SDL_AudioFilter = ?*const fn ([*c]struct_SDL_AudioCVT, SDL_AudioFormat) callconv(.C) void;
pub const struct_SDL_AudioCVT = extern struct {
    needed: c_int align(1) = @import("std").mem.zeroes(c_int),
    src_format: SDL_AudioFormat align(1) = @import("std").mem.zeroes(SDL_AudioFormat),
    dst_format: SDL_AudioFormat align(1) = @import("std").mem.zeroes(SDL_AudioFormat),
    rate_incr: f64 align(1) = @import("std").mem.zeroes(f64),
    buf: [*c]Uint8 align(1) = @import("std").mem.zeroes([*c]Uint8),
    len: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_cvt: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_mult: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_ratio: f64 align(1) = @import("std").mem.zeroes(f64),
    filters: [10]SDL_AudioFilter align(1) = @import("std").mem.zeroes([10]SDL_AudioFilter),
    filter_index: c_int align(1) = @import("std").mem.zeroes(c_int),
};
pub const SDL_AudioCVT = struct_SDL_AudioCVT;
pub extern fn SDL_GetNumAudioDrivers() c_int;
pub extern fn SDL_GetAudioDriver(index: c_int) [*c]const u8;
pub extern fn SDL_AudioInit(driver_name: [*c]const u8) c_int;
pub extern fn SDL_AudioQuit() void;
pub extern fn SDL_GetCurrentAudioDriver() [*c]const u8;
pub extern fn SDL_OpenAudio(desired: [*c]SDL_AudioSpec, obtained: [*c]SDL_AudioSpec) c_int;
pub const SDL_AudioDeviceID = Uint32;
pub extern fn SDL_GetNumAudioDevices(iscapture: c_int) c_int;
pub extern fn SDL_GetAudioDeviceName(index: c_int, iscapture: c_int) [*c]const u8;
pub extern fn SDL_GetAudioDeviceSpec(index: c_int, iscapture: c_int, spec: [*c]SDL_AudioSpec) c_int;
pub extern fn SDL_GetDefaultAudioInfo(name: [*c][*c]u8, spec: [*c]SDL_AudioSpec, iscapture: c_int) c_int;
pub extern fn SDL_OpenAudioDevice(device: [*c]const u8, iscapture: c_int, desired: [*c]const SDL_AudioSpec, obtained: [*c]SDL_AudioSpec, allowed_changes: c_int) SDL_AudioDeviceID;
pub const SDL_AUDIO_STOPPED: c_int = 0;
pub const SDL_AUDIO_PLAYING: c_int = 1;
pub const SDL_AUDIO_PAUSED: c_int = 2;
pub const SDL_AudioStatus = c_uint;
pub extern fn SDL_GetAudioStatus() SDL_AudioStatus;
pub extern fn SDL_GetAudioDeviceStatus(dev: SDL_AudioDeviceID) SDL_AudioStatus;
pub extern fn SDL_PauseAudio(pause_on: c_int) void;
pub extern fn SDL_PauseAudioDevice(dev: SDL_AudioDeviceID, pause_on: c_int) void;
pub extern fn SDL_LoadWAV_RW(src: [*c]SDL_RWops, freesrc: c_int, spec: [*c]SDL_AudioSpec, audio_buf: [*c][*c]Uint8, audio_len: [*c]Uint32) [*c]SDL_AudioSpec;
pub extern fn SDL_FreeWAV(audio_buf: [*c]Uint8) void;
pub extern fn SDL_BuildAudioCVT(cvt: [*c]SDL_AudioCVT, src_format: SDL_AudioFormat, src_channels: Uint8, src_rate: c_int, dst_format: SDL_AudioFormat, dst_channels: Uint8, dst_rate: c_int) c_int;
pub extern fn SDL_ConvertAudio(cvt: [*c]SDL_AudioCVT) c_int;
pub const struct__SDL_AudioStream = opaque {};
pub const SDL_AudioStream = struct__SDL_AudioStream;
pub extern fn SDL_NewAudioStream(src_format: SDL_AudioFormat, src_channels: Uint8, src_rate: c_int, dst_format: SDL_AudioFormat, dst_channels: Uint8, dst_rate: c_int) ?*SDL_AudioStream;
pub extern fn SDL_AudioStreamPut(stream: ?*SDL_AudioStream, buf: ?*const anyopaque, len: c_int) c_int;
pub extern fn SDL_AudioStreamGet(stream: ?*SDL_AudioStream, buf: ?*anyopaque, len: c_int) c_int;
pub extern fn SDL_AudioStreamAvailable(stream: ?*SDL_AudioStream) c_int;
pub extern fn SDL_AudioStreamFlush(stream: ?*SDL_AudioStream) c_int;
pub extern fn SDL_AudioStreamClear(stream: ?*SDL_AudioStream) void;
pub extern fn SDL_FreeAudioStream(stream: ?*SDL_AudioStream) void;
pub extern fn SDL_MixAudio(dst: [*c]Uint8, src: [*c]const Uint8, len: Uint32, volume: c_int) void;
pub extern fn SDL_MixAudioFormat(dst: [*c]Uint8, src: [*c]const Uint8, format: SDL_AudioFormat, len: Uint32, volume: c_int) void;
pub extern fn SDL_QueueAudio(dev: SDL_AudioDeviceID, data: ?*const anyopaque, len: Uint32) c_int;
pub extern fn SDL_DequeueAudio(dev: SDL_AudioDeviceID, data: ?*anyopaque, len: Uint32) Uint32;
pub extern fn SDL_GetQueuedAudioSize(dev: SDL_AudioDeviceID) Uint32;
pub extern fn SDL_ClearQueuedAudio(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_LockAudio() void;
pub extern fn SDL_LockAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_UnlockAudio() void;
pub extern fn SDL_UnlockAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_CloseAudio() void;
pub extern fn SDL_CloseAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_SetClipboardText(text: [*c]const u8) c_int;
pub extern fn SDL_GetClipboardText() [*c]u8;
pub extern fn SDL_HasClipboardText() SDL_bool;
pub extern fn SDL_SetPrimarySelectionText(text: [*c]const u8) c_int;
pub extern fn SDL_GetPrimarySelectionText() [*c]u8;
pub extern fn SDL_HasPrimarySelectionText() SDL_bool; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_bf16.h:14:16: warning: unsupported builtin type
pub const bfloat16_t = @compileError("unable to resolve typedef child type"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_bf16.h:14:16
pub const float32_t = f32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39:16: warning: unsupported builtin type
pub const float16_t = @compileError("unable to resolve typedef child type"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39:16
pub const float64_t = f64;
pub const poly8_t = u8;
pub const poly16_t = u16;
pub const poly64_t = u64;
pub const poly128_t = __uint128_t;
pub const int8x8_t = @Vector(8, i8);
pub const int8x16_t = @Vector(16, i8);
pub const int16x4_t = @Vector(4, i16);
pub const int16x8_t = @Vector(8, i16);
pub const int32x2_t = @Vector(2, i32);
pub const int32x4_t = @Vector(4, i32);
pub const int64x1_t = @Vector(1, i64);
pub const int64x2_t = @Vector(2, i64);
pub const uint8x8_t = @Vector(8, u8);
pub const uint8x16_t = @Vector(16, u8);
pub const uint16x4_t = @Vector(4, u16);
pub const uint16x8_t = @Vector(8, u16);
pub const uint32x2_t = @Vector(2, u32);
pub const uint32x4_t = @Vector(4, u32);
pub const uint64x1_t = @Vector(1, u64);
pub const uint64x2_t = @Vector(2, u64);
pub const float16x4_t = @Vector(4, float16_t);
pub const float16x8_t = @Vector(8, float16_t);
pub const float32x2_t = @Vector(2, float32_t);
pub const float32x4_t = @Vector(4, float32_t);
pub const float64x1_t = @Vector(1, float64_t);
pub const float64x2_t = @Vector(2, float64_t);
pub const poly8x8_t = @Vector(8, poly8_t);
pub const poly8x16_t = @Vector(16, poly8_t);
pub const poly16x4_t = @Vector(4, poly16_t);
pub const poly16x8_t = @Vector(8, poly16_t);
pub const poly64x1_t = @Vector(1, poly64_t);
pub const poly64x2_t = @Vector(2, poly64_t);
pub const struct_int8x8x2_t = extern struct {
    val: [2]int8x8_t = @import("std").mem.zeroes([2]int8x8_t),
};
pub const int8x8x2_t = struct_int8x8x2_t;
pub const struct_int8x16x2_t = extern struct {
    val: [2]int8x16_t = @import("std").mem.zeroes([2]int8x16_t),
};
pub const int8x16x2_t = struct_int8x16x2_t;
pub const struct_int16x4x2_t = extern struct {
    val: [2]int16x4_t = @import("std").mem.zeroes([2]int16x4_t),
};
pub const int16x4x2_t = struct_int16x4x2_t;
pub const struct_int16x8x2_t = extern struct {
    val: [2]int16x8_t = @import("std").mem.zeroes([2]int16x8_t),
};
pub const int16x8x2_t = struct_int16x8x2_t;
pub const struct_int32x2x2_t = extern struct {
    val: [2]int32x2_t = @import("std").mem.zeroes([2]int32x2_t),
};
pub const int32x2x2_t = struct_int32x2x2_t;
pub const struct_int32x4x2_t = extern struct {
    val: [2]int32x4_t = @import("std").mem.zeroes([2]int32x4_t),
};
pub const int32x4x2_t = struct_int32x4x2_t;
pub const struct_int64x1x2_t = extern struct {
    val: [2]int64x1_t = @import("std").mem.zeroes([2]int64x1_t),
};
pub const int64x1x2_t = struct_int64x1x2_t;
pub const struct_int64x2x2_t = extern struct {
    val: [2]int64x2_t = @import("std").mem.zeroes([2]int64x2_t),
};
pub const int64x2x2_t = struct_int64x2x2_t;
pub const struct_uint8x8x2_t = extern struct {
    val: [2]uint8x8_t = @import("std").mem.zeroes([2]uint8x8_t),
};
pub const uint8x8x2_t = struct_uint8x8x2_t;
pub const struct_uint8x16x2_t = extern struct {
    val: [2]uint8x16_t = @import("std").mem.zeroes([2]uint8x16_t),
};
pub const uint8x16x2_t = struct_uint8x16x2_t;
pub const struct_uint16x4x2_t = extern struct {
    val: [2]uint16x4_t = @import("std").mem.zeroes([2]uint16x4_t),
};
pub const uint16x4x2_t = struct_uint16x4x2_t;
pub const struct_uint16x8x2_t = extern struct {
    val: [2]uint16x8_t = @import("std").mem.zeroes([2]uint16x8_t),
};
pub const uint16x8x2_t = struct_uint16x8x2_t;
pub const struct_uint32x2x2_t = extern struct {
    val: [2]uint32x2_t = @import("std").mem.zeroes([2]uint32x2_t),
};
pub const uint32x2x2_t = struct_uint32x2x2_t;
pub const struct_uint32x4x2_t = extern struct {
    val: [2]uint32x4_t = @import("std").mem.zeroes([2]uint32x4_t),
};
pub const uint32x4x2_t = struct_uint32x4x2_t;
pub const struct_uint64x1x2_t = extern struct {
    val: [2]uint64x1_t = @import("std").mem.zeroes([2]uint64x1_t),
};
pub const uint64x1x2_t = struct_uint64x1x2_t;
pub const struct_uint64x2x2_t = extern struct {
    val: [2]uint64x2_t = @import("std").mem.zeroes([2]uint64x2_t),
};
pub const uint64x2x2_t = struct_uint64x2x2_t;
pub const struct_float16x4x2_t = extern struct {
    val: [2]float16x4_t = @import("std").mem.zeroes([2]float16x4_t),
};
pub const float16x4x2_t = struct_float16x4x2_t;
pub const struct_float16x8x2_t = extern struct {
    val: [2]float16x8_t = @import("std").mem.zeroes([2]float16x8_t),
};
pub const float16x8x2_t = struct_float16x8x2_t;
pub const struct_float32x2x2_t = extern struct {
    val: [2]float32x2_t = @import("std").mem.zeroes([2]float32x2_t),
};
pub const float32x2x2_t = struct_float32x2x2_t;
pub const struct_float32x4x2_t = extern struct {
    val: [2]float32x4_t = @import("std").mem.zeroes([2]float32x4_t),
};
pub const float32x4x2_t = struct_float32x4x2_t;
pub const struct_float64x1x2_t = extern struct {
    val: [2]float64x1_t = @import("std").mem.zeroes([2]float64x1_t),
};
pub const float64x1x2_t = struct_float64x1x2_t;
pub const struct_float64x2x2_t = extern struct {
    val: [2]float64x2_t = @import("std").mem.zeroes([2]float64x2_t),
};
pub const float64x2x2_t = struct_float64x2x2_t;
pub const struct_poly8x8x2_t = extern struct {
    val: [2]poly8x8_t = @import("std").mem.zeroes([2]poly8x8_t),
};
pub const poly8x8x2_t = struct_poly8x8x2_t;
pub const struct_poly8x16x2_t = extern struct {
    val: [2]poly8x16_t = @import("std").mem.zeroes([2]poly8x16_t),
};
pub const poly8x16x2_t = struct_poly8x16x2_t;
pub const struct_poly16x4x2_t = extern struct {
    val: [2]poly16x4_t = @import("std").mem.zeroes([2]poly16x4_t),
};
pub const poly16x4x2_t = struct_poly16x4x2_t;
pub const struct_poly16x8x2_t = extern struct {
    val: [2]poly16x8_t = @import("std").mem.zeroes([2]poly16x8_t),
};
pub const poly16x8x2_t = struct_poly16x8x2_t;
pub const struct_poly64x1x2_t = extern struct {
    val: [2]poly64x1_t = @import("std").mem.zeroes([2]poly64x1_t),
};
pub const poly64x1x2_t = struct_poly64x1x2_t;
pub const struct_poly64x2x2_t = extern struct {
    val: [2]poly64x2_t = @import("std").mem.zeroes([2]poly64x2_t),
};
pub const poly64x2x2_t = struct_poly64x2x2_t;
pub const struct_int8x8x3_t = extern struct {
    val: [3]int8x8_t = @import("std").mem.zeroes([3]int8x8_t),
};
pub const int8x8x3_t = struct_int8x8x3_t;
pub const struct_int8x16x3_t = extern struct {
    val: [3]int8x16_t = @import("std").mem.zeroes([3]int8x16_t),
};
pub const int8x16x3_t = struct_int8x16x3_t;
pub const struct_int16x4x3_t = extern struct {
    val: [3]int16x4_t = @import("std").mem.zeroes([3]int16x4_t),
};
pub const int16x4x3_t = struct_int16x4x3_t;
pub const struct_int16x8x3_t = extern struct {
    val: [3]int16x8_t = @import("std").mem.zeroes([3]int16x8_t),
};
pub const int16x8x3_t = struct_int16x8x3_t;
pub const struct_int32x2x3_t = extern struct {
    val: [3]int32x2_t = @import("std").mem.zeroes([3]int32x2_t),
};
pub const int32x2x3_t = struct_int32x2x3_t;
pub const struct_int32x4x3_t = extern struct {
    val: [3]int32x4_t = @import("std").mem.zeroes([3]int32x4_t),
};
pub const int32x4x3_t = struct_int32x4x3_t;
pub const struct_int64x1x3_t = extern struct {
    val: [3]int64x1_t = @import("std").mem.zeroes([3]int64x1_t),
};
pub const int64x1x3_t = struct_int64x1x3_t;
pub const struct_int64x2x3_t = extern struct {
    val: [3]int64x2_t = @import("std").mem.zeroes([3]int64x2_t),
};
pub const int64x2x3_t = struct_int64x2x3_t;
pub const struct_uint8x8x3_t = extern struct {
    val: [3]uint8x8_t = @import("std").mem.zeroes([3]uint8x8_t),
};
pub const uint8x8x3_t = struct_uint8x8x3_t;
pub const struct_uint8x16x3_t = extern struct {
    val: [3]uint8x16_t = @import("std").mem.zeroes([3]uint8x16_t),
};
pub const uint8x16x3_t = struct_uint8x16x3_t;
pub const struct_uint16x4x3_t = extern struct {
    val: [3]uint16x4_t = @import("std").mem.zeroes([3]uint16x4_t),
};
pub const uint16x4x3_t = struct_uint16x4x3_t;
pub const struct_uint16x8x3_t = extern struct {
    val: [3]uint16x8_t = @import("std").mem.zeroes([3]uint16x8_t),
};
pub const uint16x8x3_t = struct_uint16x8x3_t;
pub const struct_uint32x2x3_t = extern struct {
    val: [3]uint32x2_t = @import("std").mem.zeroes([3]uint32x2_t),
};
pub const uint32x2x3_t = struct_uint32x2x3_t;
pub const struct_uint32x4x3_t = extern struct {
    val: [3]uint32x4_t = @import("std").mem.zeroes([3]uint32x4_t),
};
pub const uint32x4x3_t = struct_uint32x4x3_t;
pub const struct_uint64x1x3_t = extern struct {
    val: [3]uint64x1_t = @import("std").mem.zeroes([3]uint64x1_t),
};
pub const uint64x1x3_t = struct_uint64x1x3_t;
pub const struct_uint64x2x3_t = extern struct {
    val: [3]uint64x2_t = @import("std").mem.zeroes([3]uint64x2_t),
};
pub const uint64x2x3_t = struct_uint64x2x3_t;
pub const struct_float16x4x3_t = extern struct {
    val: [3]float16x4_t = @import("std").mem.zeroes([3]float16x4_t),
};
pub const float16x4x3_t = struct_float16x4x3_t;
pub const struct_float16x8x3_t = extern struct {
    val: [3]float16x8_t = @import("std").mem.zeroes([3]float16x8_t),
};
pub const float16x8x3_t = struct_float16x8x3_t;
pub const struct_float32x2x3_t = extern struct {
    val: [3]float32x2_t = @import("std").mem.zeroes([3]float32x2_t),
};
pub const float32x2x3_t = struct_float32x2x3_t;
pub const struct_float32x4x3_t = extern struct {
    val: [3]float32x4_t = @import("std").mem.zeroes([3]float32x4_t),
};
pub const float32x4x3_t = struct_float32x4x3_t;
pub const struct_float64x1x3_t = extern struct {
    val: [3]float64x1_t = @import("std").mem.zeroes([3]float64x1_t),
};
pub const float64x1x3_t = struct_float64x1x3_t;
pub const struct_float64x2x3_t = extern struct {
    val: [3]float64x2_t = @import("std").mem.zeroes([3]float64x2_t),
};
pub const float64x2x3_t = struct_float64x2x3_t;
pub const struct_poly8x8x3_t = extern struct {
    val: [3]poly8x8_t = @import("std").mem.zeroes([3]poly8x8_t),
};
pub const poly8x8x3_t = struct_poly8x8x3_t;
pub const struct_poly8x16x3_t = extern struct {
    val: [3]poly8x16_t = @import("std").mem.zeroes([3]poly8x16_t),
};
pub const poly8x16x3_t = struct_poly8x16x3_t;
pub const struct_poly16x4x3_t = extern struct {
    val: [3]poly16x4_t = @import("std").mem.zeroes([3]poly16x4_t),
};
pub const poly16x4x3_t = struct_poly16x4x3_t;
pub const struct_poly16x8x3_t = extern struct {
    val: [3]poly16x8_t = @import("std").mem.zeroes([3]poly16x8_t),
};
pub const poly16x8x3_t = struct_poly16x8x3_t;
pub const struct_poly64x1x3_t = extern struct {
    val: [3]poly64x1_t = @import("std").mem.zeroes([3]poly64x1_t),
};
pub const poly64x1x3_t = struct_poly64x1x3_t;
pub const struct_poly64x2x3_t = extern struct {
    val: [3]poly64x2_t = @import("std").mem.zeroes([3]poly64x2_t),
};
pub const poly64x2x3_t = struct_poly64x2x3_t;
pub const struct_int8x8x4_t = extern struct {
    val: [4]int8x8_t = @import("std").mem.zeroes([4]int8x8_t),
};
pub const int8x8x4_t = struct_int8x8x4_t;
pub const struct_int8x16x4_t = extern struct {
    val: [4]int8x16_t = @import("std").mem.zeroes([4]int8x16_t),
};
pub const int8x16x4_t = struct_int8x16x4_t;
pub const struct_int16x4x4_t = extern struct {
    val: [4]int16x4_t = @import("std").mem.zeroes([4]int16x4_t),
};
pub const int16x4x4_t = struct_int16x4x4_t;
pub const struct_int16x8x4_t = extern struct {
    val: [4]int16x8_t = @import("std").mem.zeroes([4]int16x8_t),
};
pub const int16x8x4_t = struct_int16x8x4_t;
pub const struct_int32x2x4_t = extern struct {
    val: [4]int32x2_t = @import("std").mem.zeroes([4]int32x2_t),
};
pub const int32x2x4_t = struct_int32x2x4_t;
pub const struct_int32x4x4_t = extern struct {
    val: [4]int32x4_t = @import("std").mem.zeroes([4]int32x4_t),
};
pub const int32x4x4_t = struct_int32x4x4_t;
pub const struct_int64x1x4_t = extern struct {
    val: [4]int64x1_t = @import("std").mem.zeroes([4]int64x1_t),
};
pub const int64x1x4_t = struct_int64x1x4_t;
pub const struct_int64x2x4_t = extern struct {
    val: [4]int64x2_t = @import("std").mem.zeroes([4]int64x2_t),
};
pub const int64x2x4_t = struct_int64x2x4_t;
pub const struct_uint8x8x4_t = extern struct {
    val: [4]uint8x8_t = @import("std").mem.zeroes([4]uint8x8_t),
};
pub const uint8x8x4_t = struct_uint8x8x4_t;
pub const struct_uint8x16x4_t = extern struct {
    val: [4]uint8x16_t = @import("std").mem.zeroes([4]uint8x16_t),
};
pub const uint8x16x4_t = struct_uint8x16x4_t;
pub const struct_uint16x4x4_t = extern struct {
    val: [4]uint16x4_t = @import("std").mem.zeroes([4]uint16x4_t),
};
pub const uint16x4x4_t = struct_uint16x4x4_t;
pub const struct_uint16x8x4_t = extern struct {
    val: [4]uint16x8_t = @import("std").mem.zeroes([4]uint16x8_t),
};
pub const uint16x8x4_t = struct_uint16x8x4_t;
pub const struct_uint32x2x4_t = extern struct {
    val: [4]uint32x2_t = @import("std").mem.zeroes([4]uint32x2_t),
};
pub const uint32x2x4_t = struct_uint32x2x4_t;
pub const struct_uint32x4x4_t = extern struct {
    val: [4]uint32x4_t = @import("std").mem.zeroes([4]uint32x4_t),
};
pub const uint32x4x4_t = struct_uint32x4x4_t;
pub const struct_uint64x1x4_t = extern struct {
    val: [4]uint64x1_t = @import("std").mem.zeroes([4]uint64x1_t),
};
pub const uint64x1x4_t = struct_uint64x1x4_t;
pub const struct_uint64x2x4_t = extern struct {
    val: [4]uint64x2_t = @import("std").mem.zeroes([4]uint64x2_t),
};
pub const uint64x2x4_t = struct_uint64x2x4_t;
pub const struct_float16x4x4_t = extern struct {
    val: [4]float16x4_t = @import("std").mem.zeroes([4]float16x4_t),
};
pub const float16x4x4_t = struct_float16x4x4_t;
pub const struct_float16x8x4_t = extern struct {
    val: [4]float16x8_t = @import("std").mem.zeroes([4]float16x8_t),
};
pub const float16x8x4_t = struct_float16x8x4_t;
pub const struct_float32x2x4_t = extern struct {
    val: [4]float32x2_t = @import("std").mem.zeroes([4]float32x2_t),
};
pub const float32x2x4_t = struct_float32x2x4_t;
pub const struct_float32x4x4_t = extern struct {
    val: [4]float32x4_t = @import("std").mem.zeroes([4]float32x4_t),
};
pub const float32x4x4_t = struct_float32x4x4_t;
pub const struct_float64x1x4_t = extern struct {
    val: [4]float64x1_t = @import("std").mem.zeroes([4]float64x1_t),
};
pub const float64x1x4_t = struct_float64x1x4_t;
pub const struct_float64x2x4_t = extern struct {
    val: [4]float64x2_t = @import("std").mem.zeroes([4]float64x2_t),
};
pub const float64x2x4_t = struct_float64x2x4_t;
pub const struct_poly8x8x4_t = extern struct {
    val: [4]poly8x8_t = @import("std").mem.zeroes([4]poly8x8_t),
};
pub const poly8x8x4_t = struct_poly8x8x4_t;
pub const struct_poly8x16x4_t = extern struct {
    val: [4]poly8x16_t = @import("std").mem.zeroes([4]poly8x16_t),
};
pub const poly8x16x4_t = struct_poly8x16x4_t;
pub const struct_poly16x4x4_t = extern struct {
    val: [4]poly16x4_t = @import("std").mem.zeroes([4]poly16x4_t),
};
pub const poly16x4x4_t = struct_poly16x4x4_t;
pub const struct_poly16x8x4_t = extern struct {
    val: [4]poly16x8_t = @import("std").mem.zeroes([4]poly16x8_t),
};
pub const poly16x8x4_t = struct_poly16x8x4_t;
pub const struct_poly64x1x4_t = extern struct {
    val: [4]poly64x1_t = @import("std").mem.zeroes([4]poly64x1_t),
};
pub const poly64x1x4_t = struct_poly64x1x4_t;
pub const struct_poly64x2x4_t = extern struct {
    val: [4]poly64x2_t = @import("std").mem.zeroes([4]poly64x2_t),
};
pub const poly64x2x4_t = struct_poly64x2x4_t;
pub const bfloat16x4_t = @Vector(4, bfloat16_t);
pub const bfloat16x8_t = @Vector(8, bfloat16_t);
pub const struct_bfloat16x4x2_t = extern struct {
    val: [2]bfloat16x4_t = @import("std").mem.zeroes([2]bfloat16x4_t),
};
pub const bfloat16x4x2_t = struct_bfloat16x4x2_t;
pub const struct_bfloat16x8x2_t = extern struct {
    val: [2]bfloat16x8_t = @import("std").mem.zeroes([2]bfloat16x8_t),
};
pub const bfloat16x8x2_t = struct_bfloat16x8x2_t;
pub const struct_bfloat16x4x3_t = extern struct {
    val: [3]bfloat16x4_t = @import("std").mem.zeroes([3]bfloat16x4_t),
};
pub const bfloat16x4x3_t = struct_bfloat16x4x3_t;
pub const struct_bfloat16x8x3_t = extern struct {
    val: [3]bfloat16x8_t = @import("std").mem.zeroes([3]bfloat16x8_t),
};
pub const bfloat16x8x3_t = struct_bfloat16x8x3_t;
pub const struct_bfloat16x4x4_t = extern struct {
    val: [4]bfloat16x4_t = @import("std").mem.zeroes([4]bfloat16x4_t),
};
pub const bfloat16x4x4_t = struct_bfloat16x4x4_t;
pub const struct_bfloat16x8x4_t = extern struct {
    val: [4]bfloat16x8_t = @import("std").mem.zeroes([4]bfloat16x8_t),
};
pub const bfloat16x8x4_t = struct_bfloat16x8x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1723:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1721:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1745:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1743:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1767:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1765:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1789:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1787:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1811:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1809:18: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1828:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1826:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1850:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1848:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1872:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1870:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1894:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1892:17: warning: unable to translate function, demoted to extern
pub extern fn vabd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1916:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1914:17: warning: unable to translate function, demoted to extern
pub extern fn vabd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1938:22: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1936:15: warning: unable to translate function, demoted to extern
pub extern fn vabd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1960:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1958:18: warning: unable to translate function, demoted to extern
pub extern fn vabd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1977:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1975:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1999:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1997:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2021:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2019:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2037:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2035:18: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2053:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2051:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s32(arg___p0: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2069:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2067:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s16(arg___p0: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2085:22: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2083:15: warning: unable to translate function, demoted to extern
pub extern fn vabs_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2101:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2099:18: warning: unable to translate function, demoted to extern
pub extern fn vabs_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2117:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2115:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s32(arg___p0: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2133:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2131:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2431:23: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2429:16: warning: unable to translate function, demoted to extern
pub extern fn vadd_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2447:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2445:17: warning: unable to translate function, demoted to extern
pub extern fn vadd_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2453:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2451:17: warning: unable to translate function, demoted to extern
pub extern fn vadd_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2470:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2468:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2487:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2485:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2504:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2502:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2521:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2519:17: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2543:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2541:17: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2565:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2563:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2587:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2585:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2609:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2607:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2631:22: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:2629:15: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vandq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vbicq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3149:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3147:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p8(arg___p0: uint8x8_t, arg___p1: poly8x8_t, arg___p2: poly8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3167:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3165:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p16(arg___p0: uint16x4_t, arg___p1: poly16x4_t, arg___p2: poly16x4_t) poly16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3185:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3183:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p8(arg___p0: uint8x16_t, arg___p1: poly8x16_t, arg___p2: poly8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3203:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3201:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p16(arg___p0: uint16x8_t, arg___p1: poly16x8_t, arg___p2: poly16x8_t) poly16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3221:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3219:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3239:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3237:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3257:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3255:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3275:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3273:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3293:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3291:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s8(arg___p0: uint8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3311:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3309:18: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f32(arg___p0: uint32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3329:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3327:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s32(arg___p0: uint32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3347:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3345:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s64(arg___p0: uint64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3365:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3363:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s16(arg___p0: uint16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3383:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3381:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3401:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3399:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3418:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3416:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t, arg___p2: uint64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3424:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3422:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3442:22: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3440:15: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s8(arg___p0: uint8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3460:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3458:18: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f32(arg___p0: uint32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3478:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3476:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s32(arg___p0: uint32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3495:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3493:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s64(arg___p0: uint64x1_t, arg___p1: int64x1_t, arg___p2: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3501:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3499:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s16(arg___p0: uint16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3519:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3517:17: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3536:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3534:17: warning: unable to translate function, demoted to extern
pub extern fn vcage_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3553:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3551:17: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3570:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3568:17: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3587:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3585:17: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3604:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3602:17: warning: unable to translate function, demoted to extern
pub extern fn vcale_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3621:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3619:17: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3638:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:3636:17: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
pub inline fn vceq_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vcgeq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgtq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcleq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4641:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4639:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u8(arg___p0: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4657:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4655:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u32(arg___p0: uint32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4673:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4671:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u16(arg___p0: uint16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4689:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4687:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4705:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4703:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s32(arg___p0: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4721:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4719:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s16(arg___p0: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4737:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4735:15: warning: unable to translate function, demoted to extern
pub extern fn vcls_u8(arg___p0: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4753:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4751:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_u32(arg___p0: uint32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4769:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4767:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_u16(arg___p0: uint16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4785:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4783:15: warning: unable to translate function, demoted to extern
pub extern fn vcls_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4801:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4799:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_s32(arg___p0: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4817:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:4815:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vcltq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5071:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5069:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5087:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5085:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u32(arg___p0: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5103:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5101:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u16(arg___p0: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5119:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5117:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5135:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5133:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s32(arg___p0: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5151:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5149:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s16(arg___p0: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5167:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5165:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_u8(arg___p0: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5183:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5181:17: warning: unable to translate function, demoted to extern
pub extern fn vclz_u32(arg___p0: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5199:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5197:17: warning: unable to translate function, demoted to extern
pub extern fn vclz_u16(arg___p0: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5215:22: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5213:15: warning: unable to translate function, demoted to extern
pub extern fn vclz_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5231:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5229:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_s32(arg___p0: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5247:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5245:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_s16(arg___p0: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5263:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5261:16: warning: unable to translate function, demoted to extern
pub extern fn vcnt_p8(arg___p0: poly8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5279:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5277:17: warning: unable to translate function, demoted to extern
pub extern fn vcntq_p8(arg___p0: poly8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5295:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5293:17: warning: unable to translate function, demoted to extern
pub extern fn vcntq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5311:23: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5309:16: warning: unable to translate function, demoted to extern
pub extern fn vcntq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5327:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5325:16: warning: unable to translate function, demoted to extern
pub extern fn vcnt_u8(arg___p0: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5343:22: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5341:15: warning: unable to translate function, demoted to extern
pub extern fn vcnt_s8(arg___p0: int8x8_t) int8x8_t;
pub inline fn vcombine_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5671:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5669:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_u32(arg___p0: uint32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5687:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5685:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_s32(arg___p0: int32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5703:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5701:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_u32(arg___p0: uint32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5719:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5717:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_s32(arg___p0: int32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5879:23: warning: TODO implement function '__builtin_neon_vcvtq_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5877:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s32_f32(arg___p0: float32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5895:23: warning: TODO implement function '__builtin_neon_vcvt_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5893:16: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s32_f32(arg___p0: float32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5911:24: warning: TODO implement function '__builtin_neon_vcvtq_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5909:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u32_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5927:24: warning: TODO implement function '__builtin_neon_vcvt_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5925:17: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u32_f32(arg___p0: float32x2_t) uint32x2_t;
pub inline fn vdup_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn veorq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn vget_high_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8272:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8270:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8289:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8287:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8306:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8304:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8323:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8321:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8340:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8338:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8357:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8355:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8374:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8372:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8391:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8389:17: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8408:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8406:17: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8425:22: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8423:15: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8442:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8440:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8459:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8457:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8476:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8474:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8493:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8491:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8510:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8508:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8527:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8525:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8544:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8542:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8561:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8559:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8578:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8576:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8595:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8593:17: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8612:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8610:17: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8629:22: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8627:15: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8646:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8644:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8663:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8661:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13974:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13972:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13991:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13989:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14008:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14006:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14025:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14023:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14042:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14040:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14059:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14057:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14076:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14074:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14093:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14091:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14110:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14108:17: warning: unable to translate function, demoted to extern
pub extern fn vmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14127:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14125:17: warning: unable to translate function, demoted to extern
pub extern fn vmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14144:22: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14142:15: warning: unable to translate function, demoted to extern
pub extern fn vmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14161:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14159:18: warning: unable to translate function, demoted to extern
pub extern fn vmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14178:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14176:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14195:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14193:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14212:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14210:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14229:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14227:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14246:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14244:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14263:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14261:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14280:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14278:18: warning: unable to translate function, demoted to extern
pub extern fn vminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14297:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14295:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14314:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14312:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14331:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14329:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14348:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14346:17: warning: unable to translate function, demoted to extern
pub extern fn vmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14365:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14363:17: warning: unable to translate function, demoted to extern
pub extern fn vmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14382:22: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14380:15: warning: unable to translate function, demoted to extern
pub extern fn vmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14399:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14397:18: warning: unable to translate function, demoted to extern
pub extern fn vmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14416:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14414:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14433:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14431:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vmlaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmov_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16118:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16116:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u8(arg___p0: uint8x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16139:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16137:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u32(arg___p0: uint32x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16160:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16158:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u16(arg___p0: uint16x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16181:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16179:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s8(arg___p0: int8x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16202:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16200:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s32(arg___p0: int32x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16223:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16221:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s16(arg___p0: int16x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16244:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16242:17: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u32(arg___p0: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16265:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16263:17: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u64(arg___p0: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16286:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16284:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u16(arg___p0: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16307:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16305:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s32(arg___p0: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16328:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16326:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s64(arg___p0: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16349:22: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16347:15: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s16(arg___p0: int16x8_t) int8x8_t;
pub inline fn vmulq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16608:23: warning: TODO implement function '__builtin_neon_vmul_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16606:16: warning: unable to translate function, demoted to extern
pub extern fn vmul_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16625:24: warning: TODO implement function '__builtin_neon_vmulq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16623:17: warning: unable to translate function, demoted to extern
pub extern fn vmulq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t;
pub inline fn vmulq_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_f32(arg___p0: float32x4_t, arg___p1: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmul_n_f32(arg___p0: float32x2_t, arg___p1: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17012:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17010:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17034:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17032:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17056:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17054:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17078:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17076:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17100:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17098:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17122:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17120:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17144:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17142:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vmull_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmvn_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vnegq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vornq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorrq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18182:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18180:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18199:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18197:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18216:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18214:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18233:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18231:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18250:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18248:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18267:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18265:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18284:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18282:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u8(arg___p0: uint16x4_t, arg___p1: uint8x8_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18301:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18299:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u32(arg___p0: uint64x1_t, arg___p1: uint32x2_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18316:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18314:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u16(arg___p0: uint32x2_t, arg___p1: uint16x4_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18333:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18331:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s8(arg___p0: int16x4_t, arg___p1: int8x8_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18350:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18348:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s32(arg___p0: int64x1_t, arg___p1: int32x2_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18365:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18363:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s16(arg___p0: int32x2_t, arg___p1: int16x4_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18382:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18380:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18399:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18397:17: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18416:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18414:17: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18433:22: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18431:15: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18450:25: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18448:18: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18467:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18465:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18484:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18482:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18501:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18499:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u8(arg___p0: uint8x16_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18517:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18515:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u32(arg___p0: uint32x4_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18533:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18531:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u16(arg___p0: uint16x8_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18549:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18547:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s8(arg___p0: int8x16_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18565:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18563:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s32(arg___p0: int32x4_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18581:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18579:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s16(arg___p0: int16x8_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18597:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18595:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u8(arg___p0: uint8x8_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18613:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18611:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u32(arg___p0: uint32x2_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18628:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18626:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u16(arg___p0: uint16x4_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18644:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18642:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s8(arg___p0: int8x8_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18660:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18658:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s32(arg___p0: int32x2_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18675:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18673:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s16(arg___p0: int16x4_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18691:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18689:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18708:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18706:17: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18725:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18723:17: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18742:22: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18740:15: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18759:25: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18757:18: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18776:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18774:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18793:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18791:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18810:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18808:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18827:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18825:17: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18844:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18842:17: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18861:22: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18859:15: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18878:25: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18876:18: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18895:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18893:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18912:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18910:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18929:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18927:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18945:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18943:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s32(arg___p0: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18961:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18959:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s16(arg___p0: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18977:22: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18975:15: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18993:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:18991:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s32(arg___p0: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19009:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19007:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s16(arg___p0: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19025:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19023:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19042:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19040:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19059:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19057:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19076:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19074:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19093:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19091:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19110:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19108:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19127:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19125:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19144:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19142:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19161:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19159:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19178:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19176:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19194:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19192:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19200:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19198:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19217:22: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19215:15: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19234:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19232:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19250:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19248:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19256:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19254:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19273:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19271:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19296:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19294:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19411:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19409:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19434:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19432:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19549:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19547:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19571:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19569:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19593:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19591:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19615:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19613:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19701:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19699:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19723:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19721:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vqdmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19829:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19827:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u32(arg___p0: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19850:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19848:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u64(arg___p0: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19871:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19869:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u16(arg___p0: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19892:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19890:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s32(arg___p0: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19913:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19911:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s64(arg___p0: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19934:22: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19932:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s16(arg___p0: int16x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19955:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19953:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s32(arg___p0: int32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19976:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19974:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s64(arg___p0: int64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19997:23: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19995:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s16(arg___p0: int16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20018:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20016:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20034:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20032:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s32(arg___p0: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20050:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20048:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s16(arg___p0: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20066:22: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20064:15: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20082:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20080:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s32(arg___p0: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20098:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20096:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s16(arg___p0: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20114:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20112:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20136:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20134:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20158:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20156:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20180:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20178:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqrdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqrdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20266:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20264:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20283:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20281:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20300:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20298:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20317:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20315:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20334:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20332:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20351:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20349:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20368:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20366:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20385:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20383:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20402:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20400:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20419:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20417:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20435:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20433:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20441:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20439:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20458:22: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20456:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20475:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20473:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20491:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20489:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20497:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20495:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20730:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20728:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20747:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20745:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20764:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20762:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20781:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20779:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20798:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20796:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20815:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20813:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20832:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20830:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20849:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20847:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20866:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20864:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20883:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20881:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20899:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20897:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20905:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20903:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20922:22: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20920:15: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20939:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20937:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20955:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20953:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20961:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20959:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21590:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21588:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21607:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21605:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21624:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21622:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21641:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21639:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21658:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21656:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21675:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21673:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21692:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21690:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21709:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21707:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21726:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21724:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21743:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21741:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21759:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21757:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21765:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21763:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21782:22: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21780:15: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21799:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21797:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21815:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21813:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21821:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21819:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21838:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21836:17: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21860:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21858:17: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21882:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21880:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21904:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21902:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21926:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21924:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21948:22: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21946:15: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21970:24: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21968:17: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_u32(arg___p0: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21986:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21984:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22002:24: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22000:17: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_u32(arg___p0: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22018:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22016:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22034:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22032:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22051:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22049:18: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
pub inline fn vrev16_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22644:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22642:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22661:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22659:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22678:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22676:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22695:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22693:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22712:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22710:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22729:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22727:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22746:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22744:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22763:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22761:17: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22780:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22778:17: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22797:22: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22795:15: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22814:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22812:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22831:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22829:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22848:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22846:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22865:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22863:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22882:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22880:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22899:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22897:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22916:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22914:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22933:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22931:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22950:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22948:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22967:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22965:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22984:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22982:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23001:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:22999:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23017:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23015:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23023:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23021:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23040:22: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23038:15: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23057:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23055:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23073:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23071:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23079:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23077:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23504:24: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23502:17: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_u32(arg___p0: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23520:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23518:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23536:24: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23534:17: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_u32(arg___p0: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23552:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23550:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23568:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23566:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23585:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23583:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23910:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23908:17: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23932:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23930:17: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23954:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23952:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23976:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23974:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23998:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23996:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24020:22: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24018:15: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24596:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24594:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24613:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24611:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24630:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24628:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24647:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24645:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24664:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24662:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24681:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24679:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24698:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24696:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24715:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24713:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24732:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24730:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24749:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24747:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24765:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24763:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24771:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24769:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24788:22: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24786:15: warning: unable to translate function, demoted to extern
pub extern fn vshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24805:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24803:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24821:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24819:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24827:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24825:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30162:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30160:17: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30184:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30182:17: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30206:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30204:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30228:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30226:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30250:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30248:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30272:22: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30270:15: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vsubl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) - vmovl_s16(__p1);
    return __ret;
}
pub inline fn vsubw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s16(__p1);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30498:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30496:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_p8(arg___p0: poly8x8_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30515:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30513:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30532:22: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30530:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30549:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30547:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_p8(arg___p0: poly8x8x2_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30568:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30566:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_u8(arg___p0: uint8x8x2_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30587:22: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30585:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_s8(arg___p0: int8x8x2_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30606:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30604:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_p8(arg___p0: poly8x8x3_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30626:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30624:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_u8(arg___p0: uint8x8x3_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30646:22: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30644:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_s8(arg___p0: int8x8x3_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30666:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30664:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_p8(arg___p0: poly8x8x4_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30687:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30685:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_u8(arg___p0: uint8x8x4_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30708:22: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30706:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_s8(arg___p0: int8x8x4_t, arg___p1: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30729:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30727:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30747:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30745:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30765:22: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30763:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30783:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30781:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x2_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30803:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30801:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x2_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30823:22: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30821:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x8x2_t, arg___p2: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30843:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30841:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x3_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30864:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30862:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x3_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30885:22: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30883:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x8x3_t, arg___p2: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30906:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30904:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x4_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30928:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30926:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x4_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30950:22: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30948:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x8x4_t, arg___p2: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30972:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30970:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30991:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:30989:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31010:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31008:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31029:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31027:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31048:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31046:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31067:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31065:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31086:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31084:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31105:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31103:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31124:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31122:20: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31143:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31141:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31162:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31160:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31181:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31179:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31200:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31198:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31219:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31217:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31238:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31236:17: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31257:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31255:20: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31276:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31274:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31295:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31293:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31314:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31312:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31331:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31329:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31348:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31346:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31365:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31363:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31382:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31380:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31399:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31397:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31416:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31414:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31433:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31431:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31450:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31448:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31467:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31465:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31484:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31482:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31501:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31499:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31518:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31516:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31535:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31533:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31552:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31550:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31569:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31567:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31586:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31584:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31605:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31603:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31624:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31622:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31643:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31641:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31662:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31660:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31681:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31679:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31700:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31698:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31719:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31717:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31738:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31736:20: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31757:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31755:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31776:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31774:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31795:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31793:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31814:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31812:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31833:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31831:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31852:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31850:17: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31871:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31869:20: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31890:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31888:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31909:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31907:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31928:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31926:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31947:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31945:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31966:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31964:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31985:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:31983:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32004:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32002:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32023:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32021:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32042:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32040:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32061:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32059:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32080:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32078:20: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32099:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32097:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32118:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32116:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32137:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32135:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32156:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32154:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32175:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32173:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32194:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32192:17: warning: unable to translate function, demoted to extern
pub extern fn vzip_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32213:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32211:20: warning: unable to translate function, demoted to extern
pub extern fn vzip_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32232:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32230:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32251:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32249:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32366:25: warning: TODO implement function '__builtin_neon_vbfdotq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32364:50: warning: unable to translate function, demoted to extern
pub extern fn vbfdotq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32389:25: warning: TODO implement function '__builtin_neon_vbfdot_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32387:50: warning: unable to translate function, demoted to extern
pub extern fn vbfdot_f32(arg___p0: float32x2_t, arg___p1: bfloat16x4_t, arg___p2: bfloat16x4_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32524:25: warning: TODO implement function '__builtin_neon_vbfmlalbq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32522:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmlalbq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32547:25: warning: TODO implement function '__builtin_neon_vbfmlaltq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32545:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmlaltq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32570:25: warning: TODO implement function '__builtin_neon_vbfmmlaq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32568:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmmlaq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
pub inline fn vcombine_bf16(arg___p0: bfloat16x4_t, arg___p1: bfloat16x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25229:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32614:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_bf16(arg___p0_134: bfloat16x4_t) float32x4_t;
pub inline fn vcvtah_f32_bf16(arg___p0: bfloat16_t) float32_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32_t = undefined;
    _ = &__ret;
    var __reint: bfloat16_t = __p0;
    _ = &__reint;
    var __reint1: i32 = @as([*c]i32, @ptrCast(@alignCast(&__reint))).* << @intCast(16);
    _ = &__reint1;
    __ret = @as([*c]float32_t, @ptrCast(@alignCast(&__reint1))).*;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32649:24: warning: TODO implement function '__builtin_neon_vcvth_bf16_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32647:49: warning: unable to translate function, demoted to extern
pub extern fn vcvth_bf16_f32(arg___p0: float32_t) bfloat16_t;
pub inline fn vdupq_n_bf16(arg___p0: bfloat16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk bfloat16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_bf16(arg___p0: bfloat16_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk bfloat16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vget_high_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33837:24: warning: TODO implement function '__builtin_neon_vdotq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33835:52: warning: unable to translate function, demoted to extern
pub extern fn vdotq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33860:23: warning: TODO implement function '__builtin_neon_vdotq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33858:51: warning: unable to translate function, demoted to extern
pub extern fn vdotq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33883:24: warning: TODO implement function '__builtin_neon_vdot_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33881:52: warning: unable to translate function, demoted to extern
pub extern fn vdot_u32(arg___p0: uint32x2_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33906:23: warning: TODO implement function '__builtin_neon_vdot_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33904:51: warning: unable to translate function, demoted to extern
pub extern fn vdot_s32(arg___p0: int32x2_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34041:25: warning: TODO implement function '__builtin_neon_vabdq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34039:54: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34058:25: warning: TODO implement function '__builtin_neon_vabd_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34056:54: warning: unable to translate function, demoted to extern
pub extern fn vabd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34075:25: warning: TODO implement function '__builtin_neon_vabsq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34073:54: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34091:25: warning: TODO implement function '__builtin_neon_vabs_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34089:54: warning: unable to translate function, demoted to extern
pub extern fn vabs_f16(arg___p0: float16x4_t) float16x4_t;
pub inline fn vaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34141:25: warning: TODO implement function '__builtin_neon_vbslq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34139:54: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f16(arg___p0: uint16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34159:25: warning: TODO implement function '__builtin_neon_vbsl_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34157:54: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f16(arg___p0: uint16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34177:24: warning: TODO implement function '__builtin_neon_vcageq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34175:53: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34194:24: warning: TODO implement function '__builtin_neon_vcage_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34192:53: warning: unable to translate function, demoted to extern
pub extern fn vcage_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34211:24: warning: TODO implement function '__builtin_neon_vcagtq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34209:53: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34228:24: warning: TODO implement function '__builtin_neon_vcagt_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34226:53: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34245:24: warning: TODO implement function '__builtin_neon_vcaleq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34243:53: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34262:24: warning: TODO implement function '__builtin_neon_vcale_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34260:53: warning: unable to translate function, demoted to extern
pub extern fn vcale_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34279:24: warning: TODO implement function '__builtin_neon_vcaltq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34277:53: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34296:24: warning: TODO implement function '__builtin_neon_vcalt_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34294:53: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
pub inline fn vceqq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34347:24: warning: TODO implement function '__builtin_neon_vceqzq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34345:53: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34363:24: warning: TODO implement function '__builtin_neon_vceqz_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34361:53: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgeq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34413:24: warning: TODO implement function '__builtin_neon_vcgezq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34411:53: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34429:24: warning: TODO implement function '__builtin_neon_vcgez_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34427:53: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34479:24: warning: TODO implement function '__builtin_neon_vcgtzq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34477:53: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34495:24: warning: TODO implement function '__builtin_neon_vcgtz_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34493:53: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34545:24: warning: TODO implement function '__builtin_neon_vclezq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34543:53: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34561:24: warning: TODO implement function '__builtin_neon_vclez_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34559:53: warning: unable to translate function, demoted to extern
pub extern fn vclez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34611:24: warning: TODO implement function '__builtin_neon_vcltzq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34609:53: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34627:24: warning: TODO implement function '__builtin_neon_vcltz_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34625:53: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34643:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34641:54: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_u16(arg___p0: uint16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34659:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34657:54: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_s16(arg___p0: int16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34675:25: warning: TODO implement function '__builtin_neon_vcvt_f16_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34673:54: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_u16(arg___p0: uint16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34691:25: warning: TODO implement function '__builtin_neon_vcvt_f16_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34689:54: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_s16(arg___p0: int16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34851:23: warning: TODO implement function '__builtin_neon_vcvtq_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34849:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s16_f16(arg___p0: float16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34867:23: warning: TODO implement function '__builtin_neon_vcvt_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34865:52: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s16_f16(arg___p0: float16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34883:24: warning: TODO implement function '__builtin_neon_vcvtq_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34881:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u16_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34899:24: warning: TODO implement function '__builtin_neon_vcvt_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34897:53: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u16_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34915:23: warning: TODO implement function '__builtin_neon_vcvtaq_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34913:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s16_f16(arg___p0: float16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34931:23: warning: TODO implement function '__builtin_neon_vcvta_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34929:52: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s16_f16(arg___p0: float16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34947:24: warning: TODO implement function '__builtin_neon_vcvtaq_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34945:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u16_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34963:24: warning: TODO implement function '__builtin_neon_vcvta_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34961:53: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u16_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34979:23: warning: TODO implement function '__builtin_neon_vcvtmq_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34977:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s16_f16(arg___p0: float16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34995:23: warning: TODO implement function '__builtin_neon_vcvtm_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34993:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s16_f16(arg___p0: float16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35011:24: warning: TODO implement function '__builtin_neon_vcvtmq_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35009:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u16_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35027:24: warning: TODO implement function '__builtin_neon_vcvtm_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35025:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u16_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35043:23: warning: TODO implement function '__builtin_neon_vcvtnq_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35041:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s16_f16(arg___p0: float16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35059:23: warning: TODO implement function '__builtin_neon_vcvtn_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35057:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s16_f16(arg___p0: float16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35075:24: warning: TODO implement function '__builtin_neon_vcvtnq_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35073:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u16_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35091:24: warning: TODO implement function '__builtin_neon_vcvtn_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35089:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u16_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35107:23: warning: TODO implement function '__builtin_neon_vcvtpq_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35105:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s16_f16(arg___p0: float16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35123:23: warning: TODO implement function '__builtin_neon_vcvtp_s16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35121:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s16_f16(arg___p0: float16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35139:24: warning: TODO implement function '__builtin_neon_vcvtpq_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35137:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u16_f16(arg___p0: float16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35155:24: warning: TODO implement function '__builtin_neon_vcvtp_u16_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35153:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u16_f16(arg___p0: float16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35213:25: warning: TODO implement function '__builtin_neon_vfmaq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35211:54: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35236:25: warning: TODO implement function '__builtin_neon_vfma_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35234:54: warning: unable to translate function, demoted to extern
pub extern fn vfma_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
pub inline fn vfmsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f16(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = vfma_f16(__p0, -__p1, __p2);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35295:25: warning: TODO implement function '__builtin_neon_vmaxq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35293:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35312:25: warning: TODO implement function '__builtin_neon_vmax_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35310:54: warning: unable to translate function, demoted to extern
pub extern fn vmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35329:25: warning: TODO implement function '__builtin_neon_vminq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35327:54: warning: unable to translate function, demoted to extern
pub extern fn vminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35346:25: warning: TODO implement function '__builtin_neon_vmin_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35344:54: warning: unable to translate function, demoted to extern
pub extern fn vmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vmulq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vnegq_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35511:25: warning: TODO implement function '__builtin_neon_vpadd_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35509:54: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35528:25: warning: TODO implement function '__builtin_neon_vpmax_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35526:54: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35545:25: warning: TODO implement function '__builtin_neon_vpmin_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35543:54: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35562:25: warning: TODO implement function '__builtin_neon_vrecpeq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35560:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35578:25: warning: TODO implement function '__builtin_neon_vrecpe_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35576:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35594:25: warning: TODO implement function '__builtin_neon_vrecpsq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35592:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35611:25: warning: TODO implement function '__builtin_neon_vrecps_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35609:54: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vrev64q_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35660:25: warning: TODO implement function '__builtin_neon_vrsqrteq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35658:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35676:25: warning: TODO implement function '__builtin_neon_vrsqrte_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35674:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35692:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35690:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35709:25: warning: TODO implement function '__builtin_neon_vrsqrts_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35707:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vsubq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35760:3: warning: TODO implement function '__builtin_neon_vtrnq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35758:56: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35779:3: warning: TODO implement function '__builtin_neon_vtrn_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35777:56: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35798:3: warning: TODO implement function '__builtin_neon_vuzpq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35796:56: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35817:3: warning: TODO implement function '__builtin_neon_vuzp_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35815:56: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35836:3: warning: TODO implement function '__builtin_neon_vzipq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35834:56: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35855:3: warning: TODO implement function '__builtin_neon_vzip_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35853:56: warning: unable to translate function, demoted to extern
pub extern fn vzip_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35874:24: warning: TODO implement function '__builtin_neon_vmmlaq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35872:49: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35892:23: warning: TODO implement function '__builtin_neon_vmmlaq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35890:48: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35910:23: warning: TODO implement function '__builtin_neon_vusdotq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35908:48: warning: unable to translate function, demoted to extern
pub extern fn vusdotq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35933:23: warning: TODO implement function '__builtin_neon_vusdot_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35931:48: warning: unable to translate function, demoted to extern
pub extern fn vusdot_s32(arg___p0: int32x2_t, arg___p1: uint8x8_t, arg___p2: int8x8_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36008:23: warning: TODO implement function '__builtin_neon_vusmmlaq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36006:48: warning: unable to translate function, demoted to extern
pub extern fn vusmmlaq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36026:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36024:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36049:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36047:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36072:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36070:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36095:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36093:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36214:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36212:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36237:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36235:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36260:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36258:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36283:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36281:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36402:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36400:51: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36419:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36417:51: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36436:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36434:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36453:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36451:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36470:25: warning: TODO implement function '__builtin_neon_vcmlaq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36468:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36493:25: warning: TODO implement function '__builtin_neon_vcmla_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36491:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36628:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36626:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36651:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36649:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36786:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36784:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36809:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36807:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36944:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36942:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36967:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36965:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37102:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37100:60: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37119:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37117:60: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37136:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37134:60: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37153:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37151:60: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37170:25: warning: TODO implement function '__builtin_neon_vcmlaq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37168:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37193:25: warning: TODO implement function '__builtin_neon_vcmla_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37191:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37328:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37326:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37351:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37349:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37486:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37484:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37509:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37507:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37644:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37642:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37667:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37665:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39623:25: warning: TODO implement function '__builtin_neon_vcvt_f16_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39621:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_f32(arg___p0: float32x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39644:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39642:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f16(arg___p0: float16x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40571:23: warning: TODO implement function '__builtin_neon_vcvtaq_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40569:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s32_f32(arg___p0: float32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40587:23: warning: TODO implement function '__builtin_neon_vcvta_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40585:16: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s32_f32(arg___p0: float32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40603:24: warning: TODO implement function '__builtin_neon_vcvtaq_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40601:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u32_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40619:24: warning: TODO implement function '__builtin_neon_vcvta_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40617:17: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u32_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40635:23: warning: TODO implement function '__builtin_neon_vcvtmq_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40633:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s32_f32(arg___p0: float32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40651:23: warning: TODO implement function '__builtin_neon_vcvtm_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40649:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s32_f32(arg___p0: float32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40667:24: warning: TODO implement function '__builtin_neon_vcvtmq_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40665:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u32_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40683:24: warning: TODO implement function '__builtin_neon_vcvtm_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40681:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u32_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40699:23: warning: TODO implement function '__builtin_neon_vcvtnq_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40697:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s32_f32(arg___p0: float32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40715:23: warning: TODO implement function '__builtin_neon_vcvtn_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40713:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s32_f32(arg___p0: float32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40731:24: warning: TODO implement function '__builtin_neon_vcvtnq_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40729:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u32_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40747:24: warning: TODO implement function '__builtin_neon_vcvtn_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40745:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u32_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40763:23: warning: TODO implement function '__builtin_neon_vcvtpq_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40761:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s32_f32(arg___p0: float32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40779:23: warning: TODO implement function '__builtin_neon_vcvtp_s32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40777:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s32_f32(arg___p0: float32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40795:24: warning: TODO implement function '__builtin_neon_vcvtpq_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40793:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u32_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40811:24: warning: TODO implement function '__builtin_neon_vcvtp_u32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40809:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u32_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40827:24: warning: TODO implement function '__builtin_neon_vaesdq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40825:48: warning: unable to translate function, demoted to extern
pub extern fn vaesdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40844:24: warning: TODO implement function '__builtin_neon_vaeseq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40842:48: warning: unable to translate function, demoted to extern
pub extern fn vaeseq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40861:24: warning: TODO implement function '__builtin_neon_vaesimcq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40859:48: warning: unable to translate function, demoted to extern
pub extern fn vaesimcq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40877:24: warning: TODO implement function '__builtin_neon_vaesmcq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40875:48: warning: unable to translate function, demoted to extern
pub extern fn vaesmcq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40893:24: warning: TODO implement function '__builtin_neon_vsha1cq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40891:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1cq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40909:22: warning: TODO implement function '__builtin_neon_vsha1h_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40907:47: warning: unable to translate function, demoted to extern
pub extern fn vsha1h_u32(arg___p0: u32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40915:24: warning: TODO implement function '__builtin_neon_vsha1mq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40913:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1mq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40932:24: warning: TODO implement function '__builtin_neon_vsha1pq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40930:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1pq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40949:24: warning: TODO implement function '__builtin_neon_vsha1su0q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40947:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40967:24: warning: TODO implement function '__builtin_neon_vsha1su1q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40965:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40984:24: warning: TODO implement function '__builtin_neon_vsha256hq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40982:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256hq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41002:24: warning: TODO implement function '__builtin_neon_vsha256h2q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41000:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256h2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41020:24: warning: TODO implement function '__builtin_neon_vsha256su0q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41018:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41037:24: warning: TODO implement function '__builtin_neon_vsha256su1q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41035:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41057:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41055:18: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41073:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41071:18: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41089:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41087:18: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41105:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41103:18: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41121:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41119:18: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41137:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41135:18: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41153:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41151:18: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41169:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41167:18: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41185:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41183:18: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41201:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41199:18: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41216:23: warning: TODO implement function '__builtin_neon_vrndns_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41214:16: warning: unable to translate function, demoted to extern
pub extern fn vrndns_f32(arg___p0: float32_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41222:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41220:18: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41238:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41236:18: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41254:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41252:18: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41270:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41268:18: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41286:25: warning: TODO implement function '__builtin_neon_vrndq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41284:54: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41302:25: warning: TODO implement function '__builtin_neon_vrnd_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41300:54: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41318:25: warning: TODO implement function '__builtin_neon_vrndaq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41316:54: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41334:25: warning: TODO implement function '__builtin_neon_vrnda_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41332:54: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41350:25: warning: TODO implement function '__builtin_neon_vrndmq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41348:54: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41366:25: warning: TODO implement function '__builtin_neon_vrndm_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41364:54: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41382:25: warning: TODO implement function '__builtin_neon_vrndnq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41380:54: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41398:25: warning: TODO implement function '__builtin_neon_vrndn_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41396:54: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41414:25: warning: TODO implement function '__builtin_neon_vrndpq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41412:54: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41430:25: warning: TODO implement function '__builtin_neon_vrndp_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41428:54: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41446:25: warning: TODO implement function '__builtin_neon_vrndxq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41444:54: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41462:25: warning: TODO implement function '__builtin_neon_vrndx_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41460:54: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41480:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41478:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41497:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41495:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41514:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41512:18: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41531:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41529:18: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41548:25: warning: TODO implement function '__builtin_neon_vmaxnmq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41546:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41565:25: warning: TODO implement function '__builtin_neon_vmaxnm_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41563:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41582:25: warning: TODO implement function '__builtin_neon_vminnmq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41580:54: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41599:25: warning: TODO implement function '__builtin_neon_vminnm_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41597:54: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41618:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41616:18: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41641:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41639:18: warning: unable to translate function, demoted to extern
pub extern fn vfma_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
pub inline fn vfmaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, __p2);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41736:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41734:18: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41752:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41750:18: warning: unable to translate function, demoted to extern
pub extern fn vabd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41757:23: warning: TODO implement function '__builtin_neon_vabdd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41755:16: warning: unable to translate function, demoted to extern
pub extern fn vabdd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41762:23: warning: TODO implement function '__builtin_neon_vabds_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41760:16: warning: unable to translate function, demoted to extern
pub extern fn vabds_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41768:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41766:18: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41784:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41782:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s64(arg___p0: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41799:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41797:18: warning: unable to translate function, demoted to extern
pub extern fn vabs_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41804:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41802:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s64(arg___p0: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41809:21: warning: TODO implement function '__builtin_neon_vabsd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41807:14: warning: unable to translate function, demoted to extern
pub extern fn vabsd_s64(arg___p0: i64) i64;
pub inline fn vaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41836:22: warning: TODO implement function '__builtin_neon_vaddd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41834:15: warning: unable to translate function, demoted to extern
pub extern fn vaddd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41841:21: warning: TODO implement function '__builtin_neon_vaddd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41839:14: warning: unable to translate function, demoted to extern
pub extern fn vaddd_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41846:23: warning: TODO implement function '__builtin_neon_vaddq_p128' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41844:16: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p128(arg___p0: poly128_t, arg___p1: poly128_t) poly128_t;
pub inline fn vaddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vaddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vaddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vaddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vaddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vaddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vaddhn_s16(__p1, __p2));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41960:22: warning: TODO implement function '__builtin_neon_vaddlvq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41958:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u8(arg___p0: uint8x16_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41975:22: warning: TODO implement function '__builtin_neon_vaddlvq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41973:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u32(arg___p0: uint32x4_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41990:22: warning: TODO implement function '__builtin_neon_vaddlvq_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:41988:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u16(arg___p0: uint16x8_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42005:21: warning: TODO implement function '__builtin_neon_vaddlvq_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42003:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s8(arg___p0: int8x16_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42020:21: warning: TODO implement function '__builtin_neon_vaddlvq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42018:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s32(arg___p0: int32x4_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42035:21: warning: TODO implement function '__builtin_neon_vaddlvq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42033:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s16(arg___p0: int16x8_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42050:22: warning: TODO implement function '__builtin_neon_vaddlv_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42048:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u8(arg___p0: uint8x8_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42065:22: warning: TODO implement function '__builtin_neon_vaddlv_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42063:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u32(arg___p0: uint32x2_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42080:22: warning: TODO implement function '__builtin_neon_vaddlv_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42078:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u16(arg___p0: uint16x4_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42095:21: warning: TODO implement function '__builtin_neon_vaddlv_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42093:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s8(arg___p0: int8x8_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42110:21: warning: TODO implement function '__builtin_neon_vaddlv_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42108:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s32(arg___p0: int32x2_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42125:21: warning: TODO implement function '__builtin_neon_vaddlv_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42123:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s16(arg___p0: int16x4_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42140:21: warning: TODO implement function '__builtin_neon_vaddvq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42138:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u8(arg___p0: uint8x16_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42155:22: warning: TODO implement function '__builtin_neon_vaddvq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42153:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u32(arg___p0: uint32x4_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42170:22: warning: TODO implement function '__builtin_neon_vaddvq_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42168:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u64(arg___p0: uint64x2_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42185:22: warning: TODO implement function '__builtin_neon_vaddvq_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42183:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u16(arg___p0: uint16x8_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42200:20: warning: TODO implement function '__builtin_neon_vaddvq_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42198:13: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s8(arg___p0: int8x16_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42215:23: warning: TODO implement function '__builtin_neon_vaddvq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42213:16: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42230:23: warning: TODO implement function '__builtin_neon_vaddvq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42228:16: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f32(arg___p0: float32x4_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42245:21: warning: TODO implement function '__builtin_neon_vaddvq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42243:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s32(arg___p0: int32x4_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42260:21: warning: TODO implement function '__builtin_neon_vaddvq_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42258:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s64(arg___p0: int64x2_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42275:21: warning: TODO implement function '__builtin_neon_vaddvq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42273:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s16(arg___p0: int16x8_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42290:21: warning: TODO implement function '__builtin_neon_vaddv_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42288:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u8(arg___p0: uint8x8_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42305:22: warning: TODO implement function '__builtin_neon_vaddv_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42303:15: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u32(arg___p0: uint32x2_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42320:22: warning: TODO implement function '__builtin_neon_vaddv_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42318:15: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u16(arg___p0: uint16x4_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42335:20: warning: TODO implement function '__builtin_neon_vaddv_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42333:13: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s8(arg___p0: int8x8_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42350:23: warning: TODO implement function '__builtin_neon_vaddv_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42348:16: warning: unable to translate function, demoted to extern
pub extern fn vaddv_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42365:21: warning: TODO implement function '__builtin_neon_vaddv_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42363:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s32(arg___p0: int32x2_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42380:21: warning: TODO implement function '__builtin_neon_vaddv_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42378:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s16(arg___p0: int16x4_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42394:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42392:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p64(arg___p0: uint64x1_t, arg___p1: poly64x1_t, arg___p2: poly64x1_t) poly64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42400:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42398:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p64(arg___p0: uint64x2_t, arg___p1: poly64x2_t, arg___p2: poly64x2_t) poly64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42418:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42416:18: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f64(arg___p0: uint64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42435:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42433:18: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f64(arg___p0: uint64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42441:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42439:17: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42457:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42455:17: warning: unable to translate function, demoted to extern
pub extern fn vcage_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42462:22: warning: TODO implement function '__builtin_neon_vcaged_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42460:15: warning: unable to translate function, demoted to extern
pub extern fn vcaged_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42467:22: warning: TODO implement function '__builtin_neon_vcages_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42465:15: warning: unable to translate function, demoted to extern
pub extern fn vcages_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42473:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42471:17: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42489:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42487:17: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42494:22: warning: TODO implement function '__builtin_neon_vcagtd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42492:15: warning: unable to translate function, demoted to extern
pub extern fn vcagtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42499:22: warning: TODO implement function '__builtin_neon_vcagts_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42497:15: warning: unable to translate function, demoted to extern
pub extern fn vcagts_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42505:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42503:17: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42521:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42519:17: warning: unable to translate function, demoted to extern
pub extern fn vcale_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42526:22: warning: TODO implement function '__builtin_neon_vcaled_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42524:15: warning: unable to translate function, demoted to extern
pub extern fn vcaled_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42531:22: warning: TODO implement function '__builtin_neon_vcales_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42529:15: warning: unable to translate function, demoted to extern
pub extern fn vcales_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42537:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42535:17: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42553:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42551:17: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42558:22: warning: TODO implement function '__builtin_neon_vcaltd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42556:15: warning: unable to translate function, demoted to extern
pub extern fn vcaltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42563:22: warning: TODO implement function '__builtin_neon_vcalts_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42561:15: warning: unable to translate function, demoted to extern
pub extern fn vcalts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
pub inline fn vceq_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42656:22: warning: TODO implement function '__builtin_neon_vceqd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42654:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42661:22: warning: TODO implement function '__builtin_neon_vceqd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42659:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42666:22: warning: TODO implement function '__builtin_neon_vceqd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42664:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42671:22: warning: TODO implement function '__builtin_neon_vceqs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42669:15: warning: unable to translate function, demoted to extern
pub extern fn vceqs_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42677:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42675:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p8(arg___p0: poly8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42692:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42690:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p64(arg___p0: poly64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42698:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42696:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p8(arg___p0: poly8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42714:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42712:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p64(arg___p0: poly64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42730:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42728:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42746:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42744:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u32(arg___p0: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42762:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42760:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u64(arg___p0: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42778:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42776:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u16(arg___p0: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42794:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42792:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s8(arg___p0: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42810:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42808:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42826:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42824:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42842:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42840:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s32(arg___p0: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42858:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42856:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s64(arg___p0: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42874:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42872:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s16(arg___p0: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42890:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42888:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u8(arg___p0: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42906:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42904:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u32(arg___p0: uint32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42921:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42919:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u64(arg___p0: uint64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42927:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42925:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u16(arg___p0: uint16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42943:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42941:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s8(arg___p0: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42958:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42956:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42964:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42962:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42980:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42978:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s32(arg___p0: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42995:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42993:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s64(arg___p0: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43001:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:42999:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s16(arg___p0: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43016:22: warning: TODO implement function '__builtin_neon_vceqzd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43014:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_u64(arg___p0: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43021:22: warning: TODO implement function '__builtin_neon_vceqzd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43019:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_s64(arg___p0: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43026:22: warning: TODO implement function '__builtin_neon_vceqzd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43024:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43031:22: warning: TODO implement function '__builtin_neon_vceqzs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43029:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzs_f32(arg___p0: float32_t) u32;
pub inline fn vcgeq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43102:22: warning: TODO implement function '__builtin_neon_vcged_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43100:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43107:22: warning: TODO implement function '__builtin_neon_vcged_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43105:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43112:22: warning: TODO implement function '__builtin_neon_vcged_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43110:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43117:22: warning: TODO implement function '__builtin_neon_vcges_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43115:15: warning: unable to translate function, demoted to extern
pub extern fn vcges_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43123:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43121:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s8(arg___p0: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43139:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43137:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43155:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43153:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43171:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43169:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s32(arg___p0: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43187:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43185:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s64(arg___p0: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43203:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43201:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s16(arg___p0: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43219:23: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43217:16: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s8(arg___p0: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43234:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43232:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43240:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43238:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43256:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43254:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s32(arg___p0: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43271:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43269:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s64(arg___p0: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43277:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43275:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s16(arg___p0: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43292:22: warning: TODO implement function '__builtin_neon_vcgezd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43290:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_s64(arg___p0: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43297:22: warning: TODO implement function '__builtin_neon_vcgezd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43295:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43302:22: warning: TODO implement function '__builtin_neon_vcgezs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43300:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezs_f32(arg___p0: float32_t) u32;
pub inline fn vcgtq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43373:22: warning: TODO implement function '__builtin_neon_vcgtd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43371:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43378:22: warning: TODO implement function '__builtin_neon_vcgtd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43376:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43383:22: warning: TODO implement function '__builtin_neon_vcgtd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43381:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43388:22: warning: TODO implement function '__builtin_neon_vcgts_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43386:15: warning: unable to translate function, demoted to extern
pub extern fn vcgts_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43394:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43392:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s8(arg___p0: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43410:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43408:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43426:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43424:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43442:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43440:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s32(arg___p0: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43458:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43456:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s64(arg___p0: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43474:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43472:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s16(arg___p0: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43490:23: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43488:16: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s8(arg___p0: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43505:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43503:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43511:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43509:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43527:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43525:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s32(arg___p0: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43542:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43540:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s64(arg___p0: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43548:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43546:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s16(arg___p0: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43563:22: warning: TODO implement function '__builtin_neon_vcgtzd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43561:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_s64(arg___p0: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43568:22: warning: TODO implement function '__builtin_neon_vcgtzd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43566:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43573:22: warning: TODO implement function '__builtin_neon_vcgtzs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43571:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzs_f32(arg___p0: float32_t) u32;
pub inline fn vcleq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43644:22: warning: TODO implement function '__builtin_neon_vcled_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43642:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43649:22: warning: TODO implement function '__builtin_neon_vcled_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43647:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43654:22: warning: TODO implement function '__builtin_neon_vcled_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43652:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43659:22: warning: TODO implement function '__builtin_neon_vcles_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43657:15: warning: unable to translate function, demoted to extern
pub extern fn vcles_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43665:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43663:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s8(arg___p0: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43681:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43679:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43697:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43695:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43713:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43711:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s32(arg___p0: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43729:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43727:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s64(arg___p0: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43745:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43743:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s16(arg___p0: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43761:23: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43759:16: warning: unable to translate function, demoted to extern
pub extern fn vclez_s8(arg___p0: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43776:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43774:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43782:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43780:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43798:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43796:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s32(arg___p0: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43813:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43811:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s64(arg___p0: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43819:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43817:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s16(arg___p0: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43834:22: warning: TODO implement function '__builtin_neon_vclezd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43832:15: warning: unable to translate function, demoted to extern
pub extern fn vclezd_s64(arg___p0: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43839:22: warning: TODO implement function '__builtin_neon_vclezd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43837:15: warning: unable to translate function, demoted to extern
pub extern fn vclezd_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43844:22: warning: TODO implement function '__builtin_neon_vclezs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43842:15: warning: unable to translate function, demoted to extern
pub extern fn vclezs_f32(arg___p0: float32_t) u32;
pub inline fn vcltq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43915:22: warning: TODO implement function '__builtin_neon_vcltd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43913:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43920:22: warning: TODO implement function '__builtin_neon_vcltd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43918:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43925:22: warning: TODO implement function '__builtin_neon_vcltd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43923:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43930:22: warning: TODO implement function '__builtin_neon_vclts_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43928:15: warning: unable to translate function, demoted to extern
pub extern fn vclts_f32(arg___p0: float32_t, arg___p1: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43936:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43934:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s8(arg___p0: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43952:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43950:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43968:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43966:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f32(arg___p0: float32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43984:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43982:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s32(arg___p0: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44000:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:43998:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s64(arg___p0: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44016:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44014:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s16(arg___p0: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44032:23: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44030:16: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s8(arg___p0: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44047:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44045:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44053:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44051:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f32(arg___p0: float32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44069:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44067:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s32(arg___p0: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44084:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44082:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s64(arg___p0: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44090:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44088:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s16(arg___p0: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44105:22: warning: TODO implement function '__builtin_neon_vcltzd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44103:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_s64(arg___p0: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44110:22: warning: TODO implement function '__builtin_neon_vcltzd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44108:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44115:22: warning: TODO implement function '__builtin_neon_vcltzs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44113:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzs_f32(arg___p0: float32_t) u32;
pub inline fn vcombine_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45052:23: warning: TODO implement function '__builtin_neon_vcvts_f32_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45050:16: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_s32(arg___p0: i32) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45057:23: warning: TODO implement function '__builtin_neon_vcvts_f32_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45055:16: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_u32(arg___p0: u32) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45063:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45061:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f64(arg___p0: float64x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45083:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45081:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_s64(arg___p0: i64) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45088:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45086:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_u64(arg___p0: u64) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45094:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45092:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_u64(arg___p0: uint64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45110:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45108:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_s64(arg___p0: int64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45125:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45123:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_u64(arg___p0: uint64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45130:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45128:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_s64(arg___p0: int64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45136:25: warning: TODO implement function '__builtin_neon_vcvt_f64_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45134:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_f32(arg___p0: float32x2_t) float64x2_t;
pub inline fn vcvt_high_f16_f32(arg___p0: float16x4_t, arg___p1: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_f16(__p0, vcvt_f16_f32(__p1));
    return __ret;
}
pub inline fn vcvt_high_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_f16(vget_high_f16(__p0));
    return __ret;
}
pub inline fn vcvt_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvt_f32_f64(__p1));
    return __ret;
}
pub inline fn vcvt_high_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vcvt_f64_f32(vget_high_f32(__p0));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45366:21: warning: TODO implement function '__builtin_neon_vcvts_s32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45364:14: warning: unable to translate function, demoted to extern
pub extern fn vcvts_s32_f32(arg___p0: float32_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45371:21: warning: TODO implement function '__builtin_neon_vcvtd_s64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45369:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_s64_f64(arg___p0: float64_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45377:23: warning: TODO implement function '__builtin_neon_vcvtq_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45375:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s64_f64(arg___p0: float64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45392:23: warning: TODO implement function '__builtin_neon_vcvt_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45390:16: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s64_f64(arg___p0: float64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45397:22: warning: TODO implement function '__builtin_neon_vcvts_u32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45395:15: warning: unable to translate function, demoted to extern
pub extern fn vcvts_u32_f32(arg___p0: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45402:22: warning: TODO implement function '__builtin_neon_vcvtd_u64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45400:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_u64_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45408:24: warning: TODO implement function '__builtin_neon_vcvtq_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45406:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u64_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45423:24: warning: TODO implement function '__builtin_neon_vcvt_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45421:17: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u64_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45428:21: warning: TODO implement function '__builtin_neon_vcvtas_s32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45426:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_s32_f32(arg___p0: float32_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45434:23: warning: TODO implement function '__builtin_neon_vcvtaq_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45432:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s64_f64(arg___p0: float64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45449:23: warning: TODO implement function '__builtin_neon_vcvta_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45447:16: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s64_f64(arg___p0: float64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45454:21: warning: TODO implement function '__builtin_neon_vcvtad_s64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45452:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_s64_f64(arg___p0: float64_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45459:22: warning: TODO implement function '__builtin_neon_vcvtas_u32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45457:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_u32_f32(arg___p0: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45465:24: warning: TODO implement function '__builtin_neon_vcvtaq_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45463:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u64_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45480:24: warning: TODO implement function '__builtin_neon_vcvta_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45478:17: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u64_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45485:22: warning: TODO implement function '__builtin_neon_vcvtad_u64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45483:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_u64_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45490:21: warning: TODO implement function '__builtin_neon_vcvtms_s32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45488:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_s32_f32(arg___p0: float32_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45496:23: warning: TODO implement function '__builtin_neon_vcvtmq_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45494:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s64_f64(arg___p0: float64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45511:23: warning: TODO implement function '__builtin_neon_vcvtm_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45509:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s64_f64(arg___p0: float64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45516:21: warning: TODO implement function '__builtin_neon_vcvtmd_s64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45514:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_s64_f64(arg___p0: float64_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45521:22: warning: TODO implement function '__builtin_neon_vcvtms_u32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45519:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_u32_f32(arg___p0: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45527:24: warning: TODO implement function '__builtin_neon_vcvtmq_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45525:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u64_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45542:24: warning: TODO implement function '__builtin_neon_vcvtm_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45540:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u64_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45547:22: warning: TODO implement function '__builtin_neon_vcvtmd_u64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45545:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_u64_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45552:21: warning: TODO implement function '__builtin_neon_vcvtns_s32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45550:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_s32_f32(arg___p0: float32_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45558:23: warning: TODO implement function '__builtin_neon_vcvtnq_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45556:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s64_f64(arg___p0: float64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45573:23: warning: TODO implement function '__builtin_neon_vcvtn_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45571:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s64_f64(arg___p0: float64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45578:21: warning: TODO implement function '__builtin_neon_vcvtnd_s64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45576:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_s64_f64(arg___p0: float64_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45583:22: warning: TODO implement function '__builtin_neon_vcvtns_u32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45581:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_u32_f32(arg___p0: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45589:24: warning: TODO implement function '__builtin_neon_vcvtnq_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45587:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u64_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45604:24: warning: TODO implement function '__builtin_neon_vcvtn_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45602:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u64_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45609:22: warning: TODO implement function '__builtin_neon_vcvtnd_u64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45607:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_u64_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45614:21: warning: TODO implement function '__builtin_neon_vcvtps_s32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45612:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_s32_f32(arg___p0: float32_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45620:23: warning: TODO implement function '__builtin_neon_vcvtpq_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45618:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s64_f64(arg___p0: float64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45635:23: warning: TODO implement function '__builtin_neon_vcvtp_s64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45633:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s64_f64(arg___p0: float64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45640:21: warning: TODO implement function '__builtin_neon_vcvtpd_s64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45638:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_s64_f64(arg___p0: float64_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45645:22: warning: TODO implement function '__builtin_neon_vcvtps_u32_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45643:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_u32_f32(arg___p0: float32_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45651:24: warning: TODO implement function '__builtin_neon_vcvtpq_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45649:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u64_f64(arg___p0: float64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45666:24: warning: TODO implement function '__builtin_neon_vcvtp_u64_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45664:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u64_f64(arg___p0: float64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45671:22: warning: TODO implement function '__builtin_neon_vcvtpd_u64_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45669:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_u64_f64(arg___p0: float64_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45676:23: warning: TODO implement function '__builtin_neon_vcvtxd_f32_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45674:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtxd_f32_f64(arg___p0: float64_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45682:25: warning: TODO implement function '__builtin_neon_vcvtx_f32_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45680:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtx_f32_f64(arg___p0: float64x2_t) float32x2_t;
pub inline fn vcvtx_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvtx_f32_f64(__p1));
    return __ret;
}
pub inline fn vdivq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdivq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdup_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46793:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46791:18: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46815:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46813:18: warning: unable to translate function, demoted to extern
pub extern fn vfma_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
pub inline fn vfmaq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, __p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfmsq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vget_high_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48842:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48840:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48858:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48856:18: warning: unable to translate function, demoted to extern
pub extern fn vmax_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48864:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48862:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48879:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48877:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f32(arg___p0: float32x4_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48894:23: warning: TODO implement function '__builtin_neon_vmaxnmv_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48892:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmv_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48909:21: warning: TODO implement function '__builtin_neon_vmaxvq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48907:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u8(arg___p0: uint8x16_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48924:22: warning: TODO implement function '__builtin_neon_vmaxvq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48922:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u32(arg___p0: uint32x4_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48939:22: warning: TODO implement function '__builtin_neon_vmaxvq_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48937:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u16(arg___p0: uint16x8_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48954:20: warning: TODO implement function '__builtin_neon_vmaxvq_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48952:13: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s8(arg___p0: int8x16_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48969:23: warning: TODO implement function '__builtin_neon_vmaxvq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48967:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48984:23: warning: TODO implement function '__builtin_neon_vmaxvq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48982:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f32(arg___p0: float32x4_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48999:21: warning: TODO implement function '__builtin_neon_vmaxvq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48997:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s32(arg___p0: int32x4_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49014:21: warning: TODO implement function '__builtin_neon_vmaxvq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49012:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s16(arg___p0: int16x8_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49029:21: warning: TODO implement function '__builtin_neon_vmaxv_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49027:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u8(arg___p0: uint8x8_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49044:22: warning: TODO implement function '__builtin_neon_vmaxv_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49042:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u32(arg___p0: uint32x2_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49059:22: warning: TODO implement function '__builtin_neon_vmaxv_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49057:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u16(arg___p0: uint16x4_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49074:20: warning: TODO implement function '__builtin_neon_vmaxv_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49072:13: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s8(arg___p0: int8x8_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49089:23: warning: TODO implement function '__builtin_neon_vmaxv_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49087:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49104:21: warning: TODO implement function '__builtin_neon_vmaxv_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49102:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s32(arg___p0: int32x2_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49119:21: warning: TODO implement function '__builtin_neon_vmaxv_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49117:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s16(arg___p0: int16x4_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49134:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49132:18: warning: unable to translate function, demoted to extern
pub extern fn vminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49150:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49148:18: warning: unable to translate function, demoted to extern
pub extern fn vmin_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49156:23: warning: TODO implement function '__builtin_neon_vminnmvq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49154:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49171:23: warning: TODO implement function '__builtin_neon_vminnmvq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49169:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f32(arg___p0: float32x4_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49186:23: warning: TODO implement function '__builtin_neon_vminnmv_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49184:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmv_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49201:21: warning: TODO implement function '__builtin_neon_vminvq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49199:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u8(arg___p0: uint8x16_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49216:22: warning: TODO implement function '__builtin_neon_vminvq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49214:15: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u32(arg___p0: uint32x4_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49231:22: warning: TODO implement function '__builtin_neon_vminvq_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49229:15: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u16(arg___p0: uint16x8_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49246:20: warning: TODO implement function '__builtin_neon_vminvq_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49244:13: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s8(arg___p0: int8x16_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49261:23: warning: TODO implement function '__builtin_neon_vminvq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49259:16: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49276:23: warning: TODO implement function '__builtin_neon_vminvq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49274:16: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f32(arg___p0: float32x4_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49291:21: warning: TODO implement function '__builtin_neon_vminvq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49289:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s32(arg___p0: int32x4_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49306:21: warning: TODO implement function '__builtin_neon_vminvq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49304:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s16(arg___p0: int16x8_t) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49321:21: warning: TODO implement function '__builtin_neon_vminv_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49319:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_u8(arg___p0: uint8x8_t) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49336:22: warning: TODO implement function '__builtin_neon_vminv_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49334:15: warning: unable to translate function, demoted to extern
pub extern fn vminv_u32(arg___p0: uint32x2_t) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49351:22: warning: TODO implement function '__builtin_neon_vminv_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49349:15: warning: unable to translate function, demoted to extern
pub extern fn vminv_u16(arg___p0: uint16x4_t) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49366:20: warning: TODO implement function '__builtin_neon_vminv_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49364:13: warning: unable to translate function, demoted to extern
pub extern fn vminv_s8(arg___p0: int8x8_t) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49381:23: warning: TODO implement function '__builtin_neon_vminv_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49379:16: warning: unable to translate function, demoted to extern
pub extern fn vminv_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49396:21: warning: TODO implement function '__builtin_neon_vminv_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49394:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_s32(arg___p0: int32x2_t) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49411:21: warning: TODO implement function '__builtin_neon_vminv_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49409:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_s16(arg___p0: int16x4_t) i16;
pub inline fn vmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmov_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25109:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50566:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u8(arg___p0_515: uint8x16_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25133:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50590:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u32(arg___p0_518: uint32x4_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25157:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50614:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u16(arg___p0_521: uint16x8_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25181:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50638:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s8(arg___p0_524: int8x16_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25205:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50662:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s32(arg___p0_527: int32x4_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25229:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50686:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s16(arg___p0_530: int16x8_t) int32x4_t;
pub inline fn vmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vmovn_u32(__p1));
    return __ret;
}
pub inline fn vmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vmovn_u64(__p1));
    return __ret;
}
pub inline fn vmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vmovn_u16(__p1));
    return __ret;
}
pub inline fn vmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vmovn_s32(__p1));
    return __ret;
}
pub inline fn vmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vmovn_s64(__p1));
    return __ret;
}
pub inline fn vmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vmovn_s16(__p1));
    return __ret;
}
pub inline fn vmulq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51176:25: warning: TODO implement function '__builtin_neon_vmul_n_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51174:18: warning: unable to translate function, demoted to extern
pub extern fn vmul_n_f64(arg___p0: float64x1_t, arg___p1: float64_t) float64x1_t;
pub inline fn vmulq_n_f64(arg___p0: float64x2_t, arg___p1: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_high_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_p8(vget_high_p8(__p0), vget_high_p8(__p1));
    return __ret;
}
pub inline fn vmull_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vmull_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vmull_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vmull_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vmull_high_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u32(vget_high_u32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u16(vget_high_u16(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51633:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51631:18: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51655:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51653:18: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51676:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51674:18: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51682:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51680:18: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51703:23: warning: TODO implement function '__builtin_neon_vmulxd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51701:16: warning: unable to translate function, demoted to extern
pub extern fn vmulxd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51708:23: warning: TODO implement function '__builtin_neon_vmulxs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51706:16: warning: unable to translate function, demoted to extern
pub extern fn vmulxs_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vnegq_f64(arg___p0: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s64(arg___p0: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f64(arg___p0: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s64(arg___p0: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51944:21: warning: TODO implement function '__builtin_neon_vnegd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51942:14: warning: unable to translate function, demoted to extern
pub extern fn vnegd_s64(arg___p0: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51950:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51948:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51967:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51965:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51984:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51982:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52001:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51999:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52018:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52016:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52035:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52033:18: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52052:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52050:18: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52069:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52067:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52086:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52084:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52103:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52101:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52120:22: warning: TODO implement function '__builtin_neon_vpaddd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52118:15: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_u64(arg___p0: uint64x2_t) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52135:23: warning: TODO implement function '__builtin_neon_vpaddd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52133:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52150:21: warning: TODO implement function '__builtin_neon_vpaddd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52148:14: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_s64(arg___p0: int64x2_t) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52165:23: warning: TODO implement function '__builtin_neon_vpadds_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52163:16: warning: unable to translate function, demoted to extern
pub extern fn vpadds_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52180:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52178:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52197:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52195:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52214:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52212:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52231:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52229:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52248:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52246:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52265:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52263:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52282:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52280:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52299:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52297:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52316:23: warning: TODO implement function '__builtin_neon_vpmaxqd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52314:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxqd_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52331:23: warning: TODO implement function '__builtin_neon_vpmaxs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52329:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxs_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52346:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52344:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52363:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52361:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52380:25: warning: TODO implement function '__builtin_neon_vpmaxnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52378:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52397:23: warning: TODO implement function '__builtin_neon_vpmaxnmqd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52395:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmqd_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52412:23: warning: TODO implement function '__builtin_neon_vpmaxnms_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52410:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnms_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52427:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52425:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52444:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52442:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52461:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52459:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52478:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52476:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52495:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52493:18: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52512:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52510:18: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52529:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52527:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52546:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52544:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52563:23: warning: TODO implement function '__builtin_neon_vpminqd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52561:16: warning: unable to translate function, demoted to extern
pub extern fn vpminqd_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52578:23: warning: TODO implement function '__builtin_neon_vpmins_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52576:16: warning: unable to translate function, demoted to extern
pub extern fn vpmins_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52593:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52591:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52610:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52608:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52627:25: warning: TODO implement function '__builtin_neon_vpminnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52625:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52644:23: warning: TODO implement function '__builtin_neon_vpminnmqd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52642:16: warning: unable to translate function, demoted to extern
pub extern fn vpminnmqd_f64(arg___p0: float64x2_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52659:23: warning: TODO implement function '__builtin_neon_vpminnms_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52657:16: warning: unable to translate function, demoted to extern
pub extern fn vpminnms_f32(arg___p0: float32x2_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52674:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52672:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s64(arg___p0: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52689:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52687:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s64(arg___p0: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52694:20: warning: TODO implement function '__builtin_neon_vqabsb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52692:13: warning: unable to translate function, demoted to extern
pub extern fn vqabsb_s8(arg___p0: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52699:21: warning: TODO implement function '__builtin_neon_vqabss_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52697:14: warning: unable to translate function, demoted to extern
pub extern fn vqabss_s32(arg___p0: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52704:21: warning: TODO implement function '__builtin_neon_vqabsd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52702:14: warning: unable to translate function, demoted to extern
pub extern fn vqabsd_s64(arg___p0: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52709:21: warning: TODO implement function '__builtin_neon_vqabsh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52707:14: warning: unable to translate function, demoted to extern
pub extern fn vqabsh_s16(arg___p0: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52714:21: warning: TODO implement function '__builtin_neon_vqaddb_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52712:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_u8(arg___p0: u8, arg___p1: u8) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52719:22: warning: TODO implement function '__builtin_neon_vqadds_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52717:15: warning: unable to translate function, demoted to extern
pub extern fn vqadds_u32(arg___p0: u32, arg___p1: u32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52724:22: warning: TODO implement function '__builtin_neon_vqaddd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52722:15: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52729:22: warning: TODO implement function '__builtin_neon_vqaddh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52727:15: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_u16(arg___p0: u16, arg___p1: u16) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52734:20: warning: TODO implement function '__builtin_neon_vqaddb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52732:13: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_s8(arg___p0: i8, arg___p1: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52739:21: warning: TODO implement function '__builtin_neon_vqadds_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52737:14: warning: unable to translate function, demoted to extern
pub extern fn vqadds_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52744:21: warning: TODO implement function '__builtin_neon_vqaddd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52742:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52749:21: warning: TODO implement function '__builtin_neon_vqaddh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52747:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52754:21: warning: TODO implement function '__builtin_neon_vqdmlals_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52752:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlals_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52759:21: warning: TODO implement function '__builtin_neon_vqdmlalh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52757:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlalh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53062:21: warning: TODO implement function '__builtin_neon_vqdmlsls_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53060:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsls_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53067:21: warning: TODO implement function '__builtin_neon_vqdmlslh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53065:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlslh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53370:21: warning: TODO implement function '__builtin_neon_vqdmulhs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53368:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhs_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53375:21: warning: TODO implement function '__builtin_neon_vqdmulhh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53373:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53624:21: warning: TODO implement function '__builtin_neon_vqdmulls_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53622:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulls_s32(arg___p0: i32, arg___p1: i32) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53629:21: warning: TODO implement function '__builtin_neon_vqdmullh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53627:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmullh_s16(arg___p0: i16, arg___p1: i16) i32;
pub inline fn vqdmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vqdmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vqdmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vqdmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53902:21: warning: TODO implement function '__builtin_neon_vqmovns_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53900:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_s32(arg___p0: i32) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53907:21: warning: TODO implement function '__builtin_neon_vqmovnd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53905:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_s64(arg___p0: i64) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53912:20: warning: TODO implement function '__builtin_neon_vqmovnh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53910:13: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_s16(arg___p0: i16) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53917:22: warning: TODO implement function '__builtin_neon_vqmovns_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53915:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_u32(arg___p0: u32) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53922:22: warning: TODO implement function '__builtin_neon_vqmovnd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53920:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_u64(arg___p0: u64) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53927:21: warning: TODO implement function '__builtin_neon_vqmovnh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53925:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_u16(arg___p0: u16) u8;
pub inline fn vqmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovn_u32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovn_u64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovn_u16(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vqmovn_s32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vqmovn_s64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vqmovn_s16(__p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54034:22: warning: TODO implement function '__builtin_neon_vqmovuns_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54032:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovuns_s32(arg___p0: i32) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54039:22: warning: TODO implement function '__builtin_neon_vqmovund_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54037:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovund_s64(arg___p0: i64) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54044:21: warning: TODO implement function '__builtin_neon_vqmovunh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54042:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovunh_s16(arg___p0: i16) u8;
pub inline fn vqmovun_high_s32(arg___p0: uint16x4_t, arg___p1: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovun_s32(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s64(arg___p0: uint32x2_t, arg___p1: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovun_s64(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s16(arg___p0: uint8x8_t, arg___p1: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovun_s16(__p1));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54101:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54099:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s64(arg___p0: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54116:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54114:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s64(arg___p0: int64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54121:20: warning: TODO implement function '__builtin_neon_vqnegb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54119:13: warning: unable to translate function, demoted to extern
pub extern fn vqnegb_s8(arg___p0: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54126:21: warning: TODO implement function '__builtin_neon_vqnegs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54124:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegs_s32(arg___p0: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54131:21: warning: TODO implement function '__builtin_neon_vqnegd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54129:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegd_s64(arg___p0: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54136:21: warning: TODO implement function '__builtin_neon_vqnegh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54134:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegh_s16(arg___p0: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54141:21: warning: TODO implement function '__builtin_neon_vqrdmulhs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54139:14: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhs_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54146:21: warning: TODO implement function '__builtin_neon_vqrdmulhh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54144:14: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54395:21: warning: TODO implement function '__builtin_neon_vqrshlb_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54393:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_u8(arg___p0: u8, arg___p1: i8) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54400:22: warning: TODO implement function '__builtin_neon_vqrshls_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54398:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_u32(arg___p0: u32, arg___p1: i32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54405:22: warning: TODO implement function '__builtin_neon_vqrshld_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54403:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_u64(arg___p0: u64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54410:22: warning: TODO implement function '__builtin_neon_vqrshlh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54408:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_u16(arg___p0: u16, arg___p1: i16) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54415:20: warning: TODO implement function '__builtin_neon_vqrshlb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54413:13: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_s8(arg___p0: i8, arg___p1: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54420:21: warning: TODO implement function '__builtin_neon_vqrshls_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54418:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54425:21: warning: TODO implement function '__builtin_neon_vqrshld_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54423:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54430:21: warning: TODO implement function '__builtin_neon_vqrshlh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54428:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54678:21: warning: TODO implement function '__builtin_neon_vqshlb_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54676:14: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_u8(arg___p0: u8, arg___p1: i8) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54683:22: warning: TODO implement function '__builtin_neon_vqshls_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54681:15: warning: unable to translate function, demoted to extern
pub extern fn vqshls_u32(arg___p0: u32, arg___p1: i32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54688:22: warning: TODO implement function '__builtin_neon_vqshld_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54686:15: warning: unable to translate function, demoted to extern
pub extern fn vqshld_u64(arg___p0: u64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54693:22: warning: TODO implement function '__builtin_neon_vqshlh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54691:15: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_u16(arg___p0: u16, arg___p1: i16) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54698:20: warning: TODO implement function '__builtin_neon_vqshlb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54696:13: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_s8(arg___p0: i8, arg___p1: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54703:21: warning: TODO implement function '__builtin_neon_vqshls_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54701:14: warning: unable to translate function, demoted to extern
pub extern fn vqshls_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54708:21: warning: TODO implement function '__builtin_neon_vqshld_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54706:14: warning: unable to translate function, demoted to extern
pub extern fn vqshld_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54713:21: warning: TODO implement function '__builtin_neon_vqshlh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54711:14: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55033:21: warning: TODO implement function '__builtin_neon_vqsubb_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55031:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_u8(arg___p0: u8, arg___p1: u8) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55038:22: warning: TODO implement function '__builtin_neon_vqsubs_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55036:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_u32(arg___p0: u32, arg___p1: u32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55043:22: warning: TODO implement function '__builtin_neon_vqsubd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55041:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55048:22: warning: TODO implement function '__builtin_neon_vqsubh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55046:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_u16(arg___p0: u16, arg___p1: u16) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55053:20: warning: TODO implement function '__builtin_neon_vqsubb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55051:13: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_s8(arg___p0: i8, arg___p1: i8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55058:21: warning: TODO implement function '__builtin_neon_vqsubs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55056:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_s32(arg___p0: i32, arg___p1: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55063:21: warning: TODO implement function '__builtin_neon_vqsubd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55061:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55068:21: warning: TODO implement function '__builtin_neon_vqsubh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55066:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_s16(arg___p0: i16, arg___p1: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55074:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55072:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_p8(arg___p0: poly8x16_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55091:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55089:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_p8(arg___p0: poly8x16_t, arg___p1: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55108:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55106:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55125:23: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55123:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55142:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55140:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_u8(arg___p0: uint8x16_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55159:22: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55157:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_s8(arg___p0: int8x16_t, arg___p1: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55176:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55174:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55195:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55193:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55214:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55212:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55233:23: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55231:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_s8(arg___p0: int8x16x2_t, arg___p1: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55252:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55250:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55271:22: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55269:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_s8(arg___p0: int8x16x2_t, arg___p1: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55290:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55288:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55310:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55308:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55330:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55328:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55350:23: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55348:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_s8(arg___p0: int8x16x3_t, arg___p1: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55370:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55368:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55390:22: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55388:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_s8(arg___p0: int8x16x3_t, arg___p1: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55410:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55408:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55431:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55429:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55452:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55450:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55473:23: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55471:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_s8(arg___p0: int8x16x4_t, arg___p1: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55494:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55492:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55515:22: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55513:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_s8(arg___p0: int8x16x4_t, arg___p1: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55536:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55534:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x16_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55554:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55552:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t, arg___p2: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55572:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55570:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55590:23: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55588:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55608:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55606:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x16_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55626:22: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55624:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x16_t, arg___p2: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55644:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55642:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x2_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55664:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55662:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x2_t, arg___p2: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55684:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55682:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x2_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55704:23: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55702:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_s8(arg___p0: int8x16_t, arg___p1: int8x16x2_t, arg___p2: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55724:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55722:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x2_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55744:22: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55742:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x16x2_t, arg___p2: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55764:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55762:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x3_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55785:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55783:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x3_t, arg___p2: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55806:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55804:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x3_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55827:23: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55825:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_s8(arg___p0: int8x16_t, arg___p1: int8x16x3_t, arg___p2: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55848:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55846:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x3_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55869:22: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55867:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x16x3_t, arg___p2: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55890:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55888:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x4_t, arg___p2: uint8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55912:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55910:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x4_t, arg___p2: uint8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55934:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55932:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x4_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55956:23: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55954:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_s8(arg___p0: int8x16_t, arg___p1: int8x16x4_t, arg___p2: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55978:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55976:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x4_t, arg___p2: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56000:22: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55998:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x16x4_t, arg___p2: uint8x8_t) int8x8_t;
pub inline fn vraddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vraddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vraddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vraddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vraddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vraddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vraddhn_s16(__p1, __p2));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56130:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56128:16: warning: unable to translate function, demoted to extern
pub extern fn vrbit_p8(arg___p0: poly8x8_t) poly8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56146:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56144:17: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_p8(arg___p0: poly8x16_t) poly8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56162:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56160:17: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_u8(arg___p0: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56178:23: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56176:16: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_s8(arg___p0: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56194:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56192:16: warning: unable to translate function, demoted to extern
pub extern fn vrbit_u8(arg___p0: uint8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56210:22: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56208:15: warning: unable to translate function, demoted to extern
pub extern fn vrbit_s8(arg___p0: int8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56226:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56224:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56241:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56239:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56246:23: warning: TODO implement function '__builtin_neon_vrecped_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56244:16: warning: unable to translate function, demoted to extern
pub extern fn vrecped_f64(arg___p0: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56251:23: warning: TODO implement function '__builtin_neon_vrecpes_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56249:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpes_f32(arg___p0: float32_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56257:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56255:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56273:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56271:18: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56278:23: warning: TODO implement function '__builtin_neon_vrecpsd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56276:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56283:23: warning: TODO implement function '__builtin_neon_vrecpss_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56281:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56288:23: warning: TODO implement function '__builtin_neon_vrecpxd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56286:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpxd_f64(arg___p0: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56293:23: warning: TODO implement function '__builtin_neon_vrecpxs_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:56291:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpxs_f32(arg___p0: float32_t) float32_t;
pub inline fn vreinterpret_p8_p64(arg___p0: poly64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_p16(arg___p0: poly16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u8(arg___p0: uint8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u32(arg___p0: uint32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u64(arg___p0: uint64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u16(arg___p0: uint16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s8(arg___p0: int8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f64(arg___p0: float64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f32(arg___p0: float32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f16(arg___p0: float16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s32(arg___p0: int32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s64(arg___p0: int64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s16(arg___p0: int16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p8(arg___p0: poly8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p16(arg___p0: poly16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u8(arg___p0: uint8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u32(arg___p0: uint32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u64(arg___p0: uint64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u16(arg___p0: uint16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s8(arg___p0: int8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f64(arg___p0: float64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f32(arg___p0: float32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f16(arg___p0: float16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s32(arg___p0: int32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s64(arg___p0: int64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s16(arg___p0: int16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p8(arg___p0: poly8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p64(arg___p0: poly64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u8(arg___p0: uint8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u32(arg___p0: uint32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u64(arg___p0: uint64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u16(arg___p0: uint16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s8(arg___p0: int8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f64(arg___p0: float64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f32(arg___p0: float32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f16(arg___p0: float16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s32(arg___p0: int32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s64(arg___p0: int64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s16(arg___p0: int16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p128(arg___p0: poly128_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p64(arg___p0: poly64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p16(arg___p0: poly16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u8(arg___p0: uint8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u32(arg___p0: uint32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u64(arg___p0: uint64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u16(arg___p0: uint16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s8(arg___p0: int8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f64(arg___p0: float64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f32(arg___p0: float32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f16(arg___p0: float16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s32(arg___p0: int32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s64(arg___p0: int64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s16(arg___p0: int16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p8(arg___p0: poly8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p64(arg___p0: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p16(arg___p0: poly16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u8(arg___p0: uint8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u32(arg___p0: uint32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u64(arg___p0: uint64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u16(arg___p0: uint16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s8(arg___p0: int8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f64(arg___p0: float64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f32(arg___p0: float32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f16(arg___p0: float16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s32(arg___p0: int32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s64(arg___p0: int64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s16(arg___p0: int16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p8(arg___p0: poly8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p128(arg___p0: poly128_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p16(arg___p0: poly16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u8(arg___p0: uint8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u32(arg___p0: uint32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u64(arg___p0: uint64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u16(arg___p0: uint16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s8(arg___p0: int8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f64(arg___p0: float64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f32(arg___p0: float32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f16(arg___p0: float16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s32(arg___p0: int32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s64(arg___p0: int64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s16(arg___p0: int16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p8(arg___p0: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p128(arg___p0: poly128_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p64(arg___p0: poly64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u8(arg___p0: uint8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u32(arg___p0: uint32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u64(arg___p0: uint64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u16(arg___p0: uint16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s8(arg___p0: int8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f64(arg___p0: float64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f32(arg___p0: float32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f16(arg___p0: float16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s32(arg___p0: int32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s64(arg___p0: int64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s16(arg___p0: int16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p8(arg___p0: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p128(arg___p0: poly128_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p64(arg___p0: poly64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p16(arg___p0: poly16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u32(arg___p0: uint32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u64(arg___p0: uint64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u16(arg___p0: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s8(arg___p0: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f64(arg___p0: float64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f32(arg___p0: float32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f16(arg___p0: float16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s32(arg___p0: int32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s64(arg___p0: int64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s16(arg___p0: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p8(arg___p0: poly8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p128(arg___p0: poly128_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p64(arg___p0: poly64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p16(arg___p0: poly16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u8(arg___p0: uint8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u64(arg___p0: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u16(arg___p0: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s8(arg___p0: int8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f64(arg___p0: float64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f32(arg___p0: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f16(arg___p0: float16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s32(arg___p0: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s64(arg___p0: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s16(arg___p0: int16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p8(arg___p0: poly8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p128(arg___p0: poly128_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p64(arg___p0: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p16(arg___p0: poly16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u8(arg___p0: uint8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u32(arg___p0: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u16(arg___p0: uint16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s8(arg___p0: int8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f64(arg___p0: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f32(arg___p0: float32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f16(arg___p0: float16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s32(arg___p0: int32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s64(arg___p0: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s16(arg___p0: int16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p8(arg___p0: poly8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p128(arg___p0: poly128_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p64(arg___p0: poly64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p16(arg___p0: poly16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u8(arg___p0: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u32(arg___p0: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u64(arg___p0: uint64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s8(arg___p0: int8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f64(arg___p0: float64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f32(arg___p0: float32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f16(arg___p0: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s32(arg___p0: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s64(arg___p0: int64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s16(arg___p0: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p8(arg___p0: poly8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p128(arg___p0: poly128_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p64(arg___p0: poly64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p16(arg___p0: poly16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u8(arg___p0: uint8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u32(arg___p0: uint32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u64(arg___p0: uint64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u16(arg___p0: uint16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f64(arg___p0: float64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f32(arg___p0: float32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f16(arg___p0: float16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s32(arg___p0: int32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s64(arg___p0: int64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s16(arg___p0: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p8(arg___p0: poly8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p128(arg___p0: poly128_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p64(arg___p0: poly64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p16(arg___p0: poly16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u8(arg___p0: uint8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u32(arg___p0: uint32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u64(arg___p0: uint64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u16(arg___p0: uint16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s8(arg___p0: int8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f16(arg___p0: float16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s32(arg___p0: int32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s64(arg___p0: int64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s16(arg___p0: int16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p8(arg___p0: poly8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p128(arg___p0: poly128_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p64(arg___p0: poly64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p16(arg___p0: poly16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u8(arg___p0: uint8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u32(arg___p0: uint32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u64(arg___p0: uint64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u16(arg___p0: uint16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s8(arg___p0: int8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f64(arg___p0: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s32(arg___p0: int32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s64(arg___p0: int64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s16(arg___p0: int16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p8(arg___p0: poly8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p128(arg___p0: poly128_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p64(arg___p0: poly64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p16(arg___p0: poly16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u8(arg___p0: uint8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u32(arg___p0: uint32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u64(arg___p0: uint64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u16(arg___p0: uint16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s8(arg___p0: int8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f64(arg___p0: float64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f32(arg___p0: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s32(arg___p0: int32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s64(arg___p0: int64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s16(arg___p0: int16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p8(arg___p0: poly8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p128(arg___p0: poly128_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p64(arg___p0: poly64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p16(arg___p0: poly16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u8(arg___p0: uint8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u32(arg___p0: uint32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u64(arg___p0: uint64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u16(arg___p0: uint16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s8(arg___p0: int8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f64(arg___p0: float64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f32(arg___p0: float32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f16(arg___p0: float16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s64(arg___p0: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s16(arg___p0: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p8(arg___p0: poly8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p128(arg___p0: poly128_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p64(arg___p0: poly64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p16(arg___p0: poly16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u8(arg___p0: uint8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u32(arg___p0: uint32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u64(arg___p0: uint64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u16(arg___p0: uint16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s8(arg___p0: int8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f64(arg___p0: float64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f32(arg___p0: float32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f16(arg___p0: float16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s32(arg___p0: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s16(arg___p0: int16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p8(arg___p0: poly8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p128(arg___p0: poly128_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p64(arg___p0: poly64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p16(arg___p0: poly16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u8(arg___p0: uint8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u32(arg___p0: uint32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u64(arg___p0: uint64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u16(arg___p0: uint16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s8(arg___p0: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f64(arg___p0: float64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f32(arg___p0: float32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f16(arg___p0: float16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s32(arg___p0: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s64(arg___p0: int64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p8(arg___p0: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p64(arg___p0: poly64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p16(arg___p0: poly16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u32(arg___p0: uint32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u64(arg___p0: uint64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u16(arg___p0: uint16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s8(arg___p0: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f64(arg___p0: float64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f32(arg___p0: float32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f16(arg___p0: float16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s32(arg___p0: int32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s64(arg___p0: int64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s16(arg___p0: int16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p8(arg___p0: poly8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p64(arg___p0: poly64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p16(arg___p0: poly16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u8(arg___p0: uint8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u64(arg___p0: uint64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u16(arg___p0: uint16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s8(arg___p0: int8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f64(arg___p0: float64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f32(arg___p0: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f16(arg___p0: float16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s32(arg___p0: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s64(arg___p0: int64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s16(arg___p0: int16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p8(arg___p0: poly8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p64(arg___p0: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p16(arg___p0: poly16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u8(arg___p0: uint8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u32(arg___p0: uint32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u16(arg___p0: uint16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s8(arg___p0: int8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f64(arg___p0: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f32(arg___p0: float32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f16(arg___p0: float16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s32(arg___p0: int32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s64(arg___p0: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s16(arg___p0: int16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p8(arg___p0: poly8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p64(arg___p0: poly64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p16(arg___p0: poly16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u8(arg___p0: uint8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u32(arg___p0: uint32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u64(arg___p0: uint64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s8(arg___p0: int8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f64(arg___p0: float64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f32(arg___p0: float32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f16(arg___p0: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s32(arg___p0: int32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s64(arg___p0: int64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s16(arg___p0: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p8(arg___p0: poly8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p64(arg___p0: poly64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p16(arg___p0: poly16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u8(arg___p0: uint8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u32(arg___p0: uint32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u64(arg___p0: uint64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u16(arg___p0: uint16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f64(arg___p0: float64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f32(arg___p0: float32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f16(arg___p0: float16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s32(arg___p0: int32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s64(arg___p0: int64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s16(arg___p0: int16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p8(arg___p0: poly8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p64(arg___p0: poly64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p16(arg___p0: poly16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u8(arg___p0: uint8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u32(arg___p0: uint32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u64(arg___p0: uint64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u16(arg___p0: uint16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s8(arg___p0: int8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f32(arg___p0: float32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f16(arg___p0: float16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s32(arg___p0: int32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s64(arg___p0: int64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s16(arg___p0: int16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p8(arg___p0: poly8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p64(arg___p0: poly64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p16(arg___p0: poly16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u8(arg___p0: uint8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u32(arg___p0: uint32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u64(arg___p0: uint64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u16(arg___p0: uint16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s8(arg___p0: int8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f64(arg___p0: float64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f16(arg___p0: float16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s32(arg___p0: int32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s64(arg___p0: int64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s16(arg___p0: int16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p8(arg___p0: poly8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p64(arg___p0: poly64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p16(arg___p0: poly16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u8(arg___p0: uint8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u32(arg___p0: uint32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u64(arg___p0: uint64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u16(arg___p0: uint16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s8(arg___p0: int8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f64(arg___p0: float64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f32(arg___p0: float32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s32(arg___p0: int32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s64(arg___p0: int64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s16(arg___p0: int16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p8(arg___p0: poly8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p64(arg___p0: poly64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p16(arg___p0: poly16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u8(arg___p0: uint8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u32(arg___p0: uint32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u64(arg___p0: uint64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u16(arg___p0: uint16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s8(arg___p0: int8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f64(arg___p0: float64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f32(arg___p0: float32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f16(arg___p0: float16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s64(arg___p0: int64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s16(arg___p0: int16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p8(arg___p0: poly8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p64(arg___p0: poly64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p16(arg___p0: poly16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u8(arg___p0: uint8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u32(arg___p0: uint32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u64(arg___p0: uint64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u16(arg___p0: uint16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s8(arg___p0: int8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f64(arg___p0: float64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f32(arg___p0: float32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f16(arg___p0: float16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s32(arg___p0: int32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s16(arg___p0: int16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p8(arg___p0: poly8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p64(arg___p0: poly64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p16(arg___p0: poly16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u8(arg___p0: uint8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u32(arg___p0: uint32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u64(arg___p0: uint64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u16(arg___p0: uint16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s8(arg___p0: int8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f64(arg___p0: float64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f32(arg___p0: float32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f16(arg___p0: float16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s32(arg___p0: int32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s64(arg___p0: int64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58258:22: warning: TODO implement function '__builtin_neon_vrshld_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58256:15: warning: unable to translate function, demoted to extern
pub extern fn vrshld_u64(arg___p0: u64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58263:21: warning: TODO implement function '__builtin_neon_vrshld_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58261:14: warning: unable to translate function, demoted to extern
pub extern fn vrshld_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58407:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58405:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58422:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58420:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58427:23: warning: TODO implement function '__builtin_neon_vrsqrted_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58425:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrted_f64(arg___p0: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58432:23: warning: TODO implement function '__builtin_neon_vrsqrtes_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58430:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtes_f32(arg___p0: float32_t) float32_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58438:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58436:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58454:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58452:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58459:23: warning: TODO implement function '__builtin_neon_vrsqrtsd_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58457:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58464:23: warning: TODO implement function '__builtin_neon_vrsqrtss_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58462:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vrsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vrsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vrsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vrsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vrsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vrsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vrsubhn_s16(__p1, __p2));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58659:22: warning: TODO implement function '__builtin_neon_vshld_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58657:15: warning: unable to translate function, demoted to extern
pub extern fn vshld_u64(arg___p0: u64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58664:21: warning: TODO implement function '__builtin_neon_vshld_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58662:14: warning: unable to translate function, demoted to extern
pub extern fn vshld_s64(arg___p0: i64, arg___p1: i64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58969:21: warning: TODO implement function '__builtin_neon_vsqaddb_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58967:14: warning: unable to translate function, demoted to extern
pub extern fn vsqaddb_u8(arg___p0: u8, arg___p1: i8) u8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58974:22: warning: TODO implement function '__builtin_neon_vsqadds_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58972:15: warning: unable to translate function, demoted to extern
pub extern fn vsqadds_u32(arg___p0: u32, arg___p1: i32) u32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58979:22: warning: TODO implement function '__builtin_neon_vsqaddd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58977:15: warning: unable to translate function, demoted to extern
pub extern fn vsqaddd_u64(arg___p0: u64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58984:22: warning: TODO implement function '__builtin_neon_vsqaddh_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58982:15: warning: unable to translate function, demoted to extern
pub extern fn vsqaddh_u16(arg___p0: u16, arg___p1: i16) u16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58990:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58988:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59007:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59005:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59024:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59022:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59041:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59039:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59058:23: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59056:16: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59075:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59073:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59091:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59089:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59097:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59095:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59114:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59112:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59130:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59128:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59145:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59143:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59151:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59149:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60014:22: warning: TODO implement function '__builtin_neon_vsubd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60012:15: warning: unable to translate function, demoted to extern
pub extern fn vsubd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60019:21: warning: TODO implement function '__builtin_neon_vsubd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60017:14: warning: unable to translate function, demoted to extern
pub extern fn vsubd_s64(arg___p0: i64, arg___p1: i64) i64;
pub inline fn vsubq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vsubhn_s16(__p1, __p2));
    return __ret;
}
pub inline fn vsubl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vsubw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vtrn1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61106:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61104:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61112:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61110:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61129:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61127:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61146:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61144:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61162:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61160:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61167:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61165:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61172:22: warning: TODO implement function '__builtin_neon_vtstd_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61170:15: warning: unable to translate function, demoted to extern
pub extern fn vtstd_u64(arg___p0: u64, arg___p1: u64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61177:22: warning: TODO implement function '__builtin_neon_vtstd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61175:15: warning: unable to translate function, demoted to extern
pub extern fn vtstd_s64(arg___p0: i64, arg___p1: i64) u64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61182:20: warning: TODO implement function '__builtin_neon_vuqaddb_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61180:13: warning: unable to translate function, demoted to extern
pub extern fn vuqaddb_s8(arg___p0: i8, arg___p1: u8) i8; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61187:21: warning: TODO implement function '__builtin_neon_vuqadds_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61185:14: warning: unable to translate function, demoted to extern
pub extern fn vuqadds_s32(arg___p0: i32, arg___p1: u32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61192:21: warning: TODO implement function '__builtin_neon_vuqaddd_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61190:14: warning: unable to translate function, demoted to extern
pub extern fn vuqaddd_s64(arg___p0: i64, arg___p1: u64) i64; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61197:21: warning: TODO implement function '__builtin_neon_vuqaddh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61195:14: warning: unable to translate function, demoted to extern
pub extern fn vuqaddh_s16(arg___p0: i16, arg___p1: u16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61203:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61201:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61220:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61218:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s32(arg___p0: int32x4_t, arg___p1: uint32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61237:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61235:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s64(arg___p0: int64x2_t, arg___p1: uint64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61254:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61252:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s16(arg___p0: int16x8_t, arg___p1: uint16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61271:22: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61269:15: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s8(arg___p0: int8x8_t, arg___p1: uint8x8_t) int8x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61288:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61286:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s32(arg___p0: int32x2_t, arg___p1: uint32x2_t) int32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61304:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61302:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s64(arg___p0: int64x1_t, arg___p1: uint64x1_t) int64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61310:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:61308:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s16(arg___p0: int16x4_t, arg___p1: uint16x4_t) int16x4_t;
pub inline fn vuzp1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62822:23: warning: TODO implement function '__builtin_neon_vmull_p64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62820:47: warning: unable to translate function, demoted to extern
pub extern fn vmull_p64(arg___p0: poly64_t, arg___p1: poly64_t) poly128_t;
pub inline fn vmull_high_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = vmull_p64(@as(poly64_t, @bitCast(vget_high_p64(__p0))), @as(poly64_t, @bitCast(vget_high_p64(__p1))));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62844:26: warning: TODO implement function '__builtin_neon___a64_vcvtq_low_bf16_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62842:51: warning: unable to translate function, demoted to extern
pub extern fn __a64_vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t;
pub inline fn vcvt_bf16_f32(arg___p0: float32x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = vget_low_bf16(__a64_vcvtq_low_bf16_f32(__p0));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62965:26: warning: TODO implement function '__builtin_neon_vcvtq_high_bf16_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62963:51: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_high_bf16_f32(arg___p0: bfloat16x8_t, arg___p1: float32x4_t) bfloat16x8_t;
pub inline fn vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = __a64_vcvtq_low_bf16_f32(__p0);
    return __ret;
}
pub inline fn vreinterpret_p8_bf16(arg___p0: bfloat16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_bf16(arg___p0: bfloat16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_bf16(arg___p0: bfloat16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_bf16(arg___p0: bfloat16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_bf16(arg___p0: bfloat16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_bf16(arg___p0: bfloat16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_bf16(arg___p0: bfloat16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_bf16(arg___p0: bfloat16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_bf16(arg___p0: bfloat16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_bf16(arg___p0: bfloat16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_bf16(arg___p0: bfloat16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_bf16(arg___p0: bfloat16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_bf16(arg___p0: bfloat16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_bf16(arg___p0: bfloat16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_bf16(arg___p0: bfloat16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_bf16(arg___p0: bfloat16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_bf16(arg___p0: bfloat16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_bf16(arg___p0: bfloat16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_bf16(arg___p0: bfloat16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_bf16(arg___p0: bfloat16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_bf16(arg___p0: bfloat16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_bf16(arg___p0: bfloat16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_bf16(arg___p0: bfloat16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_bf16(arg___p0: bfloat16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_bf16(arg___p0: bfloat16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_bf16(arg___p0: bfloat16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_bf16(arg___p0: bfloat16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_bf16(arg___p0: bfloat16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p8(arg___p0: poly8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p128(arg___p0: poly128_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p64(arg___p0: poly64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p16(arg___p0: poly16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u8(arg___p0: uint8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u32(arg___p0: uint32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u64(arg___p0: uint64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u16(arg___p0: uint16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s8(arg___p0: int8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f64(arg___p0: float64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f16(arg___p0: float16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s32(arg___p0: int32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s64(arg___p0: int64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s16(arg___p0: int16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p8(arg___p0: poly8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p64(arg___p0: poly64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p16(arg___p0: poly16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u8(arg___p0: uint8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u32(arg___p0: uint32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u64(arg___p0: uint64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u16(arg___p0: uint16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s8(arg___p0: int8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f64(arg___p0: float64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f32(arg___p0: float32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f16(arg___p0: float16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s32(arg___p0: int32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s64(arg___p0: int64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s16(arg___p0: int16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63400:25: warning: TODO implement function '__builtin_neon_vfmlalq_high_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63398:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63423:25: warning: TODO implement function '__builtin_neon_vfmlal_high_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63421:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63446:25: warning: TODO implement function '__builtin_neon_vfmlalq_low_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63444:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63469:25: warning: TODO implement function '__builtin_neon_vfmlal_low_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63467:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63492:25: warning: TODO implement function '__builtin_neon_vfmlslq_high_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63490:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63515:25: warning: TODO implement function '__builtin_neon_vfmlsl_high_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63513:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63538:25: warning: TODO implement function '__builtin_neon_vfmlslq_low_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63536:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63561:25: warning: TODO implement function '__builtin_neon_vfmlsl_low_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63559:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
pub inline fn vdivq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64246:25: warning: TODO implement function '__builtin_neon_vmulxq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64244:54: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64268:25: warning: TODO implement function '__builtin_neon_vmulx_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64266:54: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64452:25: warning: TODO implement function '__builtin_neon_vpaddq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64450:54: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64469:25: warning: TODO implement function '__builtin_neon_vpmaxq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64467:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64486:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64484:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64503:25: warning: TODO implement function '__builtin_neon_vpmaxnm_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64501:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64520:25: warning: TODO implement function '__builtin_neon_vpminq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64518:54: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64537:25: warning: TODO implement function '__builtin_neon_vpminnmq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64535:54: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64554:25: warning: TODO implement function '__builtin_neon_vpminnm_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64552:54: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64571:25: warning: TODO implement function '__builtin_neon_vrndiq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64569:54: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64587:25: warning: TODO implement function '__builtin_neon_vrndi_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64585:54: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f16(arg___p0: float16x4_t) float16x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64603:25: warning: TODO implement function '__builtin_neon_vsqrtq_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64601:54: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f16(arg___p0: float16x8_t) float16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64619:25: warning: TODO implement function '__builtin_neon_vsqrt_f16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64617:54: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f16(arg___p0: float16x4_t) float16x4_t;
pub inline fn vtrn1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
} // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65107:24: warning: TODO implement function '__builtin_neon_vbcaxq_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65105:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65125:24: warning: TODO implement function '__builtin_neon_vbcaxq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65123:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65143:24: warning: TODO implement function '__builtin_neon_vbcaxq_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65141:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65161:24: warning: TODO implement function '__builtin_neon_vbcaxq_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65159:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65179:23: warning: TODO implement function '__builtin_neon_vbcaxq_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65177:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65197:23: warning: TODO implement function '__builtin_neon_vbcaxq_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65195:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65215:23: warning: TODO implement function '__builtin_neon_vbcaxq_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65213:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65233:23: warning: TODO implement function '__builtin_neon_vbcaxq_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65231:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65251:24: warning: TODO implement function '__builtin_neon_veor3q_u8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65249:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65269:24: warning: TODO implement function '__builtin_neon_veor3q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65267:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65287:24: warning: TODO implement function '__builtin_neon_veor3q_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65285:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65305:24: warning: TODO implement function '__builtin_neon_veor3q_u16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65303:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65323:23: warning: TODO implement function '__builtin_neon_veor3q_s8' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65321:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65341:23: warning: TODO implement function '__builtin_neon_veor3q_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65339:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65359:23: warning: TODO implement function '__builtin_neon_veor3q_s64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65357:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65377:23: warning: TODO implement function '__builtin_neon_veor3q_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65375:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65395:24: warning: TODO implement function '__builtin_neon_vrax1q_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65393:49: warning: unable to translate function, demoted to extern
pub extern fn vrax1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65412:24: warning: TODO implement function '__builtin_neon_vsha512hq_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65410:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512hq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65430:24: warning: TODO implement function '__builtin_neon_vsha512h2q_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65428:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512h2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65448:24: warning: TODO implement function '__builtin_neon_vsha512su0q_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65446:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512su0q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65465:24: warning: TODO implement function '__builtin_neon_vsha512su1q_u64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65463:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512su1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65504:24: warning: TODO implement function '__builtin_neon_vsm3partw1q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65502:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65522:24: warning: TODO implement function '__builtin_neon_vsm3partw2q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65520:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65540:24: warning: TODO implement function '__builtin_neon_vsm3ss1q_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65538:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3ss1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65654:24: warning: TODO implement function '__builtin_neon_vsm4eq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65652:48: warning: unable to translate function, demoted to extern
pub extern fn vsm4eq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65671:24: warning: TODO implement function '__builtin_neon_vsm4ekeyq_u32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65669:48: warning: unable to translate function, demoted to extern
pub extern fn vsm4ekeyq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65687:21: warning: TODO implement function '__builtin_neon_vqrdmlahs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65685:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65692:21: warning: TODO implement function '__builtin_neon_vqrdmlahh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65690:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65877:21: warning: TODO implement function '__builtin_neon_vqrdmlshs_s32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65875:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65882:21: warning: TODO implement function '__builtin_neon_vqrdmlshh_s16' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65880:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66068:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66066:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66085:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66083:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66102:25: warning: TODO implement function '__builtin_neon_vcmlaq_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66100:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66124:25: warning: TODO implement function '__builtin_neon_vcmla_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66122:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66220:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66218:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66242:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66240:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66338:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66336:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66360:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66358:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66456:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66454:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66478:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f64' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66476:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66574:25: warning: TODO implement function '__builtin_neon_vrnd32xq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66572:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32xq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66590:25: warning: TODO implement function '__builtin_neon_vrnd32x_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66588:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32x_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66606:25: warning: TODO implement function '__builtin_neon_vrnd32zq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66604:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32zq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66622:25: warning: TODO implement function '__builtin_neon_vrnd32z_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66620:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32z_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66638:25: warning: TODO implement function '__builtin_neon_vrnd64xq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66636:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64xq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66654:25: warning: TODO implement function '__builtin_neon_vrnd64x_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66652:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64x_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66670:25: warning: TODO implement function '__builtin_neon_vrnd64zq_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66668:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64zq_f32(arg___p0: float32x4_t) float32x4_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66686:25: warning: TODO implement function '__builtin_neon_vrnd64z_f32' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66684:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64z_f32(arg___p0: float32x2_t) float32x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66704:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66702:18: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66719:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66717:18: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66725:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66723:18: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66740:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66738:18: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66746:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66744:18: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66761:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66759:18: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66767:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66765:18: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66782:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66780:18: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66788:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66786:18: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66803:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66801:18: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66809:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66807:18: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66824:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66822:18: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66830:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66828:18: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f64(arg___p0: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66845:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66843:18: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f64(arg___p0: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66853:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66851:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66869:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66867:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66875:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66873:18: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t; // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66891:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins
// /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66889:18: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
pub inline fn vabaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabdl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(vabd_u8(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(vabd_u32(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(vabd_u16(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(vmovl_u8(@as(uint8x8_t, @bitCast(vabd_s8(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(vmovl_u32(@as(uint32x2_t, @bitCast(vabd_s32(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(vmovl_u16(@as(uint16x4_t, @bitCast(vabd_s16(__p0, __p1))))));
    return __ret;
}
pub inline fn vaddl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vaddw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vmlal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vcvtq_high_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_high_bf16(__p0));
    return __ret;
}
pub inline fn vcvtq_low_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_low_bf16(__p0));
    return __ret;
}
pub inline fn vabdl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vabdl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vabdl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vabdl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vabdl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vabdl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vaddl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vaddw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vmlal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlal_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vabal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vabal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vabal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vabal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vabal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vabal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub extern fn SDL_GetCPUCount() c_int;
pub extern fn SDL_GetCPUCacheLineSize() c_int;
pub extern fn SDL_HasRDTSC() SDL_bool;
pub extern fn SDL_HasAltiVec() SDL_bool;
pub extern fn SDL_HasMMX() SDL_bool;
pub extern fn SDL_Has3DNow() SDL_bool;
pub extern fn SDL_HasSSE() SDL_bool;
pub extern fn SDL_HasSSE2() SDL_bool;
pub extern fn SDL_HasSSE3() SDL_bool;
pub extern fn SDL_HasSSE41() SDL_bool;
pub extern fn SDL_HasSSE42() SDL_bool;
pub extern fn SDL_HasAVX() SDL_bool;
pub extern fn SDL_HasAVX2() SDL_bool;
pub extern fn SDL_HasAVX512F() SDL_bool;
pub extern fn SDL_HasARMSIMD() SDL_bool;
pub extern fn SDL_HasNEON() SDL_bool;
pub extern fn SDL_HasLSX() SDL_bool;
pub extern fn SDL_HasLASX() SDL_bool;
pub extern fn SDL_GetSystemRAM() c_int;
pub extern fn SDL_SIMDGetAlignment() usize;
pub extern fn SDL_SIMDAlloc(len: usize) ?*anyopaque;
pub extern fn SDL_SIMDRealloc(mem: ?*anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_SIMDFree(ptr: ?*anyopaque) void;
pub const SDL_PIXELTYPE_UNKNOWN: c_int = 0;
pub const SDL_PIXELTYPE_INDEX1: c_int = 1;
pub const SDL_PIXELTYPE_INDEX4: c_int = 2;
pub const SDL_PIXELTYPE_INDEX8: c_int = 3;
pub const SDL_PIXELTYPE_PACKED8: c_int = 4;
pub const SDL_PIXELTYPE_PACKED16: c_int = 5;
pub const SDL_PIXELTYPE_PACKED32: c_int = 6;
pub const SDL_PIXELTYPE_ARRAYU8: c_int = 7;
pub const SDL_PIXELTYPE_ARRAYU16: c_int = 8;
pub const SDL_PIXELTYPE_ARRAYU32: c_int = 9;
pub const SDL_PIXELTYPE_ARRAYF16: c_int = 10;
pub const SDL_PIXELTYPE_ARRAYF32: c_int = 11;
pub const SDL_PIXELTYPE_INDEX2: c_int = 12;
pub const SDL_PixelType = c_uint;
pub const SDL_BITMAPORDER_NONE: c_int = 0;
pub const SDL_BITMAPORDER_4321: c_int = 1;
pub const SDL_BITMAPORDER_1234: c_int = 2;
pub const SDL_BitmapOrder = c_uint;
pub const SDL_PACKEDORDER_NONE: c_int = 0;
pub const SDL_PACKEDORDER_XRGB: c_int = 1;
pub const SDL_PACKEDORDER_RGBX: c_int = 2;
pub const SDL_PACKEDORDER_ARGB: c_int = 3;
pub const SDL_PACKEDORDER_RGBA: c_int = 4;
pub const SDL_PACKEDORDER_XBGR: c_int = 5;
pub const SDL_PACKEDORDER_BGRX: c_int = 6;
pub const SDL_PACKEDORDER_ABGR: c_int = 7;
pub const SDL_PACKEDORDER_BGRA: c_int = 8;
pub const SDL_PackedOrder = c_uint;
pub const SDL_ARRAYORDER_NONE: c_int = 0;
pub const SDL_ARRAYORDER_RGB: c_int = 1;
pub const SDL_ARRAYORDER_RGBA: c_int = 2;
pub const SDL_ARRAYORDER_ARGB: c_int = 3;
pub const SDL_ARRAYORDER_BGR: c_int = 4;
pub const SDL_ARRAYORDER_BGRA: c_int = 5;
pub const SDL_ARRAYORDER_ABGR: c_int = 6;
pub const SDL_ArrayOrder = c_uint;
pub const SDL_PACKEDLAYOUT_NONE: c_int = 0;
pub const SDL_PACKEDLAYOUT_332: c_int = 1;
pub const SDL_PACKEDLAYOUT_4444: c_int = 2;
pub const SDL_PACKEDLAYOUT_1555: c_int = 3;
pub const SDL_PACKEDLAYOUT_5551: c_int = 4;
pub const SDL_PACKEDLAYOUT_565: c_int = 5;
pub const SDL_PACKEDLAYOUT_8888: c_int = 6;
pub const SDL_PACKEDLAYOUT_2101010: c_int = 7;
pub const SDL_PACKEDLAYOUT_1010102: c_int = 8;
pub const SDL_PackedLayout = c_uint;
pub const SDL_PIXELFORMAT_UNKNOWN: c_int = 0;
pub const SDL_PIXELFORMAT_INDEX1LSB: c_int = 286261504;
pub const SDL_PIXELFORMAT_INDEX1MSB: c_int = 287310080;
pub const SDL_PIXELFORMAT_INDEX2LSB: c_int = 470811136;
pub const SDL_PIXELFORMAT_INDEX2MSB: c_int = 471859712;
pub const SDL_PIXELFORMAT_INDEX4LSB: c_int = 303039488;
pub const SDL_PIXELFORMAT_INDEX4MSB: c_int = 304088064;
pub const SDL_PIXELFORMAT_INDEX8: c_int = 318769153;
pub const SDL_PIXELFORMAT_RGB332: c_int = 336660481;
pub const SDL_PIXELFORMAT_XRGB4444: c_int = 353504258;
pub const SDL_PIXELFORMAT_RGB444: c_int = 353504258;
pub const SDL_PIXELFORMAT_XBGR4444: c_int = 357698562;
pub const SDL_PIXELFORMAT_BGR444: c_int = 357698562;
pub const SDL_PIXELFORMAT_XRGB1555: c_int = 353570562;
pub const SDL_PIXELFORMAT_RGB555: c_int = 353570562;
pub const SDL_PIXELFORMAT_XBGR1555: c_int = 357764866;
pub const SDL_PIXELFORMAT_BGR555: c_int = 357764866;
pub const SDL_PIXELFORMAT_ARGB4444: c_int = 355602434;
pub const SDL_PIXELFORMAT_RGBA4444: c_int = 356651010;
pub const SDL_PIXELFORMAT_ABGR4444: c_int = 359796738;
pub const SDL_PIXELFORMAT_BGRA4444: c_int = 360845314;
pub const SDL_PIXELFORMAT_ARGB1555: c_int = 355667970;
pub const SDL_PIXELFORMAT_RGBA5551: c_int = 356782082;
pub const SDL_PIXELFORMAT_ABGR1555: c_int = 359862274;
pub const SDL_PIXELFORMAT_BGRA5551: c_int = 360976386;
pub const SDL_PIXELFORMAT_RGB565: c_int = 353701890;
pub const SDL_PIXELFORMAT_BGR565: c_int = 357896194;
pub const SDL_PIXELFORMAT_RGB24: c_int = 386930691;
pub const SDL_PIXELFORMAT_BGR24: c_int = 390076419;
pub const SDL_PIXELFORMAT_XRGB8888: c_int = 370546692;
pub const SDL_PIXELFORMAT_RGB888: c_int = 370546692;
pub const SDL_PIXELFORMAT_RGBX8888: c_int = 371595268;
pub const SDL_PIXELFORMAT_XBGR8888: c_int = 374740996;
pub const SDL_PIXELFORMAT_BGR888: c_int = 374740996;
pub const SDL_PIXELFORMAT_BGRX8888: c_int = 375789572;
pub const SDL_PIXELFORMAT_ARGB8888: c_int = 372645892;
pub const SDL_PIXELFORMAT_RGBA8888: c_int = 373694468;
pub const SDL_PIXELFORMAT_ABGR8888: c_int = 376840196;
pub const SDL_PIXELFORMAT_BGRA8888: c_int = 377888772;
pub const SDL_PIXELFORMAT_ARGB2101010: c_int = 372711428;
pub const SDL_PIXELFORMAT_RGBA32: c_int = 376840196;
pub const SDL_PIXELFORMAT_ARGB32: c_int = 377888772;
pub const SDL_PIXELFORMAT_BGRA32: c_int = 372645892;
pub const SDL_PIXELFORMAT_ABGR32: c_int = 373694468;
pub const SDL_PIXELFORMAT_RGBX32: c_int = 374740996;
pub const SDL_PIXELFORMAT_XRGB32: c_int = 375789572;
pub const SDL_PIXELFORMAT_BGRX32: c_int = 370546692;
pub const SDL_PIXELFORMAT_XBGR32: c_int = 371595268;
pub const SDL_PIXELFORMAT_YV12: c_int = 842094169;
pub const SDL_PIXELFORMAT_IYUV: c_int = 1448433993;
pub const SDL_PIXELFORMAT_YUY2: c_int = 844715353;
pub const SDL_PIXELFORMAT_UYVY: c_int = 1498831189;
pub const SDL_PIXELFORMAT_YVYU: c_int = 1431918169;
pub const SDL_PIXELFORMAT_NV12: c_int = 842094158;
pub const SDL_PIXELFORMAT_NV21: c_int = 825382478;
pub const SDL_PIXELFORMAT_EXTERNAL_OES: c_int = 542328143;
pub const SDL_PixelFormatEnum = c_uint;
pub const struct_SDL_Color = extern struct {
    r: Uint8 = @import("std").mem.zeroes(Uint8),
    g: Uint8 = @import("std").mem.zeroes(Uint8),
    b: Uint8 = @import("std").mem.zeroes(Uint8),
    a: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_Color = struct_SDL_Color;
pub const struct_SDL_Palette = extern struct {
    ncolors: c_int = @import("std").mem.zeroes(c_int),
    colors: [*c]SDL_Color = @import("std").mem.zeroes([*c]SDL_Color),
    version: Uint32 = @import("std").mem.zeroes(Uint32),
    refcount: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Palette = struct_SDL_Palette;
pub const struct_SDL_PixelFormat = extern struct {
    format: Uint32 = @import("std").mem.zeroes(Uint32),
    palette: [*c]SDL_Palette = @import("std").mem.zeroes([*c]SDL_Palette),
    BitsPerPixel: Uint8 = @import("std").mem.zeroes(Uint8),
    BytesPerPixel: Uint8 = @import("std").mem.zeroes(Uint8),
    padding: [2]Uint8 = @import("std").mem.zeroes([2]Uint8),
    Rmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Gmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Bmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Amask: Uint32 = @import("std").mem.zeroes(Uint32),
    Rloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Gloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Bloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Aloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Rshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Gshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Bshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Ashift: Uint8 = @import("std").mem.zeroes(Uint8),
    refcount: c_int = @import("std").mem.zeroes(c_int),
    next: [*c]struct_SDL_PixelFormat = @import("std").mem.zeroes([*c]struct_SDL_PixelFormat),
};
pub const SDL_PixelFormat = struct_SDL_PixelFormat;
pub extern fn SDL_GetPixelFormatName(format: Uint32) [*c]const u8;
pub extern fn SDL_PixelFormatEnumToMasks(format: Uint32, bpp: [*c]c_int, Rmask: [*c]Uint32, Gmask: [*c]Uint32, Bmask: [*c]Uint32, Amask: [*c]Uint32) SDL_bool;
pub extern fn SDL_MasksToPixelFormatEnum(bpp: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) Uint32;
pub extern fn SDL_AllocFormat(pixel_format: Uint32) [*c]SDL_PixelFormat;
pub extern fn SDL_FreeFormat(format: [*c]SDL_PixelFormat) void;
pub extern fn SDL_AllocPalette(ncolors: c_int) [*c]SDL_Palette;
pub extern fn SDL_SetPixelFormatPalette(format: [*c]SDL_PixelFormat, palette: [*c]SDL_Palette) c_int;
pub extern fn SDL_SetPaletteColors(palette: [*c]SDL_Palette, colors: [*c]const SDL_Color, firstcolor: c_int, ncolors: c_int) c_int;
pub extern fn SDL_FreePalette(palette: [*c]SDL_Palette) void;
pub extern fn SDL_MapRGB(format: [*c]const SDL_PixelFormat, r: Uint8, g: Uint8, b: Uint8) Uint32;
pub extern fn SDL_MapRGBA(format: [*c]const SDL_PixelFormat, r: Uint8, g: Uint8, b: Uint8, a: Uint8) Uint32;
pub extern fn SDL_GetRGB(pixel: Uint32, format: [*c]const SDL_PixelFormat, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) void;
pub extern fn SDL_GetRGBA(pixel: Uint32, format: [*c]const SDL_PixelFormat, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8, a: [*c]Uint8) void;
pub extern fn SDL_CalculateGammaRamp(gamma: f32, ramp: [*c]Uint16) void;
pub const struct_SDL_Point = extern struct {
    x: c_int = @import("std").mem.zeroes(c_int),
    y: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Point = struct_SDL_Point;
pub const struct_SDL_FPoint = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_FPoint = struct_SDL_FPoint;
pub const struct_SDL_Rect = extern struct {
    x: c_int = @import("std").mem.zeroes(c_int),
    y: c_int = @import("std").mem.zeroes(c_int),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Rect = struct_SDL_Rect;
pub const struct_SDL_FRect = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    w: f32 = @import("std").mem.zeroes(f32),
    h: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_FRect = struct_SDL_FRect;
pub inline fn SDL_PointInRect(arg_p: [*c]const SDL_Point, arg_r: [*c]const SDL_Rect) SDL_bool {
    var p = arg_p;
    _ = &p;
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((((p.*.x >= r.*.x) and (p.*.x < (r.*.x + r.*.w))) and (p.*.y >= r.*.y)) and (p.*.y < (r.*.y + r.*.h))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_RectEmpty(arg_r: [*c]const SDL_Rect) SDL_bool {
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((!(r != null) or (r.*.w <= @as(c_int, 0))) or (r.*.h <= @as(c_int, 0))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_RectEquals(arg_a: [*c]const SDL_Rect, arg_b: [*c]const SDL_Rect) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    return @as(c_uint, @bitCast(if ((((((a != null) and (b != null)) and (a.*.x == b.*.x)) and (a.*.y == b.*.y)) and (a.*.w == b.*.w)) and (a.*.h == b.*.h)) SDL_TRUE else SDL_FALSE));
}
pub extern fn SDL_HasIntersection(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect) SDL_bool;
pub extern fn SDL_IntersectRect(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect, result: [*c]SDL_Rect) SDL_bool;
pub extern fn SDL_UnionRect(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect, result: [*c]SDL_Rect) void;
pub extern fn SDL_EnclosePoints(points: [*c]const SDL_Point, count: c_int, clip: [*c]const SDL_Rect, result: [*c]SDL_Rect) SDL_bool;
pub extern fn SDL_IntersectRectAndLine(rect: [*c]const SDL_Rect, X1: [*c]c_int, Y1: [*c]c_int, X2: [*c]c_int, Y2: [*c]c_int) SDL_bool;
pub inline fn SDL_PointInFRect(arg_p: [*c]const SDL_FPoint, arg_r: [*c]const SDL_FRect) SDL_bool {
    var p = arg_p;
    _ = &p;
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((((p.*.x >= r.*.x) and (p.*.x < (r.*.x + r.*.w))) and (p.*.y >= r.*.y)) and (p.*.y < (r.*.y + r.*.h))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEmpty(arg_r: [*c]const SDL_FRect) SDL_bool {
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((!(r != null) or (r.*.w <= 0.0)) or (r.*.h <= 0.0)) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEqualsEpsilon(arg_a: [*c]const SDL_FRect, arg_b: [*c]const SDL_FRect, epsilon: f32) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    _ = &epsilon;
    return @as(c_uint, @bitCast(if (((a != null) and (b != null)) and ((a == b) or ((((SDL_fabsf(a.*.x - b.*.x) <= epsilon) and (SDL_fabsf(a.*.y - b.*.y) <= epsilon)) and (SDL_fabsf(a.*.w - b.*.w) <= epsilon)) and (SDL_fabsf(a.*.h - b.*.h) <= epsilon)))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEquals(arg_a: [*c]const SDL_FRect, arg_b: [*c]const SDL_FRect) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    return SDL_FRectEqualsEpsilon(a, b, 0.00000011920928955078125);
}
pub extern fn SDL_HasIntersectionF(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect) SDL_bool;
pub extern fn SDL_IntersectFRect(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect, result: [*c]SDL_FRect) SDL_bool;
pub extern fn SDL_UnionFRect(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect, result: [*c]SDL_FRect) void;
pub extern fn SDL_EncloseFPoints(points: [*c]const SDL_FPoint, count: c_int, clip: [*c]const SDL_FRect, result: [*c]SDL_FRect) SDL_bool;
pub extern fn SDL_IntersectFRectAndLine(rect: [*c]const SDL_FRect, X1: [*c]f32, Y1: [*c]f32, X2: [*c]f32, Y2: [*c]f32) SDL_bool;
pub const SDL_BLENDMODE_NONE: c_int = 0;
pub const SDL_BLENDMODE_BLEND: c_int = 1;
pub const SDL_BLENDMODE_ADD: c_int = 2;
pub const SDL_BLENDMODE_MOD: c_int = 4;
pub const SDL_BLENDMODE_MUL: c_int = 8;
pub const SDL_BLENDMODE_INVALID: c_int = 2147483647;
pub const SDL_BlendMode = c_uint;
pub const SDL_BLENDOPERATION_ADD: c_int = 1;
pub const SDL_BLENDOPERATION_SUBTRACT: c_int = 2;
pub const SDL_BLENDOPERATION_REV_SUBTRACT: c_int = 3;
pub const SDL_BLENDOPERATION_MINIMUM: c_int = 4;
pub const SDL_BLENDOPERATION_MAXIMUM: c_int = 5;
pub const SDL_BlendOperation = c_uint;
pub const SDL_BLENDFACTOR_ZERO: c_int = 1;
pub const SDL_BLENDFACTOR_ONE: c_int = 2;
pub const SDL_BLENDFACTOR_SRC_COLOR: c_int = 3;
pub const SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR: c_int = 4;
pub const SDL_BLENDFACTOR_SRC_ALPHA: c_int = 5;
pub const SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA: c_int = 6;
pub const SDL_BLENDFACTOR_DST_COLOR: c_int = 7;
pub const SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR: c_int = 8;
pub const SDL_BLENDFACTOR_DST_ALPHA: c_int = 9;
pub const SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA: c_int = 10;
pub const SDL_BlendFactor = c_uint;
pub extern fn SDL_ComposeCustomBlendMode(srcColorFactor: SDL_BlendFactor, dstColorFactor: SDL_BlendFactor, colorOperation: SDL_BlendOperation, srcAlphaFactor: SDL_BlendFactor, dstAlphaFactor: SDL_BlendFactor, alphaOperation: SDL_BlendOperation) SDL_BlendMode;
pub const struct_SDL_BlitMap = opaque {};
pub const SDL_BlitMap = struct_SDL_BlitMap;
pub const struct_SDL_Surface = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    format: [*c]SDL_PixelFormat = @import("std").mem.zeroes([*c]SDL_PixelFormat),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
    pitch: c_int = @import("std").mem.zeroes(c_int),
    pixels: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    locked: c_int = @import("std").mem.zeroes(c_int),
    list_blitmap: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clip_rect: SDL_Rect = @import("std").mem.zeroes(SDL_Rect),
    map: ?*SDL_BlitMap = @import("std").mem.zeroes(?*SDL_BlitMap),
    refcount: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Surface = struct_SDL_Surface;
pub const SDL_blit = ?*const fn ([*c]struct_SDL_Surface, [*c]SDL_Rect, [*c]struct_SDL_Surface, [*c]SDL_Rect) callconv(.C) c_int;
pub const SDL_YUV_CONVERSION_JPEG: c_int = 0;
pub const SDL_YUV_CONVERSION_BT601: c_int = 1;
pub const SDL_YUV_CONVERSION_BT709: c_int = 2;
pub const SDL_YUV_CONVERSION_AUTOMATIC: c_int = 3;
pub const SDL_YUV_CONVERSION_MODE = c_uint;
pub extern fn SDL_CreateRGBSurface(flags: Uint32, width: c_int, height: c_int, depth: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceWithFormat(flags: Uint32, width: c_int, height: c_int, depth: c_int, format: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceFrom(pixels: ?*anyopaque, width: c_int, height: c_int, depth: c_int, pitch: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceWithFormatFrom(pixels: ?*anyopaque, width: c_int, height: c_int, depth: c_int, pitch: c_int, format: Uint32) [*c]SDL_Surface;
pub extern fn SDL_FreeSurface(surface: [*c]SDL_Surface) void;
pub extern fn SDL_SetSurfacePalette(surface: [*c]SDL_Surface, palette: [*c]SDL_Palette) c_int;
pub extern fn SDL_LockSurface(surface: [*c]SDL_Surface) c_int;
pub extern fn SDL_UnlockSurface(surface: [*c]SDL_Surface) void;
pub extern fn SDL_LoadBMP_RW(src: [*c]SDL_RWops, freesrc: c_int) [*c]SDL_Surface;
pub extern fn SDL_SaveBMP_RW(surface: [*c]SDL_Surface, dst: [*c]SDL_RWops, freedst: c_int) c_int;
pub extern fn SDL_SetSurfaceRLE(surface: [*c]SDL_Surface, flag: c_int) c_int;
pub extern fn SDL_HasSurfaceRLE(surface: [*c]SDL_Surface) SDL_bool;
pub extern fn SDL_SetColorKey(surface: [*c]SDL_Surface, flag: c_int, key: Uint32) c_int;
pub extern fn SDL_HasColorKey(surface: [*c]SDL_Surface) SDL_bool;
pub extern fn SDL_GetColorKey(surface: [*c]SDL_Surface, key: [*c]Uint32) c_int;
pub extern fn SDL_SetSurfaceColorMod(surface: [*c]SDL_Surface, r: Uint8, g: Uint8, b: Uint8) c_int;
pub extern fn SDL_GetSurfaceColorMod(surface: [*c]SDL_Surface, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) c_int;
pub extern fn SDL_SetSurfaceAlphaMod(surface: [*c]SDL_Surface, alpha: Uint8) c_int;
pub extern fn SDL_GetSurfaceAlphaMod(surface: [*c]SDL_Surface, alpha: [*c]Uint8) c_int;
pub extern fn SDL_SetSurfaceBlendMode(surface: [*c]SDL_Surface, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetSurfaceBlendMode(surface: [*c]SDL_Surface, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_SetClipRect(surface: [*c]SDL_Surface, rect: [*c]const SDL_Rect) SDL_bool;
pub extern fn SDL_GetClipRect(surface: [*c]SDL_Surface, rect: [*c]SDL_Rect) void;
pub extern fn SDL_DuplicateSurface(surface: [*c]SDL_Surface) [*c]SDL_Surface;
pub extern fn SDL_ConvertSurface(src: [*c]SDL_Surface, fmt: [*c]const SDL_PixelFormat, flags: Uint32) [*c]SDL_Surface;
pub extern fn SDL_ConvertSurfaceFormat(src: [*c]SDL_Surface, pixel_format: Uint32, flags: Uint32) [*c]SDL_Surface;
pub extern fn SDL_ConvertPixels(width: c_int, height: c_int, src_format: Uint32, src: ?*const anyopaque, src_pitch: c_int, dst_format: Uint32, dst: ?*anyopaque, dst_pitch: c_int) c_int;
pub extern fn SDL_PremultiplyAlpha(width: c_int, height: c_int, src_format: Uint32, src: ?*const anyopaque, src_pitch: c_int, dst_format: Uint32, dst: ?*anyopaque, dst_pitch: c_int) c_int;
pub extern fn SDL_FillRect(dst: [*c]SDL_Surface, rect: [*c]const SDL_Rect, color: Uint32) c_int;
pub extern fn SDL_FillRects(dst: [*c]SDL_Surface, rects: [*c]const SDL_Rect, count: c_int, color: Uint32) c_int;
pub extern fn SDL_UpperBlit(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_LowerBlit(src: [*c]SDL_Surface, srcrect: [*c]SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_SoftStretch(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_SoftStretchLinear(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_UpperBlitScaled(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_LowerBlitScaled(src: [*c]SDL_Surface, srcrect: [*c]SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_SetYUVConversionMode(mode: SDL_YUV_CONVERSION_MODE) void;
pub extern fn SDL_GetYUVConversionMode() SDL_YUV_CONVERSION_MODE;
pub extern fn SDL_GetYUVConversionModeForResolution(width: c_int, height: c_int) SDL_YUV_CONVERSION_MODE;
pub const SDL_DisplayMode = extern struct {
    format: Uint32 = @import("std").mem.zeroes(Uint32),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
    refresh_rate: c_int = @import("std").mem.zeroes(c_int),
    driverdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const struct_SDL_Window = opaque {};
pub const SDL_Window = struct_SDL_Window;
pub const SDL_WINDOW_FULLSCREEN: c_int = 1;
pub const SDL_WINDOW_OPENGL: c_int = 2;
pub const SDL_WINDOW_SHOWN: c_int = 4;
pub const SDL_WINDOW_HIDDEN: c_int = 8;
pub const SDL_WINDOW_BORDERLESS: c_int = 16;
pub const SDL_WINDOW_RESIZABLE: c_int = 32;
pub const SDL_WINDOW_MINIMIZED: c_int = 64;
pub const SDL_WINDOW_MAXIMIZED: c_int = 128;
pub const SDL_WINDOW_MOUSE_GRABBED: c_int = 256;
pub const SDL_WINDOW_INPUT_FOCUS: c_int = 512;
pub const SDL_WINDOW_MOUSE_FOCUS: c_int = 1024;
pub const SDL_WINDOW_FULLSCREEN_DESKTOP: c_int = 4097;
pub const SDL_WINDOW_FOREIGN: c_int = 2048;
pub const SDL_WINDOW_ALLOW_HIGHDPI: c_int = 8192;
pub const SDL_WINDOW_MOUSE_CAPTURE: c_int = 16384;
pub const SDL_WINDOW_ALWAYS_ON_TOP: c_int = 32768;
pub const SDL_WINDOW_SKIP_TASKBAR: c_int = 65536;
pub const SDL_WINDOW_UTILITY: c_int = 131072;
pub const SDL_WINDOW_TOOLTIP: c_int = 262144;
pub const SDL_WINDOW_POPUP_MENU: c_int = 524288;
pub const SDL_WINDOW_KEYBOARD_GRABBED: c_int = 1048576;
pub const SDL_WINDOW_VULKAN: c_int = 268435456;
pub const SDL_WINDOW_METAL: c_int = 536870912;
pub const SDL_WINDOW_INPUT_GRABBED: c_int = 256;
pub const SDL_WindowFlags = c_uint;
pub const SDL_WINDOWEVENT_NONE: c_int = 0;
pub const SDL_WINDOWEVENT_SHOWN: c_int = 1;
pub const SDL_WINDOWEVENT_HIDDEN: c_int = 2;
pub const SDL_WINDOWEVENT_EXPOSED: c_int = 3;
pub const SDL_WINDOWEVENT_MOVED: c_int = 4;
pub const SDL_WINDOWEVENT_RESIZED: c_int = 5;
pub const SDL_WINDOWEVENT_SIZE_CHANGED: c_int = 6;
pub const SDL_WINDOWEVENT_MINIMIZED: c_int = 7;
pub const SDL_WINDOWEVENT_MAXIMIZED: c_int = 8;
pub const SDL_WINDOWEVENT_RESTORED: c_int = 9;
pub const SDL_WINDOWEVENT_ENTER: c_int = 10;
pub const SDL_WINDOWEVENT_LEAVE: c_int = 11;
pub const SDL_WINDOWEVENT_FOCUS_GAINED: c_int = 12;
pub const SDL_WINDOWEVENT_FOCUS_LOST: c_int = 13;
pub const SDL_WINDOWEVENT_CLOSE: c_int = 14;
pub const SDL_WINDOWEVENT_TAKE_FOCUS: c_int = 15;
pub const SDL_WINDOWEVENT_HIT_TEST: c_int = 16;
pub const SDL_WINDOWEVENT_ICCPROF_CHANGED: c_int = 17;
pub const SDL_WINDOWEVENT_DISPLAY_CHANGED: c_int = 18;
pub const SDL_WindowEventID = c_uint;
pub const SDL_DISPLAYEVENT_NONE: c_int = 0;
pub const SDL_DISPLAYEVENT_ORIENTATION: c_int = 1;
pub const SDL_DISPLAYEVENT_CONNECTED: c_int = 2;
pub const SDL_DISPLAYEVENT_DISCONNECTED: c_int = 3;
pub const SDL_DISPLAYEVENT_MOVED: c_int = 4;
pub const SDL_DisplayEventID = c_uint;
pub const SDL_ORIENTATION_UNKNOWN: c_int = 0;
pub const SDL_ORIENTATION_LANDSCAPE: c_int = 1;
pub const SDL_ORIENTATION_LANDSCAPE_FLIPPED: c_int = 2;
pub const SDL_ORIENTATION_PORTRAIT: c_int = 3;
pub const SDL_ORIENTATION_PORTRAIT_FLIPPED: c_int = 4;
pub const SDL_DisplayOrientation = c_uint;
pub const SDL_FLASH_CANCEL: c_int = 0;
pub const SDL_FLASH_BRIEFLY: c_int = 1;
pub const SDL_FLASH_UNTIL_FOCUSED: c_int = 2;
pub const SDL_FlashOperation = c_uint;
pub const SDL_GLContext = ?*anyopaque;
pub const SDL_GL_RED_SIZE: c_int = 0;
pub const SDL_GL_GREEN_SIZE: c_int = 1;
pub const SDL_GL_BLUE_SIZE: c_int = 2;
pub const SDL_GL_ALPHA_SIZE: c_int = 3;
pub const SDL_GL_BUFFER_SIZE: c_int = 4;
pub const SDL_GL_DOUBLEBUFFER: c_int = 5;
pub const SDL_GL_DEPTH_SIZE: c_int = 6;
pub const SDL_GL_STENCIL_SIZE: c_int = 7;
pub const SDL_GL_ACCUM_RED_SIZE: c_int = 8;
pub const SDL_GL_ACCUM_GREEN_SIZE: c_int = 9;
pub const SDL_GL_ACCUM_BLUE_SIZE: c_int = 10;
pub const SDL_GL_ACCUM_ALPHA_SIZE: c_int = 11;
pub const SDL_GL_STEREO: c_int = 12;
pub const SDL_GL_MULTISAMPLEBUFFERS: c_int = 13;
pub const SDL_GL_MULTISAMPLESAMPLES: c_int = 14;
pub const SDL_GL_ACCELERATED_VISUAL: c_int = 15;
pub const SDL_GL_RETAINED_BACKING: c_int = 16;
pub const SDL_GL_CONTEXT_MAJOR_VERSION: c_int = 17;
pub const SDL_GL_CONTEXT_MINOR_VERSION: c_int = 18;
pub const SDL_GL_CONTEXT_EGL: c_int = 19;
pub const SDL_GL_CONTEXT_FLAGS: c_int = 20;
pub const SDL_GL_CONTEXT_PROFILE_MASK: c_int = 21;
pub const SDL_GL_SHARE_WITH_CURRENT_CONTEXT: c_int = 22;
pub const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE: c_int = 23;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR: c_int = 24;
pub const SDL_GL_CONTEXT_RESET_NOTIFICATION: c_int = 25;
pub const SDL_GL_CONTEXT_NO_ERROR: c_int = 26;
pub const SDL_GL_FLOATBUFFERS: c_int = 27;
pub const SDL_GLattr = c_uint;
pub const SDL_GL_CONTEXT_PROFILE_CORE: c_int = 1;
pub const SDL_GL_CONTEXT_PROFILE_COMPATIBILITY: c_int = 2;
pub const SDL_GL_CONTEXT_PROFILE_ES: c_int = 4;
pub const SDL_GLprofile = c_uint;
pub const SDL_GL_CONTEXT_DEBUG_FLAG: c_int = 1;
pub const SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG: c_int = 2;
pub const SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG: c_int = 4;
pub const SDL_GL_CONTEXT_RESET_ISOLATION_FLAG: c_int = 8;
pub const SDL_GLcontextFlag = c_uint;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE: c_int = 0;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: c_int = 1;
pub const SDL_GLcontextReleaseFlag = c_uint;
pub const SDL_GL_CONTEXT_RESET_NO_NOTIFICATION: c_int = 0;
pub const SDL_GL_CONTEXT_RESET_LOSE_CONTEXT: c_int = 1;
pub const SDL_GLContextResetNotification = c_uint;
pub extern fn SDL_GetNumVideoDrivers() c_int;
pub extern fn SDL_GetVideoDriver(index: c_int) [*c]const u8;
pub extern fn SDL_VideoInit(driver_name: [*c]const u8) c_int;
pub extern fn SDL_VideoQuit() void;
pub extern fn SDL_GetCurrentVideoDriver() [*c]const u8;
pub extern fn SDL_GetNumVideoDisplays() c_int;
pub extern fn SDL_GetDisplayName(displayIndex: c_int) [*c]const u8;
pub extern fn SDL_GetDisplayBounds(displayIndex: c_int, rect: [*c]SDL_Rect) c_int;
pub extern fn SDL_GetDisplayUsableBounds(displayIndex: c_int, rect: [*c]SDL_Rect) c_int;
pub extern fn SDL_GetDisplayDPI(displayIndex: c_int, ddpi: [*c]f32, hdpi: [*c]f32, vdpi: [*c]f32) c_int;
pub extern fn SDL_GetDisplayOrientation(displayIndex: c_int) SDL_DisplayOrientation;
pub extern fn SDL_GetNumDisplayModes(displayIndex: c_int) c_int;
pub extern fn SDL_GetDisplayMode(displayIndex: c_int, modeIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetDesktopDisplayMode(displayIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetCurrentDisplayMode(displayIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetClosestDisplayMode(displayIndex: c_int, mode: [*c]const SDL_DisplayMode, closest: [*c]SDL_DisplayMode) [*c]SDL_DisplayMode;
pub extern fn SDL_GetPointDisplayIndex(point: [*c]const SDL_Point) c_int;
pub extern fn SDL_GetRectDisplayIndex(rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_GetWindowDisplayIndex(window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowDisplayMode(window: ?*SDL_Window, mode: [*c]const SDL_DisplayMode) c_int;
pub extern fn SDL_GetWindowDisplayMode(window: ?*SDL_Window, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetWindowICCProfile(window: ?*SDL_Window, size: [*c]usize) ?*anyopaque;
pub extern fn SDL_GetWindowPixelFormat(window: ?*SDL_Window) Uint32;
pub extern fn SDL_CreateWindow(title: [*c]const u8, x: c_int, y: c_int, w: c_int, h: c_int, flags: Uint32) ?*SDL_Window;
pub extern fn SDL_CreateWindowFrom(data: ?*const anyopaque) ?*SDL_Window;
pub extern fn SDL_GetWindowID(window: ?*SDL_Window) Uint32;
pub extern fn SDL_GetWindowFromID(id: Uint32) ?*SDL_Window;
pub extern fn SDL_GetWindowFlags(window: ?*SDL_Window) Uint32;
pub extern fn SDL_SetWindowTitle(window: ?*SDL_Window, title: [*c]const u8) void;
pub extern fn SDL_GetWindowTitle(window: ?*SDL_Window) [*c]const u8;
pub extern fn SDL_SetWindowIcon(window: ?*SDL_Window, icon: [*c]SDL_Surface) void;
pub extern fn SDL_SetWindowData(window: ?*SDL_Window, name: [*c]const u8, userdata: ?*anyopaque) ?*anyopaque;
pub extern fn SDL_GetWindowData(window: ?*SDL_Window, name: [*c]const u8) ?*anyopaque;
pub extern fn SDL_SetWindowPosition(window: ?*SDL_Window, x: c_int, y: c_int) void;
pub extern fn SDL_GetWindowPosition(window: ?*SDL_Window, x: [*c]c_int, y: [*c]c_int) void;
pub extern fn SDL_SetWindowSize(window: ?*SDL_Window, w: c_int, h: c_int) void;
pub extern fn SDL_GetWindowSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_GetWindowBordersSize(window: ?*SDL_Window, top: [*c]c_int, left: [*c]c_int, bottom: [*c]c_int, right: [*c]c_int) c_int;
pub extern fn SDL_GetWindowSizeInPixels(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_SetWindowMinimumSize(window: ?*SDL_Window, min_w: c_int, min_h: c_int) void;
pub extern fn SDL_GetWindowMinimumSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_SetWindowMaximumSize(window: ?*SDL_Window, max_w: c_int, max_h: c_int) void;
pub extern fn SDL_GetWindowMaximumSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_SetWindowBordered(window: ?*SDL_Window, bordered: SDL_bool) void;
pub extern fn SDL_SetWindowResizable(window: ?*SDL_Window, resizable: SDL_bool) void;
pub extern fn SDL_SetWindowAlwaysOnTop(window: ?*SDL_Window, on_top: SDL_bool) void;
pub extern fn SDL_ShowWindow(window: ?*SDL_Window) void;
pub extern fn SDL_HideWindow(window: ?*SDL_Window) void;
pub extern fn SDL_RaiseWindow(window: ?*SDL_Window) void;
pub extern fn SDL_MaximizeWindow(window: ?*SDL_Window) void;
pub extern fn SDL_MinimizeWindow(window: ?*SDL_Window) void;
pub extern fn SDL_RestoreWindow(window: ?*SDL_Window) void;
pub extern fn SDL_SetWindowFullscreen(window: ?*SDL_Window, flags: Uint32) c_int;
pub extern fn SDL_HasWindowSurface(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetWindowSurface(window: ?*SDL_Window) [*c]SDL_Surface;
pub extern fn SDL_UpdateWindowSurface(window: ?*SDL_Window) c_int;
pub extern fn SDL_UpdateWindowSurfaceRects(window: ?*SDL_Window, rects: [*c]const SDL_Rect, numrects: c_int) c_int;
pub extern fn SDL_DestroyWindowSurface(window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_SetWindowKeyboardGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_SetWindowMouseGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_GetWindowGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetWindowKeyboardGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetWindowMouseGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetGrabbedWindow() ?*SDL_Window;
pub extern fn SDL_SetWindowMouseRect(window: ?*SDL_Window, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_GetWindowMouseRect(window: ?*SDL_Window) [*c]const SDL_Rect;
pub extern fn SDL_SetWindowBrightness(window: ?*SDL_Window, brightness: f32) c_int;
pub extern fn SDL_GetWindowBrightness(window: ?*SDL_Window) f32;
pub extern fn SDL_SetWindowOpacity(window: ?*SDL_Window, opacity: f32) c_int;
pub extern fn SDL_GetWindowOpacity(window: ?*SDL_Window, out_opacity: [*c]f32) c_int;
pub extern fn SDL_SetWindowModalFor(modal_window: ?*SDL_Window, parent_window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowInputFocus(window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowGammaRamp(window: ?*SDL_Window, red: [*c]const Uint16, green: [*c]const Uint16, blue: [*c]const Uint16) c_int;
pub extern fn SDL_GetWindowGammaRamp(window: ?*SDL_Window, red: [*c]Uint16, green: [*c]Uint16, blue: [*c]Uint16) c_int;
pub const SDL_HITTEST_NORMAL: c_int = 0;
pub const SDL_HITTEST_DRAGGABLE: c_int = 1;
pub const SDL_HITTEST_RESIZE_TOPLEFT: c_int = 2;
pub const SDL_HITTEST_RESIZE_TOP: c_int = 3;
pub const SDL_HITTEST_RESIZE_TOPRIGHT: c_int = 4;
pub const SDL_HITTEST_RESIZE_RIGHT: c_int = 5;
pub const SDL_HITTEST_RESIZE_BOTTOMRIGHT: c_int = 6;
pub const SDL_HITTEST_RESIZE_BOTTOM: c_int = 7;
pub const SDL_HITTEST_RESIZE_BOTTOMLEFT: c_int = 8;
pub const SDL_HITTEST_RESIZE_LEFT: c_int = 9;
pub const SDL_HitTestResult = c_uint;
pub const SDL_HitTest = ?*const fn (?*SDL_Window, [*c]const SDL_Point, ?*anyopaque) callconv(.C) SDL_HitTestResult;
pub extern fn SDL_SetWindowHitTest(window: ?*SDL_Window, callback: SDL_HitTest, callback_data: ?*anyopaque) c_int;
pub extern fn SDL_FlashWindow(window: ?*SDL_Window, operation: SDL_FlashOperation) c_int;
pub extern fn SDL_DestroyWindow(window: ?*SDL_Window) void;
pub extern fn SDL_IsScreenSaverEnabled() SDL_bool;
pub extern fn SDL_EnableScreenSaver() void;
pub extern fn SDL_DisableScreenSaver() void;
pub extern fn SDL_GL_LoadLibrary(path: [*c]const u8) c_int;
pub extern fn SDL_GL_GetProcAddress(proc: [*c]const u8) ?*anyopaque;
pub extern fn SDL_GL_UnloadLibrary() void;
pub extern fn SDL_GL_ExtensionSupported(extension: [*c]const u8) SDL_bool;
pub extern fn SDL_GL_ResetAttributes() void;
pub extern fn SDL_GL_SetAttribute(attr: SDL_GLattr, value: c_int) c_int;
pub extern fn SDL_GL_GetAttribute(attr: SDL_GLattr, value: [*c]c_int) c_int;
pub extern fn SDL_GL_CreateContext(window: ?*SDL_Window) SDL_GLContext;
pub extern fn SDL_GL_MakeCurrent(window: ?*SDL_Window, context: SDL_GLContext) c_int;
pub extern fn SDL_GL_GetCurrentWindow() ?*SDL_Window;
pub extern fn SDL_GL_GetCurrentContext() SDL_GLContext;
pub extern fn SDL_GL_GetDrawableSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_GL_SetSwapInterval(interval: c_int) c_int;
pub extern fn SDL_GL_GetSwapInterval() c_int;
pub extern fn SDL_GL_SwapWindow(window: ?*SDL_Window) void;
pub extern fn SDL_GL_DeleteContext(context: SDL_GLContext) void;
pub const SDL_SCANCODE_UNKNOWN: c_int = 0;
pub const SDL_SCANCODE_A: c_int = 4;
pub const SDL_SCANCODE_B: c_int = 5;
pub const SDL_SCANCODE_C: c_int = 6;
pub const SDL_SCANCODE_D: c_int = 7;
pub const SDL_SCANCODE_E: c_int = 8;
pub const SDL_SCANCODE_F: c_int = 9;
pub const SDL_SCANCODE_G: c_int = 10;
pub const SDL_SCANCODE_H: c_int = 11;
pub const SDL_SCANCODE_I: c_int = 12;
pub const SDL_SCANCODE_J: c_int = 13;
pub const SDL_SCANCODE_K: c_int = 14;
pub const SDL_SCANCODE_L: c_int = 15;
pub const SDL_SCANCODE_M: c_int = 16;
pub const SDL_SCANCODE_N: c_int = 17;
pub const SDL_SCANCODE_O: c_int = 18;
pub const SDL_SCANCODE_P: c_int = 19;
pub const SDL_SCANCODE_Q: c_int = 20;
pub const SDL_SCANCODE_R: c_int = 21;
pub const SDL_SCANCODE_S: c_int = 22;
pub const SDL_SCANCODE_T: c_int = 23;
pub const SDL_SCANCODE_U: c_int = 24;
pub const SDL_SCANCODE_V: c_int = 25;
pub const SDL_SCANCODE_W: c_int = 26;
pub const SDL_SCANCODE_X: c_int = 27;
pub const SDL_SCANCODE_Y: c_int = 28;
pub const SDL_SCANCODE_Z: c_int = 29;
pub const SDL_SCANCODE_1: c_int = 30;
pub const SDL_SCANCODE_2: c_int = 31;
pub const SDL_SCANCODE_3: c_int = 32;
pub const SDL_SCANCODE_4: c_int = 33;
pub const SDL_SCANCODE_5: c_int = 34;
pub const SDL_SCANCODE_6: c_int = 35;
pub const SDL_SCANCODE_7: c_int = 36;
pub const SDL_SCANCODE_8: c_int = 37;
pub const SDL_SCANCODE_9: c_int = 38;
pub const SDL_SCANCODE_0: c_int = 39;
pub const SDL_SCANCODE_RETURN: c_int = 40;
pub const SDL_SCANCODE_ESCAPE: c_int = 41;
pub const SDL_SCANCODE_BACKSPACE: c_int = 42;
pub const SDL_SCANCODE_TAB: c_int = 43;
pub const SDL_SCANCODE_SPACE: c_int = 44;
pub const SDL_SCANCODE_MINUS: c_int = 45;
pub const SDL_SCANCODE_EQUALS: c_int = 46;
pub const SDL_SCANCODE_LEFTBRACKET: c_int = 47;
pub const SDL_SCANCODE_RIGHTBRACKET: c_int = 48;
pub const SDL_SCANCODE_BACKSLASH: c_int = 49;
pub const SDL_SCANCODE_NONUSHASH: c_int = 50;
pub const SDL_SCANCODE_SEMICOLON: c_int = 51;
pub const SDL_SCANCODE_APOSTROPHE: c_int = 52;
pub const SDL_SCANCODE_GRAVE: c_int = 53;
pub const SDL_SCANCODE_COMMA: c_int = 54;
pub const SDL_SCANCODE_PERIOD: c_int = 55;
pub const SDL_SCANCODE_SLASH: c_int = 56;
pub const SDL_SCANCODE_CAPSLOCK: c_int = 57;
pub const SDL_SCANCODE_F1: c_int = 58;
pub const SDL_SCANCODE_F2: c_int = 59;
pub const SDL_SCANCODE_F3: c_int = 60;
pub const SDL_SCANCODE_F4: c_int = 61;
pub const SDL_SCANCODE_F5: c_int = 62;
pub const SDL_SCANCODE_F6: c_int = 63;
pub const SDL_SCANCODE_F7: c_int = 64;
pub const SDL_SCANCODE_F8: c_int = 65;
pub const SDL_SCANCODE_F9: c_int = 66;
pub const SDL_SCANCODE_F10: c_int = 67;
pub const SDL_SCANCODE_F11: c_int = 68;
pub const SDL_SCANCODE_F12: c_int = 69;
pub const SDL_SCANCODE_PRINTSCREEN: c_int = 70;
pub const SDL_SCANCODE_SCROLLLOCK: c_int = 71;
pub const SDL_SCANCODE_PAUSE: c_int = 72;
pub const SDL_SCANCODE_INSERT: c_int = 73;
pub const SDL_SCANCODE_HOME: c_int = 74;
pub const SDL_SCANCODE_PAGEUP: c_int = 75;
pub const SDL_SCANCODE_DELETE: c_int = 76;
pub const SDL_SCANCODE_END: c_int = 77;
pub const SDL_SCANCODE_PAGEDOWN: c_int = 78;
pub const SDL_SCANCODE_RIGHT: c_int = 79;
pub const SDL_SCANCODE_LEFT: c_int = 80;
pub const SDL_SCANCODE_DOWN: c_int = 81;
pub const SDL_SCANCODE_UP: c_int = 82;
pub const SDL_SCANCODE_NUMLOCKCLEAR: c_int = 83;
pub const SDL_SCANCODE_KP_DIVIDE: c_int = 84;
pub const SDL_SCANCODE_KP_MULTIPLY: c_int = 85;
pub const SDL_SCANCODE_KP_MINUS: c_int = 86;
pub const SDL_SCANCODE_KP_PLUS: c_int = 87;
pub const SDL_SCANCODE_KP_ENTER: c_int = 88;
pub const SDL_SCANCODE_KP_1: c_int = 89;
pub const SDL_SCANCODE_KP_2: c_int = 90;
pub const SDL_SCANCODE_KP_3: c_int = 91;
pub const SDL_SCANCODE_KP_4: c_int = 92;
pub const SDL_SCANCODE_KP_5: c_int = 93;
pub const SDL_SCANCODE_KP_6: c_int = 94;
pub const SDL_SCANCODE_KP_7: c_int = 95;
pub const SDL_SCANCODE_KP_8: c_int = 96;
pub const SDL_SCANCODE_KP_9: c_int = 97;
pub const SDL_SCANCODE_KP_0: c_int = 98;
pub const SDL_SCANCODE_KP_PERIOD: c_int = 99;
pub const SDL_SCANCODE_NONUSBACKSLASH: c_int = 100;
pub const SDL_SCANCODE_APPLICATION: c_int = 101;
pub const SDL_SCANCODE_POWER: c_int = 102;
pub const SDL_SCANCODE_KP_EQUALS: c_int = 103;
pub const SDL_SCANCODE_F13: c_int = 104;
pub const SDL_SCANCODE_F14: c_int = 105;
pub const SDL_SCANCODE_F15: c_int = 106;
pub const SDL_SCANCODE_F16: c_int = 107;
pub const SDL_SCANCODE_F17: c_int = 108;
pub const SDL_SCANCODE_F18: c_int = 109;
pub const SDL_SCANCODE_F19: c_int = 110;
pub const SDL_SCANCODE_F20: c_int = 111;
pub const SDL_SCANCODE_F21: c_int = 112;
pub const SDL_SCANCODE_F22: c_int = 113;
pub const SDL_SCANCODE_F23: c_int = 114;
pub const SDL_SCANCODE_F24: c_int = 115;
pub const SDL_SCANCODE_EXECUTE: c_int = 116;
pub const SDL_SCANCODE_HELP: c_int = 117;
pub const SDL_SCANCODE_MENU: c_int = 118;
pub const SDL_SCANCODE_SELECT: c_int = 119;
pub const SDL_SCANCODE_STOP: c_int = 120;
pub const SDL_SCANCODE_AGAIN: c_int = 121;
pub const SDL_SCANCODE_UNDO: c_int = 122;
pub const SDL_SCANCODE_CUT: c_int = 123;
pub const SDL_SCANCODE_COPY: c_int = 124;
pub const SDL_SCANCODE_PASTE: c_int = 125;
pub const SDL_SCANCODE_FIND: c_int = 126;
pub const SDL_SCANCODE_MUTE: c_int = 127;
pub const SDL_SCANCODE_VOLUMEUP: c_int = 128;
pub const SDL_SCANCODE_VOLUMEDOWN: c_int = 129;
pub const SDL_SCANCODE_KP_COMMA: c_int = 133;
pub const SDL_SCANCODE_KP_EQUALSAS400: c_int = 134;
pub const SDL_SCANCODE_INTERNATIONAL1: c_int = 135;
pub const SDL_SCANCODE_INTERNATIONAL2: c_int = 136;
pub const SDL_SCANCODE_INTERNATIONAL3: c_int = 137;
pub const SDL_SCANCODE_INTERNATIONAL4: c_int = 138;
pub const SDL_SCANCODE_INTERNATIONAL5: c_int = 139;
pub const SDL_SCANCODE_INTERNATIONAL6: c_int = 140;
pub const SDL_SCANCODE_INTERNATIONAL7: c_int = 141;
pub const SDL_SCANCODE_INTERNATIONAL8: c_int = 142;
pub const SDL_SCANCODE_INTERNATIONAL9: c_int = 143;
pub const SDL_SCANCODE_LANG1: c_int = 144;
pub const SDL_SCANCODE_LANG2: c_int = 145;
pub const SDL_SCANCODE_LANG3: c_int = 146;
pub const SDL_SCANCODE_LANG4: c_int = 147;
pub const SDL_SCANCODE_LANG5: c_int = 148;
pub const SDL_SCANCODE_LANG6: c_int = 149;
pub const SDL_SCANCODE_LANG7: c_int = 150;
pub const SDL_SCANCODE_LANG8: c_int = 151;
pub const SDL_SCANCODE_LANG9: c_int = 152;
pub const SDL_SCANCODE_ALTERASE: c_int = 153;
pub const SDL_SCANCODE_SYSREQ: c_int = 154;
pub const SDL_SCANCODE_CANCEL: c_int = 155;
pub const SDL_SCANCODE_CLEAR: c_int = 156;
pub const SDL_SCANCODE_PRIOR: c_int = 157;
pub const SDL_SCANCODE_RETURN2: c_int = 158;
pub const SDL_SCANCODE_SEPARATOR: c_int = 159;
pub const SDL_SCANCODE_OUT: c_int = 160;
pub const SDL_SCANCODE_OPER: c_int = 161;
pub const SDL_SCANCODE_CLEARAGAIN: c_int = 162;
pub const SDL_SCANCODE_CRSEL: c_int = 163;
pub const SDL_SCANCODE_EXSEL: c_int = 164;
pub const SDL_SCANCODE_KP_00: c_int = 176;
pub const SDL_SCANCODE_KP_000: c_int = 177;
pub const SDL_SCANCODE_THOUSANDSSEPARATOR: c_int = 178;
pub const SDL_SCANCODE_DECIMALSEPARATOR: c_int = 179;
pub const SDL_SCANCODE_CURRENCYUNIT: c_int = 180;
pub const SDL_SCANCODE_CURRENCYSUBUNIT: c_int = 181;
pub const SDL_SCANCODE_KP_LEFTPAREN: c_int = 182;
pub const SDL_SCANCODE_KP_RIGHTPAREN: c_int = 183;
pub const SDL_SCANCODE_KP_LEFTBRACE: c_int = 184;
pub const SDL_SCANCODE_KP_RIGHTBRACE: c_int = 185;
pub const SDL_SCANCODE_KP_TAB: c_int = 186;
pub const SDL_SCANCODE_KP_BACKSPACE: c_int = 187;
pub const SDL_SCANCODE_KP_A: c_int = 188;
pub const SDL_SCANCODE_KP_B: c_int = 189;
pub const SDL_SCANCODE_KP_C: c_int = 190;
pub const SDL_SCANCODE_KP_D: c_int = 191;
pub const SDL_SCANCODE_KP_E: c_int = 192;
pub const SDL_SCANCODE_KP_F: c_int = 193;
pub const SDL_SCANCODE_KP_XOR: c_int = 194;
pub const SDL_SCANCODE_KP_POWER: c_int = 195;
pub const SDL_SCANCODE_KP_PERCENT: c_int = 196;
pub const SDL_SCANCODE_KP_LESS: c_int = 197;
pub const SDL_SCANCODE_KP_GREATER: c_int = 198;
pub const SDL_SCANCODE_KP_AMPERSAND: c_int = 199;
pub const SDL_SCANCODE_KP_DBLAMPERSAND: c_int = 200;
pub const SDL_SCANCODE_KP_VERTICALBAR: c_int = 201;
pub const SDL_SCANCODE_KP_DBLVERTICALBAR: c_int = 202;
pub const SDL_SCANCODE_KP_COLON: c_int = 203;
pub const SDL_SCANCODE_KP_HASH: c_int = 204;
pub const SDL_SCANCODE_KP_SPACE: c_int = 205;
pub const SDL_SCANCODE_KP_AT: c_int = 206;
pub const SDL_SCANCODE_KP_EXCLAM: c_int = 207;
pub const SDL_SCANCODE_KP_MEMSTORE: c_int = 208;
pub const SDL_SCANCODE_KP_MEMRECALL: c_int = 209;
pub const SDL_SCANCODE_KP_MEMCLEAR: c_int = 210;
pub const SDL_SCANCODE_KP_MEMADD: c_int = 211;
pub const SDL_SCANCODE_KP_MEMSUBTRACT: c_int = 212;
pub const SDL_SCANCODE_KP_MEMMULTIPLY: c_int = 213;
pub const SDL_SCANCODE_KP_MEMDIVIDE: c_int = 214;
pub const SDL_SCANCODE_KP_PLUSMINUS: c_int = 215;
pub const SDL_SCANCODE_KP_CLEAR: c_int = 216;
pub const SDL_SCANCODE_KP_CLEARENTRY: c_int = 217;
pub const SDL_SCANCODE_KP_BINARY: c_int = 218;
pub const SDL_SCANCODE_KP_OCTAL: c_int = 219;
pub const SDL_SCANCODE_KP_DECIMAL: c_int = 220;
pub const SDL_SCANCODE_KP_HEXADECIMAL: c_int = 221;
pub const SDL_SCANCODE_LCTRL: c_int = 224;
pub const SDL_SCANCODE_LSHIFT: c_int = 225;
pub const SDL_SCANCODE_LALT: c_int = 226;
pub const SDL_SCANCODE_LGUI: c_int = 227;
pub const SDL_SCANCODE_RCTRL: c_int = 228;
pub const SDL_SCANCODE_RSHIFT: c_int = 229;
pub const SDL_SCANCODE_RALT: c_int = 230;
pub const SDL_SCANCODE_RGUI: c_int = 231;
pub const SDL_SCANCODE_MODE: c_int = 257;
pub const SDL_SCANCODE_AUDIONEXT: c_int = 258;
pub const SDL_SCANCODE_AUDIOPREV: c_int = 259;
pub const SDL_SCANCODE_AUDIOSTOP: c_int = 260;
pub const SDL_SCANCODE_AUDIOPLAY: c_int = 261;
pub const SDL_SCANCODE_AUDIOMUTE: c_int = 262;
pub const SDL_SCANCODE_MEDIASELECT: c_int = 263;
pub const SDL_SCANCODE_WWW: c_int = 264;
pub const SDL_SCANCODE_MAIL: c_int = 265;
pub const SDL_SCANCODE_CALCULATOR: c_int = 266;
pub const SDL_SCANCODE_COMPUTER: c_int = 267;
pub const SDL_SCANCODE_AC_SEARCH: c_int = 268;
pub const SDL_SCANCODE_AC_HOME: c_int = 269;
pub const SDL_SCANCODE_AC_BACK: c_int = 270;
pub const SDL_SCANCODE_AC_FORWARD: c_int = 271;
pub const SDL_SCANCODE_AC_STOP: c_int = 272;
pub const SDL_SCANCODE_AC_REFRESH: c_int = 273;
pub const SDL_SCANCODE_AC_BOOKMARKS: c_int = 274;
pub const SDL_SCANCODE_BRIGHTNESSDOWN: c_int = 275;
pub const SDL_SCANCODE_BRIGHTNESSUP: c_int = 276;
pub const SDL_SCANCODE_DISPLAYSWITCH: c_int = 277;
pub const SDL_SCANCODE_KBDILLUMTOGGLE: c_int = 278;
pub const SDL_SCANCODE_KBDILLUMDOWN: c_int = 279;
pub const SDL_SCANCODE_KBDILLUMUP: c_int = 280;
pub const SDL_SCANCODE_EJECT: c_int = 281;
pub const SDL_SCANCODE_SLEEP: c_int = 282;
pub const SDL_SCANCODE_APP1: c_int = 283;
pub const SDL_SCANCODE_APP2: c_int = 284;
pub const SDL_SCANCODE_AUDIOREWIND: c_int = 285;
pub const SDL_SCANCODE_AUDIOFASTFORWARD: c_int = 286;
pub const SDL_SCANCODE_SOFTLEFT: c_int = 287;
pub const SDL_SCANCODE_SOFTRIGHT: c_int = 288;
pub const SDL_SCANCODE_CALL: c_int = 289;
pub const SDL_SCANCODE_ENDCALL: c_int = 290;
pub const SDL_NUM_SCANCODES: c_int = 512;
pub const SDL_Scancode = c_uint;
pub const SDL_Keycode = Sint32;
pub const SDLK_UNKNOWN: c_int = 0;
pub const SDLK_RETURN: c_int = 13;
pub const SDLK_ESCAPE: c_int = 27;
pub const SDLK_BACKSPACE: c_int = 8;
pub const SDLK_TAB: c_int = 9;
pub const SDLK_SPACE: c_int = 32;
pub const SDLK_EXCLAIM: c_int = 33;
pub const SDLK_QUOTEDBL: c_int = 34;
pub const SDLK_HASH: c_int = 35;
pub const SDLK_PERCENT: c_int = 37;
pub const SDLK_DOLLAR: c_int = 36;
pub const SDLK_AMPERSAND: c_int = 38;
pub const SDLK_QUOTE: c_int = 39;
pub const SDLK_LEFTPAREN: c_int = 40;
pub const SDLK_RIGHTPAREN: c_int = 41;
pub const SDLK_ASTERISK: c_int = 42;
pub const SDLK_PLUS: c_int = 43;
pub const SDLK_COMMA: c_int = 44;
pub const SDLK_MINUS: c_int = 45;
pub const SDLK_PERIOD: c_int = 46;
pub const SDLK_SLASH: c_int = 47;
pub const SDLK_0: c_int = 48;
pub const SDLK_1: c_int = 49;
pub const SDLK_2: c_int = 50;
pub const SDLK_3: c_int = 51;
pub const SDLK_4: c_int = 52;
pub const SDLK_5: c_int = 53;
pub const SDLK_6: c_int = 54;
pub const SDLK_7: c_int = 55;
pub const SDLK_8: c_int = 56;
pub const SDLK_9: c_int = 57;
pub const SDLK_COLON: c_int = 58;
pub const SDLK_SEMICOLON: c_int = 59;
pub const SDLK_LESS: c_int = 60;
pub const SDLK_EQUALS: c_int = 61;
pub const SDLK_GREATER: c_int = 62;
pub const SDLK_QUESTION: c_int = 63;
pub const SDLK_AT: c_int = 64;
pub const SDLK_LEFTBRACKET: c_int = 91;
pub const SDLK_BACKSLASH: c_int = 92;
pub const SDLK_RIGHTBRACKET: c_int = 93;
pub const SDLK_CARET: c_int = 94;
pub const SDLK_UNDERSCORE: c_int = 95;
pub const SDLK_BACKQUOTE: c_int = 96;
pub const SDLK_a: c_int = 97;
pub const SDLK_b: c_int = 98;
pub const SDLK_c: c_int = 99;
pub const SDLK_d: c_int = 100;
pub const SDLK_e: c_int = 101;
pub const SDLK_f: c_int = 102;
pub const SDLK_g: c_int = 103;
pub const SDLK_h: c_int = 104;
pub const SDLK_i: c_int = 105;
pub const SDLK_j: c_int = 106;
pub const SDLK_k: c_int = 107;
pub const SDLK_l: c_int = 108;
pub const SDLK_m: c_int = 109;
pub const SDLK_n: c_int = 110;
pub const SDLK_o: c_int = 111;
pub const SDLK_p: c_int = 112;
pub const SDLK_q: c_int = 113;
pub const SDLK_r: c_int = 114;
pub const SDLK_s: c_int = 115;
pub const SDLK_t: c_int = 116;
pub const SDLK_u: c_int = 117;
pub const SDLK_v: c_int = 118;
pub const SDLK_w: c_int = 119;
pub const SDLK_x: c_int = 120;
pub const SDLK_y: c_int = 121;
pub const SDLK_z: c_int = 122;
pub const SDLK_CAPSLOCK: c_int = 1073741881;
pub const SDLK_F1: c_int = 1073741882;
pub const SDLK_F2: c_int = 1073741883;
pub const SDLK_F3: c_int = 1073741884;
pub const SDLK_F4: c_int = 1073741885;
pub const SDLK_F5: c_int = 1073741886;
pub const SDLK_F6: c_int = 1073741887;
pub const SDLK_F7: c_int = 1073741888;
pub const SDLK_F8: c_int = 1073741889;
pub const SDLK_F9: c_int = 1073741890;
pub const SDLK_F10: c_int = 1073741891;
pub const SDLK_F11: c_int = 1073741892;
pub const SDLK_F12: c_int = 1073741893;
pub const SDLK_PRINTSCREEN: c_int = 1073741894;
pub const SDLK_SCROLLLOCK: c_int = 1073741895;
pub const SDLK_PAUSE: c_int = 1073741896;
pub const SDLK_INSERT: c_int = 1073741897;
pub const SDLK_HOME: c_int = 1073741898;
pub const SDLK_PAGEUP: c_int = 1073741899;
pub const SDLK_DELETE: c_int = 127;
pub const SDLK_END: c_int = 1073741901;
pub const SDLK_PAGEDOWN: c_int = 1073741902;
pub const SDLK_RIGHT: c_int = 1073741903;
pub const SDLK_LEFT: c_int = 1073741904;
pub const SDLK_DOWN: c_int = 1073741905;
pub const SDLK_UP: c_int = 1073741906;
pub const SDLK_NUMLOCKCLEAR: c_int = 1073741907;
pub const SDLK_KP_DIVIDE: c_int = 1073741908;
pub const SDLK_KP_MULTIPLY: c_int = 1073741909;
pub const SDLK_KP_MINUS: c_int = 1073741910;
pub const SDLK_KP_PLUS: c_int = 1073741911;
pub const SDLK_KP_ENTER: c_int = 1073741912;
pub const SDLK_KP_1: c_int = 1073741913;
pub const SDLK_KP_2: c_int = 1073741914;
pub const SDLK_KP_3: c_int = 1073741915;
pub const SDLK_KP_4: c_int = 1073741916;
pub const SDLK_KP_5: c_int = 1073741917;
pub const SDLK_KP_6: c_int = 1073741918;
pub const SDLK_KP_7: c_int = 1073741919;
pub const SDLK_KP_8: c_int = 1073741920;
pub const SDLK_KP_9: c_int = 1073741921;
pub const SDLK_KP_0: c_int = 1073741922;
pub const SDLK_KP_PERIOD: c_int = 1073741923;
pub const SDLK_APPLICATION: c_int = 1073741925;
pub const SDLK_POWER: c_int = 1073741926;
pub const SDLK_KP_EQUALS: c_int = 1073741927;
pub const SDLK_F13: c_int = 1073741928;
pub const SDLK_F14: c_int = 1073741929;
pub const SDLK_F15: c_int = 1073741930;
pub const SDLK_F16: c_int = 1073741931;
pub const SDLK_F17: c_int = 1073741932;
pub const SDLK_F18: c_int = 1073741933;
pub const SDLK_F19: c_int = 1073741934;
pub const SDLK_F20: c_int = 1073741935;
pub const SDLK_F21: c_int = 1073741936;
pub const SDLK_F22: c_int = 1073741937;
pub const SDLK_F23: c_int = 1073741938;
pub const SDLK_F24: c_int = 1073741939;
pub const SDLK_EXECUTE: c_int = 1073741940;
pub const SDLK_HELP: c_int = 1073741941;
pub const SDLK_MENU: c_int = 1073741942;
pub const SDLK_SELECT: c_int = 1073741943;
pub const SDLK_STOP: c_int = 1073741944;
pub const SDLK_AGAIN: c_int = 1073741945;
pub const SDLK_UNDO: c_int = 1073741946;
pub const SDLK_CUT: c_int = 1073741947;
pub const SDLK_COPY: c_int = 1073741948;
pub const SDLK_PASTE: c_int = 1073741949;
pub const SDLK_FIND: c_int = 1073741950;
pub const SDLK_MUTE: c_int = 1073741951;
pub const SDLK_VOLUMEUP: c_int = 1073741952;
pub const SDLK_VOLUMEDOWN: c_int = 1073741953;
pub const SDLK_KP_COMMA: c_int = 1073741957;
pub const SDLK_KP_EQUALSAS400: c_int = 1073741958;
pub const SDLK_ALTERASE: c_int = 1073741977;
pub const SDLK_SYSREQ: c_int = 1073741978;
pub const SDLK_CANCEL: c_int = 1073741979;
pub const SDLK_CLEAR: c_int = 1073741980;
pub const SDLK_PRIOR: c_int = 1073741981;
pub const SDLK_RETURN2: c_int = 1073741982;
pub const SDLK_SEPARATOR: c_int = 1073741983;
pub const SDLK_OUT: c_int = 1073741984;
pub const SDLK_OPER: c_int = 1073741985;
pub const SDLK_CLEARAGAIN: c_int = 1073741986;
pub const SDLK_CRSEL: c_int = 1073741987;
pub const SDLK_EXSEL: c_int = 1073741988;
pub const SDLK_KP_00: c_int = 1073742000;
pub const SDLK_KP_000: c_int = 1073742001;
pub const SDLK_THOUSANDSSEPARATOR: c_int = 1073742002;
pub const SDLK_DECIMALSEPARATOR: c_int = 1073742003;
pub const SDLK_CURRENCYUNIT: c_int = 1073742004;
pub const SDLK_CURRENCYSUBUNIT: c_int = 1073742005;
pub const SDLK_KP_LEFTPAREN: c_int = 1073742006;
pub const SDLK_KP_RIGHTPAREN: c_int = 1073742007;
pub const SDLK_KP_LEFTBRACE: c_int = 1073742008;
pub const SDLK_KP_RIGHTBRACE: c_int = 1073742009;
pub const SDLK_KP_TAB: c_int = 1073742010;
pub const SDLK_KP_BACKSPACE: c_int = 1073742011;
pub const SDLK_KP_A: c_int = 1073742012;
pub const SDLK_KP_B: c_int = 1073742013;
pub const SDLK_KP_C: c_int = 1073742014;
pub const SDLK_KP_D: c_int = 1073742015;
pub const SDLK_KP_E: c_int = 1073742016;
pub const SDLK_KP_F: c_int = 1073742017;
pub const SDLK_KP_XOR: c_int = 1073742018;
pub const SDLK_KP_POWER: c_int = 1073742019;
pub const SDLK_KP_PERCENT: c_int = 1073742020;
pub const SDLK_KP_LESS: c_int = 1073742021;
pub const SDLK_KP_GREATER: c_int = 1073742022;
pub const SDLK_KP_AMPERSAND: c_int = 1073742023;
pub const SDLK_KP_DBLAMPERSAND: c_int = 1073742024;
pub const SDLK_KP_VERTICALBAR: c_int = 1073742025;
pub const SDLK_KP_DBLVERTICALBAR: c_int = 1073742026;
pub const SDLK_KP_COLON: c_int = 1073742027;
pub const SDLK_KP_HASH: c_int = 1073742028;
pub const SDLK_KP_SPACE: c_int = 1073742029;
pub const SDLK_KP_AT: c_int = 1073742030;
pub const SDLK_KP_EXCLAM: c_int = 1073742031;
pub const SDLK_KP_MEMSTORE: c_int = 1073742032;
pub const SDLK_KP_MEMRECALL: c_int = 1073742033;
pub const SDLK_KP_MEMCLEAR: c_int = 1073742034;
pub const SDLK_KP_MEMADD: c_int = 1073742035;
pub const SDLK_KP_MEMSUBTRACT: c_int = 1073742036;
pub const SDLK_KP_MEMMULTIPLY: c_int = 1073742037;
pub const SDLK_KP_MEMDIVIDE: c_int = 1073742038;
pub const SDLK_KP_PLUSMINUS: c_int = 1073742039;
pub const SDLK_KP_CLEAR: c_int = 1073742040;
pub const SDLK_KP_CLEARENTRY: c_int = 1073742041;
pub const SDLK_KP_BINARY: c_int = 1073742042;
pub const SDLK_KP_OCTAL: c_int = 1073742043;
pub const SDLK_KP_DECIMAL: c_int = 1073742044;
pub const SDLK_KP_HEXADECIMAL: c_int = 1073742045;
pub const SDLK_LCTRL: c_int = 1073742048;
pub const SDLK_LSHIFT: c_int = 1073742049;
pub const SDLK_LALT: c_int = 1073742050;
pub const SDLK_LGUI: c_int = 1073742051;
pub const SDLK_RCTRL: c_int = 1073742052;
pub const SDLK_RSHIFT: c_int = 1073742053;
pub const SDLK_RALT: c_int = 1073742054;
pub const SDLK_RGUI: c_int = 1073742055;
pub const SDLK_MODE: c_int = 1073742081;
pub const SDLK_AUDIONEXT: c_int = 1073742082;
pub const SDLK_AUDIOPREV: c_int = 1073742083;
pub const SDLK_AUDIOSTOP: c_int = 1073742084;
pub const SDLK_AUDIOPLAY: c_int = 1073742085;
pub const SDLK_AUDIOMUTE: c_int = 1073742086;
pub const SDLK_MEDIASELECT: c_int = 1073742087;
pub const SDLK_WWW: c_int = 1073742088;
pub const SDLK_MAIL: c_int = 1073742089;
pub const SDLK_CALCULATOR: c_int = 1073742090;
pub const SDLK_COMPUTER: c_int = 1073742091;
pub const SDLK_AC_SEARCH: c_int = 1073742092;
pub const SDLK_AC_HOME: c_int = 1073742093;
pub const SDLK_AC_BACK: c_int = 1073742094;
pub const SDLK_AC_FORWARD: c_int = 1073742095;
pub const SDLK_AC_STOP: c_int = 1073742096;
pub const SDLK_AC_REFRESH: c_int = 1073742097;
pub const SDLK_AC_BOOKMARKS: c_int = 1073742098;
pub const SDLK_BRIGHTNESSDOWN: c_int = 1073742099;
pub const SDLK_BRIGHTNESSUP: c_int = 1073742100;
pub const SDLK_DISPLAYSWITCH: c_int = 1073742101;
pub const SDLK_KBDILLUMTOGGLE: c_int = 1073742102;
pub const SDLK_KBDILLUMDOWN: c_int = 1073742103;
pub const SDLK_KBDILLUMUP: c_int = 1073742104;
pub const SDLK_EJECT: c_int = 1073742105;
pub const SDLK_SLEEP: c_int = 1073742106;
pub const SDLK_APP1: c_int = 1073742107;
pub const SDLK_APP2: c_int = 1073742108;
pub const SDLK_AUDIOREWIND: c_int = 1073742109;
pub const SDLK_AUDIOFASTFORWARD: c_int = 1073742110;
pub const SDLK_SOFTLEFT: c_int = 1073742111;
pub const SDLK_SOFTRIGHT: c_int = 1073742112;
pub const SDLK_CALL: c_int = 1073742113;
pub const SDLK_ENDCALL: c_int = 1073742114;
pub const SDL_KeyCode = c_uint;
pub const KMOD_NONE: c_int = 0;
pub const KMOD_LSHIFT: c_int = 1;
pub const KMOD_RSHIFT: c_int = 2;
pub const KMOD_LCTRL: c_int = 64;
pub const KMOD_RCTRL: c_int = 128;
pub const KMOD_LALT: c_int = 256;
pub const KMOD_RALT: c_int = 512;
pub const KMOD_LGUI: c_int = 1024;
pub const KMOD_RGUI: c_int = 2048;
pub const KMOD_NUM: c_int = 4096;
pub const KMOD_CAPS: c_int = 8192;
pub const KMOD_MODE: c_int = 16384;
pub const KMOD_SCROLL: c_int = 32768;
pub const KMOD_CTRL: c_int = 192;
pub const KMOD_SHIFT: c_int = 3;
pub const KMOD_ALT: c_int = 768;
pub const KMOD_GUI: c_int = 3072;
pub const KMOD_RESERVED: c_int = 32768;
pub const SDL_Keymod = c_uint;
pub const struct_SDL_Keysym = extern struct {
    scancode: SDL_Scancode = @import("std").mem.zeroes(SDL_Scancode),
    sym: SDL_Keycode = @import("std").mem.zeroes(SDL_Keycode),
    mod: Uint16 = @import("std").mem.zeroes(Uint16),
    unused: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_Keysym = struct_SDL_Keysym;
pub extern fn SDL_GetKeyboardFocus() ?*SDL_Window;
pub extern fn SDL_GetKeyboardState(numkeys: [*c]c_int) [*c]const Uint8;
pub extern fn SDL_ResetKeyboard() void;
pub extern fn SDL_GetModState() SDL_Keymod;
pub extern fn SDL_SetModState(modstate: SDL_Keymod) void;
pub extern fn SDL_GetKeyFromScancode(scancode: SDL_Scancode) SDL_Keycode;
pub extern fn SDL_GetScancodeFromKey(key: SDL_Keycode) SDL_Scancode;
pub extern fn SDL_GetScancodeName(scancode: SDL_Scancode) [*c]const u8;
pub extern fn SDL_GetScancodeFromName(name: [*c]const u8) SDL_Scancode;
pub extern fn SDL_GetKeyName(key: SDL_Keycode) [*c]const u8;
pub extern fn SDL_GetKeyFromName(name: [*c]const u8) SDL_Keycode;
pub extern fn SDL_StartTextInput() void;
pub extern fn SDL_IsTextInputActive() SDL_bool;
pub extern fn SDL_StopTextInput() void;
pub extern fn SDL_ClearComposition() void;
pub extern fn SDL_IsTextInputShown() SDL_bool;
pub extern fn SDL_SetTextInputRect(rect: [*c]const SDL_Rect) void;
pub extern fn SDL_HasScreenKeyboardSupport() SDL_bool;
pub extern fn SDL_IsScreenKeyboardShown(window: ?*SDL_Window) SDL_bool;
pub const struct_SDL_Cursor = opaque {};
pub const SDL_Cursor = struct_SDL_Cursor;
pub const SDL_SYSTEM_CURSOR_ARROW: c_int = 0;
pub const SDL_SYSTEM_CURSOR_IBEAM: c_int = 1;
pub const SDL_SYSTEM_CURSOR_WAIT: c_int = 2;
pub const SDL_SYSTEM_CURSOR_CROSSHAIR: c_int = 3;
pub const SDL_SYSTEM_CURSOR_WAITARROW: c_int = 4;
pub const SDL_SYSTEM_CURSOR_SIZENWSE: c_int = 5;
pub const SDL_SYSTEM_CURSOR_SIZENESW: c_int = 6;
pub const SDL_SYSTEM_CURSOR_SIZEWE: c_int = 7;
pub const SDL_SYSTEM_CURSOR_SIZENS: c_int = 8;
pub const SDL_SYSTEM_CURSOR_SIZEALL: c_int = 9;
pub const SDL_SYSTEM_CURSOR_NO: c_int = 10;
pub const SDL_SYSTEM_CURSOR_HAND: c_int = 11;
pub const SDL_NUM_SYSTEM_CURSORS: c_int = 12;
pub const SDL_SystemCursor = c_uint;
pub const SDL_MOUSEWHEEL_NORMAL: c_int = 0;
pub const SDL_MOUSEWHEEL_FLIPPED: c_int = 1;
pub const SDL_MouseWheelDirection = c_uint;
pub extern fn SDL_GetMouseFocus() ?*SDL_Window;
pub extern fn SDL_GetMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_GetGlobalMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_GetRelativeMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_WarpMouseInWindow(window: ?*SDL_Window, x: c_int, y: c_int) void;
pub extern fn SDL_WarpMouseGlobal(x: c_int, y: c_int) c_int;
pub extern fn SDL_SetRelativeMouseMode(enabled: SDL_bool) c_int;
pub extern fn SDL_CaptureMouse(enabled: SDL_bool) c_int;
pub extern fn SDL_GetRelativeMouseMode() SDL_bool;
pub extern fn SDL_CreateCursor(data: [*c]const Uint8, mask: [*c]const Uint8, w: c_int, h: c_int, hot_x: c_int, hot_y: c_int) ?*SDL_Cursor;
pub extern fn SDL_CreateColorCursor(surface: [*c]SDL_Surface, hot_x: c_int, hot_y: c_int) ?*SDL_Cursor;
pub extern fn SDL_CreateSystemCursor(id: SDL_SystemCursor) ?*SDL_Cursor;
pub extern fn SDL_SetCursor(cursor: ?*SDL_Cursor) void;
pub extern fn SDL_GetCursor() ?*SDL_Cursor;
pub extern fn SDL_GetDefaultCursor() ?*SDL_Cursor;
pub extern fn SDL_FreeCursor(cursor: ?*SDL_Cursor) void;
pub extern fn SDL_ShowCursor(toggle: c_int) c_int;
pub const SDL_GUID = extern struct {
    data: [16]Uint8 = @import("std").mem.zeroes([16]Uint8),
};
pub extern fn SDL_GUIDToString(guid: SDL_GUID, pszGUID: [*c]u8, cbGUID: c_int) void;
pub extern fn SDL_GUIDFromString(pchGUID: [*c]const u8) SDL_GUID;
pub const struct__SDL_Joystick = opaque {};
pub const SDL_Joystick = struct__SDL_Joystick;
pub const SDL_JoystickGUID = SDL_GUID;
pub const SDL_JoystickID = Sint32;
pub const SDL_JOYSTICK_TYPE_UNKNOWN: c_int = 0;
pub const SDL_JOYSTICK_TYPE_GAMECONTROLLER: c_int = 1;
pub const SDL_JOYSTICK_TYPE_WHEEL: c_int = 2;
pub const SDL_JOYSTICK_TYPE_ARCADE_STICK: c_int = 3;
pub const SDL_JOYSTICK_TYPE_FLIGHT_STICK: c_int = 4;
pub const SDL_JOYSTICK_TYPE_DANCE_PAD: c_int = 5;
pub const SDL_JOYSTICK_TYPE_GUITAR: c_int = 6;
pub const SDL_JOYSTICK_TYPE_DRUM_KIT: c_int = 7;
pub const SDL_JOYSTICK_TYPE_ARCADE_PAD: c_int = 8;
pub const SDL_JOYSTICK_TYPE_THROTTLE: c_int = 9;
pub const SDL_JoystickType = c_uint;
pub const SDL_JOYSTICK_POWER_UNKNOWN: c_int = -1;
pub const SDL_JOYSTICK_POWER_EMPTY: c_int = 0;
pub const SDL_JOYSTICK_POWER_LOW: c_int = 1;
pub const SDL_JOYSTICK_POWER_MEDIUM: c_int = 2;
pub const SDL_JOYSTICK_POWER_FULL: c_int = 3;
pub const SDL_JOYSTICK_POWER_WIRED: c_int = 4;
pub const SDL_JOYSTICK_POWER_MAX: c_int = 5;
pub const SDL_JoystickPowerLevel = c_int;
pub extern fn SDL_LockJoysticks() void;
pub extern fn SDL_UnlockJoysticks() void;
pub extern fn SDL_NumJoysticks() c_int;
pub extern fn SDL_JoystickNameForIndex(device_index: c_int) [*c]const u8;
pub extern fn SDL_JoystickPathForIndex(device_index: c_int) [*c]const u8;
pub extern fn SDL_JoystickGetDevicePlayerIndex(device_index: c_int) c_int;
pub extern fn SDL_JoystickGetDeviceGUID(device_index: c_int) SDL_JoystickGUID;
pub extern fn SDL_JoystickGetDeviceVendor(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceProduct(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceProductVersion(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceType(device_index: c_int) SDL_JoystickType;
pub extern fn SDL_JoystickGetDeviceInstanceID(device_index: c_int) SDL_JoystickID;
pub extern fn SDL_JoystickOpen(device_index: c_int) ?*SDL_Joystick;
pub extern fn SDL_JoystickFromInstanceID(instance_id: SDL_JoystickID) ?*SDL_Joystick;
pub extern fn SDL_JoystickFromPlayerIndex(player_index: c_int) ?*SDL_Joystick;
pub extern fn SDL_JoystickAttachVirtual(@"type": SDL_JoystickType, naxes: c_int, nbuttons: c_int, nhats: c_int) c_int;
pub const struct_SDL_VirtualJoystickDesc = extern struct {
    version: Uint16 = @import("std").mem.zeroes(Uint16),
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    naxes: Uint16 = @import("std").mem.zeroes(Uint16),
    nbuttons: Uint16 = @import("std").mem.zeroes(Uint16),
    nhats: Uint16 = @import("std").mem.zeroes(Uint16),
    vendor_id: Uint16 = @import("std").mem.zeroes(Uint16),
    product_id: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
    button_mask: Uint32 = @import("std").mem.zeroes(Uint32),
    axis_mask: Uint32 = @import("std").mem.zeroes(Uint32),
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    Update: ?*const fn (?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) void),
    SetPlayerIndex: ?*const fn (?*anyopaque, c_int) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int) callconv(.C) void),
    Rumble: ?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int),
    RumbleTriggers: ?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int),
    SetLED: ?*const fn (?*anyopaque, Uint8, Uint8, Uint8) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint8, Uint8, Uint8) callconv(.C) c_int),
    SendEffect: ?*const fn (?*anyopaque, ?*const anyopaque, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*const anyopaque, c_int) callconv(.C) c_int),
};
pub const SDL_VirtualJoystickDesc = struct_SDL_VirtualJoystickDesc;
pub extern fn SDL_JoystickAttachVirtualEx(desc: [*c]const SDL_VirtualJoystickDesc) c_int;
pub extern fn SDL_JoystickDetachVirtual(device_index: c_int) c_int;
pub extern fn SDL_JoystickIsVirtual(device_index: c_int) SDL_bool;
pub extern fn SDL_JoystickSetVirtualAxis(joystick: ?*SDL_Joystick, axis: c_int, value: Sint16) c_int;
pub extern fn SDL_JoystickSetVirtualButton(joystick: ?*SDL_Joystick, button: c_int, value: Uint8) c_int;
pub extern fn SDL_JoystickSetVirtualHat(joystick: ?*SDL_Joystick, hat: c_int, value: Uint8) c_int;
pub extern fn SDL_JoystickName(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickPath(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickGetPlayerIndex(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickSetPlayerIndex(joystick: ?*SDL_Joystick, player_index: c_int) void;
pub extern fn SDL_JoystickGetGUID(joystick: ?*SDL_Joystick) SDL_JoystickGUID;
pub extern fn SDL_JoystickGetVendor(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetProduct(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetProductVersion(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetFirmwareVersion(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetSerial(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickGetType(joystick: ?*SDL_Joystick) SDL_JoystickType;
pub extern fn SDL_JoystickGetGUIDString(guid: SDL_JoystickGUID, pszGUID: [*c]u8, cbGUID: c_int) void;
pub extern fn SDL_JoystickGetGUIDFromString(pchGUID: [*c]const u8) SDL_JoystickGUID;
pub extern fn SDL_GetJoystickGUIDInfo(guid: SDL_JoystickGUID, vendor: [*c]Uint16, product: [*c]Uint16, version: [*c]Uint16, crc16: [*c]Uint16) void;
pub extern fn SDL_JoystickGetAttached(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickInstanceID(joystick: ?*SDL_Joystick) SDL_JoystickID;
pub extern fn SDL_JoystickNumAxes(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumBalls(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumHats(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumButtons(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickUpdate() void;
pub extern fn SDL_JoystickEventState(state: c_int) c_int;
pub extern fn SDL_JoystickGetAxis(joystick: ?*SDL_Joystick, axis: c_int) Sint16;
pub extern fn SDL_JoystickGetAxisInitialState(joystick: ?*SDL_Joystick, axis: c_int, state: [*c]Sint16) SDL_bool;
pub extern fn SDL_JoystickGetHat(joystick: ?*SDL_Joystick, hat: c_int) Uint8;
pub extern fn SDL_JoystickGetBall(joystick: ?*SDL_Joystick, ball: c_int, dx: [*c]c_int, dy: [*c]c_int) c_int;
pub extern fn SDL_JoystickGetButton(joystick: ?*SDL_Joystick, button: c_int) Uint8;
pub extern fn SDL_JoystickRumble(joystick: ?*SDL_Joystick, low_frequency_rumble: Uint16, high_frequency_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_JoystickRumbleTriggers(joystick: ?*SDL_Joystick, left_rumble: Uint16, right_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_JoystickHasLED(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickHasRumble(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickHasRumbleTriggers(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickSetLED(joystick: ?*SDL_Joystick, red: Uint8, green: Uint8, blue: Uint8) c_int;
pub extern fn SDL_JoystickSendEffect(joystick: ?*SDL_Joystick, data: ?*const anyopaque, size: c_int) c_int;
pub extern fn SDL_JoystickClose(joystick: ?*SDL_Joystick) void;
pub extern fn SDL_JoystickCurrentPowerLevel(joystick: ?*SDL_Joystick) SDL_JoystickPowerLevel;
pub const struct__SDL_Sensor = opaque {};
pub const SDL_Sensor = struct__SDL_Sensor;
pub const SDL_SensorID = Sint32;
pub const SDL_SENSOR_INVALID: c_int = -1;
pub const SDL_SENSOR_UNKNOWN: c_int = 0;
pub const SDL_SENSOR_ACCEL: c_int = 1;
pub const SDL_SENSOR_GYRO: c_int = 2;
pub const SDL_SENSOR_ACCEL_L: c_int = 3;
pub const SDL_SENSOR_GYRO_L: c_int = 4;
pub const SDL_SENSOR_ACCEL_R: c_int = 5;
pub const SDL_SENSOR_GYRO_R: c_int = 6;
pub const SDL_SensorType = c_int;
pub extern fn SDL_LockSensors() void;
pub extern fn SDL_UnlockSensors() void;
pub extern fn SDL_NumSensors() c_int;
pub extern fn SDL_SensorGetDeviceName(device_index: c_int) [*c]const u8;
pub extern fn SDL_SensorGetDeviceType(device_index: c_int) SDL_SensorType;
pub extern fn SDL_SensorGetDeviceNonPortableType(device_index: c_int) c_int;
pub extern fn SDL_SensorGetDeviceInstanceID(device_index: c_int) SDL_SensorID;
pub extern fn SDL_SensorOpen(device_index: c_int) ?*SDL_Sensor;
pub extern fn SDL_SensorFromInstanceID(instance_id: SDL_SensorID) ?*SDL_Sensor;
pub extern fn SDL_SensorGetName(sensor: ?*SDL_Sensor) [*c]const u8;
pub extern fn SDL_SensorGetType(sensor: ?*SDL_Sensor) SDL_SensorType;
pub extern fn SDL_SensorGetNonPortableType(sensor: ?*SDL_Sensor) c_int;
pub extern fn SDL_SensorGetInstanceID(sensor: ?*SDL_Sensor) SDL_SensorID;
pub extern fn SDL_SensorGetData(sensor: ?*SDL_Sensor, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_SensorGetDataWithTimestamp(sensor: ?*SDL_Sensor, timestamp: [*c]Uint64, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_SensorClose(sensor: ?*SDL_Sensor) void;
pub extern fn SDL_SensorUpdate() void;
pub const struct__SDL_GameController = opaque {};
pub const SDL_GameController = struct__SDL_GameController;
pub const SDL_CONTROLLER_TYPE_UNKNOWN: c_int = 0;
pub const SDL_CONTROLLER_TYPE_XBOX360: c_int = 1;
pub const SDL_CONTROLLER_TYPE_XBOXONE: c_int = 2;
pub const SDL_CONTROLLER_TYPE_PS3: c_int = 3;
pub const SDL_CONTROLLER_TYPE_PS4: c_int = 4;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO: c_int = 5;
pub const SDL_CONTROLLER_TYPE_VIRTUAL: c_int = 6;
pub const SDL_CONTROLLER_TYPE_PS5: c_int = 7;
pub const SDL_CONTROLLER_TYPE_AMAZON_LUNA: c_int = 8;
pub const SDL_CONTROLLER_TYPE_GOOGLE_STADIA: c_int = 9;
pub const SDL_CONTROLLER_TYPE_NVIDIA_SHIELD: c_int = 10;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT: c_int = 11;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT: c_int = 12;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR: c_int = 13;
pub const SDL_CONTROLLER_TYPE_MAX: c_int = 14;
pub const SDL_GameControllerType = c_uint;
pub const SDL_CONTROLLER_BINDTYPE_NONE: c_int = 0;
pub const SDL_CONTROLLER_BINDTYPE_BUTTON: c_int = 1;
pub const SDL_CONTROLLER_BINDTYPE_AXIS: c_int = 2;
pub const SDL_CONTROLLER_BINDTYPE_HAT: c_int = 3;
pub const SDL_GameControllerBindType = c_uint;
const struct_unnamed_13 = extern struct {
    hat: c_int = @import("std").mem.zeroes(c_int),
    hat_mask: c_int = @import("std").mem.zeroes(c_int),
};
const union_unnamed_12 = extern union {
    button: c_int,
    axis: c_int,
    hat: struct_unnamed_13,
};
pub const struct_SDL_GameControllerButtonBind = extern struct {
    bindType: SDL_GameControllerBindType = @import("std").mem.zeroes(SDL_GameControllerBindType),
    value: union_unnamed_12 = @import("std").mem.zeroes(union_unnamed_12),
};
pub const SDL_GameControllerButtonBind = struct_SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerAddMappingsFromRW(rw: [*c]SDL_RWops, freerw: c_int) c_int;
pub extern fn SDL_GameControllerAddMapping(mappingString: [*c]const u8) c_int;
pub extern fn SDL_GameControllerNumMappings() c_int;
pub extern fn SDL_GameControllerMappingForIndex(mapping_index: c_int) [*c]u8;
pub extern fn SDL_GameControllerMappingForGUID(guid: SDL_JoystickGUID) [*c]u8;
pub extern fn SDL_GameControllerMapping(gamecontroller: ?*SDL_GameController) [*c]u8;
pub extern fn SDL_IsGameController(joystick_index: c_int) SDL_bool;
pub extern fn SDL_GameControllerNameForIndex(joystick_index: c_int) [*c]const u8;
pub extern fn SDL_GameControllerPathForIndex(joystick_index: c_int) [*c]const u8;
pub extern fn SDL_GameControllerTypeForIndex(joystick_index: c_int) SDL_GameControllerType;
pub extern fn SDL_GameControllerMappingForDeviceIndex(joystick_index: c_int) [*c]u8;
pub extern fn SDL_GameControllerOpen(joystick_index: c_int) ?*SDL_GameController;
pub extern fn SDL_GameControllerFromInstanceID(joyid: SDL_JoystickID) ?*SDL_GameController;
pub extern fn SDL_GameControllerFromPlayerIndex(player_index: c_int) ?*SDL_GameController;
pub extern fn SDL_GameControllerName(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerPath(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerGetType(gamecontroller: ?*SDL_GameController) SDL_GameControllerType;
pub extern fn SDL_GameControllerGetPlayerIndex(gamecontroller: ?*SDL_GameController) c_int;
pub extern fn SDL_GameControllerSetPlayerIndex(gamecontroller: ?*SDL_GameController, player_index: c_int) void;
pub extern fn SDL_GameControllerGetVendor(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetProduct(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetProductVersion(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetFirmwareVersion(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetSerial(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerGetSteamHandle(gamecontroller: ?*SDL_GameController) Uint64;
pub extern fn SDL_GameControllerGetAttached(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerGetJoystick(gamecontroller: ?*SDL_GameController) ?*SDL_Joystick;
pub extern fn SDL_GameControllerEventState(state: c_int) c_int;
pub extern fn SDL_GameControllerUpdate() void;
pub const SDL_CONTROLLER_AXIS_INVALID: c_int = -1;
pub const SDL_CONTROLLER_AXIS_LEFTX: c_int = 0;
pub const SDL_CONTROLLER_AXIS_LEFTY: c_int = 1;
pub const SDL_CONTROLLER_AXIS_RIGHTX: c_int = 2;
pub const SDL_CONTROLLER_AXIS_RIGHTY: c_int = 3;
pub const SDL_CONTROLLER_AXIS_TRIGGERLEFT: c_int = 4;
pub const SDL_CONTROLLER_AXIS_TRIGGERRIGHT: c_int = 5;
pub const SDL_CONTROLLER_AXIS_MAX: c_int = 6;
pub const SDL_GameControllerAxis = c_int;
pub extern fn SDL_GameControllerGetAxisFromString(str: [*c]const u8) SDL_GameControllerAxis;
pub extern fn SDL_GameControllerGetStringForAxis(axis: SDL_GameControllerAxis) [*c]const u8;
pub extern fn SDL_GameControllerGetBindForAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerHasAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) SDL_bool;
pub extern fn SDL_GameControllerGetAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) Sint16;
pub const SDL_CONTROLLER_BUTTON_INVALID: c_int = -1;
pub const SDL_CONTROLLER_BUTTON_A: c_int = 0;
pub const SDL_CONTROLLER_BUTTON_B: c_int = 1;
pub const SDL_CONTROLLER_BUTTON_X: c_int = 2;
pub const SDL_CONTROLLER_BUTTON_Y: c_int = 3;
pub const SDL_CONTROLLER_BUTTON_BACK: c_int = 4;
pub const SDL_CONTROLLER_BUTTON_GUIDE: c_int = 5;
pub const SDL_CONTROLLER_BUTTON_START: c_int = 6;
pub const SDL_CONTROLLER_BUTTON_LEFTSTICK: c_int = 7;
pub const SDL_CONTROLLER_BUTTON_RIGHTSTICK: c_int = 8;
pub const SDL_CONTROLLER_BUTTON_LEFTSHOULDER: c_int = 9;
pub const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER: c_int = 10;
pub const SDL_CONTROLLER_BUTTON_DPAD_UP: c_int = 11;
pub const SDL_CONTROLLER_BUTTON_DPAD_DOWN: c_int = 12;
pub const SDL_CONTROLLER_BUTTON_DPAD_LEFT: c_int = 13;
pub const SDL_CONTROLLER_BUTTON_DPAD_RIGHT: c_int = 14;
pub const SDL_CONTROLLER_BUTTON_MISC1: c_int = 15;
pub const SDL_CONTROLLER_BUTTON_PADDLE1: c_int = 16;
pub const SDL_CONTROLLER_BUTTON_PADDLE2: c_int = 17;
pub const SDL_CONTROLLER_BUTTON_PADDLE3: c_int = 18;
pub const SDL_CONTROLLER_BUTTON_PADDLE4: c_int = 19;
pub const SDL_CONTROLLER_BUTTON_TOUCHPAD: c_int = 20;
pub const SDL_CONTROLLER_BUTTON_MAX: c_int = 21;
pub const SDL_GameControllerButton = c_int;
pub extern fn SDL_GameControllerGetButtonFromString(str: [*c]const u8) SDL_GameControllerButton;
pub extern fn SDL_GameControllerGetStringForButton(button: SDL_GameControllerButton) [*c]const u8;
pub extern fn SDL_GameControllerGetBindForButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerHasButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) SDL_bool;
pub extern fn SDL_GameControllerGetButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) Uint8;
pub extern fn SDL_GameControllerGetNumTouchpads(gamecontroller: ?*SDL_GameController) c_int;
pub extern fn SDL_GameControllerGetNumTouchpadFingers(gamecontroller: ?*SDL_GameController, touchpad: c_int) c_int;
pub extern fn SDL_GameControllerGetTouchpadFinger(gamecontroller: ?*SDL_GameController, touchpad: c_int, finger: c_int, state: [*c]Uint8, x: [*c]f32, y: [*c]f32, pressure: [*c]f32) c_int;
pub extern fn SDL_GameControllerHasSensor(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) SDL_bool;
pub extern fn SDL_GameControllerSetSensorEnabled(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType, enabled: SDL_bool) c_int;
pub extern fn SDL_GameControllerIsSensorEnabled(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) SDL_bool;
pub extern fn SDL_GameControllerGetSensorDataRate(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) f32;
pub extern fn SDL_GameControllerGetSensorData(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_GameControllerGetSensorDataWithTimestamp(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType, timestamp: [*c]Uint64, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_GameControllerRumble(gamecontroller: ?*SDL_GameController, low_frequency_rumble: Uint16, high_frequency_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_GameControllerRumbleTriggers(gamecontroller: ?*SDL_GameController, left_rumble: Uint16, right_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_GameControllerHasLED(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerHasRumble(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerHasRumbleTriggers(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerSetLED(gamecontroller: ?*SDL_GameController, red: Uint8, green: Uint8, blue: Uint8) c_int;
pub extern fn SDL_GameControllerSendEffect(gamecontroller: ?*SDL_GameController, data: ?*const anyopaque, size: c_int) c_int;
pub extern fn SDL_GameControllerClose(gamecontroller: ?*SDL_GameController) void;
pub extern fn SDL_GameControllerGetAppleSFSymbolsNameForButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) [*c]const u8;
pub extern fn SDL_GameControllerGetAppleSFSymbolsNameForAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) [*c]const u8;
pub const SDL_TouchID = Sint64;
pub const SDL_FingerID = Sint64;
pub const SDL_TOUCH_DEVICE_INVALID: c_int = -1;
pub const SDL_TOUCH_DEVICE_DIRECT: c_int = 0;
pub const SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE: c_int = 1;
pub const SDL_TOUCH_DEVICE_INDIRECT_RELATIVE: c_int = 2;
pub const SDL_TouchDeviceType = c_int;
pub const struct_SDL_Finger = extern struct {
    id: SDL_FingerID = @import("std").mem.zeroes(SDL_FingerID),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_Finger = struct_SDL_Finger;
pub extern fn SDL_GetNumTouchDevices() c_int;
pub extern fn SDL_GetTouchDevice(index: c_int) SDL_TouchID;
pub extern fn SDL_GetTouchName(index: c_int) [*c]const u8;
pub extern fn SDL_GetTouchDeviceType(touchID: SDL_TouchID) SDL_TouchDeviceType;
pub extern fn SDL_GetNumTouchFingers(touchID: SDL_TouchID) c_int;
pub extern fn SDL_GetTouchFinger(touchID: SDL_TouchID, index: c_int) [*c]SDL_Finger;
pub const SDL_GestureID = Sint64;
pub extern fn SDL_RecordGesture(touchId: SDL_TouchID) c_int;
pub extern fn SDL_SaveAllDollarTemplates(dst: [*c]SDL_RWops) c_int;
pub extern fn SDL_SaveDollarTemplate(gestureId: SDL_GestureID, dst: [*c]SDL_RWops) c_int;
pub extern fn SDL_LoadDollarTemplates(touchId: SDL_TouchID, src: [*c]SDL_RWops) c_int;
pub const SDL_FIRSTEVENT: c_int = 0;
pub const SDL_QUIT: c_int = 256;
pub const SDL_APP_TERMINATING: c_int = 257;
pub const SDL_APP_LOWMEMORY: c_int = 258;
pub const SDL_APP_WILLENTERBACKGROUND: c_int = 259;
pub const SDL_APP_DIDENTERBACKGROUND: c_int = 260;
pub const SDL_APP_WILLENTERFOREGROUND: c_int = 261;
pub const SDL_APP_DIDENTERFOREGROUND: c_int = 262;
pub const SDL_LOCALECHANGED: c_int = 263;
pub const SDL_DISPLAYEVENT: c_int = 336;
pub const SDL_WINDOWEVENT: c_int = 512;
pub const SDL_SYSWMEVENT: c_int = 513;
pub const SDL_KEYDOWN: c_int = 768;
pub const SDL_KEYUP: c_int = 769;
pub const SDL_TEXTEDITING: c_int = 770;
pub const SDL_TEXTINPUT: c_int = 771;
pub const SDL_KEYMAPCHANGED: c_int = 772;
pub const SDL_TEXTEDITING_EXT: c_int = 773;
pub const SDL_MOUSEMOTION: c_int = 1024;
pub const SDL_MOUSEBUTTONDOWN: c_int = 1025;
pub const SDL_MOUSEBUTTONUP: c_int = 1026;
pub const SDL_MOUSEWHEEL: c_int = 1027;
pub const SDL_JOYAXISMOTION: c_int = 1536;
pub const SDL_JOYBALLMOTION: c_int = 1537;
pub const SDL_JOYHATMOTION: c_int = 1538;
pub const SDL_JOYBUTTONDOWN: c_int = 1539;
pub const SDL_JOYBUTTONUP: c_int = 1540;
pub const SDL_JOYDEVICEADDED: c_int = 1541;
pub const SDL_JOYDEVICEREMOVED: c_int = 1542;
pub const SDL_JOYBATTERYUPDATED: c_int = 1543;
pub const SDL_CONTROLLERAXISMOTION: c_int = 1616;
pub const SDL_CONTROLLERBUTTONDOWN: c_int = 1617;
pub const SDL_CONTROLLERBUTTONUP: c_int = 1618;
pub const SDL_CONTROLLERDEVICEADDED: c_int = 1619;
pub const SDL_CONTROLLERDEVICEREMOVED: c_int = 1620;
pub const SDL_CONTROLLERDEVICEREMAPPED: c_int = 1621;
pub const SDL_CONTROLLERTOUCHPADDOWN: c_int = 1622;
pub const SDL_CONTROLLERTOUCHPADMOTION: c_int = 1623;
pub const SDL_CONTROLLERTOUCHPADUP: c_int = 1624;
pub const SDL_CONTROLLERSENSORUPDATE: c_int = 1625;
pub const SDL_CONTROLLERUPDATECOMPLETE_RESERVED_FOR_SDL3: c_int = 1626;
pub const SDL_CONTROLLERSTEAMHANDLEUPDATED: c_int = 1627;
pub const SDL_FINGERDOWN: c_int = 1792;
pub const SDL_FINGERUP: c_int = 1793;
pub const SDL_FINGERMOTION: c_int = 1794;
pub const SDL_DOLLARGESTURE: c_int = 2048;
pub const SDL_DOLLARRECORD: c_int = 2049;
pub const SDL_MULTIGESTURE: c_int = 2050;
pub const SDL_CLIPBOARDUPDATE: c_int = 2304;
pub const SDL_DROPFILE: c_int = 4096;
pub const SDL_DROPTEXT: c_int = 4097;
pub const SDL_DROPBEGIN: c_int = 4098;
pub const SDL_DROPCOMPLETE: c_int = 4099;
pub const SDL_AUDIODEVICEADDED: c_int = 4352;
pub const SDL_AUDIODEVICEREMOVED: c_int = 4353;
pub const SDL_SENSORUPDATE: c_int = 4608;
pub const SDL_RENDER_TARGETS_RESET: c_int = 8192;
pub const SDL_RENDER_DEVICE_RESET: c_int = 8193;
pub const SDL_POLLSENTINEL: c_int = 32512;
pub const SDL_USEREVENT: c_int = 32768;
pub const SDL_LASTEVENT: c_int = 65535;
pub const SDL_EventType = c_uint;
pub const struct_SDL_CommonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_CommonEvent = struct_SDL_CommonEvent;
pub const struct_SDL_DisplayEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    display: Uint32 = @import("std").mem.zeroes(Uint32),
    event: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    data1: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_DisplayEvent = struct_SDL_DisplayEvent;
pub const struct_SDL_WindowEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    event: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    data1: Sint32 = @import("std").mem.zeroes(Sint32),
    data2: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_WindowEvent = struct_SDL_WindowEvent;
pub const struct_SDL_KeyboardEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    repeat: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    keysym: SDL_Keysym = @import("std").mem.zeroes(SDL_Keysym),
};
pub const SDL_KeyboardEvent = struct_SDL_KeyboardEvent;
pub const struct_SDL_TextEditingEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [32]u8 = @import("std").mem.zeroes([32]u8),
    start: Sint32 = @import("std").mem.zeroes(Sint32),
    length: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_TextEditingEvent = struct_SDL_TextEditingEvent;
pub const struct_SDL_TextEditingExtEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    start: Sint32 = @import("std").mem.zeroes(Sint32),
    length: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_TextEditingExtEvent = struct_SDL_TextEditingExtEvent;
pub const struct_SDL_TextInputEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [32]u8 = @import("std").mem.zeroes([32]u8),
};
pub const SDL_TextInputEvent = struct_SDL_TextInputEvent;
pub const struct_SDL_MouseMotionEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    state: Uint32 = @import("std").mem.zeroes(Uint32),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
    xrel: Sint32 = @import("std").mem.zeroes(Sint32),
    yrel: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_MouseMotionEvent = struct_SDL_MouseMotionEvent;
pub const struct_SDL_MouseButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    clicks: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_MouseButtonEvent = struct_SDL_MouseButtonEvent;
pub const struct_SDL_MouseWheelEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
    direction: Uint32 = @import("std").mem.zeroes(Uint32),
    preciseX: f32 = @import("std").mem.zeroes(f32),
    preciseY: f32 = @import("std").mem.zeroes(f32),
    mouseX: Sint32 = @import("std").mem.zeroes(Sint32),
    mouseY: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_MouseWheelEvent = struct_SDL_MouseWheelEvent;
pub const struct_SDL_JoyAxisEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    axis: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Sint16 = @import("std").mem.zeroes(Sint16),
    padding4: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_JoyAxisEvent = struct_SDL_JoyAxisEvent;
pub const struct_SDL_JoyBallEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    ball: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    xrel: Sint16 = @import("std").mem.zeroes(Sint16),
    yrel: Sint16 = @import("std").mem.zeroes(Sint16),
};
pub const SDL_JoyBallEvent = struct_SDL_JoyBallEvent;
pub const struct_SDL_JoyHatEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    hat: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_JoyHatEvent = struct_SDL_JoyHatEvent;
pub const struct_SDL_JoyButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_JoyButtonEvent = struct_SDL_JoyButtonEvent;
pub const struct_SDL_JoyDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_JoyDeviceEvent = struct_SDL_JoyDeviceEvent;
pub const struct_SDL_JoyBatteryEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    level: SDL_JoystickPowerLevel = @import("std").mem.zeroes(SDL_JoystickPowerLevel),
};
pub const SDL_JoyBatteryEvent = struct_SDL_JoyBatteryEvent;
pub const struct_SDL_ControllerAxisEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    axis: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Sint16 = @import("std").mem.zeroes(Sint16),
    padding4: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_ControllerAxisEvent = struct_SDL_ControllerAxisEvent;
pub const struct_SDL_ControllerButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_ControllerButtonEvent = struct_SDL_ControllerButtonEvent;
pub const struct_SDL_ControllerDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_ControllerDeviceEvent = struct_SDL_ControllerDeviceEvent;
pub const struct_SDL_ControllerTouchpadEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    touchpad: Sint32 = @import("std").mem.zeroes(Sint32),
    finger: Sint32 = @import("std").mem.zeroes(Sint32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_ControllerTouchpadEvent = struct_SDL_ControllerTouchpadEvent;
pub const struct_SDL_ControllerSensorEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    sensor: Sint32 = @import("std").mem.zeroes(Sint32),
    data: [3]f32 = @import("std").mem.zeroes([3]f32),
    timestamp_us: Uint64 = @import("std").mem.zeroes(Uint64),
};
pub const SDL_ControllerSensorEvent = struct_SDL_ControllerSensorEvent;
pub const struct_SDL_AudioDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    iscapture: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_AudioDeviceEvent = struct_SDL_AudioDeviceEvent;
pub const struct_SDL_TouchFingerEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    fingerId: SDL_FingerID = @import("std").mem.zeroes(SDL_FingerID),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    dx: f32 = @import("std").mem.zeroes(f32),
    dy: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_TouchFingerEvent = struct_SDL_TouchFingerEvent;
pub const struct_SDL_MultiGestureEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    dTheta: f32 = @import("std").mem.zeroes(f32),
    dDist: f32 = @import("std").mem.zeroes(f32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    numFingers: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_MultiGestureEvent = struct_SDL_MultiGestureEvent;
pub const struct_SDL_DollarGestureEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    gestureId: SDL_GestureID = @import("std").mem.zeroes(SDL_GestureID),
    numFingers: Uint32 = @import("std").mem.zeroes(Uint32),
    @"error": f32 = @import("std").mem.zeroes(f32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_DollarGestureEvent = struct_SDL_DollarGestureEvent;
pub const struct_SDL_DropEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    file: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_DropEvent = struct_SDL_DropEvent;
pub const struct_SDL_SensorEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
    data: [6]f32 = @import("std").mem.zeroes([6]f32),
    timestamp_us: Uint64 = @import("std").mem.zeroes(Uint64),
};
pub const SDL_SensorEvent = struct_SDL_SensorEvent;
pub const struct_SDL_QuitEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_QuitEvent = struct_SDL_QuitEvent;
pub const struct_SDL_UserEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    code: Sint32 = @import("std").mem.zeroes(Sint32),
    data1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    data2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const SDL_UserEvent = struct_SDL_UserEvent;
pub const struct_SDL_SysWMmsg = opaque {};
pub const SDL_SysWMmsg = struct_SDL_SysWMmsg;
pub const struct_SDL_SysWMEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    msg: ?*SDL_SysWMmsg = @import("std").mem.zeroes(?*SDL_SysWMmsg),
};
pub const SDL_SysWMEvent = struct_SDL_SysWMEvent;
pub const union_SDL_Event = extern union {
    type: Uint32,
    common: SDL_CommonEvent,
    display: SDL_DisplayEvent,
    window: SDL_WindowEvent,
    key: SDL_KeyboardEvent,
    edit: SDL_TextEditingEvent,
    editExt: SDL_TextEditingExtEvent,
    text: SDL_TextInputEvent,
    motion: SDL_MouseMotionEvent,
    button: SDL_MouseButtonEvent,
    wheel: SDL_MouseWheelEvent,
    jaxis: SDL_JoyAxisEvent,
    jball: SDL_JoyBallEvent,
    jhat: SDL_JoyHatEvent,
    jbutton: SDL_JoyButtonEvent,
    jdevice: SDL_JoyDeviceEvent,
    jbattery: SDL_JoyBatteryEvent,
    caxis: SDL_ControllerAxisEvent,
    cbutton: SDL_ControllerButtonEvent,
    cdevice: SDL_ControllerDeviceEvent,
    ctouchpad: SDL_ControllerTouchpadEvent,
    csensor: SDL_ControllerSensorEvent,
    adevice: SDL_AudioDeviceEvent,
    sensor: SDL_SensorEvent,
    quit: SDL_QuitEvent,
    user: SDL_UserEvent,
    syswm: SDL_SysWMEvent,
    tfinger: SDL_TouchFingerEvent,
    mgesture: SDL_MultiGestureEvent,
    dgesture: SDL_DollarGestureEvent,
    drop: SDL_DropEvent,
    padding: [56]Uint8,
};
pub const SDL_Event = union_SDL_Event; // /opt/homebrew/include/SDL2/SDL_stdinc.h:384:42: warning: ignoring StaticAssert declaration
pub extern fn SDL_PumpEvents() void;
pub const SDL_ADDEVENT: c_int = 0;
pub const SDL_PEEKEVENT: c_int = 1;
pub const SDL_GETEVENT: c_int = 2;
pub const SDL_eventaction = c_uint;
pub extern fn SDL_PeepEvents(events: [*c]SDL_Event, numevents: c_int, action: SDL_eventaction, minType: Uint32, maxType: Uint32) c_int;
pub extern fn SDL_HasEvent(@"type": Uint32) SDL_bool;
pub extern fn SDL_HasEvents(minType: Uint32, maxType: Uint32) SDL_bool;
pub extern fn SDL_FlushEvent(@"type": Uint32) void;
pub extern fn SDL_FlushEvents(minType: Uint32, maxType: Uint32) void;
pub extern fn SDL_PollEvent(event: [*c]SDL_Event) c_int;
pub extern fn SDL_WaitEvent(event: [*c]SDL_Event) c_int;
pub extern fn SDL_WaitEventTimeout(event: [*c]SDL_Event, timeout: c_int) c_int;
pub extern fn SDL_PushEvent(event: [*c]SDL_Event) c_int;
pub const SDL_EventFilter = ?*const fn (?*anyopaque, [*c]SDL_Event) callconv(.C) c_int;
pub extern fn SDL_SetEventFilter(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_GetEventFilter(filter: [*c]SDL_EventFilter, userdata: [*c]?*anyopaque) SDL_bool;
pub extern fn SDL_AddEventWatch(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_DelEventWatch(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_FilterEvents(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_EventState(@"type": Uint32, state: c_int) Uint8;
pub extern fn SDL_RegisterEvents(numevents: c_int) Uint32;
pub extern fn SDL_GetBasePath() [*c]u8;
pub extern fn SDL_GetPrefPath(org: [*c]const u8, app: [*c]const u8) [*c]u8;
pub const struct__SDL_Haptic = opaque {};
pub const SDL_Haptic = struct__SDL_Haptic;
pub const struct_SDL_HapticDirection = extern struct {
    type: Uint8 = @import("std").mem.zeroes(Uint8),
    dir: [3]Sint32 = @import("std").mem.zeroes([3]Sint32),
};
pub const SDL_HapticDirection = struct_SDL_HapticDirection;
pub const struct_SDL_HapticConstant = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    level: Sint16 = @import("std").mem.zeroes(Sint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticConstant = struct_SDL_HapticConstant;
pub const struct_SDL_HapticPeriodic = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    period: Uint16 = @import("std").mem.zeroes(Uint16),
    magnitude: Sint16 = @import("std").mem.zeroes(Sint16),
    offset: Sint16 = @import("std").mem.zeroes(Sint16),
    phase: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticPeriodic = struct_SDL_HapticPeriodic;
pub const struct_SDL_HapticCondition = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    right_sat: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    left_sat: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    right_coeff: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
    left_coeff: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
    deadband: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    center: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
};
pub const SDL_HapticCondition = struct_SDL_HapticCondition;
pub const struct_SDL_HapticRamp = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    start: Sint16 = @import("std").mem.zeroes(Sint16),
    end: Sint16 = @import("std").mem.zeroes(Sint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticRamp = struct_SDL_HapticRamp;
pub const struct_SDL_HapticLeftRight = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    large_magnitude: Uint16 = @import("std").mem.zeroes(Uint16),
    small_magnitude: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticLeftRight = struct_SDL_HapticLeftRight;
pub const struct_SDL_HapticCustom = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    channels: Uint8 = @import("std").mem.zeroes(Uint8),
    period: Uint16 = @import("std").mem.zeroes(Uint16),
    samples: Uint16 = @import("std").mem.zeroes(Uint16),
    data: [*c]Uint16 = @import("std").mem.zeroes([*c]Uint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticCustom = struct_SDL_HapticCustom;
pub const union_SDL_HapticEffect = extern union {
    type: Uint16,
    constant: SDL_HapticConstant,
    periodic: SDL_HapticPeriodic,
    condition: SDL_HapticCondition,
    ramp: SDL_HapticRamp,
    leftright: SDL_HapticLeftRight,
    custom: SDL_HapticCustom,
};
pub const SDL_HapticEffect = union_SDL_HapticEffect;
pub extern fn SDL_NumHaptics() c_int;
pub extern fn SDL_HapticName(device_index: c_int) [*c]const u8;
pub extern fn SDL_HapticOpen(device_index: c_int) ?*SDL_Haptic;
pub extern fn SDL_HapticOpened(device_index: c_int) c_int;
pub extern fn SDL_HapticIndex(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_MouseIsHaptic() c_int;
pub extern fn SDL_HapticOpenFromMouse() ?*SDL_Haptic;
pub extern fn SDL_JoystickIsHaptic(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_HapticOpenFromJoystick(joystick: ?*SDL_Joystick) ?*SDL_Haptic;
pub extern fn SDL_HapticClose(haptic: ?*SDL_Haptic) void;
pub extern fn SDL_HapticNumEffects(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticNumEffectsPlaying(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticQuery(haptic: ?*SDL_Haptic) c_uint;
pub extern fn SDL_HapticNumAxes(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticEffectSupported(haptic: ?*SDL_Haptic, effect: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticNewEffect(haptic: ?*SDL_Haptic, effect: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticUpdateEffect(haptic: ?*SDL_Haptic, effect: c_int, data: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticRunEffect(haptic: ?*SDL_Haptic, effect: c_int, iterations: Uint32) c_int;
pub extern fn SDL_HapticStopEffect(haptic: ?*SDL_Haptic, effect: c_int) c_int;
pub extern fn SDL_HapticDestroyEffect(haptic: ?*SDL_Haptic, effect: c_int) void;
pub extern fn SDL_HapticGetEffectStatus(haptic: ?*SDL_Haptic, effect: c_int) c_int;
pub extern fn SDL_HapticSetGain(haptic: ?*SDL_Haptic, gain: c_int) c_int;
pub extern fn SDL_HapticSetAutocenter(haptic: ?*SDL_Haptic, autocenter: c_int) c_int;
pub extern fn SDL_HapticPause(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticUnpause(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticStopAll(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumbleSupported(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumbleInit(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumblePlay(haptic: ?*SDL_Haptic, strength: f32, length: Uint32) c_int;
pub extern fn SDL_HapticRumbleStop(haptic: ?*SDL_Haptic) c_int;
pub const struct_SDL_hid_device_ = opaque {};
pub const SDL_hid_device = struct_SDL_hid_device_;
pub const struct_SDL_hid_device_info = extern struct {
    path: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    vendor_id: c_ushort = @import("std").mem.zeroes(c_ushort),
    product_id: c_ushort = @import("std").mem.zeroes(c_ushort),
    serial_number: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    release_number: c_ushort = @import("std").mem.zeroes(c_ushort),
    manufacturer_string: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    product_string: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    usage_page: c_ushort = @import("std").mem.zeroes(c_ushort),
    usage: c_ushort = @import("std").mem.zeroes(c_ushort),
    interface_number: c_int = @import("std").mem.zeroes(c_int),
    interface_class: c_int = @import("std").mem.zeroes(c_int),
    interface_subclass: c_int = @import("std").mem.zeroes(c_int),
    interface_protocol: c_int = @import("std").mem.zeroes(c_int),
    next: [*c]struct_SDL_hid_device_info = @import("std").mem.zeroes([*c]struct_SDL_hid_device_info),
};
pub const SDL_hid_device_info = struct_SDL_hid_device_info;
pub extern fn SDL_hid_init() c_int;
pub extern fn SDL_hid_exit() c_int;
pub extern fn SDL_hid_device_change_count() Uint32;
pub extern fn SDL_hid_enumerate(vendor_id: c_ushort, product_id: c_ushort) [*c]SDL_hid_device_info;
pub extern fn SDL_hid_free_enumeration(devs: [*c]SDL_hid_device_info) void;
pub extern fn SDL_hid_open(vendor_id: c_ushort, product_id: c_ushort, serial_number: [*c]const wchar_t) ?*SDL_hid_device;
pub extern fn SDL_hid_open_path(path: [*c]const u8, bExclusive: c_int) ?*SDL_hid_device;
pub extern fn SDL_hid_write(dev: ?*SDL_hid_device, data: [*c]const u8, length: usize) c_int;
pub extern fn SDL_hid_read_timeout(dev: ?*SDL_hid_device, data: [*c]u8, length: usize, milliseconds: c_int) c_int;
pub extern fn SDL_hid_read(dev: ?*SDL_hid_device, data: [*c]u8, length: usize) c_int;
pub extern fn SDL_hid_set_nonblocking(dev: ?*SDL_hid_device, nonblock: c_int) c_int;
pub extern fn SDL_hid_send_feature_report(dev: ?*SDL_hid_device, data: [*c]const u8, length: usize) c_int;
pub extern fn SDL_hid_get_feature_report(dev: ?*SDL_hid_device, data: [*c]u8, length: usize) c_int;
pub extern fn SDL_hid_close(dev: ?*SDL_hid_device) void;
pub extern fn SDL_hid_get_manufacturer_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_product_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_serial_number_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_indexed_string(dev: ?*SDL_hid_device, string_index: c_int, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_ble_scan(active: SDL_bool) void;
pub const SDL_HINT_DEFAULT: c_int = 0;
pub const SDL_HINT_NORMAL: c_int = 1;
pub const SDL_HINT_OVERRIDE: c_int = 2;
pub const SDL_HintPriority = c_uint;
pub extern fn SDL_SetHintWithPriority(name: [*c]const u8, value: [*c]const u8, priority: SDL_HintPriority) SDL_bool;
pub extern fn SDL_SetHint(name: [*c]const u8, value: [*c]const u8) SDL_bool;
pub extern fn SDL_ResetHint(name: [*c]const u8) SDL_bool;
pub extern fn SDL_ResetHints() void;
pub extern fn SDL_GetHint(name: [*c]const u8) [*c]const u8;
pub extern fn SDL_GetHintBoolean(name: [*c]const u8, default_value: SDL_bool) SDL_bool;
pub const SDL_HintCallback = ?*const fn (?*anyopaque, [*c]const u8, [*c]const u8, [*c]const u8) callconv(.C) void;
pub extern fn SDL_AddHintCallback(name: [*c]const u8, callback: SDL_HintCallback, userdata: ?*anyopaque) void;
pub extern fn SDL_DelHintCallback(name: [*c]const u8, callback: SDL_HintCallback, userdata: ?*anyopaque) void;
pub extern fn SDL_ClearHints() void;
pub extern fn SDL_LoadObject(sofile: [*c]const u8) ?*anyopaque;
pub extern fn SDL_LoadFunction(handle: ?*anyopaque, name: [*c]const u8) ?*anyopaque;
pub extern fn SDL_UnloadObject(handle: ?*anyopaque) void;
pub const SDL_LOG_CATEGORY_APPLICATION: c_int = 0;
pub const SDL_LOG_CATEGORY_ERROR: c_int = 1;
pub const SDL_LOG_CATEGORY_ASSERT: c_int = 2;
pub const SDL_LOG_CATEGORY_SYSTEM: c_int = 3;
pub const SDL_LOG_CATEGORY_AUDIO: c_int = 4;
pub const SDL_LOG_CATEGORY_VIDEO: c_int = 5;
pub const SDL_LOG_CATEGORY_RENDER: c_int = 6;
pub const SDL_LOG_CATEGORY_INPUT: c_int = 7;
pub const SDL_LOG_CATEGORY_TEST: c_int = 8;
pub const SDL_LOG_CATEGORY_RESERVED1: c_int = 9;
pub const SDL_LOG_CATEGORY_RESERVED2: c_int = 10;
pub const SDL_LOG_CATEGORY_RESERVED3: c_int = 11;
pub const SDL_LOG_CATEGORY_RESERVED4: c_int = 12;
pub const SDL_LOG_CATEGORY_RESERVED5: c_int = 13;
pub const SDL_LOG_CATEGORY_RESERVED6: c_int = 14;
pub const SDL_LOG_CATEGORY_RESERVED7: c_int = 15;
pub const SDL_LOG_CATEGORY_RESERVED8: c_int = 16;
pub const SDL_LOG_CATEGORY_RESERVED9: c_int = 17;
pub const SDL_LOG_CATEGORY_RESERVED10: c_int = 18;
pub const SDL_LOG_CATEGORY_CUSTOM: c_int = 19;
pub const SDL_LogCategory = c_uint;
pub const SDL_LOG_PRIORITY_VERBOSE: c_int = 1;
pub const SDL_LOG_PRIORITY_DEBUG: c_int = 2;
pub const SDL_LOG_PRIORITY_INFO: c_int = 3;
pub const SDL_LOG_PRIORITY_WARN: c_int = 4;
pub const SDL_LOG_PRIORITY_ERROR: c_int = 5;
pub const SDL_LOG_PRIORITY_CRITICAL: c_int = 6;
pub const SDL_NUM_LOG_PRIORITIES: c_int = 7;
pub const SDL_LogPriority = c_uint;
pub extern fn SDL_LogSetAllPriority(priority: SDL_LogPriority) void;
pub extern fn SDL_LogSetPriority(category: c_int, priority: SDL_LogPriority) void;
pub extern fn SDL_LogGetPriority(category: c_int) SDL_LogPriority;
pub extern fn SDL_LogResetPriorities() void;
pub extern fn SDL_Log(fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogVerbose(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogDebug(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogInfo(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogWarn(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogError(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogCritical(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogMessage(category: c_int, priority: SDL_LogPriority, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogMessageV(category: c_int, priority: SDL_LogPriority, fmt: [*c]const u8, ap: va_list) void;
pub const SDL_LogOutputFunction = ?*const fn (?*anyopaque, c_int, SDL_LogPriority, [*c]const u8) callconv(.C) void;
pub extern fn SDL_LogGetOutputFunction(callback: [*c]SDL_LogOutputFunction, userdata: [*c]?*anyopaque) void;
pub extern fn SDL_LogSetOutputFunction(callback: SDL_LogOutputFunction, userdata: ?*anyopaque) void;
pub const SDL_MESSAGEBOX_ERROR: c_int = 16;
pub const SDL_MESSAGEBOX_WARNING: c_int = 32;
pub const SDL_MESSAGEBOX_INFORMATION: c_int = 64;
pub const SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT: c_int = 128;
pub const SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT: c_int = 256;
pub const SDL_MessageBoxFlags = c_uint;
pub const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT: c_int = 1;
pub const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT: c_int = 2;
pub const SDL_MessageBoxButtonFlags = c_uint;
pub const SDL_MessageBoxButtonData = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    buttonid: c_int = @import("std").mem.zeroes(c_int),
    text: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const SDL_MessageBoxColor = extern struct {
    r: Uint8 = @import("std").mem.zeroes(Uint8),
    g: Uint8 = @import("std").mem.zeroes(Uint8),
    b: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_MESSAGEBOX_COLOR_BACKGROUND: c_int = 0;
pub const SDL_MESSAGEBOX_COLOR_TEXT: c_int = 1;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_BORDER: c_int = 2;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND: c_int = 3;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED: c_int = 4;
pub const SDL_MESSAGEBOX_COLOR_MAX: c_int = 5;
pub const SDL_MessageBoxColorType = c_uint;
pub const SDL_MessageBoxColorScheme = extern struct {
    colors: [5]SDL_MessageBoxColor = @import("std").mem.zeroes([5]SDL_MessageBoxColor),
};
pub const SDL_MessageBoxData = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    window: ?*SDL_Window = @import("std").mem.zeroes(?*SDL_Window),
    title: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    message: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    numbuttons: c_int = @import("std").mem.zeroes(c_int),
    buttons: [*c]const SDL_MessageBoxButtonData = @import("std").mem.zeroes([*c]const SDL_MessageBoxButtonData),
    colorScheme: [*c]const SDL_MessageBoxColorScheme = @import("std").mem.zeroes([*c]const SDL_MessageBoxColorScheme),
};
pub extern fn SDL_ShowMessageBox(messageboxdata: [*c]const SDL_MessageBoxData, buttonid: [*c]c_int) c_int;
pub extern fn SDL_ShowSimpleMessageBox(flags: Uint32, title: [*c]const u8, message: [*c]const u8, window: ?*SDL_Window) c_int;
pub const SDL_MetalView = ?*anyopaque;
pub extern fn SDL_Metal_CreateView(window: ?*SDL_Window) SDL_MetalView;
pub extern fn SDL_Metal_DestroyView(view: SDL_MetalView) void;
pub extern fn SDL_Metal_GetLayer(view: SDL_MetalView) ?*anyopaque;
pub extern fn SDL_Metal_GetDrawableSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub const SDL_POWERSTATE_UNKNOWN: c_int = 0;
pub const SDL_POWERSTATE_ON_BATTERY: c_int = 1;
pub const SDL_POWERSTATE_NO_BATTERY: c_int = 2;
pub const SDL_POWERSTATE_CHARGING: c_int = 3;
pub const SDL_POWERSTATE_CHARGED: c_int = 4;
pub const SDL_PowerState = c_uint;
pub extern fn SDL_GetPowerInfo(seconds: [*c]c_int, percent: [*c]c_int) SDL_PowerState;
pub const SDL_RENDERER_SOFTWARE: c_int = 1;
pub const SDL_RENDERER_ACCELERATED: c_int = 2;
pub const SDL_RENDERER_PRESENTVSYNC: c_int = 4;
pub const SDL_RENDERER_TARGETTEXTURE: c_int = 8;
pub const SDL_RendererFlags = c_uint;
pub const struct_SDL_RendererInfo = extern struct {
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    num_texture_formats: Uint32 = @import("std").mem.zeroes(Uint32),
    texture_formats: [16]Uint32 = @import("std").mem.zeroes([16]Uint32),
    max_texture_width: c_int = @import("std").mem.zeroes(c_int),
    max_texture_height: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_RendererInfo = struct_SDL_RendererInfo;
pub const struct_SDL_Vertex = extern struct {
    position: SDL_FPoint = @import("std").mem.zeroes(SDL_FPoint),
    color: SDL_Color = @import("std").mem.zeroes(SDL_Color),
    tex_coord: SDL_FPoint = @import("std").mem.zeroes(SDL_FPoint),
};
pub const SDL_Vertex = struct_SDL_Vertex;
pub const SDL_ScaleModeNearest: c_int = 0;
pub const SDL_ScaleModeLinear: c_int = 1;
pub const SDL_ScaleModeBest: c_int = 2;
pub const SDL_ScaleMode = c_uint;
pub const SDL_TEXTUREACCESS_STATIC: c_int = 0;
pub const SDL_TEXTUREACCESS_STREAMING: c_int = 1;
pub const SDL_TEXTUREACCESS_TARGET: c_int = 2;
pub const SDL_TextureAccess = c_uint;
pub const SDL_TEXTUREMODULATE_NONE: c_int = 0;
pub const SDL_TEXTUREMODULATE_COLOR: c_int = 1;
pub const SDL_TEXTUREMODULATE_ALPHA: c_int = 2;
pub const SDL_TextureModulate = c_uint;
pub const SDL_FLIP_NONE: c_int = 0;
pub const SDL_FLIP_HORIZONTAL: c_int = 1;
pub const SDL_FLIP_VERTICAL: c_int = 2;
pub const SDL_RendererFlip = c_uint;
pub const struct_SDL_Renderer = opaque {};
pub const SDL_Renderer = struct_SDL_Renderer;
pub const struct_SDL_Texture = opaque {};
pub const SDL_Texture = struct_SDL_Texture;
pub extern fn SDL_GetNumRenderDrivers() c_int;
pub extern fn SDL_GetRenderDriverInfo(index: c_int, info: [*c]SDL_RendererInfo) c_int;
pub extern fn SDL_CreateWindowAndRenderer(width: c_int, height: c_int, window_flags: Uint32, window: [*c]?*SDL_Window, renderer: [*c]?*SDL_Renderer) c_int;
pub extern fn SDL_CreateRenderer(window: ?*SDL_Window, index: c_int, flags: Uint32) ?*SDL_Renderer;
pub extern fn SDL_CreateSoftwareRenderer(surface: [*c]SDL_Surface) ?*SDL_Renderer;
pub extern fn SDL_GetRenderer(window: ?*SDL_Window) ?*SDL_Renderer;
pub extern fn SDL_RenderGetWindow(renderer: ?*SDL_Renderer) ?*SDL_Window;
pub extern fn SDL_GetRendererInfo(renderer: ?*SDL_Renderer, info: [*c]SDL_RendererInfo) c_int;
pub extern fn SDL_GetRendererOutputSize(renderer: ?*SDL_Renderer, w: [*c]c_int, h: [*c]c_int) c_int;
pub extern fn SDL_CreateTexture(renderer: ?*SDL_Renderer, format: Uint32, access: c_int, w: c_int, h: c_int) ?*SDL_Texture;
pub extern fn SDL_CreateTextureFromSurface(renderer: ?*SDL_Renderer, surface: [*c]SDL_Surface) ?*SDL_Texture;
pub extern fn SDL_QueryTexture(texture: ?*SDL_Texture, format: [*c]Uint32, access: [*c]c_int, w: [*c]c_int, h: [*c]c_int) c_int;
pub extern fn SDL_SetTextureColorMod(texture: ?*SDL_Texture, r: Uint8, g: Uint8, b: Uint8) c_int;
pub extern fn SDL_GetTextureColorMod(texture: ?*SDL_Texture, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) c_int;
pub extern fn SDL_SetTextureAlphaMod(texture: ?*SDL_Texture, alpha: Uint8) c_int;
pub extern fn SDL_GetTextureAlphaMod(texture: ?*SDL_Texture, alpha: [*c]Uint8) c_int;
pub extern fn SDL_SetTextureBlendMode(texture: ?*SDL_Texture, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetTextureBlendMode(texture: ?*SDL_Texture, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_SetTextureScaleMode(texture: ?*SDL_Texture, scaleMode: SDL_ScaleMode) c_int;
pub extern fn SDL_GetTextureScaleMode(texture: ?*SDL_Texture, scaleMode: [*c]SDL_ScaleMode) c_int;
pub extern fn SDL_SetTextureUserData(texture: ?*SDL_Texture, userdata: ?*anyopaque) c_int;
pub extern fn SDL_GetTextureUserData(texture: ?*SDL_Texture) ?*anyopaque;
pub extern fn SDL_UpdateTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, pixels: ?*const anyopaque, pitch: c_int) c_int;
pub extern fn SDL_UpdateYUVTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, Yplane: [*c]const Uint8, Ypitch: c_int, Uplane: [*c]const Uint8, Upitch: c_int, Vplane: [*c]const Uint8, Vpitch: c_int) c_int;
pub extern fn SDL_UpdateNVTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, Yplane: [*c]const Uint8, Ypitch: c_int, UVplane: [*c]const Uint8, UVpitch: c_int) c_int;
pub extern fn SDL_LockTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, pixels: [*c]?*anyopaque, pitch: [*c]c_int) c_int;
pub extern fn SDL_LockTextureToSurface(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, surface: [*c][*c]SDL_Surface) c_int;
pub extern fn SDL_UnlockTexture(texture: ?*SDL_Texture) void;
pub extern fn SDL_RenderTargetSupported(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_SetRenderTarget(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture) c_int;
pub extern fn SDL_GetRenderTarget(renderer: ?*SDL_Renderer) ?*SDL_Texture;
pub extern fn SDL_RenderSetLogicalSize(renderer: ?*SDL_Renderer, w: c_int, h: c_int) c_int;
pub extern fn SDL_RenderGetLogicalSize(renderer: ?*SDL_Renderer, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_RenderSetIntegerScale(renderer: ?*SDL_Renderer, enable: SDL_bool) c_int;
pub extern fn SDL_RenderGetIntegerScale(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_RenderSetViewport(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderGetViewport(renderer: ?*SDL_Renderer, rect: [*c]SDL_Rect) void;
pub extern fn SDL_RenderSetClipRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderGetClipRect(renderer: ?*SDL_Renderer, rect: [*c]SDL_Rect) void;
pub extern fn SDL_RenderIsClipEnabled(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_RenderSetScale(renderer: ?*SDL_Renderer, scaleX: f32, scaleY: f32) c_int;
pub extern fn SDL_RenderGetScale(renderer: ?*SDL_Renderer, scaleX: [*c]f32, scaleY: [*c]f32) void;
pub extern fn SDL_RenderWindowToLogical(renderer: ?*SDL_Renderer, windowX: c_int, windowY: c_int, logicalX: [*c]f32, logicalY: [*c]f32) void;
pub extern fn SDL_RenderLogicalToWindow(renderer: ?*SDL_Renderer, logicalX: f32, logicalY: f32, windowX: [*c]c_int, windowY: [*c]c_int) void;
pub extern fn SDL_SetRenderDrawColor(renderer: ?*SDL_Renderer, r: Uint8, g: Uint8, b: Uint8, a: Uint8) c_int;
pub extern fn SDL_GetRenderDrawColor(renderer: ?*SDL_Renderer, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8, a: [*c]Uint8) c_int;
pub extern fn SDL_SetRenderDrawBlendMode(renderer: ?*SDL_Renderer, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetRenderDrawBlendMode(renderer: ?*SDL_Renderer, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_RenderClear(renderer: ?*SDL_Renderer) c_int;
pub extern fn SDL_RenderDrawPoint(renderer: ?*SDL_Renderer, x: c_int, y: c_int) c_int;
pub extern fn SDL_RenderDrawPoints(renderer: ?*SDL_Renderer, points: [*c]const SDL_Point, count: c_int) c_int;
pub extern fn SDL_RenderDrawLine(renderer: ?*SDL_Renderer, x1: c_int, y1: c_int, x2: c_int, y2: c_int) c_int;
pub extern fn SDL_RenderDrawLines(renderer: ?*SDL_Renderer, points: [*c]const SDL_Point, count: c_int) c_int;
pub extern fn SDL_RenderDrawRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderDrawRects(renderer: ?*SDL_Renderer, rects: [*c]const SDL_Rect, count: c_int) c_int;
pub extern fn SDL_RenderFillRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderFillRects(renderer: ?*SDL_Renderer, rects: [*c]const SDL_Rect, count: c_int) c_int;
pub extern fn SDL_RenderCopy(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderCopyEx(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_Rect, angle: f64, center: [*c]const SDL_Point, flip: SDL_RendererFlip) c_int;
pub extern fn SDL_RenderDrawPointF(renderer: ?*SDL_Renderer, x: f32, y: f32) c_int;
pub extern fn SDL_RenderDrawPointsF(renderer: ?*SDL_Renderer, points: [*c]const SDL_FPoint, count: c_int) c_int;
pub extern fn SDL_RenderDrawLineF(renderer: ?*SDL_Renderer, x1: f32, y1: f32, x2: f32, y2: f32) c_int;
pub extern fn SDL_RenderDrawLinesF(renderer: ?*SDL_Renderer, points: [*c]const SDL_FPoint, count: c_int) c_int;
pub extern fn SDL_RenderDrawRectF(renderer: ?*SDL_Renderer, rect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderDrawRectsF(renderer: ?*SDL_Renderer, rects: [*c]const SDL_FRect, count: c_int) c_int;
pub extern fn SDL_RenderFillRectF(renderer: ?*SDL_Renderer, rect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderFillRectsF(renderer: ?*SDL_Renderer, rects: [*c]const SDL_FRect, count: c_int) c_int;
pub extern fn SDL_RenderCopyF(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderCopyExF(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_FRect, angle: f64, center: [*c]const SDL_FPoint, flip: SDL_RendererFlip) c_int;
pub extern fn SDL_RenderGeometry(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, vertices: [*c]const SDL_Vertex, num_vertices: c_int, indices: [*c]const c_int, num_indices: c_int) c_int;
pub extern fn SDL_RenderGeometryRaw(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, xy: [*c]const f32, xy_stride: c_int, color: [*c]const SDL_Color, color_stride: c_int, uv: [*c]const f32, uv_stride: c_int, num_vertices: c_int, indices: ?*const anyopaque, num_indices: c_int, size_indices: c_int) c_int;
pub extern fn SDL_RenderReadPixels(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect, format: Uint32, pixels: ?*anyopaque, pitch: c_int) c_int;
pub extern fn SDL_RenderPresent(renderer: ?*SDL_Renderer) void;
pub extern fn SDL_DestroyTexture(texture: ?*SDL_Texture) void;
pub extern fn SDL_DestroyRenderer(renderer: ?*SDL_Renderer) void;
pub extern fn SDL_RenderFlush(renderer: ?*SDL_Renderer) c_int;
pub extern fn SDL_GL_BindTexture(texture: ?*SDL_Texture, texw: [*c]f32, texh: [*c]f32) c_int;
pub extern fn SDL_GL_UnbindTexture(texture: ?*SDL_Texture) c_int;
pub extern fn SDL_RenderGetMetalLayer(renderer: ?*SDL_Renderer) ?*anyopaque;
pub extern fn SDL_RenderGetMetalCommandEncoder(renderer: ?*SDL_Renderer) ?*anyopaque;
pub extern fn SDL_RenderSetVSync(renderer: ?*SDL_Renderer, vsync: c_int) c_int;
pub extern fn SDL_CreateShapedWindow(title: [*c]const u8, x: c_uint, y: c_uint, w: c_uint, h: c_uint, flags: Uint32) ?*SDL_Window;
pub extern fn SDL_IsShapedWindow(window: ?*const SDL_Window) SDL_bool;
pub const ShapeModeDefault: c_int = 0;
pub const ShapeModeBinarizeAlpha: c_int = 1;
pub const ShapeModeReverseBinarizeAlpha: c_int = 2;
pub const ShapeModeColorKey: c_int = 3;
pub const WindowShapeMode = c_uint;
pub const SDL_WindowShapeParams = extern union {
    binarizationCutoff: Uint8,
    colorKey: SDL_Color,
};
pub const struct_SDL_WindowShapeMode = extern struct {
    mode: WindowShapeMode = @import("std").mem.zeroes(WindowShapeMode),
    parameters: SDL_WindowShapeParams = @import("std").mem.zeroes(SDL_WindowShapeParams),
};
pub const SDL_WindowShapeMode = struct_SDL_WindowShapeMode;
pub extern fn SDL_SetWindowShape(window: ?*SDL_Window, shape: [*c]SDL_Surface, shape_mode: [*c]SDL_WindowShapeMode) c_int;
pub extern fn SDL_GetShapedWindowMode(window: ?*SDL_Window, shape_mode: [*c]SDL_WindowShapeMode) c_int;
pub extern fn SDL_IsTablet() SDL_bool;
pub extern fn SDL_OnApplicationWillTerminate() void;
pub extern fn SDL_OnApplicationDidReceiveMemoryWarning() void;
pub extern fn SDL_OnApplicationWillResignActive() void;
pub extern fn SDL_OnApplicationDidEnterBackground() void;
pub extern fn SDL_OnApplicationWillEnterForeground() void;
pub extern fn SDL_OnApplicationDidBecomeActive() void;
pub extern fn SDL_GetTicks() Uint32;
pub extern fn SDL_GetTicks64() Uint64;
pub extern fn SDL_GetPerformanceCounter() Uint64;
pub extern fn SDL_GetPerformanceFrequency() Uint64;
pub extern fn SDL_Delay(ms: Uint32) void;
pub const SDL_TimerCallback = ?*const fn (Uint32, ?*anyopaque) callconv(.C) Uint32;
pub const SDL_TimerID = c_int;
pub extern fn SDL_AddTimer(interval: Uint32, callback: SDL_TimerCallback, param: ?*anyopaque) SDL_TimerID;
pub extern fn SDL_RemoveTimer(id: SDL_TimerID) SDL_bool;
pub const struct_SDL_version = extern struct {
    major: Uint8 = @import("std").mem.zeroes(Uint8),
    minor: Uint8 = @import("std").mem.zeroes(Uint8),
    patch: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_version = struct_SDL_version;
pub extern fn SDL_GetVersion(ver: [*c]SDL_version) void;
pub extern fn SDL_GetRevision() [*c]const u8;
pub extern fn SDL_GetRevisionNumber() c_int;
pub const struct_SDL_Locale = extern struct {
    language: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    country: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const SDL_Locale = struct_SDL_Locale;
pub extern fn SDL_GetPreferredLocales() [*c]SDL_Locale;
pub extern fn SDL_OpenURL(url: [*c]const u8) c_int;
pub extern fn SDL_Init(flags: Uint32) c_int;
pub extern fn SDL_InitSubSystem(flags: Uint32) c_int;
pub extern fn SDL_QuitSubSystem(flags: Uint32) void;
pub extern fn SDL_WasInit(flags: Uint32) Uint32;
pub extern fn SDL_Quit() void;
pub extern fn epoxy_extension_in_string(extension_list: [*c]const u8, ext: [*c]const u8) bool;
pub const khronos_int8_t = i8;
pub const khronos_int16_t = i16;
pub const khronos_int32_t = i32;
pub const khronos_int64_t = i64;
pub const khronos_uint8_t = u8;
pub const khronos_uint16_t = u16;
pub const khronos_uint32_t = u32;
pub const khronos_uint64_t = u64;
pub const khronos_float_t = f32;
pub const khronos_intptr_t = c_long;
pub const khronos_uintptr_t = c_ulong;
pub const khronos_ssize_t = c_long;
pub const khronos_usize_t = c_ulong;
pub const khronos_utime_nanoseconds_t = u64;
pub const khronos_stime_nanoseconds_t = i64;
pub const KHRONOS_FALSE: c_int = 0;
pub const KHRONOS_TRUE: c_int = 1;
pub const KHRONOS_BOOLEAN_ENUM_FORCE_SIZE: c_int = 2147483647;
pub const khronos_boolean_enum_t = c_uint;
pub const GLenum = c_uint;
pub const GLboolean = u8;
pub const GLbitfield = c_uint;
pub const GLvoid = anyopaque;
pub const GLbyte = khronos_int8_t;
pub const GLubyte = khronos_uint8_t;
pub const GLshort = khronos_int16_t;
pub const GLushort = khronos_uint16_t;
pub const GLint = c_int;
pub const GLuint = c_uint;
pub const GLclampx = khronos_int32_t;
pub const GLsizei = c_int;
pub const GLfloat = khronos_float_t;
pub const GLclampf = khronos_float_t;
pub const GLdouble = f64;
pub const GLclampd = f64;
pub const GLeglClientBufferEXT = ?*anyopaque;
pub const GLeglImageOES = ?*anyopaque;
pub const GLchar = u8;
pub const GLcharARB = u8;
pub const GLhandleARB = ?*anyopaque;
pub const GLhalf = khronos_uint16_t;
pub const GLhalfARB = khronos_uint16_t;
pub const GLfixed = khronos_int32_t;
pub const GLintptr = khronos_intptr_t;
pub const GLintptrARB = khronos_intptr_t;
pub const GLsizeiptr = khronos_ssize_t;
pub const GLsizeiptrARB = khronos_ssize_t;
pub const GLint64 = khronos_int64_t;
pub const GLint64EXT = khronos_int64_t;
pub const GLuint64 = khronos_uint64_t;
pub const GLuint64EXT = khronos_uint64_t;
pub const struct___GLsync = opaque {};
pub const GLsync = ?*struct___GLsync;
pub const struct__cl_context = opaque {};
pub const struct__cl_event = opaque {};
pub const GLDEBUGPROC = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar, ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCARB = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar, ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCKHR = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar, ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCAMD = ?*const fn (GLuint, GLenum, GLenum, GLsizei, [*c]const GLchar, ?*anyopaque) callconv(.C) void;
pub const GLhalfNV = c_ushort;
pub const GLvdpauSurfaceNV = GLintptr;
pub const GLVULKANPROCNV = ?*const fn () callconv(.C) void;
pub const PFNGLACCUMPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLACCUMXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC = ?*const fn (GLuint, GLuint64, GLuint) callconv(.C) GLboolean;
pub const PFNGLACTIVEPROGRAMEXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLACTIVESHADERPROGRAMPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLACTIVESHADERPROGRAMEXTPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLACTIVESTENCILFACEEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLACTIVETEXTUREPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLACTIVETEXTUREARBPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLACTIVEVARYINGNVPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLALPHAFRAGMENTOP1ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLALPHAFRAGMENTOP2ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLALPHAFRAGMENTOP3ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLALPHAFUNCPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLALPHAFUNCQCOMPROC = ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub const PFNGLALPHAFUNCXPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLALPHAFUNCXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC = ?*const fn () callconv(.C) void;
pub const PFNGLAPPLYTEXTUREEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLAREPROGRAMSRESIDENTNVPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub const PFNGLARETEXTURESRESIDENTPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub const PFNGLARETEXTURESRESIDENTEXTPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub const PFNGLARRAYELEMENTPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLARRAYELEMENTEXTPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLARRAYOBJECTATIPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub const PFNGLASYNCCOPYBUFFERSUBDATANVXPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub const PFNGLASYNCCOPYIMAGESUBDATANVXPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub const PFNGLASYNCMARKERSGIXPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLATTACHOBJECTARBPROC = ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub const PFNGLATTACHSHADERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLBEGINPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBEGINCONDITIONALRENDERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBEGINCONDITIONALRENDERNVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBEGINCONDITIONALRENDERNVXPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBEGINFRAGMENTSHADERATIPROC = ?*const fn () callconv(.C) void;
pub const PFNGLBEGINOCCLUSIONQUERYNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBEGINPERFMONITORAMDPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBEGINPERFQUERYINTELPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBEGINQUERYPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBEGINQUERYARBPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBEGINQUERYEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBEGINQUERYINDEXEDPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLBEGINTRANSFORMFEEDBACKPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBEGINTRANSFORMFEEDBACKEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBEGINTRANSFORMFEEDBACKNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBEGINVERTEXSHADEREXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLBEGINVIDEOCAPTURENVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDATTRIBLOCATIONPROC = ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLBINDATTRIBLOCATIONARBPROC = ?*const fn (GLhandleARB, GLuint, [*c]const GLcharARB) callconv(.C) void;
pub const PFNGLBINDBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFERARBPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFERBASEPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFERBASEEXTPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFERBASENVPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFEROFFSETEXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub const PFNGLBINDBUFFEROFFSETNVPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub const PFNGLBINDBUFFERRANGEPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLBINDBUFFERRANGEEXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLBINDBUFFERRANGENVPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLBINDBUFFERSBASEPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLBINDBUFFERSRANGEPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizeiptr) callconv(.C) void;
pub const PFNGLBINDFRAGDATALOCATIONPROC = ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLBINDFRAGDATALOCATIONEXTPROC = ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLBINDFRAGDATALOCATIONINDEXEDPROC = ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC = ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLBINDFRAGMENTSHADERATIPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDFRAMEBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDFRAMEBUFFEREXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDFRAMEBUFFEROESPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDIMAGETEXTUREPROC = ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBINDIMAGETEXTUREEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) callconv(.C) void;
pub const PFNGLBINDIMAGETEXTURESPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLBINDLIGHTPARAMETEREXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub const PFNGLBINDMATERIALPARAMETEREXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub const PFNGLBINDMULTITEXTUREEXTPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDPARAMETEREXTPROC = ?*const fn (GLenum) callconv(.C) GLuint;
pub const PFNGLBINDPROGRAMARBPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDPROGRAMNVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDPROGRAMPIPELINEEXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDRENDERBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDRENDERBUFFEREXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDRENDERBUFFEROESPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDSAMPLERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLBINDSAMPLERSPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLBINDSHADINGRATEIMAGENVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDTEXGENPARAMETEREXTPROC = ?*const fn (GLenum, GLenum, GLenum) callconv(.C) GLuint;
pub const PFNGLBINDTEXTUREPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDTEXTUREEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDTEXTUREUNITPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLBINDTEXTUREUNITPARAMETEREXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub const PFNGLBINDTEXTURESPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLBINDTRANSFORMFEEDBACKPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDTRANSFORMFEEDBACKNVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINDVERTEXARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDVERTEXARRAYAPPLEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDVERTEXARRAYOESPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDVERTEXBUFFERPROC = ?*const fn (GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub const PFNGLBINDVERTEXBUFFERSPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub const PFNGLBINDVERTEXSHADEREXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC = ?*const fn (GLuint, GLuint, GLenum, GLintptrARB) callconv(.C) void;
pub const PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC = ?*const fn (GLuint, GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLBINORMAL3BEXTPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLBINORMAL3BVEXTPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLBINORMAL3DEXTPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLBINORMAL3DVEXTPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLBINORMAL3FEXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLBINORMAL3FVEXTPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLBINORMAL3IEXTPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLBINORMAL3IVEXTPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLBINORMAL3SEXTPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLBINORMAL3SVEXTPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLBINORMALPOINTEREXTPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLBITMAPPROC = ?*const fn (GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLBITMAPXOESPROC = ?*const fn (GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLBLENDBARRIERPROC = ?*const fn () callconv(.C) void;
pub const PFNGLBLENDBARRIERKHRPROC = ?*const fn () callconv(.C) void;
pub const PFNGLBLENDBARRIERNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLBLENDCOLORPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLBLENDCOLOREXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLBLENDCOLORXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLBLENDEQUATIONPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONINDEXEDAMDPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONOESPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEEXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEOESPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEIPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEIARBPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEIEXTPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONSEPARATEIOESPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONIPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONIARBPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONIEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBLENDEQUATIONIOESPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCINDEXEDAMDPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEINGRPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEOESPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEIPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEIARBPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEIEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCSEPARATEIOESPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCIPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCIARBPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCIEXTPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDFUNCIOESPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLBLENDPARAMETERINVPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLBLITFRAMEBUFFERPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLBLITFRAMEBUFFERANGLEPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLBLITFRAMEBUFFEREXTPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLBLITFRAMEBUFFERNVPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLBLITNAMEDFRAMEBUFFERPROC = ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLBUFFERADDRESSRANGENVPROC = ?*const fn (GLenum, GLuint, GLuint64EXT, GLsizeiptr) callconv(.C) void;
pub const PFNGLBUFFERATTACHMEMORYNVPROC = ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLBUFFERDATAPROC = ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub const PFNGLBUFFERDATAARBPROC = ?*const fn (GLenum, GLsizeiptrARB, ?*const anyopaque, GLenum) callconv(.C) void;
pub const PFNGLBUFFERPAGECOMMITMENTARBPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub const PFNGLBUFFERPARAMETERIAPPLEPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLBUFFERSTORAGEPROC = ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub const PFNGLBUFFERSTORAGEEXTPROC = ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub const PFNGLBUFFERSTORAGEEXTERNALEXTPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub const PFNGLBUFFERSTORAGEMEMEXTPROC = ?*const fn (GLenum, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLBUFFERSUBDATAPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub const PFNGLBUFFERSUBDATAARBPROC = ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCALLCOMMANDLISTNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLCALLLISTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLCALLLISTSPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCHECKFRAMEBUFFERSTATUSPROC = ?*const fn (GLenum) callconv(.C) GLenum;
pub const PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC = ?*const fn (GLenum) callconv(.C) GLenum;
pub const PFNGLCHECKFRAMEBUFFERSTATUSOESPROC = ?*const fn (GLenum) callconv(.C) GLenum;
pub const PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC = ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub const PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub const PFNGLCLAMPCOLORPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLCLAMPCOLORARBPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLCLEARPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLCLEARACCUMPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCLEARACCUMXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCLEARBUFFERDATAPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARBUFFERSUBDATAPROC = ?*const fn (GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARBUFFERFIPROC = ?*const fn (GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub const PFNGLCLEARBUFFERFVPROC = ?*const fn (GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCLEARBUFFERIVPROC = ?*const fn (GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub const PFNGLCLEARBUFFERUIVPROC = ?*const fn (GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLCLEARCOLORPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCLEARCOLORIIEXTPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLCLEARCOLORIUIEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCLEARCOLORXPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCLEARCOLORXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCLEARDEPTHPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLCLEARDEPTHDNVPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLCLEARDEPTHFPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLCLEARDEPTHFOESPROC = ?*const fn (GLclampf) callconv(.C) void;
pub const PFNGLCLEARDEPTHXPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLCLEARDEPTHXOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLCLEARINDEXPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLCLEARNAMEDBUFFERDATAPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARNAMEDBUFFERDATAEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARNAMEDBUFFERSUBDATAPROC = ?*const fn (GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC = ?*const fn (GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARNAMEDFRAMEBUFFERFIPROC = ?*const fn (GLuint, GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub const PFNGLCLEARNAMEDFRAMEBUFFERFVPROC = ?*const fn (GLuint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCLEARNAMEDFRAMEBUFFERIVPROC = ?*const fn (GLuint, GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub const PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC = ?*const fn (GLuint, GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC = ?*const fn (GLsizei, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLCLEARSTENCILPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLCLEARTEXIMAGEPROC = ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARTEXIMAGEEXTPROC = ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARTEXSUBIMAGEPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLEARTEXSUBIMAGEEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCLIENTACTIVETEXTUREPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCLIENTACTIVETEXTUREARBPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCLIENTATTRIBDEFAULTEXTPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLCLIENTWAITSYNCPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub const PFNGLCLIENTWAITSYNCAPPLEPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub const PFNGLCLIPCONTROLPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLCLIPCONTROLEXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLCLIPPLANEPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLCLIPPLANEFPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCLIPPLANEFIMGPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCLIPPLANEFOESPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCLIPPLANEXPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLCLIPPLANEXIMGPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLCLIPPLANEXOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLCOLOR3BPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLCOLOR3BVPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLCOLOR3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLCOLOR3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLCOLOR3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR3HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLCOLOR3HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLCOLOR3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLCOLOR3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLCOLOR3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLCOLOR3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLCOLOR3UBPROC = ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLCOLOR3UBVPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLCOLOR3UIPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOLOR3UIVPROC = ?*const fn ([*c]const GLuint) callconv(.C) void;
pub const PFNGLCOLOR3USPROC = ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub const PFNGLCOLOR3USVPROC = ?*const fn ([*c]const GLushort) callconv(.C) void;
pub const PFNGLCOLOR3XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCOLOR3XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLCOLOR4BPROC = ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLCOLOR4BVPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLCOLOR4DPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLCOLOR4DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLCOLOR4FPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLCOLOR4HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLCOLOR4IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLCOLOR4IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLCOLOR4SPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLCOLOR4SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLCOLOR4UBPROC = ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLCOLOR4UBVERTEX2FSUNPROC = ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4UBVERTEX2FVSUNPROC = ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4UBVERTEX3FSUNPROC = ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4UBVERTEX3FVSUNPROC = ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLOR4UBVPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLCOLOR4UIPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOLOR4UIVPROC = ?*const fn ([*c]const GLuint) callconv(.C) void;
pub const PFNGLCOLOR4USPROC = ?*const fn (GLushort, GLushort, GLushort, GLushort) callconv(.C) void;
pub const PFNGLCOLOR4USVPROC = ?*const fn ([*c]const GLushort) callconv(.C) void;
pub const PFNGLCOLOR4XPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCOLOR4XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLCOLOR4XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLCOLORFORMATNVPROC = ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLCOLORFRAGMENTOP1ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOLORFRAGMENTOP2ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOLORFRAGMENTOP3ATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOLORMASKPROC = ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOLORMASKINDEXEDEXTPROC = ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOLORMASKIPROC = ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOLORMASKIEXTPROC = ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOLORMASKIOESPROC = ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOLORMATERIALPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLCOLORP3UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLCOLORP3UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLCOLORP4UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLCOLORP4UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLCOLORPOINTERPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORPOINTEREXTPROC = ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORPOINTERLISTIBMPROC = ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLCOLORPOINTERVINTELPROC = ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORSUBTABLEPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORSUBTABLEEXTPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORTABLEPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORTABLEEXTPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOLORTABLEPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLORTABLEPARAMETERFVSGIPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOLORTABLEPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLCOLORTABLEPARAMETERIVSGIPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLCOLORTABLESGIPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMBINERINPUTNVPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLCOMBINEROUTPUTNVPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLCOMBINERPARAMETERFNVPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLCOMBINERPARAMETERFVNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOMBINERPARAMETERINVPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLCOMBINERPARAMETERIVNVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLCOMBINERSTAGEPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOMMANDLISTSEGMENTSNVPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOMPILECOMMANDLISTNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLCOMPILESHADERPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLCOMPILESHADERARBPROC = ?*const fn (GLhandleARB) callconv(.C) void;
pub const PFNGLCOMPILESHADERINCLUDEARBPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE1DARBPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE2DARBPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE3DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE3DARBPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXIMAGE3DOESPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCONSERVATIVERASTERPARAMETERFNVPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLCONSERVATIVERASTERPARAMETERINVPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLCONVOLUTIONFILTER1DPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCONVOLUTIONFILTER1DEXTPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCONVOLUTIONFILTER2DPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCONVOLUTIONFILTER2DEXTPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERFEXTPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERIEXTPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLCONVOLUTIONPARAMETERXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLCOPYBUFFERSUBDATAPROC = ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLCOPYBUFFERSUBDATANVPROC = ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLCOPYCOLORSUBTABLEPROC = ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCOLORSUBTABLEEXTPROC = ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCOLORTABLEPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCOLORTABLESGIPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCONVOLUTIONFILTER1DPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCONVOLUTIONFILTER2DPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYIMAGESUBDATAPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYIMAGESUBDATAEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYIMAGESUBDATANVPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYIMAGESUBDATAOESPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYMULTITEXIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYMULTITEXIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYNAMEDBUFFERSUBDATAPROC = ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLCOPYPATHNVPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLCOPYPIXELSPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum) callconv(.C) void;
pub const PFNGLCOPYTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXIMAGE1DEXTPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXIMAGE2DEXTPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE1DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE2DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE3DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXSUBIMAGE3DOESPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTUREIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXTUREIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLCOPYTEXTURELEVELSAPPLEPROC = ?*const fn (GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE1DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE2DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE3DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLCOVERFILLPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOVERFILLPATHNVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLCOVERSTROKEPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOVERSTROKEPATHNVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLCOVERAGEMASKNVPROC = ?*const fn (GLboolean) callconv(.C) void;
pub const PFNGLCOVERAGEMODULATIONNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCOVERAGEMODULATIONTABLENVPROC = ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLCOVERAGEOPERATIONNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCREATEBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATECOMMANDLISTSNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEFRAMEBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEMEMORYOBJECTSEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEPERFQUERYINTELPROC = ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEPROGRAMPROC = ?*const fn () callconv(.C) GLuint;
pub const PFNGLCREATEPROGRAMOBJECTARBPROC = ?*const fn () callconv(.C) GLhandleARB;
pub const PFNGLCREATEPROGRAMPIPELINESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEPROGRESSFENCENVXPROC = ?*const fn () callconv(.C) GLuint;
pub const PFNGLCREATEQUERIESPROC = ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATERENDERBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATESAMPLERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATESHADERPROC = ?*const fn (GLenum) callconv(.C) GLuint;
pub const PFNGLCREATESHADEROBJECTARBPROC = ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub const PFNGLCREATESHADERPROGRAMEXTPROC = ?*const fn (GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLCREATESHADERPROGRAMVPROC = ?*const fn (GLenum, GLsizei, [*c]const [*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLCREATESHADERPROGRAMVEXTPROC = ?*const fn (GLenum, GLsizei, [*c][*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLCREATESTATESNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATESYNCFROMCLEVENTARBPROC = ?*const fn (?*struct__cl_context, ?*struct__cl_event, GLbitfield) callconv(.C) GLsync;
pub const PFNGLCREATETEXTURESPROC = ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATETRANSFORMFEEDBACKSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCREATEVERTEXARRAYSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLCULLFACEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLCULLPARAMETERDVEXTPROC = ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLCULLPARAMETERFVEXTPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLCURRENTPALETTEMATRIXARBPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLCURRENTPALETTEMATRIXOESPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECALLBACKPROC = ?*const fn (GLDEBUGPROC, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECALLBACKAMDPROC = ?*const fn (GLDEBUGPROCAMD, ?*anyopaque) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECALLBACKARBPROC = ?*const fn (GLDEBUGPROCARB, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECALLBACKKHRPROC = ?*const fn (GLDEBUGPROCKHR, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECONTROLPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECONTROLARBPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub const PFNGLDEBUGMESSAGECONTROLKHRPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub const PFNGLDEBUGMESSAGEENABLEAMDPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub const PFNGLDEBUGMESSAGEINSERTPROC = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLDEBUGMESSAGEINSERTAMDPROC = ?*const fn (GLenum, GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLDEBUGMESSAGEINSERTARBPROC = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLDEBUGMESSAGEINSERTKHRPROC = ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLDEFORMSGIXPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLDEFORMATIONMAP3DSGIXPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLDEFORMATIONMAP3FSGIXPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLDELETEASYNCMARKERSSGIXPROC = ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDELETEBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEBUFFERSARBPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETECOMMANDLISTSNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEFENCESAPPLEPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEFENCESNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEFRAGMENTSHADERATIPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDELETEFRAMEBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEFRAMEBUFFERSEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEFRAMEBUFFERSOESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETELISTSPROC = ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDELETEMEMORYOBJECTSEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETENAMEDSTRINGARBPROC = ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLDELETENAMESAMDPROC = ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEOBJECTARBPROC = ?*const fn (GLhandleARB) callconv(.C) void;
pub const PFNGLDELETEOCCLUSIONQUERIESNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEPATHSNVPROC = ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDELETEPERFMONITORSAMDPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLDELETEPERFQUERYINTELPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDELETEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDELETEPROGRAMPIPELINESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEPROGRAMPIPELINESEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEPROGRAMSARBPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEPROGRAMSNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEQUERIESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEQUERIESARBPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEQUERIESEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEQUERYRESOURCETAGNVPROC = ?*const fn (GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLDELETERENDERBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETERENDERBUFFERSEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETERENDERBUFFERSOESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETESAMPLERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETESEMAPHORESEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETESHADERPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDELETESTATESNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETESYNCPROC = ?*const fn (GLsync) callconv(.C) void;
pub const PFNGLDELETESYNCAPPLEPROC = ?*const fn (GLsync) callconv(.C) void;
pub const PFNGLDELETETEXTURESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETETEXTURESEXTPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETETRANSFORMFEEDBACKSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETETRANSFORMFEEDBACKSNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEVERTEXARRAYSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEVERTEXARRAYSAPPLEPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEVERTEXARRAYSOESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLDELETEVERTEXSHADEREXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDEPTHBOUNDSEXTPROC = ?*const fn (GLclampd, GLclampd) callconv(.C) void;
pub const PFNGLDEPTHBOUNDSDNVPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLDEPTHFUNCPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLDEPTHMASKPROC = ?*const fn (GLboolean) callconv(.C) void;
pub const PFNGLDEPTHRANGEPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLDEPTHRANGEARRAYFVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLDEPTHRANGEARRAYFVOESPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLDEPTHRANGEARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLDEPTHRANGEINDEXEDPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLDEPTHRANGEINDEXEDFNVPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLDEPTHRANGEINDEXEDFOESPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLDEPTHRANGEDNVPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLDEPTHRANGEFPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLDEPTHRANGEFOESPROC = ?*const fn (GLclampf, GLclampf) callconv(.C) void;
pub const PFNGLDEPTHRANGEXPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLDEPTHRANGEXOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLDETACHOBJECTARBPROC = ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub const PFNGLDETACHSHADERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLDETAILTEXFUNCSGISPROC = ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLDISABLEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLDISABLECLIENTSTATEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLECLIENTSTATEIEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLEDRIVERCONTROLQCOMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDISABLEINDEXEDEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDISABLEVERTEXARRAYATTRIBPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLDISABLEVERTEXARRAYEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLDISABLEVERTEXATTRIBAPPLEPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLDISABLEVERTEXATTRIBARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDISABLEVERTEXATTRIBARRAYARBPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLDISABLEIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLEIEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLEINVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISABLEIOESPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDISCARDFRAMEBUFFEREXTPROC = ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDISPATCHCOMPUTEPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLDISPATCHCOMPUTEINDIRECTPROC = ?*const fn (GLintptr) callconv(.C) void;
pub const PFNGLDRAWARRAYSPROC = ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSEXTPROC = ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSINDIRECTPROC = ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDANGLEPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDARBPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDEXTPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWARRAYSINSTANCEDNVPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWBUFFERPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLDRAWBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDRAWBUFFERSARBPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDRAWBUFFERSATIPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDRAWBUFFERSEXTPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDRAWBUFFERSINDEXEDEXTPROC = ?*const fn (GLint, [*c]const GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLDRAWBUFFERSNVPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLDRAWCOMMANDSADDRESSNVPROC = ?*const fn (GLenum, [*c]const GLuint64, [*c]const GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWCOMMANDSNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLintptr, [*c]const GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC = ?*const fn ([*c]const GLuint64, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub const PFNGLDRAWCOMMANDSSTATESNVPROC = ?*const fn (GLuint, [*c]const GLintptr, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub const PFNGLDRAWELEMENTARRAYAPPLEPROC = ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTARRAYATIPROC = ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTSPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSBASEVERTEXEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSBASEVERTEXOESPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINDIRECTPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDANGLEPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDARBPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLDRAWELEMENTSINSTANCEDNVPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLDRAWMESHARRAYSSUNPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLDRAWMESHTASKSINDIRECTNVPROC = ?*const fn (GLintptr) callconv(.C) void;
pub const PFNGLDRAWMESHTASKSNVPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLDRAWPIXELSPROC = ?*const fn (GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC = ?*const fn (GLenum, GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTARRAYATIPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTSPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLDRAWRANGEELEMENTSEXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLDRAWTEXFOESPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLDRAWTEXFVOESPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLDRAWTEXIOESPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLDRAWTEXIVOESPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLDRAWTEXSOESPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLDRAWTEXSVOESPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLDRAWTEXTURENVPROC = ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLDRAWTEXXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLDRAWTEXXVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC = ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC = ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKNVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub const PFNGLDRAWVKIMAGENVPROC = ?*const fn (GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC = ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub const PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC = ?*const fn (GLenum, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub const PFNGLEGLIMAGETARGETTEXTURE2DOESPROC = ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub const PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC = ?*const fn (GLuint, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub const PFNGLEDGEFLAGPROC = ?*const fn (GLboolean) callconv(.C) void;
pub const PFNGLEDGEFLAGFORMATNVPROC = ?*const fn (GLsizei) callconv(.C) void;
pub const PFNGLEDGEFLAGPOINTERPROC = ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLEDGEFLAGPOINTEREXTPROC = ?*const fn (GLsizei, GLsizei, [*c]const GLboolean) callconv(.C) void;
pub const PFNGLEDGEFLAGPOINTERLISTIBMPROC = ?*const fn (GLint, [*c][*c]const GLboolean, GLint) callconv(.C) void;
pub const PFNGLEDGEFLAGVPROC = ?*const fn ([*c]const GLboolean) callconv(.C) void;
pub const PFNGLELEMENTPOINTERAPPLEPROC = ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLELEMENTPOINTERATIPROC = ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLENABLEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLENABLECLIENTSTATEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLENABLECLIENTSTATEINDEXEDEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLECLIENTSTATEIEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLEDRIVERCONTROLQCOMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENABLEINDEXEDEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLEVARIANTCLIENTSTATEEXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENABLEVERTEXARRAYATTRIBPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLENABLEVERTEXARRAYATTRIBEXTPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLENABLEVERTEXARRAYEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLENABLEVERTEXATTRIBAPPLEPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLENABLEVERTEXATTRIBARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENABLEVERTEXATTRIBARRAYARBPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENABLEIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLEIEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLEINVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENABLEIOESPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENDPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDCONDITIONALRENDERPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDCONDITIONALRENDERNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDCONDITIONALRENDERNVXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDFRAGMENTSHADERATIPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDLISTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDOCCLUSIONQUERYNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDPERFMONITORAMDPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENDPERFQUERYINTELPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLENDQUERYPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLENDQUERYARBPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLENDQUERYEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLENDQUERYINDEXEDPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLENDTILINGQCOMPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLENDTRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDTRANSFORMFEEDBACKEXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDTRANSFORMFEEDBACKNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDVERTEXSHADEREXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLENDVIDEOCAPTURENVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLEVALCOORD1DPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLEVALCOORD1DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLEVALCOORD1FPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLEVALCOORD1FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLEVALCOORD1XOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLEVALCOORD1XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLEVALCOORD2DPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLEVALCOORD2DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLEVALCOORD2FPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLEVALCOORD2FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLEVALCOORD2XOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLEVALCOORD2XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLEVALMAPSNVPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLEVALMESH1PROC = ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub const PFNGLEVALMESH2PROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLEVALPOINT1PROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLEVALPOINT2PROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLEVALUATEDEPTHVALUESARBPROC = ?*const fn () callconv(.C) void;
pub const PFNGLEXECUTEPROGRAMNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLEXTGETBUFFERPOINTERVQCOMPROC = ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLEXTGETBUFFERSQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETFRAMEBUFFERSQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC = ?*const fn (GLuint, GLenum, [*c]GLchar, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETPROGRAMSQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETRENDERBUFFERSQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETSHADERSQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTGETTEXSUBIMAGEQCOMPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLEXTGETTEXTURESQCOMPROC = ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLEXTISPROGRAMBINARYQCOMPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLEXTRACTCOMPONENTEXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLFEEDBACKBUFFERPROC = ?*const fn (GLsizei, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLFEEDBACKBUFFERXOESPROC = ?*const fn (GLsizei, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLFENCESYNCPROC = ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub const PFNGLFENCESYNCAPPLEPROC = ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub const PFNGLFINALCOMBINERINPUTNVPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLFINISHPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFINISHASYNCSGIXPROC = ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub const PFNGLFINISHFENCEAPPLEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLFINISHFENCENVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLFINISHOBJECTAPPLEPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLFINISHTEXTURESUNXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFLUSHPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFLUSHMAPPEDBUFFERRANGEPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLFLUSHPIXELDATARANGENVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLFLUSHRASTERSGIXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFLUSHSTATICDATAIBMPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC = ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLFLUSHVERTEXARRAYRANGENVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFOGCOORDFORMATNVPROC = ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub const PFNGLFOGCOORDPOINTERPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLFOGCOORDPOINTEREXTPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLFOGCOORDPOINTERLISTIBMPROC = ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLFOGCOORDDPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLFOGCOORDDEXTPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLFOGCOORDDVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLFOGCOORDDVEXTPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLFOGCOORDFPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLFOGCOORDFEXTPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLFOGCOORDFVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLFOGCOORDFVEXTPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLFOGCOORDHNVPROC = ?*const fn (GLhalfNV) callconv(.C) void;
pub const PFNGLFOGCOORDHVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLFOGFUNCSGISPROC = ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFOGFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLFOGFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFOGIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLFOGIVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLFOGXPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLFOGXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLFOGXVPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLFOGXVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLFRAGMENTCOLORMATERIALSGIXPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLFRAGMENTCOVERAGECOLORNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTMODELFSGIXPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTMODELFVSGIXPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTMODELISGIXPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTMODELIVSGIXPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTFSGIXPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTFVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTISGIXPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLFRAGMENTLIGHTIVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLFRAGMENTMATERIALFSGIXPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTMATERIALFVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAGMENTMATERIALISGIXPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLFRAGMENTMATERIALIVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLFRAMETERMINATORGREMEDYPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFRAMEZOOMSGIXPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC = ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC = ?*const fn () callconv(.C) void;
pub const PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC = ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLFRAMEBUFFERPARAMETERIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERPARAMETERIMESAPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC = ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub const PFNGLFRAMEBUFFERREADBUFFEREXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLFRAMEBUFFERRENDERBUFFERPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERRENDERBUFFEROESPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC = ?*const fn (GLenum, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREPROC = ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE1DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE1DEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE2DOESPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE3DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE3DEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURE3DOESPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREARBPROC = ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREEXTPROC = ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREFACEARBPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURELAYERPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURELAYERARBPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLsizei) callconv(.C) void;
pub const PFNGLFRAMEBUFFERTEXTUREOESPROC = ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLFREEOBJECTBUFFERATIPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLFRONTFACEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLFRUSTUMPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLFRUSTUMFPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLFRUSTUMFOESPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLFRUSTUMXPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLFRUSTUMXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLGENASYNCMARKERSSGIXPROC = ?*const fn (GLsizei) callconv(.C) GLuint;
pub const PFNGLGENBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENBUFFERSARBPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENFENCESAPPLEPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENFENCESNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENFRAGMENTSHADERSATIPROC = ?*const fn (GLuint) callconv(.C) GLuint;
pub const PFNGLGENFRAMEBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENFRAMEBUFFERSEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENFRAMEBUFFERSOESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENLISTSPROC = ?*const fn (GLsizei) callconv(.C) GLuint;
pub const PFNGLGENNAMESAMDPROC = ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENOCCLUSIONQUERIESNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENPATHSNVPROC = ?*const fn (GLsizei) callconv(.C) GLuint;
pub const PFNGLGENPERFMONITORSAMDPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENPROGRAMPIPELINESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENPROGRAMPIPELINESEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENPROGRAMSARBPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENPROGRAMSNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENQUERIESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENQUERIESARBPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENQUERIESEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENQUERYRESOURCETAGNVPROC = ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGENRENDERBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENRENDERBUFFERSEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENRENDERBUFFERSOESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENSAMPLERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENSEMAPHORESEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENSYMBOLSEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) GLuint;
pub const PFNGLGENTEXTURESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENTEXTURESEXTPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENTRANSFORMFEEDBACKSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENTRANSFORMFEEDBACKSNVPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENVERTEXARRAYSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENVERTEXARRAYSAPPLEPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENVERTEXARRAYSOESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGENVERTEXSHADERSEXTPROC = ?*const fn (GLuint) callconv(.C) GLuint;
pub const PFNGLGENERATEMIPMAPPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLGENERATEMIPMAPEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLGENERATEMIPMAPOESPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLGENERATEMULTITEXMIPMAPEXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLGENERATETEXTUREMIPMAPPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLGENERATETEXTUREMIPMAPEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETACTIVEATTRIBPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVEATTRIBARBPROC = ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub const PFNGLGETACTIVESUBROUTINENAMEPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMARBPROC = ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMBLOCKIVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMNAMEPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETACTIVEUNIFORMSIVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETACTIVEVARYINGNVPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETARRAYOBJECTFVATIPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETARRAYOBJECTIVATIPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETATTACHEDOBJECTSARBPROC = ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLhandleARB) callconv(.C) void;
pub const PFNGLGETATTACHEDSHADERSPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETATTRIBLOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETATTRIBLOCATIONARBPROC = ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub const PFNGLGETBOOLEANINDEXEDVEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETBOOLEANI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETBOOLEANVPROC = ?*const fn (GLenum, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETBUFFERPARAMETERI64VPROC = ?*const fn (GLenum, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETBUFFERPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETBUFFERPARAMETERIVARBPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETBUFFERPARAMETERUI64VNVPROC = ?*const fn (GLenum, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETBUFFERPOINTERVPROC = ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETBUFFERPOINTERVARBPROC = ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETBUFFERPOINTERVOESPROC = ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETBUFFERSUBDATAPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETBUFFERSUBDATAARBPROC = ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCLIPPLANEPROC = ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETCLIPPLANEFPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCLIPPLANEFOESPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCLIPPLANEXPROC = ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETCLIPPLANEXOESPROC = ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOLORTABLEEXTPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERFVSGIPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCOLORTABLEPARAMETERIVSGIPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCOLORTABLESGIPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCOMMANDHEADERNVPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLuint;
pub const PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC = ?*const fn (GLenum, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMPRESSEDTEXIMAGEPROC = ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMPRESSEDTEXIMAGEARBPROC = ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC = ?*const fn (GLuint, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC = ?*const fn (GLuint, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONFILTERPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONFILTEREXTPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETCONVOLUTIONPARAMETERXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETCOVERAGEMODULATIONTABLENVPROC = ?*const fn (GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETDEBUGMESSAGELOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub const PFNGLGETDEBUGMESSAGELOGAMDPROC = ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLuint, [*c]GLuint, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub const PFNGLGETDEBUGMESSAGELOGARBPROC = ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub const PFNGLGETDEBUGMESSAGELOGKHRPROC = ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub const PFNGLGETDETAILTEXFUNCSGISPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETDOUBLEINDEXEDVEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETDOUBLEI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETDOUBLEI_VEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETDOUBLEVPROC = ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETDRIVERCONTROLSTRINGQCOMPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETDRIVERCONTROLSQCOMPROC = ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETERRORPROC = ?*const fn () callconv(.C) GLenum;
pub const PFNGLGETFENCEIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFIRSTPERFQUERYIDINTELPROC = ?*const fn ([*c]GLuint) callconv(.C) void;
pub const PFNGLGETFIXEDVPROC = ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETFIXEDVOESPROC = ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETFLOATINDEXEDVEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFLOATI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFLOATI_VEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFLOATI_VNVPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFLOATI_VOESPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFLOATVPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFOGFUNCSGISPROC = ?*const fn ([*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFRAGDATAINDEXPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETFRAGDATAINDEXEXTPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETFRAGDATALOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETFRAGDATALOCATIONEXTPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETFRAGMENTLIGHTFVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFRAGMENTLIGHTIVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAGMENTMATERIALFVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFRAGMENTMATERIALIVSGIXPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC = ?*const fn (GLenum, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC = ?*const fn (GLuint) callconv(.C) GLsizei;
pub const PFNGLGETGRAPHICSRESETSTATUSPROC = ?*const fn () callconv(.C) GLenum;
pub const PFNGLGETGRAPHICSRESETSTATUSARBPROC = ?*const fn () callconv(.C) GLenum;
pub const PFNGLGETGRAPHICSRESETSTATUSEXTPROC = ?*const fn () callconv(.C) GLenum;
pub const PFNGLGETGRAPHICSRESETSTATUSKHRPROC = ?*const fn () callconv(.C) GLenum;
pub const PFNGLGETHANDLEARBPROC = ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub const PFNGLGETHISTOGRAMPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETHISTOGRAMEXTPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETHISTOGRAMPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETHISTOGRAMPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETHISTOGRAMPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETHISTOGRAMPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETHISTOGRAMPARAMETERXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETIMAGEHANDLEARBPROC = ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub const PFNGLGETIMAGEHANDLENVPROC = ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub const PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINFOLOGARBPROC = ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub const PFNGLGETINSTRUMENTSSGIXPROC = ?*const fn () callconv(.C) GLint;
pub const PFNGLGETINTEGER64I_VPROC = ?*const fn (GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETINTEGER64VPROC = ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETINTEGER64VAPPLEPROC = ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETINTEGERINDEXEDVEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINTEGERI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINTEGERI_VEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINTEGERUI64I_VNVPROC = ?*const fn (GLenum, GLuint, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETINTEGERUI64VNVPROC = ?*const fn (GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETINTEGERVPROC = ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINTERNALFORMATSAMPLEIVNVPROC = ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINTERNALFORMATI64VPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETINTERNALFORMATIVPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETINVARIANTBOOLEANVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETINVARIANTFLOATVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETINVARIANTINTEGERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETLIGHTFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETLIGHTIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETLIGHTXOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETLIGHTXVPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETLIGHTXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETLISTPARAMETERFVSGIXPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETLISTPARAMETERIVSGIXPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETLOCALCONSTANTFLOATVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETLOCALCONSTANTINTEGERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMAPATTRIBPARAMETERFVNVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMAPATTRIBPARAMETERIVNVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMAPCONTROLPOINTSNVPROC = ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETMAPPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMAPPARAMETERIVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMAPDVPROC = ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETMAPFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMAPIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMAPXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETMATERIALFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMATERIALIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMATERIALXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLGETMATERIALXVPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETMATERIALXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC = ?*const fn (GLuint, GLenum, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMINMAXPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETMINMAXEXTPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETMINMAXPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMINMAXPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMINMAXPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMINMAXPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTITEXENVFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMULTITEXENVIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTITEXGENDVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETMULTITEXGENFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMULTITEXGENIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTITEXIMAGEEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTITEXPARAMETERIIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTITEXPARAMETERIUIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETMULTITEXPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMULTITEXPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETMULTISAMPLEFVPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETMULTISAMPLEFVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPARAMETERI64VPROC = ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPOINTERVPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERPOINTERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERSUBDATAPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNAMEDBUFFERSUBDATAEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC = ?*const fn (GLuint, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMSTRINGEXTPROC = ?*const fn (GLuint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNAMEDPROGRAMIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNAMEDSTRINGARBPROC = ?*const fn (GLint, [*c]const GLchar, GLsizei, [*c]GLint, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETNAMEDSTRINGIVARBPROC = ?*const fn (GLint, [*c]const GLchar, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNEXTPERFQUERYIDINTELPROC = ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETOBJECTBUFFERFVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETOBJECTBUFFERIVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETOBJECTLABELPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETOBJECTLABELEXTPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETOBJECTLABELKHRPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETOBJECTPARAMETERFVARBPROC = ?*const fn (GLhandleARB, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETOBJECTPARAMETERIVAPPLEPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETOBJECTPARAMETERIVARBPROC = ?*const fn (GLhandleARB, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETOBJECTPTRLABELPROC = ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETOBJECTPTRLABELKHRPROC = ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETOCCLUSIONQUERYIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETOCCLUSIONQUERYUIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPATHCOLORGENFVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHCOLORGENIVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPATHCOMMANDSNVPROC = ?*const fn (GLuint, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETPATHCOORDSNVPROC = ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHDASHARRAYNVPROC = ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHLENGTHNVPROC = ?*const fn (GLuint, GLsizei, GLsizei) callconv(.C) GLfloat;
pub const PFNGLGETPATHMETRICRANGENVPROC = ?*const fn (GLbitfield, GLuint, GLsizei, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHMETRICSNVPROC = ?*const fn (GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHPARAMETERFVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHPARAMETERIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPATHSPACINGNVPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLuint, GLfloat, GLfloat, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHTEXGENFVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPATHTEXGENIVNVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPERFCOUNTERINFOINTELPROC = ?*const fn (GLuint, GLuint, GLuint, [*c]GLchar, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETPERFMONITORCOUNTERDATAAMDPROC = ?*const fn (GLuint, GLenum, GLsizei, [*c]GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPERFMONITORCOUNTERINFOAMDPROC = ?*const fn (GLuint, GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPERFMONITORCOUNTERSAMDPROC = ?*const fn (GLuint, [*c]GLint, [*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPERFMONITORGROUPSTRINGAMDPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPERFMONITORGROUPSAMDPROC = ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPERFQUERYDATAINTELPROC = ?*const fn (GLuint, GLuint, GLsizei, ?*anyopaque, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPERFQUERYIDBYNAMEINTELPROC = ?*const fn ([*c]GLchar, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPERFQUERYINFOINTELPROC = ?*const fn (GLuint, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPIXELMAPFVPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPIXELMAPUIVPROC = ?*const fn (GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPIXELMAPUSVPROC = ?*const fn (GLenum, [*c]GLushort) callconv(.C) void;
pub const PFNGLGETPIXELMAPXVPROC = ?*const fn (GLenum, GLint, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC = ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPOINTERINDEXEDVEXTPROC = ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETPOINTERI_VEXTPROC = ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETPOINTERVPROC = ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETPOINTERVEXTPROC = ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETPOINTERVKHRPROC = ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETPOLYGONSTIPPLEPROC = ?*const fn ([*c]GLubyte) callconv(.C) void;
pub const PFNGLGETPROGRAMBINARYPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETPROGRAMBINARYOESPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETPROGRAMENVPARAMETERIIVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPROGRAMENVPARAMETERDVARBPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETPROGRAMENVPARAMETERFVARBPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPROGRAMINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPROGRAMINTERFACEIVPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPROGRAMPARAMETERDVNVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETPROGRAMPARAMETERFVNVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPROGRAMPIPELINEINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPROGRAMPIPELINEIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMPIPELINEIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMRESOURCEINDEXPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLGETPROGRAMRESOURCELOCATIONPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETPROGRAMRESOURCENAMEPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETPROGRAMRESOURCEFVNVPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETPROGRAMRESOURCEIVPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMSTAGEIVPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMSTRINGARBPROC = ?*const fn (GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETPROGRAMSTRINGNVPROC = ?*const fn (GLuint, GLenum, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC = ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETPROGRAMIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMIVARBPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETPROGRAMIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYBUFFEROBJECTI64VPROC = ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub const PFNGLGETQUERYBUFFEROBJECTIVPROC = ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub const PFNGLGETQUERYBUFFEROBJECTUI64VPROC = ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub const PFNGLGETQUERYBUFFEROBJECTUIVPROC = ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub const PFNGLGETQUERYINDEXEDIVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTI64VPROC = ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTI64VEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTIVARBPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTUI64VPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTUI64VEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTUIVARBPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETQUERYOBJECTUIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETQUERYIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYIVARBPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETQUERYIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETRENDERBUFFERPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETRENDERBUFFERPARAMETERIVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIIVOESPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIUIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIUIVOESPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETSAMPLERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETSEPARABLEFILTERPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETSEPARABLEFILTEREXTPROC = ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETSHADERINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETSHADERPRECISIONFORMATPROC = ?*const fn (GLenum, GLenum, [*c]GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSHADERSOURCEPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETSHADERSOURCEARBPROC = ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub const PFNGLGETSHADERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSHADINGRATEIMAGEPALETTENVPROC = ?*const fn (GLuint, GLuint, [*c]GLenum) callconv(.C) void;
pub const PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC = ?*const fn (GLenum, GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSHARPENTEXFUNCSGISPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETSTAGEINDEXNVPROC = ?*const fn (GLenum) callconv(.C) GLushort;
pub const PFNGLGETSTRINGPROC = ?*const fn (GLenum) callconv(.C) [*c]const GLubyte;
pub const PFNGLGETSTRINGIPROC = ?*const fn (GLenum, GLuint) callconv(.C) [*c]const GLubyte;
pub const PFNGLGETSUBROUTINEINDEXPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETSYNCIVPROC = ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETSYNCIVAPPLEPROC = ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXBUMPPARAMETERFVATIPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXBUMPPARAMETERIVATIPROC = ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXENVFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXENVIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXENVXVPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXENVXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXFILTERFUNCSGISPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXGENDVPROC = ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETTEXGENFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXGENFVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXGENIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXGENIVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXGENXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXIMAGEPROC = ?*const fn (GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETTEXLEVELPARAMETERFVPROC = ?*const fn (GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXLEVELPARAMETERIVPROC = ?*const fn (GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXLEVELPARAMETERXVOESPROC = ?*const fn (GLenum, GLint, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIIVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIUIVPROC = ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIUIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIUIVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC = ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERXVPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXPARAMETERXVOESPROC = ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub const PFNGLGETTEXTUREHANDLEARBPROC = ?*const fn (GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTUREHANDLEIMGPROC = ?*const fn (GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTUREHANDLENVPROC = ?*const fn (GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTUREIMAGEPROC = ?*const fn (GLuint, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETTEXTUREIMAGEEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETTEXTURELEVELPARAMETERFVPROC = ?*const fn (GLuint, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXTURELEVELPARAMETERIVPROC = ?*const fn (GLuint, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIUIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERFVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTUREPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTEXTURESAMPLERHANDLEARBPROC = ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTURESAMPLERHANDLEIMGPROC = ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTURESAMPLERHANDLENVPROC = ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub const PFNGLGETTEXTURESUBIMAGEPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETTRACKMATRIXIVNVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKVARYINGPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC = ?*const fn (GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKI64_VPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKI_VPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTRANSFORMFEEDBACKIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub const PFNGLGETUNIFORMBLOCKINDEXPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLuint;
pub const PFNGLGETUNIFORMBUFFERSIZEEXTPROC = ?*const fn (GLuint, GLint) callconv(.C) GLint;
pub const PFNGLGETUNIFORMINDICESPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETUNIFORMLOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETUNIFORMLOCATIONARBPROC = ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub const PFNGLGETUNIFORMOFFSETEXTPROC = ?*const fn (GLuint, GLint) callconv(.C) GLintptr;
pub const PFNGLGETUNIFORMSUBROUTINEUIVPROC = ?*const fn (GLenum, GLint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETUNIFORMDVPROC = ?*const fn (GLuint, GLint, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETUNIFORMFVPROC = ?*const fn (GLuint, GLint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETUNIFORMFVARBPROC = ?*const fn (GLhandleARB, GLint, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETUNIFORMI64VARBPROC = ?*const fn (GLuint, GLint, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETUNIFORMI64VNVPROC = ?*const fn (GLuint, GLint, [*c]GLint64EXT) callconv(.C) void;
pub const PFNGLGETUNIFORMIVPROC = ?*const fn (GLuint, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETUNIFORMIVARBPROC = ?*const fn (GLhandleARB, GLint, [*c]GLint) callconv(.C) void;
pub const PFNGLGETUNIFORMUI64VARBPROC = ?*const fn (GLuint, GLint, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETUNIFORMUI64VNVPROC = ?*const fn (GLuint, GLint, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETUNIFORMUIVPROC = ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETUNIFORMUIVEXTPROC = ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETUNSIGNEDBYTEI_VEXTPROC = ?*const fn (GLenum, GLuint, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETUNSIGNEDBYTEVEXTPROC = ?*const fn (GLenum, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETVARIANTARRAYOBJECTFVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVARIANTARRAYOBJECTIVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVARIANTBOOLEANVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub const PFNGLGETVARIANTFLOATVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVARIANTINTEGERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVARIANTPOINTERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVARYINGLOCATIONNVPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub const PFNGLGETVERTEXARRAYINDEXED64IVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYINDEXEDIVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYINTEGERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYPOINTERVEXTPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVERTEXARRAYIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIUIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBLDVPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBLDVEXTPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBLI64VNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBLUI64VARBPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBLUI64VNVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBPOINTERVPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBPOINTERVARBPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBPOINTERVNVPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBDVPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBDVARBPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBDVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBFVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBFVARBPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBFVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIVARBPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVERTEXATTRIBIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVIDEOCAPTURESTREAMDVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETVIDEOCAPTURESTREAMFVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETVIDEOCAPTURESTREAMIVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVIDEOCAPTUREIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVIDEOI64VNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub const PFNGLGETVIDEOIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLGETVIDEOUI64VNVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub const PFNGLGETVIDEOUIVNVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETVKPROCADDRNVPROC = ?*const fn ([*c]const GLchar) callconv(.C) GLVULKANPROCNV;
pub const PFNGLGETNCOLORTABLEPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNCOLORTABLEARBPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNCOMPRESSEDTEXIMAGEPROC = ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC = ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNCONVOLUTIONFILTERPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNCONVOLUTIONFILTERARBPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNHISTOGRAMPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNHISTOGRAMARBPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNMAPDVPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETNMAPDVARBPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETNMAPFVPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNMAPFVARBPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNMAPIVPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNMAPIVARBPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNMINMAXPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNMINMAXARBPROC = ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNPIXELMAPFVPROC = ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNPIXELMAPFVARBPROC = ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNPIXELMAPUIVPROC = ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETNPIXELMAPUIVARBPROC = ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETNPIXELMAPUSVPROC = ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub const PFNGLGETNPIXELMAPUSVARBPROC = ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub const PFNGLGETNPOLYGONSTIPPLEPROC = ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETNPOLYGONSTIPPLEARBPROC = ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub const PFNGLGETNSEPARABLEFILTERPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNSEPARABLEFILTERARBPROC = ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNTEXIMAGEPROC = ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNTEXIMAGEARBPROC = ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLGETNUNIFORMDVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETNUNIFORMDVARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub const PFNGLGETNUNIFORMFVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNUNIFORMFVARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNUNIFORMFVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNUNIFORMFVKHRPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub const PFNGLGETNUNIFORMI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLint64) callconv(.C) void;
pub const PFNGLGETNUNIFORMIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNUNIFORMIVARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNUNIFORMIVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNUNIFORMIVKHRPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLGETNUNIFORMUI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint64) callconv(.C) void;
pub const PFNGLGETNUNIFORMUIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETNUNIFORMUIVARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGETNUNIFORMUIVKHRPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORBSUNPROC = ?*const fn (GLbyte) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORDSUNPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORFSUNPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORISUNPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORSSUNPROC = ?*const fn (GLshort) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORUBSUNPROC = ?*const fn (GLubyte) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORUISUNPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLGLOBALALPHAFACTORUSSUNPROC = ?*const fn (GLushort) callconv(.C) void;
pub const PFNGLHINTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLHINTPGIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLHISTOGRAMPROC = ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub const PFNGLHISTOGRAMEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub const PFNGLIGLOOINTERFACESGIXPROC = ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLIMAGETRANSFORMPARAMETERFHPPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLIMAGETRANSFORMPARAMETERFVHPPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLIMAGETRANSFORMPARAMETERIHPPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLIMAGETRANSFORMPARAMETERIVHPPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLIMPORTMEMORYFDEXTPROC = ?*const fn (GLuint, GLuint64, GLenum, GLint) callconv(.C) void;
pub const PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC = ?*const fn (GLuint, GLuint64, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLIMPORTMEMORYWIN32NAMEEXTPROC = ?*const fn (GLuint, GLuint64, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLIMPORTSEMAPHOREFDEXTPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC = ?*const fn (GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLIMPORTSYNCEXTPROC = ?*const fn (GLenum, GLintptr, GLbitfield) callconv(.C) GLsync;
pub const PFNGLINDEXFORMATNVPROC = ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub const PFNGLINDEXFUNCEXTPROC = ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub const PFNGLINDEXMASKPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLINDEXMATERIALEXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLINDEXPOINTERPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLINDEXPOINTEREXTPROC = ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLINDEXPOINTERLISTIBMPROC = ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLINDEXDPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLINDEXDVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLINDEXFPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLINDEXFVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLINDEXIPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLINDEXIVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLINDEXSPROC = ?*const fn (GLshort) callconv(.C) void;
pub const PFNGLINDEXSVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLINDEXUBPROC = ?*const fn (GLubyte) callconv(.C) void;
pub const PFNGLINDEXUBVPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLINDEXXOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLINDEXXVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLINITNAMESPROC = ?*const fn () callconv(.C) void;
pub const PFNGLINSERTCOMPONENTEXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLINSERTEVENTMARKEREXTPROC = ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLINSTRUMENTSBUFFERSGIXPROC = ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLINTERLEAVEDARRAYSPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLINTERPOLATEPATHSNVPROC = ?*const fn (GLuint, GLuint, GLuint, GLfloat) callconv(.C) void;
pub const PFNGLINVALIDATEBUFFERDATAPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLINVALIDATEBUFFERSUBDATAPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLINVALIDATEFRAMEBUFFERPROC = ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC = ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC = ?*const fn (GLuint, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLINVALIDATESUBFRAMEBUFFERPROC = ?*const fn (GLenum, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLINVALIDATETEXIMAGEPROC = ?*const fn (GLuint, GLint) callconv(.C) void;
pub const PFNGLINVALIDATETEXSUBIMAGEPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLISASYNCMARKERSGIXPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISBUFFERARBPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISBUFFERRESIDENTNVPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
pub const PFNGLISCOMMANDLISTNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISENABLEDPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
pub const PFNGLISENABLEDINDEXEDEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISENABLEDIPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISENABLEDIEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISENABLEDINVPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISENABLEDIOESPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISFENCEAPPLEPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISFENCENVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISFRAMEBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISFRAMEBUFFEREXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISFRAMEBUFFEROESPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISIMAGEHANDLERESIDENTARBPROC = ?*const fn (GLuint64) callconv(.C) GLboolean;
pub const PFNGLISIMAGEHANDLERESIDENTNVPROC = ?*const fn (GLuint64) callconv(.C) GLboolean;
pub const PFNGLISLISTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISMEMORYOBJECTEXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISNAMEAMDPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLISNAMEDBUFFERRESIDENTNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISNAMEDSTRINGARBPROC = ?*const fn (GLint, [*c]const GLchar) callconv(.C) GLboolean;
pub const PFNGLISOBJECTBUFFERATIPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISOCCLUSIONQUERYNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPATHNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPOINTINFILLPATHNVPROC = ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub const PFNGLISPOINTINSTROKEPATHNVPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub const PFNGLISPROGRAMPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPROGRAMARBPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPROGRAMNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISPROGRAMPIPELINEEXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISQUERYPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISQUERYARBPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISQUERYEXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISRENDERBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISRENDERBUFFEREXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISRENDERBUFFEROESPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISSAMPLERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISSEMAPHOREEXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISSHADERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISSTATENVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISSYNCPROC = ?*const fn (GLsync) callconv(.C) GLboolean;
pub const PFNGLISSYNCAPPLEPROC = ?*const fn (GLsync) callconv(.C) GLboolean;
pub const PFNGLISTEXTUREPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISTEXTUREEXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISTEXTUREHANDLERESIDENTARBPROC = ?*const fn (GLuint64) callconv(.C) GLboolean;
pub const PFNGLISTEXTUREHANDLERESIDENTNVPROC = ?*const fn (GLuint64) callconv(.C) GLboolean;
pub const PFNGLISTRANSFORMFEEDBACKPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISTRANSFORMFEEDBACKNVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISVARIANTENABLEDEXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub const PFNGLISVERTEXARRAYPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISVERTEXARRAYAPPLEPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISVERTEXARRAYOESPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLISVERTEXATTRIBENABLEDAPPLEPROC = ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub const PFNGLLGPUCOPYIMAGESUBDATANVXPROC = ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLLGPUINTERLOCKNVXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC = ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub const PFNGLLABELOBJECTEXTPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLLIGHTENVISGIXPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLLIGHTMODELFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLLIGHTMODELFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLLIGHTMODELIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLLIGHTMODELIVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLLIGHTMODELXPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLLIGHTMODELXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLLIGHTMODELXVPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLLIGHTMODELXVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLLIGHTFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLLIGHTFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLLIGHTIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLLIGHTIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLLIGHTXPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLLIGHTXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLLIGHTXVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLLIGHTXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLLINESTIPPLEPROC = ?*const fn (GLint, GLushort) callconv(.C) void;
pub const PFNGLLINEWIDTHPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLLINEWIDTHXPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLLINEWIDTHXOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLLINKPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLLINKPROGRAMARBPROC = ?*const fn (GLhandleARB) callconv(.C) void;
pub const PFNGLLISTBASEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC = ?*const fn (GLuint, GLuint, [*c]?*const anyopaque, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub const PFNGLLISTPARAMETERFSGIXPROC = ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLLISTPARAMETERFVSGIXPROC = ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLLISTPARAMETERISGIXPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLLISTPARAMETERIVSGIXPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLLOADIDENTITYPROC = ?*const fn () callconv(.C) void;
pub const PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLLOADMATRIXDPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLLOADMATRIXFPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLLOADMATRIXXPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLLOADMATRIXXOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLLOADNAMEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC = ?*const fn () callconv(.C) void;
pub const PFNGLLOADPROGRAMNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLLOADTRANSPOSEMATRIXDPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLLOADTRANSPOSEMATRIXDARBPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLLOADTRANSPOSEMATRIXFPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLLOADTRANSPOSEMATRIXFARBPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLLOADTRANSPOSEMATRIXXOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLLOCKARRAYSEXTPROC = ?*const fn (GLint, GLsizei) callconv(.C) void;
pub const PFNGLLOGICOPPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMAKEBUFFERNONRESIDENTNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMAKEBUFFERRESIDENTNVPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAKEIMAGEHANDLERESIDENTARBPROC = ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub const PFNGLMAKEIMAGEHANDLERESIDENTNVPROC = ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub const PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLMAKENAMEDBUFFERRESIDENTNVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAKETEXTUREHANDLERESIDENTARBPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAKETEXTUREHANDLERESIDENTNVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLMAP1DPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMAP1FPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMAP1XOESPROC = ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub const PFNGLMAP2DPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMAP2FPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMAP2XOESPROC = ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub const PFNGLMAPBUFFERPROC = ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPBUFFERARBPROC = ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPBUFFEROESPROC = ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPBUFFERRANGEPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub const PFNGLMAPBUFFERRANGEEXTPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub const PFNGLMAPCONTROLPOINTSNVPROC = ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMAPGRID1DPROC = ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMAPGRID1FPROC = ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMAPGRID1XOESPROC = ?*const fn (GLint, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMAPGRID2DPROC = ?*const fn (GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMAPGRID2FPROC = ?*const fn (GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMAPGRID2XOESPROC = ?*const fn (GLint, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMAPNAMEDBUFFERPROC = ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPNAMEDBUFFEREXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPNAMEDBUFFERRANGEPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub const PFNGLMAPNAMEDBUFFERRANGEEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub const PFNGLMAPOBJECTBUFFERATIPROC = ?*const fn (GLuint) callconv(.C) ?*anyopaque;
pub const PFNGLMAPPARAMETERFVNVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMAPPARAMETERIVNVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMAPTEXTURE2DINTELPROC = ?*const fn (GLuint, GLint, GLbitfield, [*c]GLint, [*c]GLenum) callconv(.C) ?*anyopaque;
pub const PFNGLMAPVERTEXATTRIB1DAPPLEPROC = ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMAPVERTEXATTRIB1FAPPLEPROC = ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMAPVERTEXATTRIB2DAPPLEPROC = ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMAPVERTEXATTRIB2FAPPLEPROC = ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATERIALFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMATERIALFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATERIALIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLMATERIALIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMATERIALXPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLMATERIALXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLMATERIALXVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMATERIALXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMATRIXFRUSTUMEXTPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMATRIXINDEXPOINTERARBPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMATRIXINDEXPOINTEROESPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMATRIXINDEXUBVARBPROC = ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLMATRIXINDEXUIVARBPROC = ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMATRIXINDEXUSVARBPROC = ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLMATRIXLOAD3X2FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXLOAD3X3FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXLOADIDENTITYEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXLOADTRANSPOSEDEXTPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMATRIXLOADTRANSPOSEFEXTPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXLOADDEXTPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMATRIXLOADFEXTPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXMODEPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMATRIXMULT3X2FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXMULT3X3FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXMULTTRANSPOSEDEXTPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMATRIXMULTTRANSPOSEFEXTPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXMULTDEXTPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMATRIXMULTFEXTPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMATRIXORTHOEXTPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMATRIXPOPEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMATRIXPUSHEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLMATRIXROTATEDEXTPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMATRIXROTATEFEXTPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMATRIXSCALEDEXTPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMATRIXSCALEFEXTPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMATRIXTRANSLATEDEXTPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMATRIXTRANSLATEFEXTPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMAXSHADERCOMPILERTHREADSARBPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLMAXSHADERCOMPILERTHREADSKHRPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLMEMORYBARRIERPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLMEMORYBARRIERBYREGIONPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLMEMORYBARRIEREXTPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLMEMORYOBJECTPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMINSAMPLESHADINGPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLMINSAMPLESHADINGARBPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLMINSAMPLESHADINGOESPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLMINMAXPROC = ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub const PFNGLMINMAXEXTPROC = ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub const PFNGLMULTMATRIXDPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTMATRIXFPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTMATRIXXPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTMATRIXXOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTTRANSPOSEMATRIXDPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTTRANSPOSEMATRIXDARBPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTTRANSPOSEMATRIXFPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTTRANSPOSEMATRIXFARBPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTTRANSPOSEMATRIXXOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSPROC = ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSEXTPROC = ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTPROC = ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC = ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC = ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC = ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC = ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC = ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC = ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC = ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSEXTPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC = ?*const fn (GLintptr, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC = ?*const fn (GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC = ?*const fn (GLenum, GLuint, GLuint, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTIMODEDRAWARRAYSIBMPROC = ?*const fn ([*c]const GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTIMODEDRAWELEMENTSIBMPROC = ?*const fn ([*c]const GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub const PFNGLMULTITEXBUFFEREXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1BOESPROC = ?*const fn (GLenum, GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1BVOESPROC = ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1DPROC = ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1DARBPROC = ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1DVPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1DVARBPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1FPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1FARBPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1FVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1FVARBPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1HNVPROC = ?*const fn (GLenum, GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1HVNVPROC = ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1IPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1IARBPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1IVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1IVARBPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1SPROC = ?*const fn (GLenum, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1SARBPROC = ?*const fn (GLenum, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1SVPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1SVARBPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1XOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD1XVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2BOESPROC = ?*const fn (GLenum, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2BVOESPROC = ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2DPROC = ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2DARBPROC = ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2DVPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2DVARBPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2FPROC = ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2FARBPROC = ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2FVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2FVARBPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2HNVPROC = ?*const fn (GLenum, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2HVNVPROC = ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2IPROC = ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2IARBPROC = ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2IVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2IVARBPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2SPROC = ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2SARBPROC = ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2SVPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2SVARBPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2XOESPROC = ?*const fn (GLenum, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD2XVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3BOESPROC = ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3BVOESPROC = ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3DPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3DARBPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3DVPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3DVARBPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3FPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3FARBPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3FVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3FVARBPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3HNVPROC = ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3HVNVPROC = ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3IPROC = ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3IARBPROC = ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3IVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3IVARBPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3SPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3SARBPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3SVPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3SVARBPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3XOESPROC = ?*const fn (GLenum, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD3XVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4BOESPROC = ?*const fn (GLenum, GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4BVOESPROC = ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4DPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4DARBPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4DVPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4DVARBPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4FPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4FARBPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4FVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4FVARBPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4HNVPROC = ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4HVNVPROC = ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4IPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4IARBPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4IVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4IVARBPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4SPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4SARBPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4SVPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4SVARBPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4XPROC = ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4XOESPROC = ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORD4XVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP1UIPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP1UIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP2UIPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP2UIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP3UIPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP3UIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP4UIPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDP4UIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMULTITEXCOORDPOINTEREXTPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXENVFEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXENVFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXENVIEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLMULTITEXENVIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXGENDEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXGENDVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLMULTITEXGENFEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXGENFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXGENIEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLMULTITEXGENIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXIMAGE3DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERIIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERIUIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERFEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERIEXTPROC = ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLMULTITEXPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTITEXRENDERBUFFEREXTPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLMULTITEXSUBIMAGE1DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXSUBIMAGE2DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTITEXSUBIMAGE3DEXTPROC = ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTICASTBARRIERNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLMULTICASTBLITFRAMEBUFFERNVPROC = ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub const PFNGLMULTICASTBUFFERSUBDATANVPROC = ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub const PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC = ?*const fn (GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLMULTICASTCOPYIMAGESUBDATANVPROC = ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC = ?*const fn (GLuint, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub const PFNGLMULTICASTGETQUERYOBJECTIVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub const PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub const PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub const PFNGLMULTICASTSCISSORARRAYVNVXPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLMULTICASTVIEWPORTARRAYVNVXPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC = ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLMULTICASTWAITSYNCNVPROC = ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub const PFNGLNAMEDBUFFERATTACHMEMORYNVPROC = ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLNAMEDBUFFERDATAPROC = ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub const PFNGLNAMEDBUFFERDATAEXTPROC = ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub const PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub const PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSTORAGEPROC = ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSTORAGEEXTPROC = ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC = ?*const fn (GLuint, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSUBDATAPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub const PFNGLNAMEDBUFFERSUBDATAEXTPROC = ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub const PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC = ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC = ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC = ?*const fn (GLuint, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTUREPROC = ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC = ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLNAMEDPROGRAMSTRINGEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEPROC = ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC = ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC = ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLNAMEDSTRINGARBPROC = ?*const fn (GLenum, GLint, [*c]const GLchar, GLint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLNEWLISTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLNEWOBJECTBUFFERATIPROC = ?*const fn (GLsizei, ?*const anyopaque, GLenum) callconv(.C) GLuint;
pub const PFNGLNORMAL3BPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLNORMAL3BVPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLNORMAL3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLNORMAL3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLNORMAL3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNORMAL3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLNORMAL3HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLNORMAL3HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLNORMAL3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLNORMAL3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLNORMAL3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLNORMAL3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLNORMAL3XPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLNORMAL3XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLNORMAL3XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLNORMALFORMATNVPROC = ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub const PFNGLNORMALP3UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLNORMALP3UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLNORMALPOINTERPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLNORMALPOINTEREXTPROC = ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLNORMALPOINTERLISTIBMPROC = ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLNORMALPOINTERVINTELPROC = ?*const fn (GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub const PFNGLNORMALSTREAM3BATIPROC = ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLNORMALSTREAM3BVATIPROC = ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLNORMALSTREAM3DATIPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLNORMALSTREAM3DVATIPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLNORMALSTREAM3FATIPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLNORMALSTREAM3FVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLNORMALSTREAM3IATIPROC = ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLNORMALSTREAM3IVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLNORMALSTREAM3SATIPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLNORMALSTREAM3SVATIPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLOBJECTLABELPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLOBJECTLABELKHRPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLOBJECTPTRLABELPROC = ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLOBJECTPTRLABELKHRPROC = ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLOBJECTPURGEABLEAPPLEPROC = ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub const PFNGLOBJECTUNPURGEABLEAPPLEPROC = ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub const PFNGLORTHOPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLORTHOFPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLORTHOFOESPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLORTHOXPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLORTHOXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLPNTRIANGLESFATIPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPNTRIANGLESIATIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPASSTEXCOORDATIPROC = ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub const PFNGLPASSTHROUGHPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLPASSTHROUGHXOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLPATCHPARAMETERFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPATCHPARAMETERIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPATCHPARAMETERIEXTPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPATCHPARAMETERIOESPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPATHCOLORGENNVPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPATHCOMMANDSNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPATHCOORDSNVPROC = ?*const fn (GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPATHCOVERDEPTHFUNCNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLPATHDASHARRAYNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPATHFOGGENNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLPATHGLYPHINDEXARRAYNVPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub const PFNGLPATHGLYPHINDEXRANGENVPROC = ?*const fn (GLenum, ?*const anyopaque, GLbitfield, GLuint, GLfloat, GLuint) callconv(.C) GLenum;
pub const PFNGLPATHGLYPHRANGENVPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) callconv(.C) void;
pub const PFNGLPATHGLYPHSNVPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLenum, GLuint, GLfloat) callconv(.C) void;
pub const PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC = ?*const fn (GLuint, GLenum, GLsizeiptr, ?*const anyopaque, GLsizei, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub const PFNGLPATHPARAMETERFNVPROC = ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPATHPARAMETERFVNVPROC = ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPATHPARAMETERINVPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLPATHPARAMETERIVNVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLPATHSTENCILDEPTHOFFSETNVPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPATHSTENCILFUNCNVPROC = ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub const PFNGLPATHSTRINGNVPROC = ?*const fn (GLuint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPATHSUBCOMMANDSNVPROC = ?*const fn (GLuint, GLsizei, GLsizei, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPATHSUBCOORDSNVPROC = ?*const fn (GLuint, GLsizei, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPATHTEXGENNVPROC = ?*const fn (GLenum, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPAUSETRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPAUSETRANSFORMFEEDBACKNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPIXELDATARANGENVPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPIXELMAPFVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPIXELMAPUIVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPIXELMAPUSVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLushort) callconv(.C) void;
pub const PFNGLPIXELMAPXPROC = ?*const fn (GLenum, GLint, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLPIXELSTOREFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPIXELSTOREIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPIXELSTOREXPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLPIXELTEXGENPARAMETERFSGISPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPIXELTEXGENPARAMETERFVSGISPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPIXELTEXGENPARAMETERISGISPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPIXELTEXGENPARAMETERIVSGISPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLPIXELTEXGENSGIXPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLPIXELTRANSFERFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPIXELTRANSFERIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPIXELTRANSFERXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLPIXELTRANSFORMPARAMETERFEXTPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPIXELTRANSFORMPARAMETERIEXTPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLPIXELZOOMPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPIXELZOOMXOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLPOINTALONGPATHNVPROC = ?*const fn (GLuint, GLsizei, GLsizei, GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat) callconv(.C) GLboolean;
pub const PFNGLPOINTPARAMETERFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFARBPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFEXTPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFSGISPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFVARBPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFVEXTPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERFVSGISPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPOINTPARAMETERIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPOINTPARAMETERINVPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPOINTPARAMETERIVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLPOINTPARAMETERIVNVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLPOINTPARAMETERXPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLPOINTPARAMETERXOESPROC = ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub const PFNGLPOINTPARAMETERXVPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLPOINTPARAMETERXVOESPROC = ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLPOINTSIZEPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLPOINTSIZEPOINTEROESPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPOINTSIZEXPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLPOINTSIZEXOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLPOLLASYNCSGIXPROC = ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub const PFNGLPOLLINSTRUMENTSSGIXPROC = ?*const fn ([*c]GLint) callconv(.C) GLint;
pub const PFNGLPOLYGONMODEPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLPOLYGONMODENVPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETCLAMPPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETCLAMPEXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETEXTPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETXPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLPOLYGONOFFSETXOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLPOLYGONSTIPPLEPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLPOPATTRIBPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPCLIENTATTRIBPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPDEBUGGROUPPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPDEBUGGROUPKHRPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPGROUPMARKEREXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPMATRIXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPOPNAMEPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPRESENTFRAMEDUALFILLNVPROC = ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLPRESENTFRAMEKEYEDNVPROC = ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPRIMITIVEBOUNDINGBOXPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPRIMITIVEBOUNDINGBOXARBPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPRIMITIVEBOUNDINGBOXEXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPRIMITIVEBOUNDINGBOXOESPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPRIMITIVERESTARTINDEXPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLPRIMITIVERESTARTINDEXNVPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLPRIMITIVERESTARTNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPRIORITIZETEXTURESPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPRIORITIZETEXTURESEXTPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLclampf) callconv(.C) void;
pub const PFNGLPRIORITIZETEXTURESXOESPROC = ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLPROGRAMBINARYPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLPROGRAMBINARYOESPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETER4DARBPROC = ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETER4DVARBPROC = ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETER4FARBPROC = ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETER4FVARBPROC = ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERI4INVPROC = ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERI4IVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERI4UINVPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERI4UIVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERS4FVEXTPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERSI4IVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETER4DARBPROC = ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETER4DVARBPROC = ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETER4FARBPROC = ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETER4FVARBPROC = ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERI4INVPROC = ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERI4UINVPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMNAMEDPARAMETER4DNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMNAMEDPARAMETER4FNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETER4DNVPROC = ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETER4DVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETER4FNVPROC = ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETER4FVNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETERIARBPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETERIEXTPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETERS4DVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMPARAMETERS4FVNVPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC = ?*const fn (GLuint, GLint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMSTRINGARBPROC = ?*const fn (GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1DPROC = ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1DEXTPROC = ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1FPROC = ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1FEXTPROC = ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1IPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1I64ARBPROC = ?*const fn (GLuint, GLint, GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1I64NVPROC = ?*const fn (GLuint, GLint, GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1I64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1I64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1IEXTPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1IVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UIPROC = ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UI64ARBPROC = ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UI64NVPROC = ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UIEXTPROC = ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM1UIVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2DEXTPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2FEXTPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2IPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2I64ARBPROC = ?*const fn (GLuint, GLint, GLint64, GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2I64NVPROC = ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2I64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2I64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2IEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2IVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UI64ARBPROC = ?*const fn (GLuint, GLint, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UI64NVPROC = ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UIEXTPROC = ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM2UIVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3DEXTPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3FEXTPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3I64ARBPROC = ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3I64NVPROC = ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3I64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3I64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3IEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3IVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UI64ARBPROC = ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UI64NVPROC = ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UIEXTPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM3UIVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4DEXTPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4FEXTPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4I64ARBPROC = ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4I64NVPROC = ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4I64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4I64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4IEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4IVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UI64ARBPROC = ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UI64NVPROC = ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UIEXTPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORM4UIVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC = ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC = ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC = ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMUI64NVPROC = ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMUNIFORMUI64VNVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLPROGRAMVERTEXLIMITNVPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLPROVOKINGVERTEXPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLPROVOKINGVERTEXEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLPUSHATTRIBPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLPUSHCLIENTATTRIBPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLPUSHDEBUGGROUPPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLPUSHDEBUGGROUPKHRPROC = ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLPUSHGROUPMARKEREXTPROC = ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub const PFNGLPUSHMATRIXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLPUSHNAMEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLQUERYCOUNTERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLQUERYCOUNTEREXTPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLQUERYMATRIXXOESPROC = ?*const fn ([*c]GLfixed, [*c]GLint) callconv(.C) GLbitfield;
pub const PFNGLQUERYOBJECTPARAMETERUIAMDPROC = ?*const fn (GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLQUERYRESOURCENVPROC = ?*const fn (GLenum, GLint, GLuint, [*c]GLint) callconv(.C) GLint;
pub const PFNGLQUERYRESOURCETAGNVPROC = ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub const PFNGLRASTERPOS2DPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS2DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS2FPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS2FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS2IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLRASTERPOS2IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLRASTERPOS2SPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS2SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS2XOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLRASTERPOS2XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLRASTERPOS3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLRASTERPOS3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLRASTERPOS3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS3XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLRASTERPOS3XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLRASTERPOS4DPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS4DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLRASTERPOS4FPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS4FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLRASTERPOS4IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLRASTERPOS4IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLRASTERPOS4SPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS4SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLRASTERPOS4XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLRASTERPOS4XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLRASTERSAMPLESEXTPROC = ?*const fn (GLuint, GLboolean) callconv(.C) void;
pub const PFNGLREADBUFFERPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLREADBUFFERINDEXEDEXTPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLREADBUFFERNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLREADINSTRUMENTSSGIXPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLREADPIXELSPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub const PFNGLREADNPIXELSPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLREADNPIXELSARBPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLREADNPIXELSEXTPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLREADNPIXELSKHRPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLRECTDPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLRECTDVPROC = ?*const fn ([*c]const GLdouble, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLRECTFPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLRECTFVPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLRECTIPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLRECTIVPROC = ?*const fn ([*c]const GLint, [*c]const GLint) callconv(.C) void;
pub const PFNGLRECTSPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLRECTSVPROC = ?*const fn ([*c]const GLshort, [*c]const GLshort) callconv(.C) void;
pub const PFNGLRECTXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLRECTXVOESPROC = ?*const fn ([*c]const GLfixed, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLREFERENCEPLANESGIXPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC = ?*const fn (GLuint, GLuint64) callconv(.C) GLboolean;
pub const PFNGLRELEASESHADERCOMPILERPROC = ?*const fn () callconv(.C) void;
pub const PFNGLRENDERGPUMASKNVPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLRENDERMODEPROC = ?*const fn (GLenum) callconv(.C) GLint;
pub const PFNGLRENDERBUFFERSTORAGEPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEEXTPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLRENDERBUFFERSTORAGEOESPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEPOINTERSUNPROC = ?*const fn (GLenum, GLsizei, [*c]?*const anyopaque) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUBSUNPROC = ?*const fn (GLubyte) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUBVSUNPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC = ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUISUNPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC = ?*const fn ([*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUIVSUNPROC = ?*const fn ([*c]const GLuint) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUSSUNPROC = ?*const fn (GLushort) callconv(.C) void;
pub const PFNGLREPLACEMENTCODEUSVSUNPROC = ?*const fn ([*c]const GLushort) callconv(.C) void;
pub const PFNGLREQUESTRESIDENTPROGRAMSNVPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLRESETHISTOGRAMPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLRESETHISTOGRAMEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLRESETMEMORYOBJECTPARAMETERNVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLRESETMINMAXPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLRESETMINMAXEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLRESIZEBUFFERSMESAPROC = ?*const fn () callconv(.C) void;
pub const PFNGLRESOLVEDEPTHVALUESNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC = ?*const fn () callconv(.C) void;
pub const PFNGLRESUMETRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
pub const PFNGLRESUMETRANSFORMFEEDBACKNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLROTATEDPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLROTATEFPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLROTATEXPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLROTATEXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLSAMPLECOVERAGEPROC = ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLECOVERAGEARBPROC = ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLECOVERAGEXPROC = ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLECOVERAGEXOESPROC = ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLEMAPATIPROC = ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub const PFNGLSAMPLEMASKEXTPROC = ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLEMASKINDEXEDNVPROC = ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub const PFNGLSAMPLEMASKSGISPROC = ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub const PFNGLSAMPLEMASKIPROC = ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub const PFNGLSAMPLEPATTERNEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLSAMPLEPATTERNSGISPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIIVOESPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIUIVEXTPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIUIVOESPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERFPROC = ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLSAMPLERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCALEDPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLSCALEFPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLSCALEXPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLSCALEXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLSCISSORPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLSCISSORARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSORARRAYVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSORARRAYVOESPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSOREXCLUSIVEARRAYVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSOREXCLUSIVENVPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDNVPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDOESPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDVNVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLSCISSORINDEXEDVOESPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3BPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3BEXTPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3BVPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3BVEXTPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3DEXTPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3DVEXTPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3FEXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3FVEXTPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3IEXTPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3IVEXTPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3SEXTPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3SVEXTPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UBPROC = ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UBEXTPROC = ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UBVPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UBVEXTPROC = ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UIPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UIEXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UIVPROC = ?*const fn ([*c]const GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3UIVEXTPROC = ?*const fn ([*c]const GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3USPROC = ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3USEXTPROC = ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3USVPROC = ?*const fn ([*c]const GLushort) callconv(.C) void;
pub const PFNGLSECONDARYCOLOR3USVEXTPROC = ?*const fn ([*c]const GLushort) callconv(.C) void;
pub const PFNGLSECONDARYCOLORFORMATNVPROC = ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLSECONDARYCOLORP3UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLORP3UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSECONDARYCOLORPOINTERPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSECONDARYCOLORPOINTEREXTPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSECONDARYCOLORPOINTERLISTIBMPROC = ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLSELECTBUFFERPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub const PFNGLSELECTPERFMONITORCOUNTERSAMDPROC = ?*const fn (GLuint, GLboolean, GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub const PFNGLSEMAPHOREPARAMETERUI64VEXTPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLSEPARABLEFILTER2DPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSEPARABLEFILTER2DEXTPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSETFENCEAPPLEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLSETFENCENVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLSETFRAGMENTSHADERCONSTANTATIPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSETINVARIANTEXTPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSETLOCALCONSTANTEXTPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSETMULTISAMPLEFVAMDPROC = ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSHADEMODELPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLSHADERBINARYPROC = ?*const fn (GLsizei, [*c]const GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub const PFNGLSHADEROP1EXTPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSHADEROP2EXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSHADEROP3EXTPROC = ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSHADERSOURCEPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub const PFNGLSHADERSOURCEARBPROC = ?*const fn (GLhandleARB, GLsizei, [*c][*c]const GLcharARB, [*c]const GLint) callconv(.C) void;
pub const PFNGLSHADERSTORAGEBLOCKBINDINGPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLSHADINGRATEIMAGEBARRIERNVPROC = ?*const fn (GLboolean) callconv(.C) void;
pub const PFNGLSHADINGRATEIMAGEPALETTENVPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub const PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC = ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLSHADINGRATESAMPLEORDERNVPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLSHARPENTEXFUNCSGISPROC = ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSIGNALSEMAPHOREEXTPROC = ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub const PFNGLSIGNALSEMAPHOREUI64NVXPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLSIGNALVKFENCENVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLSIGNALVKSEMAPHORENVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLSPECIALIZESHADERPROC = ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSPECIALIZESHADERARBPROC = ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLSPRITEPARAMETERFSGIXPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLSPRITEPARAMETERFVSGIXPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSPRITEPARAMETERISGIXPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLSPRITEPARAMETERIVSGIXPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLSTARTINSTRUMENTSSGIXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLSTARTTILINGQCOMPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, GLbitfield) callconv(.C) void;
pub const PFNGLSTATECAPTURENVPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
pub const PFNGLSTENCILCLEARTAGEXTPROC = ?*const fn (GLsizei, GLuint) callconv(.C) void;
pub const PFNGLSTENCILFILLPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSTENCILFILLPATHNVPROC = ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLSTENCILFUNCPROC = ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub const PFNGLSTENCILFUNCSEPARATEPROC = ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub const PFNGLSTENCILFUNCSEPARATEATIPROC = ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub const PFNGLSTENCILMASKPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLSTENCILMASKSEPARATEPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLSTENCILOPPROC = ?*const fn (GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLSTENCILOPSEPARATEPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLSTENCILOPSEPARATEATIPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLSTENCILOPVALUEAMDPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSTENCILSTROKEPATHNVPROC = ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub const PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSTENCILTHENCOVERFILLPATHNVPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum) callconv(.C) void;
pub const PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC = ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC = ?*const fn (GLuint, GLint, GLuint, GLenum) callconv(.C) void;
pub const PFNGLSTOPINSTRUMENTSSGIXPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLSTRINGMARKERGREMEDYPROC = ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLSUBPIXELPRECISIONBIASNVPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLSWIZZLEEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLSYNCTEXTUREINTELPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLTAGSAMPLEBUFFERSGIXPROC = ?*const fn () callconv(.C) void;
pub const PFNGLTANGENT3BEXTPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLTANGENT3BVEXTPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLTANGENT3DEXTPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLTANGENT3DVEXTPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLTANGENT3FEXTPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTANGENT3FVEXTPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLTANGENT3IEXTPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLTANGENT3IVEXTPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLTANGENT3SEXTPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLTANGENT3SVEXTPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLTANGENTPOINTEREXTPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTBUFFERMASK3DFXPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLTESSELLATIONFACTORAMDPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLTESSELLATIONMODEAMDPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLTESTFENCEAPPLEPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLTESTFENCENVPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLTESTOBJECTAPPLEPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub const PFNGLTEXATTACHMEMORYNVPROC = ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXBUFFERPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXBUFFERARBPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXBUFFEREXTPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXBUFFEROESPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXBUFFERRANGEPROC = ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTEXBUFFERRANGEEXTPROC = ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTEXBUFFERRANGEOESPROC = ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTEXBUMPPARAMETERFVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXBUMPPARAMETERIVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXCOORD1BOESPROC = ?*const fn (GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD1BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD1DPROC = ?*const fn (GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD1DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD1FPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD1FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD1HNVPROC = ?*const fn (GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD1HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD1IPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLTEXCOORD1IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLTEXCOORD1SPROC = ?*const fn (GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD1SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD1XOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD1XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD2BOESPROC = ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD2BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD2DPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD2DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD2FPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FVERTEX3FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FVERTEX3FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD2HNVPROC = ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD2HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD2IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLTEXCOORD2IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLTEXCOORD2SPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD2SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD2XOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD2XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD3BOESPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD3BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD3HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD3HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLTEXCOORD3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLTEXCOORD3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD3XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD3XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD4BOESPROC = ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD4BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLTEXCOORD4DPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD4DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLTEXCOORD4FPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4FVERTEX4FSUNPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4FVERTEX4FVSUNPROC = ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXCOORD4HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD4HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLTEXCOORD4IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLTEXCOORD4IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLTEXCOORD4SPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD4SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLTEXCOORD4XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORD4XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXCOORDFORMATNVPROC = ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLTEXCOORDP1UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP1UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP2UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP2UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP3UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP3UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP4UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDP4UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXCOORDPOINTERPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXCOORDPOINTEREXTPROC = ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXCOORDPOINTERLISTIBMPROC = ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLTEXCOORDPOINTERVINTELPROC = ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXENVFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXENVFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXENVIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXENVIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXENVXPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLTEXENVXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLTEXENVXVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXENVXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXFILTERFUNCSGISPROC = ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXGENDPROC = ?*const fn (GLenum, GLenum, GLdouble) callconv(.C) void;
pub const PFNGLTEXGENDVPROC = ?*const fn (GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLTEXGENFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXGENFOESPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXGENFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXGENFVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXGENIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXGENIOESPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXGENIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXGENIVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXGENXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLTEXGENXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXIMAGE2DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXIMAGE3DEXTPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXIMAGE3DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC = ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXIMAGE3DOESPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXIMAGE4DSGISPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXPAGECOMMITMENTARBPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXPAGECOMMITMENTEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXPARAMETERIIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIIVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIUIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIUIVEXTPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIUIVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXPARAMETERFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXPARAMETERIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXPARAMETERXPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLTEXPARAMETERXOESPROC = ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub const PFNGLTEXPARAMETERXVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXPARAMETERXVOESPROC = ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub const PFNGLTEXRENDERBUFFERNVPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXSTORAGE1DPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE1DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE2DPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE2DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE2DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXSTORAGE3DPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE3DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXSTORAGE3DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXSTORAGEMEM1DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXSTORAGEMEM2DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXSTORAGEMEM3DEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXSTORAGESPARSEAMDPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE1DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE2DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE3DEXTPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE3DOESPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXSUBIMAGE4DSGISPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTUREATTACHMEMORYNVPROC = ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTUREBARRIERPROC = ?*const fn () callconv(.C) void;
pub const PFNGLTEXTUREBARRIERNVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLTEXTUREBUFFERPROC = ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXTUREBUFFEREXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXTUREBUFFERRANGEPROC = ?*const fn (GLuint, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTEXTUREBUFFERRANGEEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTEXTURECOLORMASKSGISPROC = ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub const PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC = ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC = ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC = ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC = ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC = ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTURELIGHTEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLTEXTUREMATERIALEXTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
pub const PFNGLTEXTURENORMALEXTPROC = ?*const fn (GLenum) callconv(.C) void;
pub const PFNGLTEXTUREPAGECOMMITMENTEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIUIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERFPROC = ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERFEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLfloat) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERFVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIEXTPROC = ?*const fn (GLuint, GLenum, GLenum, GLint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXTUREPARAMETERIVEXTPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLTEXTURERANGEAPPLEPROC = ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURERENDERBUFFEREXTPROC = ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE1DPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE2DPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE3DPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC = ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub const PFNGLTEXTURESTORAGEMEM1DEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTURESTORAGEMEM2DEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTURESTORAGEMEM3DEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC = ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub const PFNGLTEXTURESTORAGESPARSEAMDPROC = ?*const fn (GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE1DPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE1DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE2DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE2DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE3DPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTURESUBIMAGE3DEXTPROC = ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub const PFNGLTEXTUREVIEWPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLTEXTUREVIEWEXTPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLTEXTUREVIEWOESPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLTRACKMATRIXNVPROC = ?*const fn (GLenum, GLuint, GLenum, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC = ?*const fn (GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC = ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC = ?*const fn (GLsizei, [*c]const GLint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKVARYINGSPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub const PFNGLTRANSFORMPATHNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLTRANSLATEDPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLTRANSLATEFPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLTRANSLATEXPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLTRANSLATEXOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLUNIFORM1DPROC = ?*const fn (GLint, GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM1DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM1FPROC = ?*const fn (GLint, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM1FARBPROC = ?*const fn (GLint, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM1FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM1FVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM1IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM1I64ARBPROC = ?*const fn (GLint, GLint64) callconv(.C) void;
pub const PFNGLUNIFORM1I64NVPROC = ?*const fn (GLint, GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM1I64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLUNIFORM1I64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM1IARBPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM1IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM1IVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM1UIPROC = ?*const fn (GLint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM1UI64ARBPROC = ?*const fn (GLint, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM1UI64NVPROC = ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM1UI64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM1UI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM1UIEXTPROC = ?*const fn (GLint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM1UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM1UIVEXTPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM2DPROC = ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM2DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM2FPROC = ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM2FARBPROC = ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM2FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM2FVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM2IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM2I64ARBPROC = ?*const fn (GLint, GLint64, GLint64) callconv(.C) void;
pub const PFNGLUNIFORM2I64NVPROC = ?*const fn (GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM2I64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLUNIFORM2I64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM2IARBPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM2IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM2IVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM2UIPROC = ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM2UI64ARBPROC = ?*const fn (GLint, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM2UI64NVPROC = ?*const fn (GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM2UI64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM2UI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM2UIEXTPROC = ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM2UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM2UIVEXTPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM3DPROC = ?*const fn (GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM3DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM3FPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM3FARBPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM3FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM3FVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM3IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM3I64ARBPROC = ?*const fn (GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub const PFNGLUNIFORM3I64NVPROC = ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM3I64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLUNIFORM3I64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM3IARBPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM3IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM3IVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM3UIPROC = ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM3UI64ARBPROC = ?*const fn (GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM3UI64NVPROC = ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM3UI64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM3UI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM3UIEXTPROC = ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM3UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM3UIVEXTPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM4DPROC = ?*const fn (GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM4DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORM4FPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM4FARBPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM4FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM4FVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORM4IPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM4I64ARBPROC = ?*const fn (GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub const PFNGLUNIFORM4I64NVPROC = ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM4I64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub const PFNGLUNIFORM4I64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM4IARBPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLUNIFORM4IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM4IVARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLUNIFORM4UIPROC = ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM4UI64ARBPROC = ?*const fn (GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM4UI64NVPROC = ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM4UI64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORM4UI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORM4UIEXTPROC = ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORM4UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORM4UIVEXTPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORMBLOCKBINDINGPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORMBUFFEREXTPROC = ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64ARBPROC = ?*const fn (GLint, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64IMGPROC = ?*const fn (GLint, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64NVPROC = ?*const fn (GLint, GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64VARBPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64VIMGPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMHANDLEUI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2FVARBPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X3FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX2X4FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3FVARBPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X2FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX3X4FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4FVARBPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X2FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMMATRIX4X3FVNVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLUNIFORMSUBROUTINESUIVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub const PFNGLUNIFORMUI64NVPROC = ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub const PFNGLUNIFORMUI64VNVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLUNLOCKARRAYSEXTPROC = ?*const fn () callconv(.C) void;
pub const PFNGLUNMAPBUFFERPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
pub const PFNGLUNMAPBUFFERARBPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
pub const PFNGLUNMAPBUFFEROESPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
pub const PFNGLUNMAPNAMEDBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLUNMAPNAMEDBUFFEREXTPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
pub const PFNGLUNMAPOBJECTBUFFERATIPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLUNMAPTEXTURE2DINTELPROC = ?*const fn (GLuint, GLint) callconv(.C) void;
pub const PFNGLUPDATEOBJECTBUFFERATIPROC = ?*const fn (GLuint, GLuint, GLsizei, ?*const anyopaque, GLenum) callconv(.C) void;
pub const PFNGLUPLOADGPUMASKNVXPROC = ?*const fn (GLbitfield) callconv(.C) void;
pub const PFNGLUSEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLUSEPROGRAMOBJECTARBPROC = ?*const fn (GLhandleARB) callconv(.C) void;
pub const PFNGLUSEPROGRAMSTAGESPROC = ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub const PFNGLUSEPROGRAMSTAGESEXTPROC = ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub const PFNGLUSESHADERPROGRAMEXTPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLVDPAUFININVPROC = ?*const fn () callconv(.C) void;
pub const PFNGLVDPAUGETSURFACEIVNVPROC = ?*const fn (GLvdpauSurfaceNV, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub const PFNGLVDPAUINITNVPROC = ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVDPAUISSURFACENVPROC = ?*const fn (GLvdpauSurfaceNV) callconv(.C) GLboolean;
pub const PFNGLVDPAUMAPSURFACESNVPROC = ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub const PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC = ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub const PFNGLVDPAUREGISTERVIDEOSURFACENVPROC = ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub const PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC = ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) GLvdpauSurfaceNV;
pub const PFNGLVDPAUSURFACEACCESSNVPROC = ?*const fn (GLvdpauSurfaceNV, GLenum) callconv(.C) void;
pub const PFNGLVDPAUUNMAPSURFACESNVPROC = ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub const PFNGLVDPAUUNREGISTERSURFACENVPROC = ?*const fn (GLvdpauSurfaceNV) callconv(.C) void;
pub const PFNGLVALIDATEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLVALIDATEPROGRAMARBPROC = ?*const fn (GLhandleARB) callconv(.C) void;
pub const PFNGLVALIDATEPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLVALIDATEPROGRAMPIPELINEEXTPROC = ?*const fn (GLuint) callconv(.C) void;
pub const PFNGLVARIANTARRAYOBJECTATIPROC = ?*const fn (GLuint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVARIANTPOINTEREXTPROC = ?*const fn (GLuint, GLenum, GLuint, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVARIANTBVEXTPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVARIANTDVEXTPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVARIANTFVEXTPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVARIANTIVEXTPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVARIANTSVEXTPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVARIANTUBVEXTPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVARIANTUIVEXTPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVARIANTUSVEXTPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEX2BOESPROC = ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLVERTEX2BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEX2DPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEX2DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEX2FPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEX2FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEX2HNVPROC = ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX2HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX2IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEX2IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEX2SPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEX2SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEX2XOESPROC = ?*const fn (GLfixed) callconv(.C) void;
pub const PFNGLVERTEX2XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLVERTEX3BOESPROC = ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLVERTEX3BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEX3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEX3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEX3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEX3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEX3HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX3HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEX3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEX3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEX3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEX3XOESPROC = ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLVERTEX3XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLVERTEX4BOESPROC = ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub const PFNGLVERTEX4BVOESPROC = ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEX4DPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEX4DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEX4FPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEX4FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEX4HNVPROC = ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX4HVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEX4IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEX4IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEX4SPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEX4SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEX4XOESPROC = ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub const PFNGLVERTEX4XVOESPROC = ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub const PFNGLVERTEXARRAYATTRIBBINDINGPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYATTRIBFORMATPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYATTRIBIFORMATPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYATTRIBLFORMATPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXARRAYBINDINGDIVISORPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYCOLOROFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYELEMENTBUFFERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYINDEXOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYNORMALOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYPARAMETERIAPPLEPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLVERTEXARRAYRANGEAPPLEPROC = ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub const PFNGLVERTEXARRAYRANGENVPROC = ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXBUFFERPROC = ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXBUFFERSPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub const PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC = ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DARBPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DNVPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DVARBPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1DVNVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FPROC = ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FARBPROC = ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FNVPROC = ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FVARBPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1FVNVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1HNVPROC = ?*const fn (GLuint, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1HVNVPROC = ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SPROC = ?*const fn (GLuint, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SARBPROC = ?*const fn (GLuint, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SNVPROC = ?*const fn (GLuint, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SVARBPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB1SVNVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DARBPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DNVPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DVARBPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2DVNVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FARBPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FNVPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FVARBPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2FVNVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2HNVPROC = ?*const fn (GLuint, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2HVNVPROC = ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SPROC = ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SARBPROC = ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SNVPROC = ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SVARBPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB2SVNVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DARBPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DNVPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DVARBPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3DVNVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FARBPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FNVPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FVARBPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3FVNVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3HNVPROC = ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3HVNVPROC = ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SARBPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SNVPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SVARBPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB3SVNVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NBVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NBVARBPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NIVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NIVARBPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NSVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NSVARBPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUBPROC = ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUBARBPROC = ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUBVARBPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUIVARBPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUSVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4NUSVARBPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4BVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4BVARBPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DARBPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DNVPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DVARBPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4DVNVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FARBPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FNVPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FVARBPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4FVNVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4HNVPROC = ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4HVNVPROC = ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4IVARBPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SARBPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SNVPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SVARBPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4SVNVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UBNVPROC = ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UBVARBPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UBVNVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4UIVARBPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4USVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIB4USVARBPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBARRAYOBJECTATIPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBBINDINGPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBDIVISORPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBDIVISORANGLEPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBDIVISORARBPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBDIVISOREXTPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBDIVISORNVPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBFORMATPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBFORMATNVPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1IPROC = ?*const fn (GLuint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1IEXTPROC = ?*const fn (GLuint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1IVEXTPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1UIPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1UIEXTPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI1UIVEXTPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2IPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2IEXTPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2IVEXTPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2UIPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2UIEXTPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI2UIVEXTPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3IPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3IEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3IVEXTPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3UIPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3UIEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI3UIVEXTPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4BVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4BVEXTPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4IEXTPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4IVEXTPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4SVEXTPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UBVEXTPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UIPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UIEXTPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4UIVEXTPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4USVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBI4USVEXTPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBIFORMATPROC = ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBIFORMATNVPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXATTRIBIPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBIPOINTEREXTPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1DPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1DEXTPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1DVEXTPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1I64NVPROC = ?*const fn (GLuint, GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1I64VNVPROC = ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1UI64ARBPROC = ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1UI64NVPROC = ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1UI64VARBPROC = ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL1UI64VNVPROC = ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2DPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2DEXTPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2DVEXTPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2I64NVPROC = ?*const fn (GLuint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2I64VNVPROC = ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2UI64NVPROC = ?*const fn (GLuint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL2UI64VNVPROC = ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3DEXTPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3DVEXTPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3I64NVPROC = ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3I64VNVPROC = ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3UI64NVPROC = ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL3UI64VNVPROC = ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4DEXTPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4DVEXTPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4I64NVPROC = ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4I64VNVPROC = ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4UI64NVPROC = ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBL4UI64VNVPROC = ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub const PFNGLVERTEXATTRIBLFORMATPROC = ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBLFORMATNVPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXATTRIBLPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBLPOINTEREXTPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP1UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP1UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP2UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP2UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP3UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP3UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP4UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBP4UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBPARAMETERIAMDPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub const PFNGLVERTEXATTRIBPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBPOINTERARBPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBPOINTERNVPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS1DVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS1FVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS1HVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS1SVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS2DVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS2FVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS2HVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS2SVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS3DVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS3FVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS3HVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS3SVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS4DVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS4FVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS4HVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS4SVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXATTRIBS4UBVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLVERTEXBINDINGDIVISORPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
pub const PFNGLVERTEXBLENDARBPROC = ?*const fn (GLint) callconv(.C) void;
pub const PFNGLVERTEXBLENDENVFATIPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXBLENDENVIATIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLVERTEXFORMATNVPROC = ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub const PFNGLVERTEXP2UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXP2UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXP3UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXP3UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXP4UIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
pub const PFNGLVERTEXP4UIVPROC = ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub const PFNGLVERTEXPOINTERPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXPOINTEREXTPROC = ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXPOINTERLISTIBMPROC = ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub const PFNGLVERTEXPOINTERVINTELPROC = ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1DATIPROC = ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1DVATIPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1FATIPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1FVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1IATIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1IVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1SATIPROC = ?*const fn (GLenum, GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM1SVATIPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2DATIPROC = ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2DVATIPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2FATIPROC = ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2FVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2IATIPROC = ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2IVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2SATIPROC = ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM2SVATIPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3DATIPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3DVATIPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3FATIPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3FVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3IATIPROC = ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3IVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3SATIPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM3SVATIPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4DATIPROC = ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4DVATIPROC = ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4FATIPROC = ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4FVATIPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4IATIPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4IVATIPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4SATIPROC = ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLVERTEXSTREAM4SVATIPROC = ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub const PFNGLVERTEXWEIGHTPOINTEREXTPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLVERTEXWEIGHTFEXTPROC = ?*const fn (GLfloat) callconv(.C) void;
pub const PFNGLVERTEXWEIGHTFVEXTPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLVERTEXWEIGHTHNVPROC = ?*const fn (GLhalfNV) callconv(.C) void;
pub const PFNGLVERTEXWEIGHTHVNVPROC = ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub const PFNGLVIDEOCAPTURENVPROC = ?*const fn (GLuint, [*c]GLuint, [*c]GLuint64EXT) callconv(.C) GLenum;
pub const PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub const PFNGLVIEWPORTPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub const PFNGLVIEWPORTARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTARRAYVNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTARRAYVOESPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFNVPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFOESPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFVNVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTINDEXEDFVOESPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTPOSITIONWSCALENVPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLVIEWPORTSWIZZLENVPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub const PFNGLWAITSEMAPHOREEXTPROC = ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub const PFNGLWAITSEMAPHOREUI64NVXPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub const PFNGLWAITSYNCPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub const PFNGLWAITSYNCAPPLEPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub const PFNGLWAITVKSEMAPHORENVPROC = ?*const fn (GLuint64) callconv(.C) void;
pub const PFNGLWEIGHTPATHSNVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLWEIGHTPOINTERARBPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLWEIGHTPOINTEROESPROC = ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub const PFNGLWEIGHTBVARBPROC = ?*const fn (GLint, [*c]const GLbyte) callconv(.C) void;
pub const PFNGLWEIGHTDVARBPROC = ?*const fn (GLint, [*c]const GLdouble) callconv(.C) void;
pub const PFNGLWEIGHTFVARBPROC = ?*const fn (GLint, [*c]const GLfloat) callconv(.C) void;
pub const PFNGLWEIGHTIVARBPROC = ?*const fn (GLint, [*c]const GLint) callconv(.C) void;
pub const PFNGLWEIGHTSVARBPROC = ?*const fn (GLint, [*c]const GLshort) callconv(.C) void;
pub const PFNGLWEIGHTUBVARBPROC = ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub const PFNGLWEIGHTUIVARBPROC = ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub const PFNGLWEIGHTUSVARBPROC = ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub const PFNGLWINDOWPOS2DPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2DARBPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2DMESAPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2DVARBPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2DVMESAPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS2FPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2FARBPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2FMESAPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2FVARBPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2FVMESAPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS2IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2IARBPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2IMESAPROC = ?*const fn (GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2IVARBPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2IVMESAPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS2SPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS2SARBPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS2SMESAPROC = ?*const fn (GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS2SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS2SVARBPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS2SVMESAPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3DPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3DARBPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3DMESAPROC = ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3DVPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3DVARBPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3DVMESAPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS3FPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3FARBPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3FMESAPROC = ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3FVPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3FVARBPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3FVMESAPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS3IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3IARBPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3IMESAPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3IVPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3IVARBPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3IVMESAPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS3SPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3SARBPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3SMESAPROC = ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3SVPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3SVARBPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS3SVMESAPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS4DMESAPROC = ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS4DVMESAPROC = ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub const PFNGLWINDOWPOS4FMESAPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS4FVMESAPROC = ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub const PFNGLWINDOWPOS4IMESAPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS4IVMESAPROC = ?*const fn ([*c]const GLint) callconv(.C) void;
pub const PFNGLWINDOWPOS4SMESAPROC = ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub const PFNGLWINDOWPOS4SVMESAPROC = ?*const fn ([*c]const GLshort) callconv(.C) void;
pub const PFNGLWINDOWRECTANGLESEXTPROC = ?*const fn (GLenum, GLsizei, [*c]const GLint) callconv(.C) void;
pub const PFNGLWRITEMASKEXTPROC = ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glAccum: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glAccumxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glAcquireKeyedMutexWin32EXT: ?*const fn (GLuint, GLuint64, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glActiveProgramEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glActiveShaderProgram: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glActiveShaderProgramEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glActiveStencilFaceEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glActiveTexture: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glActiveTextureARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glActiveVaryingNV: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glAlphaFragmentOp1ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glAlphaFragmentOp2ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glAlphaFragmentOp3ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glAlphaFunc: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glAlphaFuncQCOM: ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub extern var epoxy_glAlphaFuncx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glAlphaFuncxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glAlphaToCoverageDitherControlNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glApplyFramebufferAttachmentCMAAINTEL: ?*const fn () callconv(.C) void;
pub extern var epoxy_glApplyTextureEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glAreProgramsResidentNV: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var epoxy_glAreTexturesResident: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var epoxy_glAreTexturesResidentEXT: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var epoxy_glArrayElement: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glArrayElementEXT: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glArrayObjectATI: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glAsyncCopyBufferSubDataNVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub extern var epoxy_glAsyncCopyImageSubDataNVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub extern var epoxy_glAsyncMarkerSGIX: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glAttachObjectARB: ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub extern var epoxy_glAttachShader: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBegin: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBeginConditionalRender: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBeginConditionalRenderNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBeginConditionalRenderNVX: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBeginFragmentShaderATI: ?*const fn () callconv(.C) void;
pub extern var epoxy_glBeginOcclusionQueryNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBeginPerfMonitorAMD: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBeginPerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBeginQuery: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBeginQueryARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBeginQueryEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBeginQueryIndexed: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBeginTransformFeedback: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBeginTransformFeedbackEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBeginTransformFeedbackNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBeginVertexShaderEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glBeginVideoCaptureNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindAttribLocation: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glBindAttribLocationARB: ?*const fn (GLhandleARB, GLuint, [*c]const GLcharARB) callconv(.C) void;
pub extern var epoxy_glBindBuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindBufferARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindBufferBase: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBindBufferBaseEXT: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBindBufferBaseNV: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBindBufferOffsetEXT: ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub extern var epoxy_glBindBufferOffsetNV: ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub extern var epoxy_glBindBufferRange: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glBindBufferRangeEXT: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glBindBufferRangeNV: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glBindBuffersBase: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glBindBuffersRange: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glBindFragDataLocation: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glBindFragDataLocationEXT: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glBindFragDataLocationIndexed: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glBindFragDataLocationIndexedEXT: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glBindFragmentShaderATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindFramebuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindFramebufferEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindFramebufferOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindImageTexture: ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBindImageTextureEXT: ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glBindImageTextures: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glBindLightParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var epoxy_glBindMaterialParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var epoxy_glBindMultiTextureEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindParameterEXT: ?*const fn (GLenum) callconv(.C) GLuint;
pub extern var epoxy_glBindProgramARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindProgramNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindProgramPipeline: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindRenderbuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindRenderbufferEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindRenderbufferOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindSampler: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBindSamplers: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glBindShadingRateImageNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindTexGenParameterEXT: ?*const fn (GLenum, GLenum, GLenum) callconv(.C) GLuint;
pub extern var epoxy_glBindTexture: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindTextureEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindTextureUnit: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glBindTextureUnitParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var epoxy_glBindTextures: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glBindTransformFeedback: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindTransformFeedbackNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBindVertexArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindVertexArrayAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindVertexArrayOES: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindVertexBuffer: ?*const fn (GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var epoxy_glBindVertexBuffers: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub extern var epoxy_glBindVertexShaderEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glBindVideoCaptureStreamBufferNV: ?*const fn (GLuint, GLuint, GLenum, GLintptrARB) callconv(.C) void;
pub extern var epoxy_glBindVideoCaptureStreamTextureNV: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glBinormal3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glBinormal3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glBinormal3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glBinormal3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glBinormal3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glBinormal3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glBinormal3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glBinormal3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glBinormal3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glBinormal3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glBinormalPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glBitmap: ?*const fn (GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glBitmapxOES: ?*const fn (GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glBlendBarrier: ?*const fn () callconv(.C) void;
pub extern var epoxy_glBlendBarrierKHR: ?*const fn () callconv(.C) void;
pub extern var epoxy_glBlendBarrierNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glBlendColor: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glBlendColorEXT: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glBlendColorxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glBlendEquation: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationIndexedAMD: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationOES: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparate: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateIndexedAMD: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateOES: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparatei: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateiARB: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateiEXT: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationSeparateiOES: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationi: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationiARB: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationiEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendEquationiOES: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFunc: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncIndexedAMD: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparate: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateEXT: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateINGR: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateIndexedAMD: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateOES: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparatei: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateiARB: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateiEXT: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFuncSeparateiOES: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFunci: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFunciARB: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFunciEXT: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendFunciOES: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glBlendParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glBlitFramebuffer: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glBlitFramebufferANGLE: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glBlitFramebufferEXT: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glBlitFramebufferNV: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glBlitNamedFramebuffer: ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glBufferAddressRangeNV: ?*const fn (GLenum, GLuint, GLuint64EXT, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glBufferAttachMemoryNV: ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glBufferData: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var epoxy_glBufferDataARB: ?*const fn (GLenum, GLsizeiptrARB, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var epoxy_glBufferPageCommitmentARB: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var epoxy_glBufferParameteriAPPLE: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glBufferStorage: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var epoxy_glBufferStorageEXT: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var epoxy_glBufferStorageExternalEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub extern var epoxy_glBufferStorageMemEXT: ?*const fn (GLenum, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glBufferSubData: ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glBufferSubDataARB: ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCallCommandListNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glCallList: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glCallLists: ?*const fn (GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCheckFramebufferStatus: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var epoxy_glCheckFramebufferStatusEXT: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var epoxy_glCheckFramebufferStatusOES: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var epoxy_glCheckNamedFramebufferStatus: ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub extern var epoxy_glCheckNamedFramebufferStatusEXT: ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub extern var epoxy_glClampColor: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glClampColorARB: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glClear: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glClearAccum: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glClearAccumxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glClearBufferData: ?*const fn (GLenum, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearBufferSubData: ?*const fn (GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearBufferfi: ?*const fn (GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub extern var epoxy_glClearBufferfv: ?*const fn (GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glClearBufferiv: ?*const fn (GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glClearBufferuiv: ?*const fn (GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glClearColor: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glClearColorIiEXT: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glClearColorIuiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glClearColorx: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glClearColorxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glClearDepth: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glClearDepthdNV: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glClearDepthf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glClearDepthfOES: ?*const fn (GLclampf) callconv(.C) void;
pub extern var epoxy_glClearDepthx: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glClearDepthxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glClearIndex: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glClearNamedBufferData: ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearNamedBufferDataEXT: ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearNamedBufferSubData: ?*const fn (GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearNamedBufferSubDataEXT: ?*const fn (GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearNamedFramebufferfi: ?*const fn (GLuint, GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub extern var epoxy_glClearNamedFramebufferfv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glClearNamedFramebufferiv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glClearNamedFramebufferuiv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glClearPixelLocalStorageuiEXT: ?*const fn (GLsizei, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glClearStencil: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glClearTexImage: ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearTexImageEXT: ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearTexSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClearTexSubImageEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glClientActiveTexture: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glClientActiveTextureARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glClientActiveVertexStreamATI: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glClientAttribDefaultEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glClientWaitSemaphoreui64NVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glClientWaitSync: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub extern var epoxy_glClientWaitSyncAPPLE: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub extern var epoxy_glClipControl: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glClipControlEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glClipPlane: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glClipPlanef: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glClipPlanefIMG: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glClipPlanefOES: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glClipPlanex: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glClipPlanexIMG: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glClipPlanexOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glColor3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glColor3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glColor3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glColor3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glColor3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glColor3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glColor3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glColor3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glColor3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glColor3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glColor3ub: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glColor3ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glColor3ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glColor3uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glColor3us: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var epoxy_glColor3usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glColor3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glColor3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glColor4b: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glColor4bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glColor4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glColor4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glColor4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glColor4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glColor4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glColor4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glColor4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glColor4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glColor4ub: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glColor4ubVertex2fSUN: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4ubVertex2fvSUN: ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4ubVertex3fSUN: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4ubVertex3fvSUN: ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColor4ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glColor4ui: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glColor4uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glColor4us: ?*const fn (GLushort, GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var epoxy_glColor4usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glColor4x: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glColor4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glColor4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glColorFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glColorFragmentOp1ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glColorFragmentOp2ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glColorFragmentOp3ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glColorMask: ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glColorMaskIndexedEXT: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glColorMaski: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glColorMaskiEXT: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glColorMaskiOES: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glColorMaterial: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glColorP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glColorP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glColorP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glColorP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glColorPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glColorPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorSubTable: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorSubTableEXT: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorTable: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorTableEXT: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glColorTableParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColorTableParameterfvSGI: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glColorTableParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glColorTableParameterivSGI: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glColorTableSGI: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCombinerInputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glCombinerOutputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glCombinerParameterfNV: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glCombinerParameterfvNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glCombinerParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glCombinerParameterivNV: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glCombinerStageParameterfvNV: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glCommandListSegmentsNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glCompileCommandListNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glCompileShader: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glCompileShaderARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var epoxy_glCompileShaderIncludeARB: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage1D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage1DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage2D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage2DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage3D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage3DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexImage3DOES: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage1DARB: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage2DARB: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage3DARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glCompressedTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glConservativeRasterParameterfNV: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glConservativeRasterParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glConvolutionFilter1D: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glConvolutionFilter1DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glConvolutionFilter2D: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glConvolutionFilter2DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterfEXT: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glConvolutionParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glConvolutionParameteriEXT: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glConvolutionParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glConvolutionParameterxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glCopyBufferSubData: ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glCopyBufferSubDataNV: ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glCopyColorSubTable: ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyColorSubTableEXT: ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyColorTable: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyColorTableSGI: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyConvolutionFilter1D: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyConvolutionFilter1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyConvolutionFilter2D: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyConvolutionFilter2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyImageSubData: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyImageSubDataEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyImageSubDataNV: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyImageSubDataOES: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyNamedBufferSubData: ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glCopyPathNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glCopyPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum) callconv(.C) void;
pub extern var epoxy_glCopyTexImage1D: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTexImage1DEXT: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTexImage2D: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTexImage2DEXT: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage1DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage2DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage3DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glCopyTextureLevelsAPPLE: ?*const fn (GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCopyTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glCoverFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glCoverFillPathNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glCoverStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glCoverStrokePathNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glCoverageMaskNV: ?*const fn (GLboolean) callconv(.C) void;
pub extern var epoxy_glCoverageModulationNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glCoverageModulationTableNV: ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glCoverageOperationNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glCreateBuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateCommandListsNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateFramebuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateMemoryObjectsEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreatePerfQueryINTEL: ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateProgram: ?*const fn () callconv(.C) GLuint;
pub extern var epoxy_glCreateProgramObjectARB: ?*const fn () callconv(.C) GLhandleARB;
pub extern var epoxy_glCreateProgramPipelines: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateProgressFenceNVX: ?*const fn () callconv(.C) GLuint;
pub extern var epoxy_glCreateQueries: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateRenderbuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateSamplers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateShader: ?*const fn (GLenum) callconv(.C) GLuint;
pub extern var epoxy_glCreateShaderObjectARB: ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub extern var epoxy_glCreateShaderProgramEXT: ?*const fn (GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glCreateShaderProgramv: ?*const fn (GLenum, GLsizei, [*c]const [*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glCreateShaderProgramvEXT: ?*const fn (GLenum, GLsizei, [*c][*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glCreateStatesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateSyncFromCLeventARB: ?*const fn (?*struct__cl_context, ?*struct__cl_event, GLbitfield) callconv(.C) GLsync;
pub extern var epoxy_glCreateTextures: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateTransformFeedbacks: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCreateVertexArrays: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glCullFace: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glCullParameterdvEXT: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glCullParameterfvEXT: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glCurrentPaletteMatrixARB: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glCurrentPaletteMatrixOES: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDebugMessageCallback: ?*const fn (GLDEBUGPROC, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDebugMessageCallbackAMD: ?*const fn (GLDEBUGPROCAMD, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glDebugMessageCallbackARB: ?*const fn (GLDEBUGPROCARB, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDebugMessageCallbackKHR: ?*const fn (GLDEBUGPROCKHR, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDebugMessageControl: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var epoxy_glDebugMessageControlARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var epoxy_glDebugMessageControlKHR: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var epoxy_glDebugMessageEnableAMD: ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var epoxy_glDebugMessageInsert: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glDebugMessageInsertAMD: ?*const fn (GLenum, GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glDebugMessageInsertARB: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glDebugMessageInsertKHR: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glDeformSGIX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glDeformationMap3dSGIX: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glDeformationMap3fSGIX: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glDeleteAsyncMarkersSGIX: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDeleteBuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteBuffersARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteCommandListsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFencesAPPLE: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFencesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFragmentShaderATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFramebuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFramebuffersEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteFramebuffersOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteLists: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDeleteMemoryObjectsEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteNamedStringARB: ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glDeleteNamesAMD: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteObjectARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var epoxy_glDeleteOcclusionQueriesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeletePathsNV: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDeletePerfMonitorsAMD: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glDeletePerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteProgramPipelines: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteProgramPipelinesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteProgramsARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteProgramsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteQueries: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteQueriesARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteQueriesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteQueryResourceTagNV: ?*const fn (GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glDeleteRenderbuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteRenderbuffersEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteRenderbuffersOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteSamplers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteSemaphoresEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteShader: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteStatesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteSync: ?*const fn (GLsync) callconv(.C) void;
pub extern var epoxy_glDeleteSyncAPPLE: ?*const fn (GLsync) callconv(.C) void;
pub extern var epoxy_glDeleteTextures: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteTexturesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteTransformFeedbacks: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteTransformFeedbacksNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteVertexArrays: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteVertexArraysAPPLE: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteVertexArraysOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glDeleteVertexShaderEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDepthBoundsEXT: ?*const fn (GLclampd, GLclampd) callconv(.C) void;
pub extern var epoxy_glDepthBoundsdNV: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glDepthFunc: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glDepthMask: ?*const fn (GLboolean) callconv(.C) void;
pub extern var epoxy_glDepthRange: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glDepthRangeArrayfvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glDepthRangeArrayfvOES: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glDepthRangeArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glDepthRangeIndexed: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glDepthRangeIndexedfNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glDepthRangeIndexedfOES: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glDepthRangedNV: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glDepthRangef: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glDepthRangefOES: ?*const fn (GLclampf, GLclampf) callconv(.C) void;
pub extern var epoxy_glDepthRangex: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glDepthRangexOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glDetachObjectARB: ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub extern var epoxy_glDetachShader: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDetailTexFuncSGIS: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glDisable: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glDisableClientState: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glDisableClientStateIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableClientStateiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableDriverControlQCOM: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDisableIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableVariantClientStateEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDisableVertexArrayAttrib: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableVertexArrayAttribEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableVertexArrayEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glDisableVertexAttribAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glDisableVertexAttribArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDisableVertexAttribArrayARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glDisablei: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableiNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDisableiOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDiscardFramebufferEXT: ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDispatchCompute: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDispatchComputeGroupSizeARB: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDispatchComputeIndirect: ?*const fn (GLintptr) callconv(.C) void;
pub extern var epoxy_glDrawArrays: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysEXT: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysIndirect: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstanced: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedANGLE: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedARB: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedBaseInstance: ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedBaseInstanceEXT: ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedEXT: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawArraysInstancedNV: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawBuffer: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glDrawBuffers: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDrawBuffersARB: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDrawBuffersATI: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDrawBuffersEXT: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDrawBuffersIndexedEXT: ?*const fn (GLint, [*c]const GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glDrawBuffersNV: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glDrawCommandsAddressNV: ?*const fn (GLenum, [*c]const GLuint64, [*c]const GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawCommandsNV: ?*const fn (GLenum, GLuint, [*c]const GLintptr, [*c]const GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawCommandsStatesAddressNV: ?*const fn ([*c]const GLuint64, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawCommandsStatesNV: ?*const fn (GLuint, [*c]const GLintptr, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawElementArrayAPPLE: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElementArrayATI: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElements: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawElementsBaseVertex: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsBaseVertexEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsBaseVertexOES: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsIndirect: ?*const fn (GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstanced: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedANGLE: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedARB: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseInstance: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseInstanceEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseVertex: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseVertexBaseInstance: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseVertexEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedBaseVertexOES: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawElementsInstancedNV: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawMeshArraysSUN: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawMeshTasksIndirectNV: ?*const fn (GLintptr) callconv(.C) void;
pub extern var epoxy_glDrawMeshTasksNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawPixels: ?*const fn (GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementArrayAPPLE: ?*const fn (GLenum, GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementArrayATI: ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawRangeElements: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementsBaseVertex: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementsBaseVertexEXT: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementsBaseVertexOES: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glDrawRangeElementsEXT: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glDrawTexfOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glDrawTexfvOES: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glDrawTexiOES: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glDrawTexivOES: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glDrawTexsOES: ?*const fn (GLshort, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glDrawTexsvOES: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glDrawTextureNV: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glDrawTexxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glDrawTexxvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedback: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackInstanced: ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackInstancedEXT: ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackStream: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glDrawTransformFeedbackStreamInstanced: ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glDrawVkImageNV: ?*const fn (GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glEGLImageTargetRenderbufferStorageOES: ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub extern var epoxy_glEGLImageTargetTexStorageEXT: ?*const fn (GLenum, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glEGLImageTargetTexture2DOES: ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub extern var epoxy_glEGLImageTargetTextureStorageEXT: ?*const fn (GLuint, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glEdgeFlag: ?*const fn (GLboolean) callconv(.C) void;
pub extern var epoxy_glEdgeFlagFormatNV: ?*const fn (GLsizei) callconv(.C) void;
pub extern var epoxy_glEdgeFlagPointer: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glEdgeFlagPointerEXT: ?*const fn (GLsizei, GLsizei, [*c]const GLboolean) callconv(.C) void;
pub extern var epoxy_glEdgeFlagPointerListIBM: ?*const fn (GLint, [*c][*c]const GLboolean, GLint) callconv(.C) void;
pub extern var epoxy_glEdgeFlagv: ?*const fn ([*c]const GLboolean) callconv(.C) void;
pub extern var epoxy_glElementPointerAPPLE: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glElementPointerATI: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glEnable: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glEnableClientState: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glEnableClientStateIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableClientStateiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableDriverControlQCOM: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEnableIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableVariantClientStateEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEnableVertexArrayAttrib: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableVertexArrayAttribEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableVertexArrayEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glEnableVertexAttribAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glEnableVertexAttribArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEnableVertexAttribArrayARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEnablei: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableiNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnableiOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEnd: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndConditionalRender: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndConditionalRenderNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndConditionalRenderNVX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndFragmentShaderATI: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndList: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndOcclusionQueryNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndPerfMonitorAMD: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEndPerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEndQuery: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glEndQueryARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glEndQueryEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glEndQueryIndexed: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glEndTilingQCOM: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glEndTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndTransformFeedbackEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndVertexShaderEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glEndVideoCaptureNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glEvalCoord1d: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glEvalCoord1dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glEvalCoord1f: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glEvalCoord1fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glEvalCoord1xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glEvalCoord1xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glEvalCoord2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glEvalCoord2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glEvalCoord2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glEvalCoord2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glEvalCoord2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glEvalCoord2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glEvalMapsNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glEvalMesh1: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glEvalMesh2: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glEvalPoint1: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glEvalPoint2: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glEvaluateDepthValuesARB: ?*const fn () callconv(.C) void;
pub extern var epoxy_glExecuteProgramNV: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glExtGetBufferPointervQCOM: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glExtGetBuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetFramebuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetProgramBinarySourceQCOM: ?*const fn (GLuint, GLenum, [*c]GLchar, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetProgramsQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetRenderbuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetShadersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetTexLevelParameterivQCOM: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtGetTexSubImageQCOM: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glExtGetTexturesQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glExtIsProgramBinaryQCOM: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glExtTexObjectStateOverrideiQCOM: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glExtractComponentEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glFeedbackBuffer: ?*const fn (GLsizei, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glFeedbackBufferxOES: ?*const fn (GLsizei, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glFenceSync: ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub extern var epoxy_glFenceSyncAPPLE: ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub extern var epoxy_glFinalCombinerInputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glFinish: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFinishAsyncSGIX: ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub extern var epoxy_glFinishFenceAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glFinishFenceNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glFinishObjectAPPLE: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFinishTextureSUNX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFlush: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFlushMappedBufferRange: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glFlushMappedBufferRangeAPPLE: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glFlushMappedBufferRangeEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glFlushMappedNamedBufferRange: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glFlushMappedNamedBufferRangeEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glFlushPixelDataRangeNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glFlushRasterSGIX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFlushStaticDataIBM: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glFlushVertexArrayRangeAPPLE: ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glFlushVertexArrayRangeNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFogCoordFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glFogCoordPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glFogCoordPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glFogCoordPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glFogCoordd: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glFogCoorddEXT: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glFogCoorddv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glFogCoorddvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glFogCoordf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glFogCoordfEXT: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glFogCoordfv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFogCoordfvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFogCoordhNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var epoxy_glFogCoordhvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glFogFuncSGIS: ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFogf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glFogfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFogi: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFogiv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glFogx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glFogxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glFogxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glFogxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glFragmentColorMaterialSGIX: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glFragmentCoverageColorNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glFragmentLightModelfSGIX: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentLightModelfvSGIX: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentLightModeliSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFragmentLightModelivSGIX: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glFragmentLightfSGIX: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentLightfvSGIX: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentLightiSGIX: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFragmentLightivSGIX: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glFragmentMaterialfSGIX: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentMaterialfvSGIX: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFragmentMaterialiSGIX: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFragmentMaterialivSGIX: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glFrameTerminatorGREMEDY: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFrameZoomSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferDrawBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glFramebufferDrawBuffersEXT: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glFramebufferFetchBarrierEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFramebufferFetchBarrierQCOM: ?*const fn () callconv(.C) void;
pub extern var epoxy_glFramebufferFoveationConfigQCOM: ?*const fn (GLuint, GLuint, GLuint, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glFramebufferFoveationParametersQCOM: ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glFramebufferParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferParameteriMESA: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferPixelLocalStorageSizeEXT: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var epoxy_glFramebufferReadBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glFramebufferRenderbuffer: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glFramebufferRenderbufferEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glFramebufferRenderbufferOES: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glFramebufferSampleLocationsfvARB: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFramebufferSampleLocationsfvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFramebufferSamplePositionsfvAMD: ?*const fn (GLenum, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture1D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture1DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2DDownsampleIMG: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2DMultisampleEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2DMultisampleIMG: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture2DOES: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture3D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture3DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTexture3DOES: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureARB: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureEXT: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureFaceARB: ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureFaceEXT: ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureLayer: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureLayerARB: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureLayerDownsampleIMG: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureLayerEXT: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureMultisampleMultiviewOVR: ?*const fn (GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureMultiviewOVR: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glFramebufferTextureOES: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glFreeObjectBufferATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glFrontFace: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glFrustum: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glFrustumf: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glFrustumfOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glFrustumx: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glFrustumxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glGenAsyncMarkersSGIX: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var epoxy_glGenBuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenBuffersARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenFencesAPPLE: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenFencesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenFragmentShadersATI: ?*const fn (GLuint) callconv(.C) GLuint;
pub extern var epoxy_glGenFramebuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenFramebuffersEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenFramebuffersOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenLists: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var epoxy_glGenNamesAMD: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenOcclusionQueriesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenPathsNV: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var epoxy_glGenPerfMonitorsAMD: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenProgramPipelines: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenProgramPipelinesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenProgramsARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenProgramsNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenQueries: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenQueriesARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenQueriesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenQueryResourceTagNV: ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGenRenderbuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenRenderbuffersEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenRenderbuffersOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenSamplers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenSemaphoresEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenSymbolsEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) GLuint;
pub extern var epoxy_glGenTextures: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenTexturesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenTransformFeedbacks: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenTransformFeedbacksNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenVertexArrays: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenVertexArraysAPPLE: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenVertexArraysOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGenVertexShadersEXT: ?*const fn (GLuint) callconv(.C) GLuint;
pub extern var epoxy_glGenerateMipmap: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glGenerateMipmapEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glGenerateMipmapOES: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glGenerateMultiTexMipmapEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glGenerateTextureMipmap: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glGenerateTextureMipmapEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glGetActiveAtomicCounterBufferiv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetActiveAttrib: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveAttribARB: ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub extern var epoxy_glGetActiveSubroutineName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveSubroutineUniformName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveSubroutineUniformiv: ?*const fn (GLuint, GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetActiveUniform: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveUniformARB: ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub extern var epoxy_glGetActiveUniformBlockName: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveUniformBlockiv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetActiveUniformName: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetActiveUniformsiv: ?*const fn (GLuint, GLsizei, [*c]const GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetActiveVaryingNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetArrayObjectfvATI: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetArrayObjectivATI: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetAttachedObjectsARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLhandleARB) callconv(.C) void;
pub extern var epoxy_glGetAttachedShaders: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetAttribLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetAttribLocationARB: ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub extern var epoxy_glGetBooleanIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetBooleani_v: ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetBooleanv: ?*const fn (GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetBufferParameteri64v: ?*const fn (GLenum, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetBufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetBufferParameterivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetBufferParameterui64vNV: ?*const fn (GLenum, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetBufferPointerv: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetBufferPointervARB: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetBufferPointervOES: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetBufferSubData: ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetBufferSubDataARB: ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetClipPlane: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetClipPlanef: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetClipPlanefOES: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetClipPlanex: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetClipPlanexOES: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetColorTable: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetColorTableEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameterfvSGI: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetColorTableParameterivSGI: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetColorTableSGI: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCombinerInputParameterfvNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetCombinerInputParameterivNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetCombinerOutputParameterfvNV: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetCombinerOutputParameterivNV: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetCombinerStageParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetCommandHeaderNV: ?*const fn (GLenum, GLuint) callconv(.C) GLuint;
pub extern var epoxy_glGetCompressedMultiTexImageEXT: ?*const fn (GLenum, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCompressedTexImage: ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCompressedTexImageARB: ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCompressedTextureImage: ?*const fn (GLuint, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCompressedTextureImageEXT: ?*const fn (GLuint, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetCompressedTextureSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetConvolutionFilter: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetConvolutionFilterEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetConvolutionParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetConvolutionParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetConvolutionParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetConvolutionParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetConvolutionParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetCoverageModulationTableNV: ?*const fn (GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetDebugMessageLog: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetDebugMessageLogAMD: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLuint, [*c]GLuint, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetDebugMessageLogARB: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetDebugMessageLogKHR: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetDetailTexFuncSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetDoubleIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetDoublei_v: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetDoublei_vEXT: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetDoublev: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetDriverControlStringQCOM: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetDriverControlsQCOM: ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetError: ?*const fn () callconv(.C) GLenum;
pub extern var epoxy_glGetFenceivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFinalCombinerInputParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFinalCombinerInputParameterivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFirstPerfQueryIdINTEL: ?*const fn ([*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetFixedv: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetFixedvOES: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetFloatIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFloati_v: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFloati_vEXT: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFloati_vNV: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFloati_vOES: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFloatv: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFogFuncSGIS: ?*const fn ([*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFragDataIndex: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetFragDataIndexEXT: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetFragDataLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetFragDataLocationEXT: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetFragmentLightfvSGIX: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFragmentLightivSGIX: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFragmentMaterialfvSGIX: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFragmentMaterialivSGIX: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferAttachmentParameteriv: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferAttachmentParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferAttachmentParameterivOES: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferParameterfvAMD: ?*const fn (GLenum, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetFramebufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferParameterivMESA: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetFramebufferPixelLocalStorageSizeEXT: ?*const fn (GLuint) callconv(.C) GLsizei;
pub extern var epoxy_glGetGraphicsResetStatus: ?*const fn () callconv(.C) GLenum;
pub extern var epoxy_glGetGraphicsResetStatusARB: ?*const fn () callconv(.C) GLenum;
pub extern var epoxy_glGetGraphicsResetStatusEXT: ?*const fn () callconv(.C) GLenum;
pub extern var epoxy_glGetGraphicsResetStatusKHR: ?*const fn () callconv(.C) GLenum;
pub extern var epoxy_glGetHandleARB: ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub extern var epoxy_glGetHistogram: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetHistogramEXT: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetHistogramParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetHistogramParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetHistogramParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetHistogramParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetHistogramParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetImageHandleARB: ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub extern var epoxy_glGetImageHandleNV: ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub extern var epoxy_glGetImageTransformParameterfvHP: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetImageTransformParameterivHP: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetInfoLogARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub extern var epoxy_glGetInstrumentsSGIX: ?*const fn () callconv(.C) GLint;
pub extern var epoxy_glGetInteger64i_v: ?*const fn (GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetInteger64v: ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetInteger64vAPPLE: ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetIntegerIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetIntegeri_v: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetIntegeri_vEXT: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetIntegerui64i_vNV: ?*const fn (GLenum, GLuint, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetIntegerui64vNV: ?*const fn (GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetIntegerv: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetInternalformatSampleivNV: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetInternalformati64v: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetInternalformativ: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetInvariantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetInvariantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetInvariantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetLightfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetLightiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetLightxOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetLightxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetLightxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetListParameterfvSGIX: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetListParameterivSGIX: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetLocalConstantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetLocalConstantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetLocalConstantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMapAttribParameterfvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMapAttribParameterivNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMapControlPointsNV: ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetMapParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMapParameterivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMapdv: ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetMapfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMapiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMapxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetMaterialfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMaterialiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMaterialxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glGetMaterialxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetMaterialxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetMemoryObjectDetachedResourcesuivNV: ?*const fn (GLuint, GLenum, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetMemoryObjectParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMinmax: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetMinmaxEXT: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetMinmaxParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMinmaxParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMinmaxParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMinmaxParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexEnvfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMultiTexEnvivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexGendvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetMultiTexGenfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMultiTexGenivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexImageEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetMultiTexLevelParameterfvEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMultiTexLevelParameterivEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexParameterIivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexParameterIuivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetMultiTexParameterfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMultiTexParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetMultisamplefv: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetMultisamplefvNV: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferParameteri64v: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferParameterui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferPointerv: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetNamedBufferSubDataEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetNamedFramebufferAttachmentParameteriv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedFramebufferAttachmentParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedFramebufferParameterfvAMD: ?*const fn (GLuint, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetNamedFramebufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedFramebufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramLocalParameterIivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramLocalParameterIuivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramLocalParameterdvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramLocalParameterfvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramStringEXT: ?*const fn (GLuint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetNamedProgramivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedRenderbufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedRenderbufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNamedStringARB: ?*const fn (GLint, [*c]const GLchar, GLsizei, [*c]GLint, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetNamedStringivARB: ?*const fn (GLint, [*c]const GLchar, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetNextPerfQueryIdINTEL: ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetObjectBufferfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetObjectBufferivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetObjectLabel: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetObjectLabelEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetObjectLabelKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetObjectParameterfvARB: ?*const fn (GLhandleARB, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetObjectParameterivAPPLE: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetObjectParameterivARB: ?*const fn (GLhandleARB, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetObjectPtrLabel: ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetObjectPtrLabelKHR: ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetOcclusionQueryivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetOcclusionQueryuivNV: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPathColorGenfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathColorGenivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPathCommandsNV: ?*const fn (GLuint, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetPathCoordsNV: ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathDashArrayNV: ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathLengthNV: ?*const fn (GLuint, GLsizei, GLsizei) callconv(.C) GLfloat;
pub extern var epoxy_glGetPathMetricRangeNV: ?*const fn (GLbitfield, GLuint, GLsizei, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathMetricsNV: ?*const fn (GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathParameterfvNV: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathParameterivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPathSpacingNV: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLuint, GLfloat, GLfloat, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathTexGenfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPathTexGenivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPerfCounterInfoINTEL: ?*const fn (GLuint, GLuint, GLuint, [*c]GLchar, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorCounterDataAMD: ?*const fn (GLuint, GLenum, GLsizei, [*c]GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorCounterInfoAMD: ?*const fn (GLuint, GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorCounterStringAMD: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorCountersAMD: ?*const fn (GLuint, [*c]GLint, [*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorGroupStringAMD: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetPerfMonitorGroupsAMD: ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPerfQueryDataINTEL: ?*const fn (GLuint, GLuint, GLsizei, ?*anyopaque, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPerfQueryIdByNameINTEL: ?*const fn ([*c]GLchar, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPerfQueryInfoINTEL: ?*const fn (GLuint, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPixelMapfv: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPixelMapuiv: ?*const fn (GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetPixelMapusv: ?*const fn (GLenum, [*c]GLushort) callconv(.C) void;
pub extern var epoxy_glGetPixelMapxv: ?*const fn (GLenum, GLint, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetPixelTexGenParameterfvSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPixelTexGenParameterivSGIS: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPixelTransformParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetPixelTransformParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetPointerIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPointeri_vEXT: ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPointerv: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPointervEXT: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPointervKHR: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetPolygonStipple: ?*const fn ([*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetProgramBinary: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetProgramBinaryOES: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetProgramEnvParameterIivNV: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramEnvParameterIuivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetProgramEnvParameterdvARB: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetProgramEnvParameterfvARB: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetProgramInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetProgramInterfaceiv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramLocalParameterIivNV: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramLocalParameterIuivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetProgramLocalParameterdvARB: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetProgramLocalParameterfvARB: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetProgramNamedParameterdvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetProgramNamedParameterfvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetProgramParameterdvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetProgramParameterfvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetProgramPipelineInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetProgramPipelineInfoLogEXT: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetProgramPipelineiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramPipelineivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramResourceIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetProgramResourceLocation: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetProgramResourceLocationIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetProgramResourceLocationIndexEXT: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetProgramResourceName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetProgramResourcefvNV: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetProgramResourceiv: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramStageiv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramStringARB: ?*const fn (GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetProgramStringNV: ?*const fn (GLuint, GLenum, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetProgramSubroutineParameteruivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetProgramiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetProgramivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryBufferObjecti64v: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var epoxy_glGetQueryBufferObjectiv: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var epoxy_glGetQueryBufferObjectui64v: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var epoxy_glGetQueryBufferObjectuiv: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var epoxy_glGetQueryIndexediv: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjecti64v: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetQueryObjecti64vEXT: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectivARB: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectui64v: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectui64vEXT: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectuivARB: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetQueryObjectuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetQueryiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetQueryivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetRenderbufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetRenderbufferParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetRenderbufferParameterivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIivOES: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterIuivOES: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameterfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetSamplerParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSemaphoreParameterui64vEXT: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetSeparableFilter: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetSeparableFilterEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetShaderInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetShaderPrecisionFormat: ?*const fn (GLenum, GLenum, [*c]GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetShaderSource: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetShaderSourceARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub extern var epoxy_glGetShaderiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetShadingRateImagePaletteNV: ?*const fn (GLuint, GLuint, [*c]GLenum) callconv(.C) void;
pub extern var epoxy_glGetShadingRateSampleLocationivNV: ?*const fn (GLenum, GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSharpenTexFuncSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetStageIndexNV: ?*const fn (GLenum) callconv(.C) GLushort;
pub extern var epoxy_glGetString: ?*const fn (GLenum) callconv(.C) [*c]const GLubyte;
pub extern var epoxy_glGetStringi: ?*const fn (GLenum, GLuint) callconv(.C) [*c]const GLubyte;
pub extern var epoxy_glGetSubroutineIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetSubroutineUniformLocation: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetSynciv: ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetSyncivAPPLE: ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexBumpParameterfvATI: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexBumpParameterivATI: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexEnvfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexEnviv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexEnvxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTexEnvxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTexFilterFuncSGIS: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexGendv: ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetTexGenfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexGenfvOES: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexGeniv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexGenivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexGenxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTexImage: ?*const fn (GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetTexLevelParameterfv: ?*const fn (GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexLevelParameteriv: ?*const fn (GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexLevelParameterxvOES: ?*const fn (GLenum, GLint, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIuiv: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIuivEXT: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterIuivOES: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterPointervAPPLE: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetTexParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTexParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTexParameterxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTexParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var epoxy_glGetTextureHandleARB: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureHandleIMG: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureHandleNV: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureImage: ?*const fn (GLuint, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetTextureImageEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetTextureLevelParameterfv: ?*const fn (GLuint, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTextureLevelParameterfvEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTextureLevelParameteriv: ?*const fn (GLuint, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureLevelParameterivEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterIivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterIuivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterfvEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetTextureParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTextureSamplerHandleARB: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureSamplerHandleIMG: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureSamplerHandleNV: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var epoxy_glGetTextureSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetTrackMatrixivNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbackVarying: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbackVaryingEXT: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbackVaryingNV: ?*const fn (GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbacki64_v: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbacki_v: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTransformFeedbackiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetTranslatedShaderSourceANGLE: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var epoxy_glGetUniformBlockIndex: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLuint;
pub extern var epoxy_glGetUniformBufferSizeEXT: ?*const fn (GLuint, GLint) callconv(.C) GLint;
pub extern var epoxy_glGetUniformIndices: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetUniformLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetUniformLocationARB: ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub extern var epoxy_glGetUniformOffsetEXT: ?*const fn (GLuint, GLint) callconv(.C) GLintptr;
pub extern var epoxy_glGetUniformSubroutineuiv: ?*const fn (GLenum, GLint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetUniformdv: ?*const fn (GLuint, GLint, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetUniformfv: ?*const fn (GLuint, GLint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetUniformfvARB: ?*const fn (GLhandleARB, GLint, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetUniformi64vARB: ?*const fn (GLuint, GLint, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetUniformi64vNV: ?*const fn (GLuint, GLint, [*c]GLint64EXT) callconv(.C) void;
pub extern var epoxy_glGetUniformiv: ?*const fn (GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetUniformivARB: ?*const fn (GLhandleARB, GLint, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetUniformui64vARB: ?*const fn (GLuint, GLint, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetUniformui64vNV: ?*const fn (GLuint, GLint, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetUniformuiv: ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetUniformuivEXT: ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetUnsignedBytei_vEXT: ?*const fn (GLenum, GLuint, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetUnsignedBytevEXT: ?*const fn (GLenum, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetVariantArrayObjectfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVariantArrayObjectivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVariantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var epoxy_glGetVariantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVariantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVariantPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVaryingLocationNV: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var epoxy_glGetVertexArrayIndexed64iv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayIndexediv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayIntegeri_vEXT: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayPointeri_vEXT: ?*const fn (GLuint, GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVertexArrayiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribArrayObjectfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribArrayObjectivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribIivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribIuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribLdv: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribLdvEXT: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribLi64vNV: ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribLui64vARB: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribLui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribPointerv: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribPointervARB: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribPointervNV: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribdv: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribdvARB: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribdvNV: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribfvARB: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribfvNV: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribivARB: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVertexAttribivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVideoCaptureStreamdvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetVideoCaptureStreamfvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetVideoCaptureStreamivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVideoCaptureivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVideoi64vNV: ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub extern var epoxy_glGetVideoivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetVideoui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glGetVideouivNV: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetVkProcAddrNV: ?*const fn ([*c]const GLchar) callconv(.C) GLVULKANPROCNV;
pub extern var epoxy_glGetnColorTable: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnColorTableARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnCompressedTexImage: ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnCompressedTexImageARB: ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnConvolutionFilter: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnConvolutionFilterARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnHistogram: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnHistogramARB: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnMapdv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetnMapdvARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetnMapfv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnMapfvARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnMapiv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnMapivARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnMinmax: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnMinmaxARB: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapfv: ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapfvARB: ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapuiv: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapuivARB: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapusv: ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub extern var epoxy_glGetnPixelMapusvARB: ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub extern var epoxy_glGetnPolygonStipple: ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetnPolygonStippleARB: ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub extern var epoxy_glGetnSeparableFilter: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnSeparableFilterARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnTexImage: ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnTexImageARB: ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glGetnUniformdv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetnUniformdvARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var epoxy_glGetnUniformfv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnUniformfvARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnUniformfvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnUniformfvKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var epoxy_glGetnUniformi64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glGetnUniformiv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnUniformivARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnUniformivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnUniformivKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glGetnUniformui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glGetnUniformuiv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetnUniformuivARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGetnUniformuivKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactorbSUN: ?*const fn (GLbyte) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactordSUN: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactorfSUN: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactoriSUN: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactorsSUN: ?*const fn (GLshort) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactorubSUN: ?*const fn (GLubyte) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactoruiSUN: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glGlobalAlphaFactorusSUN: ?*const fn (GLushort) callconv(.C) void;
pub extern var epoxy_glHint: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glHintPGI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glHistogram: ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub extern var epoxy_glHistogramEXT: ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub extern var epoxy_glIglooInterfaceSGIX: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glImageTransformParameterfHP: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glImageTransformParameterfvHP: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glImageTransformParameteriHP: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glImageTransformParameterivHP: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glImportMemoryFdEXT: ?*const fn (GLuint, GLuint64, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glImportMemoryWin32HandleEXT: ?*const fn (GLuint, GLuint64, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glImportMemoryWin32NameEXT: ?*const fn (GLuint, GLuint64, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glImportSemaphoreFdEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glImportSemaphoreWin32HandleEXT: ?*const fn (GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glImportSemaphoreWin32NameEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glImportSyncEXT: ?*const fn (GLenum, GLintptr, GLbitfield) callconv(.C) GLsync;
pub extern var epoxy_glIndexFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glIndexFuncEXT: ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub extern var epoxy_glIndexMask: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glIndexMaterialEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glIndexPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glIndexPointerEXT: ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glIndexPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glIndexd: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glIndexdv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glIndexf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glIndexfv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glIndexi: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glIndexiv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glIndexs: ?*const fn (GLshort) callconv(.C) void;
pub extern var epoxy_glIndexsv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glIndexub: ?*const fn (GLubyte) callconv(.C) void;
pub extern var epoxy_glIndexubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glIndexxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glIndexxvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glInitNames: ?*const fn () callconv(.C) void;
pub extern var epoxy_glInsertComponentEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glInsertEventMarkerEXT: ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glInstrumentsBufferSGIX: ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glInterleavedArrays: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glInterpolatePathsNV: ?*const fn (GLuint, GLuint, GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glInvalidateBufferData: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glInvalidateBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glInvalidateFramebuffer: ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glInvalidateNamedFramebufferData: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glInvalidateNamedFramebufferSubData: ?*const fn (GLuint, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glInvalidateSubFramebuffer: ?*const fn (GLenum, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glInvalidateTexImage: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glInvalidateTexSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glIsAsyncMarkerSGIX: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsBuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsBufferARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsBufferResidentNV: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glIsCommandListNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnabled: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnabledIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnabledi: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnablediEXT: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnablediNV: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsEnablediOES: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsFenceAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsFenceNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsFramebuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsFramebufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsFramebufferOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsImageHandleResidentARB: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var epoxy_glIsImageHandleResidentNV: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var epoxy_glIsList: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsMemoryObjectEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsNameAMD: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsNamedBufferResidentNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsNamedStringARB: ?*const fn (GLint, [*c]const GLchar) callconv(.C) GLboolean;
pub extern var epoxy_glIsObjectBufferATI: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsOcclusionQueryNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsPathNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsPointInFillPathNV: ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub extern var epoxy_glIsPointInStrokePathNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub extern var epoxy_glIsProgram: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsProgramARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsProgramNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsProgramPipeline: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsQuery: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsQueryARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsQueryEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsRenderbuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsRenderbufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsRenderbufferOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsSampler: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsSemaphoreEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsShader: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsStateNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsSync: ?*const fn (GLsync) callconv(.C) GLboolean;
pub extern var epoxy_glIsSyncAPPLE: ?*const fn (GLsync) callconv(.C) GLboolean;
pub extern var epoxy_glIsTexture: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsTextureEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsTextureHandleResidentARB: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var epoxy_glIsTextureHandleResidentNV: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var epoxy_glIsTransformFeedback: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsTransformFeedbackNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsVariantEnabledEXT: ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glIsVertexArray: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsVertexArrayAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsVertexArrayOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glIsVertexAttribEnabledAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glLGPUCopyImageSubDataNVX: ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glLGPUInterlockNVX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glLGPUNamedBufferSubDataNVX: ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glLabelObjectEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glLightEnviSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glLightModelf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glLightModelfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glLightModeli: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glLightModeliv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glLightModelx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glLightModelxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glLightModelxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLightModelxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLightf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glLightfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glLighti: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glLightiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glLightx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glLightxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glLightxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLightxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLineStipple: ?*const fn (GLint, GLushort) callconv(.C) void;
pub extern var epoxy_glLineWidth: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glLineWidthx: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glLineWidthxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glLinkProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glLinkProgramARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var epoxy_glListBase: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glListDrawCommandsStatesClientNV: ?*const fn (GLuint, GLuint, [*c]?*const anyopaque, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glListParameterfSGIX: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glListParameterfvSGIX: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glListParameteriSGIX: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glListParameterivSGIX: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glLoadIdentity: ?*const fn () callconv(.C) void;
pub extern var epoxy_glLoadIdentityDeformationMapSGIX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glLoadMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glLoadMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glLoadMatrixx: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLoadMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLoadName: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glLoadPaletteFromModelViewMatrixOES: ?*const fn () callconv(.C) void;
pub extern var epoxy_glLoadProgramNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glLoadTransposeMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glLoadTransposeMatrixdARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glLoadTransposeMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glLoadTransposeMatrixfARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glLoadTransposeMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glLockArraysEXT: ?*const fn (GLint, GLsizei) callconv(.C) void;
pub extern var epoxy_glLogicOp: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMakeBufferNonResidentNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMakeBufferResidentNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glMakeImageHandleNonResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMakeImageHandleNonResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMakeImageHandleResidentARB: ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub extern var epoxy_glMakeImageHandleResidentNV: ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub extern var epoxy_glMakeNamedBufferNonResidentNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glMakeNamedBufferResidentNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glMakeTextureHandleNonResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMakeTextureHandleNonResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMakeTextureHandleResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMakeTextureHandleResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glMap1d: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMap1f: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMap1xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub extern var epoxy_glMap2d: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMap2f: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMap2xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub extern var epoxy_glMapBuffer: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapBufferARB: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapBufferOES: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapBufferRange: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapBufferRangeEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapControlPointsNV: ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMapGrid1d: ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMapGrid1f: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMapGrid1xOES: ?*const fn (GLint, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMapGrid2d: ?*const fn (GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMapGrid2f: ?*const fn (GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMapGrid2xOES: ?*const fn (GLint, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMapNamedBuffer: ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapNamedBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapNamedBufferRange: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapNamedBufferRangeEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapObjectBufferATI: ?*const fn (GLuint) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapParameterfvNV: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMapParameterivNV: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMapTexture2DINTEL: ?*const fn (GLuint, GLint, GLbitfield, [*c]GLint, [*c]GLenum) callconv(.C) ?*anyopaque;
pub extern var epoxy_glMapVertexAttrib1dAPPLE: ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMapVertexAttrib1fAPPLE: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMapVertexAttrib2dAPPLE: ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMapVertexAttrib2fAPPLE: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMaterialf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMaterialfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMateriali: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMaterialiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMaterialx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glMaterialxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glMaterialxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMaterialxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMatrixFrustumEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixIndexPointerARB: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMatrixIndexPointerOES: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMatrixIndexubvARB: ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glMatrixIndexuivARB: ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMatrixIndexusvARB: ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glMatrixLoad3x2fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixLoad3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixLoadIdentityEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMatrixLoadTranspose3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixLoadTransposedEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixLoadTransposefEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixLoaddEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixLoadfEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixMode: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMatrixMult3x2fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixMult3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixMultTranspose3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixMultTransposedEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixMultTransposefEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixMultdEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixMultfEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixOrthoEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixPopEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMatrixPushEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glMatrixRotatedEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixRotatefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixScaledEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixScalefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMatrixTranslatedEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMatrixTranslatefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMaxShaderCompilerThreadsARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glMaxShaderCompilerThreadsKHR: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glMemoryBarrier: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glMemoryBarrierByRegion: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glMemoryBarrierEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glMemoryObjectParameterivEXT: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMinSampleShading: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glMinSampleShadingARB: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glMinSampleShadingOES: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glMinmax: ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub extern var epoxy_glMinmaxEXT: ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub extern var epoxy_glMultMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultMatrixx: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultTransposeMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultTransposeMatrixdARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultTransposeMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultTransposeMatrixfARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultTransposeMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiDrawArrays: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysEXT: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirect: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectAMD: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectBindlessCountNV: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectBindlessNV: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectCount: ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectCountARB: ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawArraysIndirectEXT: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementArrayAPPLE: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElements: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsBaseVertex: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsBaseVertexEXT: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsEXT: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirect: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectAMD: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectBindlessCountNV: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectBindlessNV: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectCount: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectCountARB: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawElementsIndirectEXT: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawMeshTasksIndirectCountNV: ?*const fn (GLintptr, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawMeshTasksIndirectNV: ?*const fn (GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiDrawRangeElementArrayAPPLE: ?*const fn (GLenum, GLuint, GLuint, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMultiModeDrawArraysIBM: ?*const fn ([*c]const GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiModeDrawElementsIBM: ?*const fn ([*c]const GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexBufferEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1bOES: ?*const fn (GLenum, GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1d: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1dARB: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1f: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1fARB: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1hNV: ?*const fn (GLenum, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1i: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1iARB: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1s: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1sARB: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1xOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord1xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2bOES: ?*const fn (GLenum, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2d: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2dARB: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2f: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2fARB: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2i: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2iARB: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2s: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2sARB: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2xOES: ?*const fn (GLenum, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord2xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3bOES: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3d: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3dARB: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3f: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3fARB: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3i: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3iARB: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3s: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3sARB: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord3xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4bOES: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4d: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4dARB: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4f: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4fARB: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4i: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4iARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4s: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4sARB: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4x: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoord4xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP1ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP1uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP2ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP2uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP3ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP3uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP4ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordP4uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexCoordPointerEXT: ?*const fn (GLenum, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexEnvfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexEnvfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexEnviEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexEnvivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexGendEXT: ?*const fn (GLenum, GLenum, GLenum, GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexGendvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glMultiTexGenfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexGenfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexGeniEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexGenivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexParameterIivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexParameterIuivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexParameterfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexParameterfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMultiTexParameteriEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMultiTexRenderbufferEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMulticastBarrierNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glMulticastBlitFramebufferNV: ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var epoxy_glMulticastBufferSubDataNV: ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glMulticastCopyBufferSubDataNV: ?*const fn (GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glMulticastCopyImageSubDataNV: ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glMulticastFramebufferSampleLocationsfvNV: ?*const fn (GLuint, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMulticastGetQueryObjecti64vNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var epoxy_glMulticastGetQueryObjectivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glMulticastGetQueryObjectui64vNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var epoxy_glMulticastGetQueryObjectuivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glMulticastScissorArrayvNVX: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glMulticastViewportArrayvNVX: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glMulticastViewportPositionWScaleNVX: ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glMulticastWaitSyncNV: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var epoxy_glNamedBufferAttachMemoryNV: ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glNamedBufferData: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var epoxy_glNamedBufferDataEXT: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var epoxy_glNamedBufferPageCommitmentARB: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var epoxy_glNamedBufferPageCommitmentEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var epoxy_glNamedBufferStorage: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var epoxy_glNamedBufferStorageEXT: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var epoxy_glNamedBufferStorageExternalEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub extern var epoxy_glNamedBufferStorageMemEXT: ?*const fn (GLuint, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glNamedBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNamedBufferSubDataEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNamedCopyBufferSubDataEXT: ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferDrawBuffer: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferDrawBuffers: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferParameteriEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferReadBuffer: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferRenderbuffer: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferRenderbufferEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferSampleLocationsfvARB: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferSampleLocationsfvNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferSamplePositionsfvAMD: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTexture: ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTexture1DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTexture2DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTexture3DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTextureEXT: ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTextureFaceEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTextureLayer: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedFramebufferTextureLayerEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameter4dEXT: ?*const fn (GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameter4dvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameter4fEXT: ?*const fn (GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameter4fvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameterI4iEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameterI4ivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameterI4uiEXT: ?*const fn (GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameterI4uivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParameters4fvEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParametersI4ivEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glNamedProgramLocalParametersI4uivEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glNamedProgramStringEXT: ?*const fn (GLuint, GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorage: ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorageEXT: ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorageMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorageMultisampleAdvancedAMD: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedRenderbufferStorageMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glNamedStringARB: ?*const fn (GLenum, GLint, [*c]const GLchar, GLint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glNewList: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glNewObjectBufferATI: ?*const fn (GLsizei, ?*const anyopaque, GLenum) callconv(.C) GLuint;
pub extern var epoxy_glNormal3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glNormal3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glNormal3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glNormal3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glNormal3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNormal3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNormal3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glNormal3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glNormal3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNormal3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glNormal3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glNormal3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glNormal3x: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glNormal3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glNormal3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glNormalFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glNormalP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glNormalP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glNormalPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNormalPointerEXT: ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNormalPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glNormalPointervINTEL: ?*const fn (GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glNormalStream3bATI: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glNormalStream3bvATI: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glNormalStream3dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glNormalStream3dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glNormalStream3fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glNormalStream3fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glNormalStream3iATI: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glNormalStream3ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glNormalStream3sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glNormalStream3svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glObjectLabel: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glObjectLabelKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glObjectPtrLabel: ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glObjectPtrLabelKHR: ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glObjectPurgeableAPPLE: ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub extern var epoxy_glObjectUnpurgeableAPPLE: ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub extern var epoxy_glOrtho: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glOrthof: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glOrthofOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glOrthox: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glOrthoxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glPNTrianglesfATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPNTrianglesiATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPassTexCoordATI: ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glPassThrough: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glPassThroughxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glPatchParameterfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPatchParameteri: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPatchParameteriEXT: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPatchParameteriOES: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPathColorGenNV: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPathCommandsNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPathCoordsNV: ?*const fn (GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPathCoverDepthFuncNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glPathDashArrayNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPathFogGenNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glPathGlyphIndexArrayNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub extern var epoxy_glPathGlyphIndexRangeNV: ?*const fn (GLenum, ?*const anyopaque, GLbitfield, GLuint, GLfloat, GLuint) callconv(.C) GLenum;
pub extern var epoxy_glPathGlyphRangeNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glPathGlyphsNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLenum, GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glPathMemoryGlyphIndexArrayNV: ?*const fn (GLuint, GLenum, GLsizeiptr, ?*const anyopaque, GLsizei, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub extern var epoxy_glPathParameterfNV: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPathParameterfvNV: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPathParameteriNV: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPathParameterivNV: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glPathStencilDepthOffsetNV: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPathStencilFuncNV: ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glPathStringNV: ?*const fn (GLuint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPathSubCommandsNV: ?*const fn (GLuint, GLsizei, GLsizei, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPathSubCoordsNV: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPathTexGenNV: ?*const fn (GLenum, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPauseTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPauseTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPixelDataRangeNV: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPixelMapfv: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelMapuiv: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glPixelMapusv: ?*const fn (GLenum, GLsizei, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glPixelMapx: ?*const fn (GLenum, GLint, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glPixelStoref: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelStorei: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPixelStorex: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glPixelTexGenParameterfSGIS: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelTexGenParameterfvSGIS: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelTexGenParameteriSGIS: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPixelTexGenParameterivSGIS: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glPixelTexGenSGIX: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glPixelTransferf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelTransferi: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPixelTransferxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glPixelTransformParameterfEXT: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelTransformParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelTransformParameteriEXT: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPixelTransformParameterivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glPixelZoom: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPixelZoomxOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glPointAlongPathNV: ?*const fn (GLuint, GLsizei, GLsizei, GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat) callconv(.C) GLboolean;
pub extern var epoxy_glPointParameterf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfARB: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfEXT: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfSGIS: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfvEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameterfvSGIS: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPointParameteri: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPointParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glPointParameteriv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glPointParameterivNV: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glPointParameterx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glPointParameterxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glPointParameterxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glPointParameterxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glPointSize: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glPointSizePointerOES: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glPointSizex: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glPointSizexOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glPollAsyncSGIX: ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub extern var epoxy_glPollInstrumentsSGIX: ?*const fn ([*c]GLint) callconv(.C) GLint;
pub extern var epoxy_glPolygonMode: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glPolygonModeNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glPolygonOffset: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPolygonOffsetClamp: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPolygonOffsetClampEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPolygonOffsetEXT: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPolygonOffsetx: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glPolygonOffsetxOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glPolygonStipple: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glPopAttrib: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopClientAttrib: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopDebugGroup: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopDebugGroupKHR: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopGroupMarkerEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopMatrix: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPopName: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPresentFrameDualFillNV: ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glPresentFrameKeyedNV: ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glPrimitiveBoundingBox: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPrimitiveBoundingBoxARB: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPrimitiveBoundingBoxEXT: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPrimitiveBoundingBoxOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glPrimitiveRestartIndex: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glPrimitiveRestartIndexNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glPrimitiveRestartNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPrioritizeTextures: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glPrioritizeTexturesEXT: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLclampf) callconv(.C) void;
pub extern var epoxy_glPrioritizeTexturesxOES: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glProgramBinary: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glProgramBinaryOES: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glProgramBufferParametersIivNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramBufferParametersIuivNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramBufferParametersfvNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameter4dARB: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameter4dvARB: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameter4fARB: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameter4fvARB: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameterI4iNV: ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameterI4ivNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameterI4uiNV: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameterI4uivNV: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramEnvParameters4fvEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramEnvParametersI4ivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramEnvParametersI4uivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameter4dARB: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameter4dvARB: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameter4fARB: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameter4fvARB: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameterI4iNV: ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameterI4ivNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameterI4uiNV: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameterI4uivNV: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParameters4fvEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramLocalParametersI4ivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramLocalParametersI4uivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramNamedParameter4dNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramNamedParameter4dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramNamedParameter4fNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramNamedParameter4fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramParameter4dNV: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramParameter4dvNV: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramParameter4fNV: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramParameter4fvNV: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glProgramParameteriARB: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glProgramParameteriEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glProgramParameters4dvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramParameters4fvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramPathFragmentInputGenNV: ?*const fn (GLuint, GLint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramStringARB: ?*const fn (GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glProgramSubroutineParametersuivNV: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1d: ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform1dEXT: ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform1dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform1dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform1f: ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform1fEXT: ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform1fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform1fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform1i: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1i64ARB: ?*const fn (GLuint, GLint, GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform1i64NV: ?*const fn (GLuint, GLint, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform1i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform1i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform1iEXT: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ui: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ui64ARB: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform1ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform1uiEXT: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform1uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2d: ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform2dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform2dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform2dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform2f: ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform2fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform2fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform2fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform2i: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform2i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform2i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform2i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform2iEXT: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ui: ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform2ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform2uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform2uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3d: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform3dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform3dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform3dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform3f: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform3fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform3fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform3fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform3i: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform3i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform3i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform3i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform3iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ui: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform3ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform3uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform3uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4d: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform4dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform4dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform4dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniform4f: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform4fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform4fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform4fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniform4i: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform4i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform4i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform4i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform4iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ui: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniform4ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniform4uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniform4uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64ARB: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64IMG: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64NV: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64vIMG: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformHandleui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix2x4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix3x4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformMatrix4x3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glProgramUniformui64NV: ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramUniformui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glProgramVertexLimitNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glProvokingVertex: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glProvokingVertexEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glPushAttrib: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glPushClientAttrib: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glPushClientAttribDefaultEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glPushDebugGroup: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glPushDebugGroupKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glPushGroupMarkerEXT: ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glPushMatrix: ?*const fn () callconv(.C) void;
pub extern var epoxy_glPushName: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glQueryCounter: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glQueryCounterEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glQueryMatrixxOES: ?*const fn ([*c]GLfixed, [*c]GLint) callconv(.C) GLbitfield;
pub extern var epoxy_glQueryObjectParameteruiAMD: ?*const fn (GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glQueryResourceNV: ?*const fn (GLenum, GLint, GLuint, [*c]GLint) callconv(.C) GLint;
pub extern var epoxy_glQueryResourceTagNV: ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub extern var epoxy_glRasterPos2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterPos2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterPos3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterPos3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterPos4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glRasterPos4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glRasterPos4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glRasterPos4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glRasterPos4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterPos4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glRasterSamplesEXT: ?*const fn (GLuint, GLboolean) callconv(.C) void;
pub extern var epoxy_glReadBuffer: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glReadBufferIndexedEXT: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glReadBufferNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glReadInstrumentsSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glReadPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glReadnPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glReadnPixelsARB: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glReadnPixelsEXT: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glReadnPixelsKHR: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glRectd: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glRectdv: ?*const fn ([*c]const GLdouble, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glRectf: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glRectfv: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glRecti: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glRectiv: ?*const fn ([*c]const GLint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glRects: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glRectsv: ?*const fn ([*c]const GLshort, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glRectxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glRectxvOES: ?*const fn ([*c]const GLfixed, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glReferencePlaneSGIX: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glReleaseKeyedMutexWin32EXT: ?*const fn (GLuint, GLuint64) callconv(.C) GLboolean;
pub extern var epoxy_glReleaseShaderCompiler: ?*const fn () callconv(.C) void;
pub extern var epoxy_glRenderGpuMaskNV: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glRenderMode: ?*const fn (GLenum) callconv(.C) GLint;
pub extern var epoxy_glRenderbufferStorage: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleANGLE: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleAPPLE: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleAdvancedAMD: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleIMG: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageMultisampleNV: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glRenderbufferStorageOES: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glReplacementCodePointerSUN: ?*const fn (GLenum, GLsizei, [*c]?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glReplacementCodeubSUN: ?*const fn (GLubyte) callconv(.C) void;
pub extern var epoxy_glReplacementCodeubvSUN: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor4ubVertex3fSUN: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiColor4ubVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiSUN: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuiVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glReplacementCodeuivSUN: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glReplacementCodeusSUN: ?*const fn (GLushort) callconv(.C) void;
pub extern var epoxy_glReplacementCodeusvSUN: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glRequestResidentProgramsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glResetHistogram: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glResetHistogramEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glResetMemoryObjectParameterNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glResetMinmax: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glResetMinmaxEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glResizeBuffersMESA: ?*const fn () callconv(.C) void;
pub extern var epoxy_glResolveDepthValuesNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glResolveMultisampleFramebufferAPPLE: ?*const fn () callconv(.C) void;
pub extern var epoxy_glResumeTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var epoxy_glResumeTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glRotated: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glRotatef: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glRotatex: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glRotatexOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glSampleCoverage: ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleCoverageARB: ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleCoveragex: ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleCoveragexOES: ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleMapATI: ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glSampleMaskEXT: ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleMaskIndexedNV: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var epoxy_glSampleMaskSGIS: ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub extern var epoxy_glSampleMaski: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var epoxy_glSamplePatternEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glSamplePatternSGIS: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIiv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIivEXT: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIivOES: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIuiv: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIuivEXT: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterIuivOES: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSamplerParameterf: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glSamplerParameterfv: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSamplerParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glSamplerParameteriv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScaled: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glScalef: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glScalex: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glScalexOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glScissor: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glScissorArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorArrayvOES: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorExclusiveArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorExclusiveNV: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glScissorIndexed: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glScissorIndexedNV: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glScissorIndexedOES: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glScissorIndexedv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorIndexedvNV: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glScissorIndexedvOES: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ub: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ubEXT: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ubvEXT: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3uiEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3uivEXT: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3us: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3usEXT: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glSecondaryColor3usvEXT: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glSecondaryColorFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glSecondaryColorP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColorP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSecondaryColorPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSecondaryColorPointerEXT: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSecondaryColorPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glSelectBuffer: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glSelectPerfMonitorCountersAMD: ?*const fn (GLuint, GLboolean, GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var epoxy_glSemaphoreParameterui64vEXT: ?*const fn (GLuint, GLenum, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glSeparableFilter2D: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSeparableFilter2DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSetFenceAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glSetFenceNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glSetFragmentShaderConstantATI: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSetInvariantEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSetLocalConstantEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSetMultisamplefvAMD: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glShadeModel: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glShaderBinary: ?*const fn (GLsizei, [*c]const GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var epoxy_glShaderOp1EXT: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glShaderOp2EXT: ?*const fn (GLenum, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glShaderOp3EXT: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glShaderSource: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glShaderSourceARB: ?*const fn (GLhandleARB, GLsizei, [*c][*c]const GLcharARB, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glShaderStorageBlockBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glShadingRateImageBarrierNV: ?*const fn (GLboolean) callconv(.C) void;
pub extern var epoxy_glShadingRateImagePaletteNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glShadingRateSampleOrderCustomNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glShadingRateSampleOrderNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glSharpenTexFuncSGIS: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSignalSemaphoreEXT: ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glSignalSemaphoreui64NVX: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glSignalVkFenceNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glSignalVkSemaphoreNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glSpecializeShader: ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSpecializeShaderARB: ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glSpriteParameterfSGIX: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glSpriteParameterfvSGIX: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glSpriteParameteriSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glSpriteParameterivSGIX: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glStartInstrumentsSGIX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glStartTilingQCOM: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLbitfield) callconv(.C) void;
pub extern var epoxy_glStateCaptureNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glStencilClearTagEXT: ?*const fn (GLsizei, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glStencilFillPathNV: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilFunc: ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilFuncSeparate: ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilFuncSeparateATI: ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilMask: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glStencilMaskSeparate: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilOp: ?*const fn (GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glStencilOpSeparate: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glStencilOpSeparateATI: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glStencilOpValueAMD: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glStencilStrokePathNV: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glStencilThenCoverFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glStencilThenCoverFillPathNV: ?*const fn (GLuint, GLenum, GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glStencilThenCoverStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glStencilThenCoverStrokePathNV: ?*const fn (GLuint, GLint, GLuint, GLenum) callconv(.C) void;
pub extern var epoxy_glStopInstrumentsSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glStringMarkerGREMEDY: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glSubpixelPrecisionBiasNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glSwizzleEXT: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glSyncTextureINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glTagSampleBufferSGIX: ?*const fn () callconv(.C) void;
pub extern var epoxy_glTangent3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glTangent3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glTangent3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glTangent3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTangent3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTangent3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTangent3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glTangent3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTangent3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glTangent3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glTangentPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTbufferMask3DFX: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glTessellationFactorAMD: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glTessellationModeAMD: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glTestFenceAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glTestFenceNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glTestObjectAPPLE: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glTexAttachMemoryNV: ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexBuffer: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexBufferARB: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexBufferEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexBufferOES: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexBufferRange: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTexBufferRangeEXT: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTexBufferRangeOES: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTexBumpParameterfvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexBumpParameterivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord1bOES: ?*const fn (GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord1bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord1d: ?*const fn (GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord1dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord1f: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord1fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord1hNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord1hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord1i: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord1iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord1s: ?*const fn (GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord1sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord1xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord1xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord2bOES: ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord2bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor4ubVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fColor4ubVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord2hNV: ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord2hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord3bOES: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord3bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord4bOES: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord4bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glTexCoord4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTexCoord4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4fVertex4fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4fVertex4fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexCoord4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glTexCoord4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexCoord4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glTexCoord4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoord4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexCoordFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexCoordP1ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP1uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP2ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP2uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexCoordPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexCoordPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexCoordPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glTexCoordPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexEnvf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexEnvfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexEnvi: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTexEnviv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexEnvx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexEnvxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexEnvxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexEnvxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexFilterFuncSGIS: ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexGend: ?*const fn (GLenum, GLenum, GLdouble) callconv(.C) void;
pub extern var epoxy_glTexGendv: ?*const fn (GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glTexGenf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexGenfOES: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexGenfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexGenfvOES: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexGeni: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTexGeniOES: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTexGeniv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexGenivOES: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexGenxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexGenxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexImage2D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexImage2DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexImage2DMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexImage3D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexImage3DEXT: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexImage3DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexImage3DMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexImage3DOES: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexImage4DSGIS: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexPageCommitmentARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexPageCommitmentEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexParameterIiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexParameterIivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexParameterIivOES: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexParameterIuiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexParameterIuivEXT: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexParameterIuivOES: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTexParameterf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTexParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTexParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTexParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTexParameterx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexParameterxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var epoxy_glTexParameterxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexParameterxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glTexRenderbufferNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTexStorage1D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage1DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage2D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage2DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage2DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexStorage3D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage3DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTexStorage3DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexStorage3DMultisampleOES: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTexStorageMem1DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexStorageMem2DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexStorageMem2DMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexStorageMem3DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexStorageMem3DMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTexStorageSparseAMD: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub extern var epoxy_glTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage1DEXT: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage2DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage3DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTexSubImage4DSGIS: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureAttachMemoryNV: ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureBarrier: ?*const fn () callconv(.C) void;
pub extern var epoxy_glTextureBarrierNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glTextureBuffer: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTextureBufferEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTextureBufferRange: ?*const fn (GLuint, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTextureBufferRangeEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTextureColorMaskSGIS: ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureFoveationParametersQCOM: ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureImage2DMultisampleCoverageNV: ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureImage2DMultisampleNV: ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureImage3DMultisampleCoverageNV: ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureImage3DMultisampleNV: ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureLightEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glTextureMaterialEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glTextureNormalEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var epoxy_glTexturePageCommitmentEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureParameterIiv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTextureParameterIivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTextureParameterIuiv: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTextureParameterIuivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glTextureParameterf: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTextureParameterfEXT: ?*const fn (GLuint, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glTextureParameterfv: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTextureParameterfvEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTextureParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTextureParameteriEXT: ?*const fn (GLuint, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glTextureParameteriv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTextureParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glTextureRangeAPPLE: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureRenderbufferEXT: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glTextureStorage1D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage1DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage2D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage2DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage2DMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureStorage2DMultisampleEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureStorage3D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage3DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glTextureStorage3DMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureStorage3DMultisampleEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var epoxy_glTextureStorageMem1DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureStorageMem2DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureStorageMem2DMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureStorageMem3DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureStorageMem3DMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var epoxy_glTextureStorageSparseAMD: ?*const fn (GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub extern var epoxy_glTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glTextureView: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glTextureViewEXT: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glTextureViewOES: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glTrackMatrixNV: ?*const fn (GLenum, GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackAttribsNV: ?*const fn (GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackBufferBase: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackBufferRange: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackStreamAttribsNV: ?*const fn (GLsizei, [*c]const GLint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackVaryings: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackVaryingsEXT: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformFeedbackVaryingsNV: ?*const fn (GLuint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var epoxy_glTransformPathNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glTranslated: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glTranslatef: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glTranslatex: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glTranslatexOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glUniform1d: ?*const fn (GLint, GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform1dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform1f: ?*const fn (GLint, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform1fARB: ?*const fn (GLint, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform1fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform1fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform1i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform1i64ARB: ?*const fn (GLint, GLint64) callconv(.C) void;
pub extern var epoxy_glUniform1i64NV: ?*const fn (GLint, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform1i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glUniform1i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform1iARB: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform1iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform1ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform1ui: ?*const fn (GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform1ui64ARB: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform1ui64NV: ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform1ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform1ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform1uiEXT: ?*const fn (GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform1uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform1uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform2d: ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform2dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform2f: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform2fARB: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform2fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform2fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform2i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform2i64ARB: ?*const fn (GLint, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glUniform2i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform2i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glUniform2i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform2iARB: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform2iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform2ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform2ui: ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform2ui64ARB: ?*const fn (GLint, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform2ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform2ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform2ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform2uiEXT: ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform2uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform2uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform3d: ?*const fn (GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform3dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform3f: ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform3fARB: ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform3fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform3fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform3i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform3i64ARB: ?*const fn (GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glUniform3i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform3i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glUniform3i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform3iARB: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform3iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform3ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform3ui: ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform3ui64ARB: ?*const fn (GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform3ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform3ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform3ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform3uiEXT: ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform3uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform3uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform4d: ?*const fn (GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform4dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniform4f: ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform4fARB: ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform4fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform4fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniform4i: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform4i64ARB: ?*const fn (GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var epoxy_glUniform4i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform4i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var epoxy_glUniform4i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform4iARB: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glUniform4iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform4ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glUniform4ui: ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform4ui64ARB: ?*const fn (GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform4ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform4ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniform4ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniform4uiEXT: ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniform4uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniform4uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniformBlockBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniformBufferEXT: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64ARB: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64IMG: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64NV: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64vIMG: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformHandleui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x3fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix2x4fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x2fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix3x4fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x2fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformMatrix4x3fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glUniformSubroutinesuiv: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glUniformui64NV: ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUniformui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glUnlockArraysEXT: ?*const fn () callconv(.C) void;
pub extern var epoxy_glUnmapBuffer: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glUnmapBufferARB: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glUnmapBufferOES: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var epoxy_glUnmapNamedBuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glUnmapNamedBufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var epoxy_glUnmapObjectBufferATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glUnmapTexture2DINTEL: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glUpdateObjectBufferATI: ?*const fn (GLuint, GLuint, GLsizei, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var epoxy_glUploadGpuMaskNVX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var epoxy_glUseProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glUseProgramObjectARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var epoxy_glUseProgramStages: ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub extern var epoxy_glUseProgramStagesEXT: ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub extern var epoxy_glUseShaderProgramEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVDPAUFiniNV: ?*const fn () callconv(.C) void;
pub extern var epoxy_glVDPAUGetSurfaceivNV: ?*const fn (GLvdpauSurfaceNV, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var epoxy_glVDPAUInitNV: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVDPAUIsSurfaceNV: ?*const fn (GLvdpauSurfaceNV) callconv(.C) GLboolean;
pub extern var epoxy_glVDPAUMapSurfacesNV: ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub extern var epoxy_glVDPAURegisterOutputSurfaceNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub extern var epoxy_glVDPAURegisterVideoSurfaceNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub extern var epoxy_glVDPAURegisterVideoSurfaceWithPictureStructureNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) GLvdpauSurfaceNV;
pub extern var epoxy_glVDPAUSurfaceAccessNV: ?*const fn (GLvdpauSurfaceNV, GLenum) callconv(.C) void;
pub extern var epoxy_glVDPAUUnmapSurfacesNV: ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub extern var epoxy_glVDPAUUnregisterSurfaceNV: ?*const fn (GLvdpauSurfaceNV) callconv(.C) void;
pub extern var epoxy_glValidateProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glValidateProgramARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var epoxy_glValidateProgramPipeline: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glValidateProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var epoxy_glVariantArrayObjectATI: ?*const fn (GLuint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVariantPointerEXT: ?*const fn (GLuint, GLenum, GLuint, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVariantbvEXT: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVariantdvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVariantfvEXT: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVariantivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVariantsvEXT: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVariantubvEXT: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVariantuivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVariantusvEXT: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertex2bOES: ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex2bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex2hNV: ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex2hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertex2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertex2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertex2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertex2xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var epoxy_glVertex2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glVertex3bOES: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex3bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertex3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertex3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertex3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertex3xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glVertex3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glVertex4bOES: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex4bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertex4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertex4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertex4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertex4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertex4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertex4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertex4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertex4xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var epoxy_glVertex4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var epoxy_glVertexArrayAttribBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayAttribFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayAttribIFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayAttribLFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayBindVertexBufferEXT: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexArrayBindingDivisor: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayColorOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayEdgeFlagOffsetEXT: ?*const fn (GLuint, GLuint, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayElementBuffer: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayFogCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayIndexOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayMultiTexCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayNormalOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayParameteriAPPLE: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glVertexArrayRangeAPPLE: ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexArrayRangeNV: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexArraySecondaryColorOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayTexCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribBindingEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribDivisorEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribIFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribIOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribLFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribLOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexAttribOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexBindingDivisorEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexBuffer: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexBuffers: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexArrayVertexOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1d: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1dARB: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1dNV: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1f: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1fARB: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1fNV: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1hNV: ?*const fn (GLuint, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1s: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1sARB: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1sNV: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib1svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2d: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2dARB: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2dNV: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2f: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2fARB: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2fNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2s: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2sARB: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2sNV: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib2svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3dARB: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3dNV: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3f: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3fARB: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3fNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3s: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3sARB: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3sNV: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib3svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nbv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NbvARB: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Niv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NivARB: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nsv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NsvARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nub: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NubARB: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NubvARB: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nuiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NuivARB: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4Nusv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4NusvARB: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4bv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4bvARB: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4dARB: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4dNV: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4f: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4fARB: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4fNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4ivARB: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4s: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4sARB: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4sNV: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4ubNV: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4ubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4ubvARB: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4ubvNV: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4uivARB: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4usv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttrib4usvARB: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttribArrayObjectATI: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribBinding: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribDivisor: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribDivisorANGLE: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribDivisorARB: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribDivisorEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribDivisorNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribFormat: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribFormatNV: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1i: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1iEXT: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1ui: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1uiEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI1uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2i: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2iEXT: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2uiEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI2uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3i: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3iEXT: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3ui: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3uiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI3uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4bv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4bvEXT: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4i: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4svEXT: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4ubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4ubvEXT: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4ui: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4uiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4usv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttribI4usvEXT: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glVertexAttribIFormat: ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribIFormatNV: ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexAttribIPointer: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribIPointerEXT: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1d: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1dEXT: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1i64NV: ?*const fn (GLuint, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1ui64ARB: ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1ui64NV: ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1ui64vARB: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL1ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2d: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2dEXT: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL2ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3dEXT: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL3ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4dEXT: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribL4ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var epoxy_glVertexAttribLFormat: ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribLFormatNV: ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexAttribLPointer: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribLPointerEXT: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribP1ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP1uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP2ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP2uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP3ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP3uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP4ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribP4uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexAttribParameteriAMD: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glVertexAttribPointer: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribPointerARB: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribPointerNV: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexAttribs1dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribs1fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttribs1hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttribs1svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribs2dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribs2fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttribs2hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttribs2svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribs3dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribs3fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttribs3hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttribs3svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribs4dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexAttribs4fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexAttribs4hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexAttribs4svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexAttribs4ubvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glVertexBindingDivisor: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexBlendARB: ?*const fn (GLint) callconv(.C) void;
pub extern var epoxy_glVertexBlendEnvfATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexBlendEnviATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glVertexFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var epoxy_glVertexP2ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexP2uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var epoxy_glVertexP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glVertexPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var epoxy_glVertexPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexStream1dATI: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream1dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream1fATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream1fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream1iATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream1ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream1sATI: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream1svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream2dATI: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream2dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream2fATI: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream2fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream2iATI: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream2ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream2sATI: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream2svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream3dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream3dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream3fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream3fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream3iATI: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream3ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream3sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream3svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream4dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream4dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVertexStream4fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream4fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexStream4iATI: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream4ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glVertexStream4sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glVertexStream4svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glVertexWeightPointerEXT: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glVertexWeightfEXT: ?*const fn (GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexWeightfvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVertexWeighthNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVertexWeighthvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var epoxy_glVideoCaptureNV: ?*const fn (GLuint, [*c]GLuint, [*c]GLuint64EXT) callconv(.C) GLenum;
pub extern var epoxy_glVideoCaptureStreamParameterdvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glVideoCaptureStreamParameterfvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glVideoCaptureStreamParameterivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glViewport: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var epoxy_glViewportArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportArrayvOES: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedf: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedfNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedfOES: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedfv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedfvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportIndexedfvOES: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportPositionWScaleNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glViewportSwizzleNV: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var epoxy_glWaitSemaphoreEXT: ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub extern var epoxy_glWaitSemaphoreui64NVX: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var epoxy_glWaitSync: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub extern var epoxy_glWaitSyncAPPLE: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub extern var epoxy_glWaitVkSemaphoreNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var epoxy_glWeightPathsNV: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWeightPointerARB: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glWeightPointerOES: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var epoxy_glWeightbvARB: ?*const fn (GLint, [*c]const GLbyte) callconv(.C) void;
pub extern var epoxy_glWeightdvARB: ?*const fn (GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWeightfvARB: ?*const fn (GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWeightivARB: ?*const fn (GLint, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWeightsvARB: ?*const fn (GLint, [*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWeightubvARB: ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub extern var epoxy_glWeightuivARB: ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub extern var epoxy_glWeightusvARB: ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub extern var epoxy_glWindowPos2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2dARB: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2dMESA: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2dvARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2fARB: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2fMESA: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2fvARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2iARB: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2iMESA: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2ivARB: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos2sARB: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos2sMESA: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos2svARB: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos2svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3dARB: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3dMESA: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3dvARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3fARB: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3fMESA: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3fvARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3iARB: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3iMESA: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3ivARB: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3sARB: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3sMESA: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3svARB: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos3svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos4dMESA: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos4dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var epoxy_glWindowPos4fMESA: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos4fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var epoxy_glWindowPos4iMESA: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos4ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWindowPos4sMESA: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var epoxy_glWindowPos4svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var epoxy_glWindowRectanglesEXT: ?*const fn (GLenum, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var epoxy_glWriteMaskEXT: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern fn epoxy_has_gl_extension(extension: [*c]const u8) bool;
pub extern fn epoxy_is_desktop_gl() bool;
pub extern fn epoxy_gl_version() c_int;
pub extern fn epoxy_glsl_version() c_int;
pub const epoxy_resolver_stub_t = ?*const fn () callconv(.C) void;
pub const epoxy_resolver_failure_handler_t = ?*const fn ([*c]const u8) callconv(.C) epoxy_resolver_stub_t;
pub extern fn epoxy_set_resolver_failure_handler(handler: epoxy_resolver_failure_handler_t) epoxy_resolver_failure_handler_t;
pub const __block = @compileError("unable to translate macro: undefined identifier `__blocks__`"); // (no file):37:9
pub const __INTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `L`"); // (no file):92:9
pub const __UINTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `UL`"); // (no file):98:9
pub const __INT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `LL`"); // (no file):194:9
pub const __UINT32_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `U`"); // (no file):216:9
pub const __UINT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `ULL`"); // (no file):224:9
pub const __USER_LABEL_PREFIX__ = @compileError("unable to translate macro: undefined identifier `_`"); // (no file):315:9
pub const __nonnull = @compileError("unable to translate macro: undefined identifier `_Nonnull`"); // (no file):346:9
pub const __null_unspecified = @compileError("unable to translate macro: undefined identifier `_Null_unspecified`"); // (no file):347:9
pub const __nullable = @compileError("unable to translate macro: undefined identifier `_Nullable`"); // (no file):348:9
pub const __weak = @compileError("unable to translate macro: undefined identifier `objc_gc`"); // (no file):407:9
pub const __CONCAT = @compileError("unable to translate C expr: unexpected token '##'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:113:9
pub const __STRING = @compileError("unable to translate C expr: unexpected token '#'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:114:9
pub const __const = @compileError("unable to translate C expr: unexpected token 'const'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:116:9
pub const __volatile = @compileError("unable to translate C expr: unexpected token 'volatile'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:118:9
pub const __dead2 = @compileError("unable to translate macro: undefined identifier `__noreturn__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:162:9
pub const __pure2 = @compileError("unable to translate C expr: unexpected token '__attribute__'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:163:9
pub const __stateful_pure = @compileError("unable to translate macro: undefined identifier `__pure__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:164:9
pub const __unused = @compileError("unable to translate macro: undefined identifier `__unused__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:169:9
pub const __used = @compileError("unable to translate macro: undefined identifier `__used__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:174:9
pub const __cold = @compileError("unable to translate macro: undefined identifier `__cold__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:180:9
pub const __returns_nonnull = @compileError("unable to translate macro: undefined identifier `returns_nonnull`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:187:9
pub const __exported = @compileError("unable to translate macro: undefined identifier `__visibility__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:197:9
pub const __exported_push = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:198:9
pub const __exported_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:199:9
pub const __deprecated = @compileError("unable to translate macro: undefined identifier `__deprecated__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:211:9
pub const __deprecated_msg = @compileError("unable to translate macro: undefined identifier `__deprecated__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:215:10
pub const __kpi_deprecated = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:226:9
pub const __unavailable = @compileError("unable to translate macro: undefined identifier `__unavailable__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:232:9
pub const __restrict = @compileError("unable to translate C expr: unexpected token 'restrict'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:254:9
pub const __disable_tail_calls = @compileError("unable to translate macro: undefined identifier `__disable_tail_calls__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:287:9
pub const __not_tail_called = @compileError("unable to translate macro: undefined identifier `__not_tail_called__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:299:9
pub const __result_use_check = @compileError("unable to translate macro: undefined identifier `__warn_unused_result__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:310:9
pub const __swift_unavailable = @compileError("unable to translate macro: undefined identifier `__availability__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:320:9
pub const __header_inline = @compileError("unable to translate C expr: unexpected token 'inline'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:354:10
pub const __header_always_inline = @compileError("unable to translate macro: undefined identifier `__always_inline__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:367:10
pub const __unreachable_ok_push = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:380:10
pub const __unreachable_ok_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:383:10
pub const __printflike = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:404:9
pub const __printf0like = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:406:9
pub const __scanflike = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:408:9
pub const __osloglike = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:410:9
pub const __IDSTRING = @compileError("unable to translate C expr: unexpected token 'static'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:413:9
pub const __COPYRIGHT = @compileError("unable to translate macro: undefined identifier `copyright`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:416:9
pub const __RCSID = @compileError("unable to translate macro: undefined identifier `rcsid`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:420:9
pub const __SCCSID = @compileError("unable to translate macro: undefined identifier `sccsid`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:424:9
pub const __PROJECT_VERSION = @compileError("unable to translate macro: undefined identifier `project_version`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:428:9
pub const __FBSDID = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:433:9
pub const __DECONST = @compileError("unable to translate C expr: unexpected token 'const'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:437:9
pub const __DEVOLATILE = @compileError("unable to translate C expr: unexpected token 'volatile'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:441:9
pub const __DEQUALIFY = @compileError("unable to translate C expr: unexpected token 'const'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:445:9
pub const __alloc_align = @compileError("unable to translate macro: undefined identifier `alloc_align`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:454:9
pub const __alloc_size = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:475:9
pub const __DARWIN_ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:660:9
pub const __DARWIN_ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:661:9
pub const __DARWIN_ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:662:9
pub const __DARWIN_NOCANCEL = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:663:9
pub const __DARWIN_INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:664:9
pub const __DARWIN_1050 = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:666:9
pub const __DARWIN_1050ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:667:9
pub const __DARWIN_1050ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:668:9
pub const __DARWIN_1050ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:669:9
pub const __DARWIN_1050INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:670:9
pub const __DARWIN_EXTSN = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:672:9
pub const __DARWIN_EXTSN_C = @compileError("unable to translate C expr: unexpected token '__asm'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:673:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:35:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:41:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:47:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:53:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:59:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:65:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:71:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:77:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:83:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:89:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:95:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:101:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:107:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:113:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:119:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:125:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:131:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:137:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:143:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:149:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:155:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:161:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:167:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:173:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:179:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:185:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:191:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:197:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:203:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:209:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:215:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:221:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:227:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:233:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:239:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:245:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:251:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:257:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:263:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:269:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:275:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:281:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:287:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:293:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_5 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:299:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_6 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:305:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_7 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:311:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:317:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:323:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:329:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:335:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_5 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:341:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:347:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_6 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:359:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_7 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:365:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_8 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:371:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:377:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:383:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:389:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:395:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:401:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_5 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:407:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_6 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:413:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:419:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_1 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:425:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_2 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:431:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_3 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:437:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_4 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:443:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_5 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:449:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_0 = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_symbol_aliasing.h:455:9
pub const __DARWIN_ALIAS_STARTING = @compileError("unable to translate macro: undefined identifier `__DARWIN_ALIAS_STARTING_MAC_`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:683:9
pub const __POSIX_C_DEPRECATED = @compileError("unable to translate macro: undefined identifier `___POSIX_C_DEPRECATED_STARTING_`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:746:9
pub const __CAST_AWAY_QUALIFIER = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:844:9
pub const __XNU_PRIVATE_EXTERN = @compileError("unable to translate macro: undefined identifier `visibility`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:858:9
pub const __counted_by = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:872:9
pub const __sized_by = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:873:9
pub const __ended_by = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:874:9
pub const __terminated_by = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:875:9
pub const __ptrcheck_abi_assume_single = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:885:9
pub const __ptrcheck_abi_assume_unsafe_indexable = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:886:9
pub const __unsafe_terminated_by_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:895:9
pub const __unsafe_null_terminated_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:896:9
pub const __compiler_barrier = @compileError("unable to translate C expr: unexpected token '__asm__'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:930:9
pub const __enum_open = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:933:9
pub const __enum_closed = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:934:9
pub const __enum_options = @compileError("unable to translate macro: undefined identifier `__flag_enum__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:941:9
pub const __enum_decl = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:954:9
pub const __enum_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:956:9
pub const __options_decl = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:958:9
pub const __options_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/cdefs.h:960:9
pub const __AVAILABILITY_INTERNAL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:137:9
pub const __AVAILABILITY_INTERNAL_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `deprecated`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:140:17
pub const __AVAILABILITY_INTERNAL_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `unavailable`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:149:9
pub const __AVAILABILITY_INTERNAL_WEAK_IMPORT = @compileError("unable to translate macro: undefined identifier `weak_import`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:150:9
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2831:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2832:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2833:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2835:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2839:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2841:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2846:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2850:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2851:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2853:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2857:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2859:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2863:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2865:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2870:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2874:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2875:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2877:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2881:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2883:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2887:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2889:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2894:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2899:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2903:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2905:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2909:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2911:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2915:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2917:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2921:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2923:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2927:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2929:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2933:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2935:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2939:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2941:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2945:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2947:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2951:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2952:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2953:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2954:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2955:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2956:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2958:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2962:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2964:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2969:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2973:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2974:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2976:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2980:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2982:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2986:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2988:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2993:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2997:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:2998:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3000:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3004:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3006:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3010:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3012:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3017:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3021:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3022:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3024:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3028:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3030:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3034:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3036:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3040:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3042:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3046:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3048:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3052:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3054:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3058:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3060:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3064:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3066:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3070:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3071:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3074:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3075:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3077:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3081:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3083:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3088:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3092:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3093:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3095:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3099:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3101:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3105:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3107:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3112:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3116:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3117:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3119:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3123:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3125:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3129:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3131:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3136:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3140:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3141:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3143:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3147:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3149:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3153:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3155:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3159:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3161:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3165:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3167:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3171:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3173:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3177:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3179:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3183:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3184:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3185:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3186:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3187:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3188:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3190:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3194:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3196:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3201:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3205:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3206:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3208:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3212:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3214:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3218:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3220:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3225:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3229:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3230:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3232:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3236:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3238:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3242:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3244:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3249:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3253:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3254:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3256:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3260:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3262:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3266:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3268:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3272:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3274:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3278:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3280:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3284:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3286:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3290:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3291:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3292:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEPRECATED__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3293:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3294:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3295:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3296:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3298:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3302:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3304:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3309:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3313:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3314:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3316:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3320:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3322:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3326:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3328:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3333:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3337:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3338:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3340:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3344:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3346:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3350:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3352:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3357:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3361:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3363:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3367:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3369:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3373:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3375:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3379:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3381:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3385:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3387:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3391:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3392:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3393:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3394:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3395:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3396:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3398:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3402:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3404:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3409:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3413:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3414:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3416:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3420:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3422:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3426:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3428:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3433:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3437:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3438:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3440:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3444:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3446:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3450:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3452:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3457:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3461:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3462:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3464:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3468:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3470:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3474:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3476:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3480:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3482:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3486:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3487:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3488:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3489:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3490:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3491:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3493:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3497:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3499:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3504:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3508:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3509:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3511:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3515:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3517:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3521:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3523:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3528:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3532:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3533:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3535:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3539:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3541:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3545:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3547:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3552:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_13_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3556:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3557:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3559:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3563:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3565:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3569:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3571:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3575:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3576:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3577:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3578:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3579:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3580:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3582:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3586:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3588:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3593:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3597:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3598:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3600:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3604:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3606:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3610:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3612:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3617:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3621:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3622:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3624:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3628:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3630:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3634:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3636:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3641:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3645:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3646:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3648:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3652:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3654:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3658:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3659:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3660:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3661:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3662:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3663:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3665:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3669:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3671:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3676:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3680:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3681:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3683:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3687:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3689:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3693:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3695:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3700:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3704:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3705:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3707:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3711:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3713:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3717:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3719:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3724:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3728:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3729:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3730:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3732:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3736:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3737:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3738:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3739:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3741:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3745:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3746:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3747:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3749:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3753:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3755:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3760:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3764:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3765:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3767:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3771:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3773:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3777:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3779:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3784:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3788:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3789:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3791:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3795:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3797:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3801:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3803:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3808:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3812:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3814:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3818:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3820:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3824:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3826:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3830:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3832:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3836:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3838:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3842:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3844:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3848:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3850:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3854:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3856:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3860:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3862:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3867:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3871:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3872:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3873:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3874:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3875:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3876:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3878:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3882:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3884:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3888:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3889:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3891:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3895:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3897:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3901:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3903:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3908:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3912:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3913:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3915:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3919:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3921:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3925:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3927:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3932:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3936:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3937:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3938:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3939:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3941:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3945:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3946:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3948:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3952:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3954:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3958:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3960:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3965:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3969:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3970:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3972:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3976:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3978:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3982:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3984:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3989:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3993:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3994:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3995:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3996:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3997:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:3999:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4003:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4005:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4010:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4014:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4015:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4017:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4021:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4023:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4027:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4029:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4034:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4038:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4039:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4041:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4045:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4047:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4051:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4053:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4058:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4062:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4064:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4068:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4069:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4070:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4071:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4075:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4079:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4081:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4085:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4087:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4091:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4092:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4094:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4098:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4100:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4104:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4106:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4111:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4115:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4116:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4117:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4118:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4120:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4124:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4126:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4130:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4131:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4133:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4137:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4139:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4143:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4145:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4150:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4154:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4155:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4156:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4157:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4159:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4163:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4164:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4166:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4170:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4172:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4176:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4178:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4183:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4187:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4188:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4189:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4190:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4191:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4193:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4197:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4199:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4203:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4205:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4210:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4214:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4215:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4217:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4221:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4223:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4227:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4229:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4234:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4238:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4239:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4240:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4241:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4242:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4244:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4248:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4250:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4254:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4256:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4260:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4261:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4262:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4263:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4265:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4269:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4271:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4275:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4276:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4277:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4278:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4280:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4284:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4285:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4286:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4287:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4289:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4293:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4295:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4299:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4301:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4306:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4310:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4312:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4316:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4317:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4318:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4319:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4320:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4321:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4322:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4323:21
pub const __AVAILABILITY_INTERNAL__MAC_10_15 = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4324:21
pub const __AVAILABILITY_INTERNAL__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4326:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4327:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4328:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4330:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4331:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4332:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4333:21
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4336:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4337:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternalLegacy.h:4338:22
pub const __API_AVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:157:12
pub const __API_UNAVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:158:12
pub const __API_DEPRECATED_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:159:12
pub const __API_AVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:160:12
pub const __API_UNAVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:161:12
pub const __API_DEPRECATED_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:162:12
pub const __API_AVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:163:12
pub const __API_UNAVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:164:12
pub const __API_DEPRECATED_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:165:12
pub const __API_AVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:166:12
pub const __API_UNAVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:167:12
pub const __API_DEPRECATED_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:168:12
pub const __API_AVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:172:12
pub const __API_UNAVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:173:12
pub const __API_DEPRECATED_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:174:12
pub const __API_AVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:175:12
pub const __API_UNAVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:176:12
pub const __API_DEPRECATED_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:177:12
pub const __API_AVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:181:12
pub const __API_UNAVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:182:12
pub const __API_DEPRECATED_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:183:12
pub const __API_AVAILABLE_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:184:12
pub const __API_UNAVAILABLE_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:185:12
pub const __API_DEPRECATED_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:186:12
pub const __API_AVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:187:12
pub const __API_UNAVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:188:12
pub const __API_DEPRECATED_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `xros`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:189:12
pub const __API_APPLY_TO = @compileError("unable to translate macro: undefined identifier `any`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:195:11
pub const __API_RANGE_STRINGIFY2 = @compileError("unable to translate C expr: unexpected token '#'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:197:11
pub const __API_A = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:211:13
pub const __API_AVAILABLE_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:221:13
pub const __API_A_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:223:13
pub const __API_AVAILABLE_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:233:13
pub const __API_D = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:237:13
pub const __API_DEPRECATED_MSG_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:247:13
pub const __API_D_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:249:13
pub const __API_DEPRECATED_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:259:13
pub const __API_R = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:262:17
pub const __API_DEPRECATED_REP_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:275:13
pub const __API_R_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:278:17
pub const __API_DEPRECATED_BEGIN_REP_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:291:13
pub const __API_U = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:302:13
pub const __API_UNAVAILABLE_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:312:13
pub const __API_U_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:314:13
pub const __API_UNAVAILABLE_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:324:13
pub const __swift_compiler_version_at_least = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:346:13
pub const __SPI_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityInternal.h:354:11
pub const __OSX_AVAILABLE_STARTING = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:204:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:205:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:207:17
pub const __OS_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:230:13
pub const __OS_AVAILABILITY_MSG = @compileError("unable to translate macro: undefined identifier `availability`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:231:13
pub const __OSX_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx_app_extension`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:248:13
pub const __IOS_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios_app_extension`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:249:13
pub const __OSX_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:266:13
pub const __OSX_AVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:267:13
pub const __OSX_DEPRECATED = @compileError("unable to translate macro: undefined identifier `macosx`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:268:13
pub const __IOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:292:13
pub const __IOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:294:15
pub const __IOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:296:13
pub const __IOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `ios`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:297:13
pub const __TVOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:321:13
pub const __TVOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:323:15
pub const __TVOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:325:13
pub const __TVOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `tvos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:326:13
pub const __WATCHOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:350:13
pub const __WATCHOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:352:15
pub const __WATCHOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:354:13
pub const __WATCHOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `watchos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:355:13
pub const __SWIFT_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `swift`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:378:13
pub const __SWIFT_UNAVAILABLE_MSG = @compileError("unable to translate macro: undefined identifier `swift`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:379:13
pub const __API_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:422:13
pub const __API_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:424:13
pub const __API_AVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:425:13
pub const __API_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:443:13
pub const __API_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:444:13
pub const __API_DEPRECATED_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:446:13
pub const __API_DEPRECATED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:447:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:449:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_END = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:450:13
pub const __API_UNAVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:460:13
pub const __API_UNAVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:462:13
pub const __API_UNAVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:463:13
pub const __SPI_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:528:11
pub const __SPI_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/Availability.h:532:11
pub const __offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_types.h:83:9
pub const __strfmonlike = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/_types.h:31:9
pub const __strftimelike = @compileError("unable to translate macro: undefined identifier `__format__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/_types.h:33:9
pub const __sgetc = @compileError("TODO unary inc/dec expr"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdio.h:261:9
pub const __sclearerr = @compileError("unable to translate C expr: expected ')' instead got '&='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdio.h:285:9
pub const SIG_DFL = @compileError("unable to translate C expr: expected ')' instead got '('"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/signal.h:131:9
pub const SIG_IGN = @compileError("unable to translate C expr: expected ')' instead got '('"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/signal.h:132:9
pub const SIG_HOLD = @compileError("unable to translate C expr: expected ')' instead got '('"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/signal.h:133:9
pub const SIG_ERR = @compileError("unable to translate C expr: expected ')' instead got '('"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/signal.h:134:9
pub const __darwin_arm_thread_state64_set_pc_fptr = @compileError("unable to translate C expr: expected ')' instead got '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/mach/arm/_structs.h:406:9
pub const __darwin_arm_thread_state64_set_lr_fptr = @compileError("unable to translate C expr: expected ')' instead got '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/mach/arm/_structs.h:415:9
pub const __darwin_arm_thread_state64_set_sp = @compileError("unable to translate C expr: expected ')' instead got '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/mach/arm/_structs.h:421:9
pub const __darwin_arm_thread_state64_set_fp = @compileError("unable to translate C expr: expected ')' instead got '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/mach/arm/_structs.h:427:9
pub const sv_onstack = @compileError("unable to translate macro: undefined identifier `sv_flags`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/signal.h:361:9
pub const ru_first = @compileError("unable to translate macro: undefined identifier `ru_ixrss`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/resource.h:164:9
pub const ru_last = @compileError("unable to translate macro: undefined identifier `ru_nivcsw`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/resource.h:178:9
pub const __DARWIN_OS_INLINE = @compileError("unable to translate C expr: unexpected token 'static'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/libkern/_OSByteOrder.h:67:17
pub const NTOHL = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:144:9
pub const NTOHS = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:145:9
pub const NTOHLL = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:146:9
pub const HTONL = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:147:9
pub const HTONS = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:148:9
pub const HTONLL = @compileError("unable to translate C expr: unexpected token '='"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_endian.h:149:9
pub const w_termsig = @compileError("unable to translate macro: undefined identifier `w_T`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:231:9
pub const w_coredump = @compileError("unable to translate macro: undefined identifier `w_T`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:232:9
pub const w_retcode = @compileError("unable to translate macro: undefined identifier `w_T`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:233:9
pub const w_stopval = @compileError("unable to translate macro: undefined identifier `w_S`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:234:9
pub const w_stopsig = @compileError("unable to translate macro: undefined identifier `w_S`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/wait.h:235:9
pub const __alloca = @compileError("unable to translate macro: undefined identifier `__builtin_alloca`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/alloca.h:40:9
pub const _MALLOC_TYPE_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `macos`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/malloc/_malloc_type.h:40:9
pub const _MALLOC_TYPED = @compileError("unable to translate C expr: unexpected token ''"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/malloc/_malloc_type.h:81:9
pub const __bsearch_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:277:9
pub const __sort_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/stdlib.h:310:9
pub const STBIDEF = @compileError("unable to translate C expr: unexpected token 'extern'"); // /Users/corysmith/.cache/zig/p/1220ecb41379f34e01a3a1c0e8f6dc56a693f1b38419e2ab1db130451aa17af728eb/lib/stb_image.h:397:9
pub const WEAK_IMPORT_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `weak_import`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityMacros.h:137:13
pub const DEPRECATED_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `deprecated`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityMacros.h:149:17
pub const DEPRECATED_MSG_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `deprecated`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityMacros.h:151:21
pub const UNAVAILABLE_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `unavailable`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/AvailabilityMacros.h:175:13
pub const SDL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`"); // /opt/homebrew/include/SDL2/begin_code.h:38:13
pub const SDL_UNUSED = @compileError("unable to translate macro: undefined identifier `unused`"); // /opt/homebrew/include/SDL2/begin_code.h:48:13
pub const DECLSPEC = @compileError("unable to translate macro: undefined identifier `visibility`"); // /opt/homebrew/include/SDL2/begin_code.h:70:12
pub const SDL_INLINE = @compileError("unable to translate C expr: unexpected token '__inline__'"); // /opt/homebrew/include/SDL2/begin_code.h:122:9
pub const SDL_FORCE_INLINE = @compileError("unable to translate macro: undefined identifier `always_inline`"); // /opt/homebrew/include/SDL2/begin_code.h:143:9
pub const SDL_NORETURN = @compileError("unable to translate macro: undefined identifier `noreturn`"); // /opt/homebrew/include/SDL2/begin_code.h:151:9
pub const SDL_HAS_FALLTHROUGH = @compileError("unable to translate macro: undefined identifier `__has_attribute`"); // /opt/homebrew/include/SDL2/begin_code.h:176:9
pub const SDL_FALLTHROUGH = @compileError("unable to translate macro: undefined identifier `__fallthrough__`"); // /opt/homebrew/include/SDL2/begin_code.h:183:9
pub const __DARWIN_FD_ZERO = @compileError("unable to translate macro: undefined identifier `__builtin_bzero`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_types/_fd_def.h:115:9
pub const __DARWIN_FD_COPY = @compileError("unable to translate C expr: unexpected token '*'"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/sys/_types/_fd_def.h:120:9
pub const offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'"); // /Users/corysmith/zig/0.12.1/files/lib/include/stddef.h:116:9
pub const va_start = @compileError("unable to translate macro: undefined identifier `__builtin_va_start`"); // /Users/corysmith/zig/0.12.1/files/lib/include/stdarg.h:33:9
pub const va_end = @compileError("unable to translate macro: undefined identifier `__builtin_va_end`"); // /Users/corysmith/zig/0.12.1/files/lib/include/stdarg.h:35:9
pub const va_arg = @compileError("unable to translate C expr: unexpected token 'an identifier'"); // /Users/corysmith/zig/0.12.1/files/lib/include/stdarg.h:36:9
pub const __va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`"); // /Users/corysmith/zig/0.12.1/files/lib/include/stdarg.h:41:9
pub const va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`"); // /Users/corysmith/zig/0.12.1/files/lib/include/stdarg.h:46:9
pub const HUGE_VAL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_val`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:58:15
pub const HUGE_VALL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_vall`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:60:15
pub const fpclassify = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:127:9
pub const isnormal = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:150:9
pub const isfinite = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:155:9
pub const isinf = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:160:9
pub const isnan = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:165:9
pub const signbit = @compileError("unable to translate: TODO long double"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:170:9
pub const isgreater = @compileError("unable to translate macro: undefined identifier `__builtin_isgreater`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:544:9
pub const isgreaterequal = @compileError("unable to translate macro: undefined identifier `__builtin_isgreaterequal`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:545:9
pub const isless = @compileError("unable to translate macro: undefined identifier `__builtin_isless`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:546:9
pub const islessequal = @compileError("unable to translate macro: undefined identifier `__builtin_islessequal`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:547:9
pub const islessgreater = @compileError("unable to translate macro: undefined identifier `__builtin_islessgreater`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:548:9
pub const isunordered = @compileError("unable to translate macro: undefined identifier `__builtin_isunordered`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/math.h:549:9
pub const FLT_EVAL_METHOD = @compileError("unable to translate macro: undefined identifier `__FLT_EVAL_METHOD__`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/float.h:75:9
pub const FLT_ROUNDS = @compileError("unable to translate macro: undefined identifier `__builtin_flt_rounds`"); // /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/float.h:76:9
pub const SDL_arraysize = @compileError("unable to translate C expr: expected ')' instead got '['"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:134:9
pub const SDL_STRINGIFY_ARG = @compileError("unable to translate C expr: unexpected token '#'"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:142:9
pub const SDL_IN_BYTECAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:356:9
pub const SDL_INOUT_Z_CAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:357:9
pub const SDL_OUT_Z_CAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:358:9
pub const SDL_OUT_CAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:359:9
pub const SDL_OUT_BYTECAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:360:9
pub const SDL_OUT_Z_BYTECAP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:361:9
pub const SDL_PRINTF_VARARG_FUNC = @compileError("unable to translate macro: undefined identifier `format`"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:366:9
pub const SDL_PRINTF_VARARG_FUNCV = @compileError("unable to translate macro: undefined identifier `format`"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:367:9
pub const SDL_SCANF_VARARG_FUNC = @compileError("unable to translate macro: undefined identifier `format`"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:368:9
pub const SDL_SCANF_VARARG_FUNCV = @compileError("unable to translate macro: undefined identifier `format`"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:369:9
pub const SDL_COMPILE_TIME_ASSERT = @compileError("unable to translate C expr: unexpected token '_Static_assert'"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:384:9
pub const SDL_stack_alloc = @compileError("unable to translate C expr: unexpected token ')'"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:434:9
pub const SDL_stack_free = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:435:9
pub const SDL_zero = @compileError("unable to translate C expr: unexpected token '('"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:521:9
pub const SDL_zerop = @compileError("unable to translate C expr: unexpected token '*'"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:522:9
pub const SDL_zeroa = @compileError("unable to translate C expr: unexpected token '('"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:523:9
pub const SDL_copyp = @compileError("unable to translate C expr: unexpected token '{'"); // /opt/homebrew/include/SDL2/SDL_stdinc.h:525:9
pub const SDL_TriggerBreakpoint = @compileError("unable to translate macro: undefined identifier `__builtin_debugtrap`"); // /opt/homebrew/include/SDL2/SDL_assert.h:55:13
pub const SDL_FUNCTION = @compileError("unable to translate C expr: unexpected token 'an identifier'"); // /opt/homebrew/include/SDL2/SDL_assert.h:75:12
pub const SDL_FILE = @compileError("unable to translate macro: undefined identifier `__FILE__`"); // /opt/homebrew/include/SDL2/SDL_assert.h:81:9
pub const SDL_LINE = @compileError("unable to translate macro: undefined identifier `__LINE__`"); // /opt/homebrew/include/SDL2/SDL_assert.h:82:9
pub const SDL_disabled_assert = @compileError("unable to translate C expr: unexpected token 'do'"); // /opt/homebrew/include/SDL2/SDL_assert.h:107:9
pub const SDL_enabled_assert = @compileError("unable to translate macro: undefined identifier `sdl_assert_data`"); // /opt/homebrew/include/SDL2/SDL_assert.h:151:9
pub const SDL_CompilerBarrier = @compileError("unable to translate C expr: unexpected token '__asm__'"); // /opt/homebrew/include/SDL2/SDL_atomic.h:153:9
pub const SDL_MemoryBarrierRelease = @compileError("unable to translate C expr: unexpected token '__asm__'"); // /opt/homebrew/include/SDL2/SDL_atomic.h:190:9
pub const SDL_MemoryBarrierAcquire = @compileError("unable to translate C expr: unexpected token '__asm__'"); // /opt/homebrew/include/SDL2/SDL_atomic.h:191:9
pub const SDL_CPUPauseInstruction = @compileError("unable to translate C expr: unexpected token '__asm__'"); // /opt/homebrew/include/SDL2/SDL_atomic.h:244:13
pub const SDL_THREAD_ANNOTATION_ATTRIBUTE__ = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/SDL2/SDL_mutex.h:42:9
pub const SDL_CAPABILITY = @compileError("unable to translate macro: undefined identifier `capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:45:9
pub const SDL_SCOPED_CAPABILITY = @compileError("unable to translate macro: undefined identifier `scoped_lockable`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:48:9
pub const SDL_GUARDED_BY = @compileError("unable to translate macro: undefined identifier `guarded_by`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:51:9
pub const SDL_PT_GUARDED_BY = @compileError("unable to translate macro: undefined identifier `pt_guarded_by`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:54:9
pub const SDL_ACQUIRED_BEFORE = @compileError("unable to translate macro: undefined identifier `acquired_before`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:57:9
pub const SDL_ACQUIRED_AFTER = @compileError("unable to translate macro: undefined identifier `acquired_after`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:60:9
pub const SDL_REQUIRES = @compileError("unable to translate macro: undefined identifier `requires_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:63:9
pub const SDL_REQUIRES_SHARED = @compileError("unable to translate macro: undefined identifier `requires_shared_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:66:9
pub const SDL_ACQUIRE = @compileError("unable to translate macro: undefined identifier `acquire_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:69:9
pub const SDL_ACQUIRE_SHARED = @compileError("unable to translate macro: undefined identifier `acquire_shared_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:72:9
pub const SDL_RELEASE = @compileError("unable to translate macro: undefined identifier `release_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:75:9
pub const SDL_RELEASE_SHARED = @compileError("unable to translate macro: undefined identifier `release_shared_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:78:9
pub const SDL_RELEASE_GENERIC = @compileError("unable to translate macro: undefined identifier `release_generic_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:81:9
pub const SDL_TRY_ACQUIRE = @compileError("unable to translate macro: undefined identifier `try_acquire_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:84:9
pub const SDL_TRY_ACQUIRE_SHARED = @compileError("unable to translate macro: undefined identifier `try_acquire_shared_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:87:9
pub const SDL_EXCLUDES = @compileError("unable to translate macro: undefined identifier `locks_excluded`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:90:9
pub const SDL_ASSERT_CAPABILITY = @compileError("unable to translate macro: undefined identifier `assert_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:93:9
pub const SDL_ASSERT_SHARED_CAPABILITY = @compileError("unable to translate macro: undefined identifier `assert_shared_capability`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:96:9
pub const SDL_RETURN_CAPABILITY = @compileError("unable to translate macro: undefined identifier `lock_returned`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:99:9
pub const SDL_NO_THREAD_SAFETY_ANALYSIS = @compileError("unable to translate macro: undefined identifier `no_thread_safety_analysis`"); // /opt/homebrew/include/SDL2/SDL_mutex.h:102:9
pub const SDL_AUDIOCVT_PACKED = @compileError("unable to translate macro: undefined identifier `packed`"); // /opt/homebrew/include/SDL2/SDL_audio.h:226:9
pub const __ai = @compileError("unable to translate macro: undefined identifier `__always_inline__`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_bf16.h:15:9
pub const splat_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:457:9
pub const splat_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:480:9
pub const splat_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:487:9
pub const splatq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:511:9
pub const splatq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:535:9
pub const splatq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:558:9
pub const splatq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:582:9
pub const splatq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:606:9
pub const splatq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:630:9
pub const splatq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:653:9
pub const splatq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:677:9
pub const splatq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:701:9
pub const splatq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:724:9
pub const splatq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:748:9
pub const splatq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:772:9
pub const splatq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:796:9
pub const splatq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:819:9
pub const splat_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:843:9
pub const splat_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:867:9
pub const splat_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:890:9
pub const splat_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:897:9
pub const splat_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:921:9
pub const splat_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:944:9
pub const splat_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:951:9
pub const splat_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:975:9
pub const splat_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:999:9
pub const splat_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1022:9
pub const splat_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1029:9
pub const splat_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1053:9
pub const splat_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1077:9
pub const splat_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1100:9
pub const splatq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1124:9
pub const splatq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1148:9
pub const splatq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1172:9
pub const splatq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1196:9
pub const splatq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1220:9
pub const splatq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1244:9
pub const splatq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1268:9
pub const splatq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1292:9
pub const splatq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1316:9
pub const splatq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1340:9
pub const splatq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1364:9
pub const splatq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1388:9
pub const splatq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1412:9
pub const splatq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1436:9
pub const splat_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1460:9
pub const splat_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1484:9
pub const splat_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1508:9
pub const splat_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1531:9
pub const splat_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1555:9
pub const splat_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1579:9
pub const splat_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1602:9
pub const splat_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1626:9
pub const splat_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1650:9
pub const splat_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1674:9
pub const splat_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:1697:9
pub const vcreate_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5596:9
pub const vcreate_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5602:9
pub const vcreate_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5608:9
pub const vcreate_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5614:9
pub const vcreate_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5620:9
pub const vcreate_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5626:9
pub const vcreate_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5632:9
pub const vcreate_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5638:9
pub const vcreate_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5644:9
pub const vcreate_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5650:9
pub const vcreate_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5656:9
pub const vcreate_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5662:9
pub const vcvtq_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5733:9
pub const vcvtq_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5751:9
pub const vcvt_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5769:9
pub const vcvt_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5787:9
pub const vcvtq_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5805:9
pub const vcvt_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5823:9
pub const vcvtq_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5841:9
pub const vcvt_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5859:9
pub const vdup_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_0`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5941:9
pub const vdup_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_2`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5959:9
pub const vdupq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_4`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5977:9
pub const vdupq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_6`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:5995:9
pub const vdupq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_8`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6013:9
pub const vdupq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_10`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6031:9
pub const vdupq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_12`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6049:9
pub const vdupq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_14`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6066:9
pub const vdupq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_16`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6084:9
pub const vdupq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_18`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6102:9
pub const vdupq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_20`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6120:9
pub const vdupq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_22`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6138:9
pub const vdupq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_24`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6156:9
pub const vdupq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_26`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6173:9
pub const vdup_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_28`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6191:9
pub const vdup_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_30`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6209:9
pub const vdup_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_32`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6226:9
pub const vdup_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_33`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6233:9
pub const vdup_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_35`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6251:9
pub const vdup_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_37`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6269:9
pub const vdup_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_39`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6287:9
pub const vdup_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_41`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6305:9
pub const vdup_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_43`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6322:9
pub const vdup_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_44`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6329:9
pub const vdupq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6497:9
pub const vdup_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6639:9
pub const vext_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6939:9
pub const vext_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6960:9
pub const vextq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:6981:9
pub const vextq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7002:9
pub const vextq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7023:9
pub const vextq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7044:9
pub const vextq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7065:9
pub const vextq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7086:9
pub const vextq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7107:9
pub const vextq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7128:9
pub const vextq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7149:9
pub const vextq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7170:9
pub const vextq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7191:9
pub const vext_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7212:9
pub const vext_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7233:9
pub const vext_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7253:9
pub const vext_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7261:9
pub const vext_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7282:9
pub const vext_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7303:9
pub const vext_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7324:9
pub const vext_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7344:9
pub const vext_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7352:9
pub const vget_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7608:9
pub const vget_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7631:9
pub const vgetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7654:9
pub const vgetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7677:9
pub const vgetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7700:9
pub const vgetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7723:9
pub const vgetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7746:9
pub const vgetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7769:9
pub const vgetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7792:9
pub const vgetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7815:9
pub const vgetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7838:9
pub const vgetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7861:9
pub const vgetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7884:9
pub const vget_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7907:9
pub const vget_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7930:9
pub const vget_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7952:9
pub const vget_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7959:9
pub const vget_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:7982:9
pub const vget_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8005:9
pub const vget_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8028:9
pub const vget_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8050:9
pub const vget_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8057:9
pub const vld1_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8678:9
pub const vld1_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8693:9
pub const vld1q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8708:9
pub const vld1q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8723:9
pub const vld1q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8738:9
pub const vld1q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8753:9
pub const vld1q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8768:9
pub const vld1q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8783:9
pub const vld1q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8798:9
pub const vld1q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8813:9
pub const vld1q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8828:9
pub const vld1q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8843:9
pub const vld1q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8858:9
pub const vld1_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8873:9
pub const vld1_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8888:9
pub const vld1_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8902:9
pub const vld1_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8908:9
pub const vld1_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8923:9
pub const vld1_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8938:9
pub const vld1_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8953:9
pub const vld1_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8967:9
pub const vld1_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8973:9
pub const vld1_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:8988:9
pub const vld1_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9003:9
pub const vld1q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9018:9
pub const vld1q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9033:9
pub const vld1q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9048:9
pub const vld1q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9063:9
pub const vld1q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9078:9
pub const vld1q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9093:9
pub const vld1q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9108:9
pub const vld1q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9123:9
pub const vld1q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9138:9
pub const vld1q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9153:9
pub const vld1q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9168:9
pub const vld1_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9183:9
pub const vld1_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9198:9
pub const vld1_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9212:9
pub const vld1_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9218:9
pub const vld1_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9233:9
pub const vld1_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9248:9
pub const vld1_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9263:9
pub const vld1_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9277:9
pub const vld1_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9283:9
pub const vld1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9298:9
pub const vld1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9316:9
pub const vld1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9334:9
pub const vld1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9352:9
pub const vld1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9370:9
pub const vld1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9388:9
pub const vld1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9406:9
pub const vld1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9424:9
pub const vld1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9442:9
pub const vld1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9460:9
pub const vld1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9478:9
pub const vld1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9496:9
pub const vld1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9514:9
pub const vld1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9532:9
pub const vld1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9550:9
pub const vld1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9567:9
pub const vld1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9574:9
pub const vld1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9592:9
pub const vld1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9610:9
pub const vld1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9628:9
pub const vld1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9645:9
pub const vld1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9652:9
pub const vld1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9670:9
pub const vld1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9687:9
pub const vld1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9704:9
pub const vld1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9721:9
pub const vld1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9738:9
pub const vld1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9755:9
pub const vld1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9772:9
pub const vld1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9789:9
pub const vld1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9806:9
pub const vld1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9823:9
pub const vld1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9840:9
pub const vld1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9857:9
pub const vld1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9874:9
pub const vld1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9891:9
pub const vld1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9908:9
pub const vld1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9924:9
pub const vld1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9930:9
pub const vld1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9947:9
pub const vld1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9964:9
pub const vld1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9981:9
pub const vld1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:9997:9
pub const vld1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10003:9
pub const vld1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10020:9
pub const vld1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10038:9
pub const vld1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10056:9
pub const vld1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10074:9
pub const vld1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10092:9
pub const vld1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10110:9
pub const vld1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10128:9
pub const vld1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10146:9
pub const vld1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10164:9
pub const vld1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10182:9
pub const vld1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10200:9
pub const vld1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10218:9
pub const vld1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10236:9
pub const vld1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10254:9
pub const vld1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10272:9
pub const vld1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10289:9
pub const vld1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10295:9
pub const vld1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10313:9
pub const vld1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10331:9
pub const vld1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10349:9
pub const vld1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10366:9
pub const vld1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10372:9
pub const vld1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10390:9
pub const vld1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10409:9
pub const vld1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10428:9
pub const vld1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10447:9
pub const vld1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10466:9
pub const vld1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10485:9
pub const vld1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10504:9
pub const vld1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10523:9
pub const vld1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10542:9
pub const vld1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10561:9
pub const vld1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10580:9
pub const vld1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10599:9
pub const vld1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10618:9
pub const vld1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10637:9
pub const vld1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10656:9
pub const vld1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10674:9
pub const vld1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10680:9
pub const vld1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10699:9
pub const vld1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10718:9
pub const vld1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10737:9
pub const vld1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10755:9
pub const vld1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10761:9
pub const vld2_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10780:9
pub const vld2_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10797:9
pub const vld2q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10814:9
pub const vld2q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10831:9
pub const vld2q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10848:9
pub const vld2q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10865:9
pub const vld2q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10882:9
pub const vld2q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10899:9
pub const vld2q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10916:9
pub const vld2q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10933:9
pub const vld2q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10950:9
pub const vld2_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10967:9
pub const vld2_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:10984:9
pub const vld2_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11000:9
pub const vld2_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11006:9
pub const vld2_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11023:9
pub const vld2_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11040:9
pub const vld2_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11057:9
pub const vld2_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11073:9
pub const vld2_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11079:9
pub const vld2_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11096:9
pub const vld2_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11113:9
pub const vld2q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11130:9
pub const vld2q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11147:9
pub const vld2q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11164:9
pub const vld2q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11181:9
pub const vld2q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11198:9
pub const vld2q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11215:9
pub const vld2q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11232:9
pub const vld2q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11249:9
pub const vld2q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11266:9
pub const vld2q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11283:9
pub const vld2q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11300:9
pub const vld2_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11317:9
pub const vld2_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11334:9
pub const vld2_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11350:9
pub const vld2_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11356:9
pub const vld2_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11373:9
pub const vld2_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11390:9
pub const vld2_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11407:9
pub const vld2_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11423:9
pub const vld2_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11429:9
pub const vld2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11446:9
pub const vld2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11468:9
pub const vld2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11490:9
pub const vld2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11512:9
pub const vld2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11534:9
pub const vld2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11556:9
pub const vld2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11578:9
pub const vld2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11600:9
pub const vld2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11622:9
pub const vld2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11644:9
pub const vld2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11666:9
pub const vld2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11688:9
pub const vld2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11710:9
pub const vld2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11732:9
pub const vld2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11754:9
pub const vld3_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11776:9
pub const vld3_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11794:9
pub const vld3q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11812:9
pub const vld3q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11830:9
pub const vld3q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11848:9
pub const vld3q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11866:9
pub const vld3q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11884:9
pub const vld3q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11902:9
pub const vld3q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11920:9
pub const vld3q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11938:9
pub const vld3q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11956:9
pub const vld3_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11974:9
pub const vld3_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:11992:9
pub const vld3_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12009:9
pub const vld3_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12015:9
pub const vld3_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12033:9
pub const vld3_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12051:9
pub const vld3_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12069:9
pub const vld3_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12086:9
pub const vld3_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12092:9
pub const vld3_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12110:9
pub const vld3_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12128:9
pub const vld3q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12146:9
pub const vld3q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12164:9
pub const vld3q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12182:9
pub const vld3q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12200:9
pub const vld3q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12218:9
pub const vld3q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12236:9
pub const vld3q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12254:9
pub const vld3q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12272:9
pub const vld3q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12290:9
pub const vld3q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12308:9
pub const vld3q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12326:9
pub const vld3_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12344:9
pub const vld3_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12362:9
pub const vld3_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12379:9
pub const vld3_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12385:9
pub const vld3_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12403:9
pub const vld3_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12421:9
pub const vld3_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12439:9
pub const vld3_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12456:9
pub const vld3_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12462:9
pub const vld3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12480:9
pub const vld3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12504:9
pub const vld3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12528:9
pub const vld3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12552:9
pub const vld3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12576:9
pub const vld3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12600:9
pub const vld3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12624:9
pub const vld3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12648:9
pub const vld3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12672:9
pub const vld3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12696:9
pub const vld3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12720:9
pub const vld3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12744:9
pub const vld3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12768:9
pub const vld3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12792:9
pub const vld3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12816:9
pub const vld4_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12840:9
pub const vld4_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12859:9
pub const vld4q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12878:9
pub const vld4q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12897:9
pub const vld4q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12916:9
pub const vld4q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12935:9
pub const vld4q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12954:9
pub const vld4q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12973:9
pub const vld4q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:12992:9
pub const vld4q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13011:9
pub const vld4q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13030:9
pub const vld4_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13049:9
pub const vld4_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13068:9
pub const vld4_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13086:9
pub const vld4_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13092:9
pub const vld4_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13111:9
pub const vld4_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13130:9
pub const vld4_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13149:9
pub const vld4_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13167:9
pub const vld4_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13173:9
pub const vld4_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13192:9
pub const vld4_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13211:9
pub const vld4q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13230:9
pub const vld4q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13249:9
pub const vld4q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13268:9
pub const vld4q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13287:9
pub const vld4q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13306:9
pub const vld4q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13325:9
pub const vld4q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13344:9
pub const vld4q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13363:9
pub const vld4q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13382:9
pub const vld4q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13401:9
pub const vld4q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13420:9
pub const vld4_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13439:9
pub const vld4_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13458:9
pub const vld4_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13476:9
pub const vld4_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13482:9
pub const vld4_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13501:9
pub const vld4_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13520:9
pub const vld4_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13539:9
pub const vld4_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13557:9
pub const vld4_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13563:9
pub const vld4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13582:9
pub const vld4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13608:9
pub const vld4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13634:9
pub const vld4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13660:9
pub const vld4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13686:9
pub const vld4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13712:9
pub const vld4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13738:9
pub const vld4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13764:9
pub const vld4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13790:9
pub const vld4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13816:9
pub const vld4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13842:9
pub const vld4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13868:9
pub const vld4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13894:9
pub const vld4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13920:9
pub const vld4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:13946:9
pub const vmlaq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_46`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14700:9
pub const vmlaq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_48`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14724:9
pub const vmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_50`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14748:9
pub const vmlaq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_52`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14772:9
pub const vmlaq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_54`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14796:9
pub const vmla_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_56`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14820:9
pub const vmla_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_58`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14844:9
pub const vmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_60`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14868:9
pub const vmla_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_62`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14892:9
pub const vmla_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_64`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:14916:9
pub const vmlsq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_66`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15362:9
pub const vmlsq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_68`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15386:9
pub const vmlsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_70`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15410:9
pub const vmlsq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_72`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15434:9
pub const vmlsq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_74`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15458:9
pub const vmls_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_76`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15482:9
pub const vmls_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_78`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15506:9
pub const vmls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_80`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15530:9
pub const vmls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_82`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15554:9
pub const vmls_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_84`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15578:9
pub const vmovq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:15922:9
pub const vmov_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16064:9
pub const vmulq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_86`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16640:9
pub const vmulq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_88`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16661:9
pub const vmulq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_90`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16682:9
pub const vmulq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_92`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16703:9
pub const vmulq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_94`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16724:9
pub const vmul_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_96`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16745:9
pub const vmul_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_98`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16766:9
pub const vmul_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_100`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16787:9
pub const vmul_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_102`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16808:9
pub const vmul_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_104`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:16829:9
pub const vmull_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_106`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17164:9
pub const vmull_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_108`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17185:9
pub const vmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_110`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17206:9
pub const vmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_112`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:17227:9
pub const vqdmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_114`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19317:9
pub const vqdmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_116`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19341:9
pub const vqdmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_118`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19455:9
pub const vqdmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_120`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19479:9
pub const vqdmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_122`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19743:9
pub const vqdmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_124`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:19764:9
pub const vqrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20512:9
pub const vqrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20536:9
pub const vqrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20560:9
pub const vqrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20584:9
pub const vqrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20608:9
pub const vqrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20632:9
pub const vqrshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20656:9
pub const vqrshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20680:9
pub const vqrshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20704:9
pub const vqshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20976:9
pub const vqshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:20994:9
pub const vqshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21012:9
pub const vqshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21030:9
pub const vqshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21048:9
pub const vqshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21066:9
pub const vqshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21084:9
pub const vqshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21102:9
pub const vqshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21120:9
pub const vqshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21138:9
pub const vqshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21155:9
pub const vqshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21162:9
pub const vqshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21180:9
pub const vqshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21198:9
pub const vqshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21215:9
pub const vqshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21222:9
pub const vqshluq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21240:9
pub const vqshluq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21258:9
pub const vqshluq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21276:9
pub const vqshluq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21294:9
pub const vqshlu_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21312:9
pub const vqshlu_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21330:9
pub const vqshlu_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21347:9
pub const vqshlu_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21354:9
pub const vqshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21372:9
pub const vqshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21396:9
pub const vqshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21420:9
pub const vqshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21444:9
pub const vqshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21468:9
pub const vqshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21492:9
pub const vqshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21516:9
pub const vqshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21540:9
pub const vqshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:21564:9
pub const vrshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23094:9
pub const vrshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23112:9
pub const vrshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23130:9
pub const vrshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23148:9
pub const vrshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23166:9
pub const vrshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23184:9
pub const vrshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23202:9
pub const vrshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23220:9
pub const vrshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23238:9
pub const vrshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23256:9
pub const vrshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23273:9
pub const vrshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23280:9
pub const vrshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23298:9
pub const vrshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23316:9
pub const vrshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23333:9
pub const vrshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23340:9
pub const vrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23358:9
pub const vrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23382:9
pub const vrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23406:9
pub const vrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23430:9
pub const vrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23454:9
pub const vrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23478:9
pub const vrsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23600:9
pub const vrsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23621:9
pub const vrsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23642:9
pub const vrsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23663:9
pub const vrsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23684:9
pub const vrsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23705:9
pub const vrsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23726:9
pub const vrsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23747:9
pub const vrsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23768:9
pub const vrsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23789:9
pub const vrsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23809:9
pub const vrsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23817:9
pub const vrsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23838:9
pub const vrsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23859:9
pub const vrsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23879:9
pub const vrsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:23887:9
pub const vset_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24040:9
pub const vset_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24067:9
pub const vsetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24094:9
pub const vsetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24121:9
pub const vsetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24148:9
pub const vsetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24175:9
pub const vsetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24202:9
pub const vsetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24229:9
pub const vsetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24256:9
pub const vsetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24283:9
pub const vsetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24310:9
pub const vsetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24337:9
pub const vsetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24364:9
pub const vset_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24391:9
pub const vset_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24418:9
pub const vset_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24444:9
pub const vset_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24452:9
pub const vset_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24479:9
pub const vset_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24506:9
pub const vset_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24533:9
pub const vset_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24559:9
pub const vset_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24567:9
pub const vshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24842:9
pub const vshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24860:9
pub const vshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24878:9
pub const vshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24896:9
pub const vshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24914:9
pub const vshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24932:9
pub const vshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24950:9
pub const vshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24968:9
pub const vshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:24986:9
pub const vshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25004:9
pub const vshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25021:9
pub const vshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25028:9
pub const vshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25046:9
pub const vshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25064:9
pub const vshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25081:9
pub const vshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25088:9
pub const vshll_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25106:9
pub const vshll_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25130:9
pub const vshll_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25154:9
pub const vshll_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25178:9
pub const vshll_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25202:9
pub const vshll_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25226:9
pub const vshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25250:9
pub const vshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25268:9
pub const vshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25286:9
pub const vshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25304:9
pub const vshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25322:9
pub const vshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25340:9
pub const vshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25358:9
pub const vshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25376:9
pub const vshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25394:9
pub const vshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25412:9
pub const vshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25429:9
pub const vshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25436:9
pub const vshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25454:9
pub const vshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25472:9
pub const vshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25489:9
pub const vshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25496:9
pub const vshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25514:9
pub const vshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25538:9
pub const vshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25562:9
pub const vshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25586:9
pub const vshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25610:9
pub const vshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25634:9
pub const vsli_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25658:9
pub const vsli_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25679:9
pub const vsliq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25700:9
pub const vsliq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25721:9
pub const vsliq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25742:9
pub const vsliq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25763:9
pub const vsliq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25784:9
pub const vsliq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25805:9
pub const vsliq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25826:9
pub const vsliq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25847:9
pub const vsliq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25868:9
pub const vsliq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25889:9
pub const vsli_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25910:9
pub const vsli_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25931:9
pub const vsli_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25951:9
pub const vsli_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25959:9
pub const vsli_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:25980:9
pub const vsli_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26001:9
pub const vsli_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26021:9
pub const vsli_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26029:9
pub const vsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26050:9
pub const vsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26071:9
pub const vsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26092:9
pub const vsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26113:9
pub const vsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26134:9
pub const vsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26155:9
pub const vsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26176:9
pub const vsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26197:9
pub const vsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26218:9
pub const vsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26239:9
pub const vsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26259:9
pub const vsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26267:9
pub const vsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26288:9
pub const vsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26309:9
pub const vsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26329:9
pub const vsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26337:9
pub const vsri_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26358:9
pub const vsri_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26379:9
pub const vsriq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26400:9
pub const vsriq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26421:9
pub const vsriq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26442:9
pub const vsriq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26463:9
pub const vsriq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26484:9
pub const vsriq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26505:9
pub const vsriq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26526:9
pub const vsriq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26547:9
pub const vsriq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26568:9
pub const vsriq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26589:9
pub const vsri_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26610:9
pub const vsri_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26631:9
pub const vsri_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26651:9
pub const vsri_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26659:9
pub const vsri_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26680:9
pub const vsri_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26701:9
pub const vsri_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26721:9
pub const vsri_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26729:9
pub const vst1_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26750:9
pub const vst1_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26763:9
pub const vst1q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26776:9
pub const vst1q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26789:9
pub const vst1q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26802:9
pub const vst1q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26815:9
pub const vst1q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26828:9
pub const vst1q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26841:9
pub const vst1q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26854:9
pub const vst1q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26867:9
pub const vst1q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26880:9
pub const vst1q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26893:9
pub const vst1q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26906:9
pub const vst1_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26919:9
pub const vst1_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26932:9
pub const vst1_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26944:9
pub const vst1_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26949:9
pub const vst1_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26962:9
pub const vst1_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26975:9
pub const vst1_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:26988:9
pub const vst1_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27000:9
pub const vst1_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27005:9
pub const vst1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27018:9
pub const vst1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27031:9
pub const vst1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27044:9
pub const vst1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27057:9
pub const vst1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27070:9
pub const vst1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27083:9
pub const vst1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27096:9
pub const vst1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27109:9
pub const vst1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27122:9
pub const vst1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27135:9
pub const vst1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27148:9
pub const vst1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27161:9
pub const vst1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27174:9
pub const vst1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27187:9
pub const vst1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27200:9
pub const vst1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27212:9
pub const vst1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27217:9
pub const vst1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27230:9
pub const vst1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27243:9
pub const vst1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27256:9
pub const vst1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27268:9
pub const vst1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27273:9
pub const vst1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27286:9
pub const vst1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27301:9
pub const vst1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27316:9
pub const vst1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27331:9
pub const vst1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27346:9
pub const vst1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27361:9
pub const vst1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27376:9
pub const vst1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27391:9
pub const vst1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27406:9
pub const vst1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27421:9
pub const vst1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27436:9
pub const vst1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27451:9
pub const vst1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27466:9
pub const vst1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27481:9
pub const vst1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27496:9
pub const vst1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27510:9
pub const vst1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27515:9
pub const vst1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27530:9
pub const vst1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27545:9
pub const vst1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27560:9
pub const vst1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27574:9
pub const vst1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27579:9
pub const vst1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27594:9
pub const vst1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27610:9
pub const vst1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27626:9
pub const vst1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27642:9
pub const vst1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27658:9
pub const vst1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27674:9
pub const vst1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27690:9
pub const vst1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27706:9
pub const vst1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27722:9
pub const vst1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27738:9
pub const vst1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27754:9
pub const vst1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27770:9
pub const vst1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27786:9
pub const vst1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27802:9
pub const vst1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27818:9
pub const vst1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27833:9
pub const vst1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27838:9
pub const vst1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27854:9
pub const vst1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27870:9
pub const vst1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27886:9
pub const vst1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27901:9
pub const vst1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27906:9
pub const vst1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27922:9
pub const vst1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27939:9
pub const vst1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27956:9
pub const vst1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27973:9
pub const vst1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:27990:9
pub const vst1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28007:9
pub const vst1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28024:9
pub const vst1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28041:9
pub const vst1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28058:9
pub const vst1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28075:9
pub const vst1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28092:9
pub const vst1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28109:9
pub const vst1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28126:9
pub const vst1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28143:9
pub const vst1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28160:9
pub const vst1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28176:9
pub const vst1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28181:9
pub const vst1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28198:9
pub const vst1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28215:9
pub const vst1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28232:9
pub const vst1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28248:9
pub const vst1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28253:9
pub const vst2_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28270:9
pub const vst2_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28285:9
pub const vst2q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28300:9
pub const vst2q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28315:9
pub const vst2q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28330:9
pub const vst2q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28345:9
pub const vst2q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28360:9
pub const vst2q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28375:9
pub const vst2q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28390:9
pub const vst2q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28405:9
pub const vst2q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28420:9
pub const vst2_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28435:9
pub const vst2_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28450:9
pub const vst2_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28464:9
pub const vst2_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28469:9
pub const vst2_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28484:9
pub const vst2_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28499:9
pub const vst2_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28514:9
pub const vst2_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28528:9
pub const vst2_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28533:9
pub const vst2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28548:9
pub const vst2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28563:9
pub const vst2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28578:9
pub const vst2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28593:9
pub const vst2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28608:9
pub const vst2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28623:9
pub const vst2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28638:9
pub const vst2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28653:9
pub const vst2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28668:9
pub const vst2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28683:9
pub const vst2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28698:9
pub const vst2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28713:9
pub const vst2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28728:9
pub const vst2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28743:9
pub const vst2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28758:9
pub const vst3_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28773:9
pub const vst3_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28789:9
pub const vst3q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28805:9
pub const vst3q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28821:9
pub const vst3q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28837:9
pub const vst3q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28853:9
pub const vst3q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28869:9
pub const vst3q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28885:9
pub const vst3q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28901:9
pub const vst3q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28917:9
pub const vst3q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28933:9
pub const vst3_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28949:9
pub const vst3_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28965:9
pub const vst3_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28980:9
pub const vst3_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:28985:9
pub const vst3_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29001:9
pub const vst3_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29017:9
pub const vst3_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29033:9
pub const vst3_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29048:9
pub const vst3_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29053:9
pub const vst3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29069:9
pub const vst3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29085:9
pub const vst3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29101:9
pub const vst3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29117:9
pub const vst3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29133:9
pub const vst3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29149:9
pub const vst3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29165:9
pub const vst3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29181:9
pub const vst3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29197:9
pub const vst3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29213:9
pub const vst3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29229:9
pub const vst3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29245:9
pub const vst3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29261:9
pub const vst3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29277:9
pub const vst3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29293:9
pub const vst4_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29309:9
pub const vst4_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29326:9
pub const vst4q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29343:9
pub const vst4q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29360:9
pub const vst4q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29377:9
pub const vst4q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29394:9
pub const vst4q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29411:9
pub const vst4q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29428:9
pub const vst4q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29445:9
pub const vst4q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29462:9
pub const vst4q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29479:9
pub const vst4_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29496:9
pub const vst4_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29513:9
pub const vst4_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29529:9
pub const vst4_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29534:9
pub const vst4_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29551:9
pub const vst4_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29568:9
pub const vst4_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29585:9
pub const vst4_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29601:9
pub const vst4_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29606:9
pub const vst4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29623:9
pub const vst4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29640:9
pub const vst4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29657:9
pub const vst4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29674:9
pub const vst4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29691:9
pub const vst4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29708:9
pub const vst4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29725:9
pub const vst4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29742:9
pub const vst4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29759:9
pub const vst4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29776:9
pub const vst4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29793:9
pub const vst4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29810:9
pub const vst4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29827:9
pub const vst4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29844:9
pub const vst4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:29861:9
pub const splatq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32268:9
pub const splat_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32292:9
pub const splatq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32316:9
pub const splat_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32340:9
pub const vbfdotq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_126`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32410:9
pub const vbfdot_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_128`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32438:9
pub const vbfdotq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_130`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32466:9
pub const vbfdot_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_132`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32494:9
pub const vcreate_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32607:9
pub const vduph_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32653:9
pub const vdupq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_137`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32670:9
pub const vdup_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_139`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32688:9
pub const vduph_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32706:9
pub const vdupq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_141`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32723:9
pub const vdup_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_143`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32741:9
pub const vgetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32810:9
pub const vget_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32833:9
pub const vld1q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32877:9
pub const vld1_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32892:9
pub const vld1q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32907:9
pub const vld1_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32922:9
pub const vld1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32937:9
pub const vld1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32955:9
pub const vld1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32973:9
pub const vld1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:32990:9
pub const vld1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33007:9
pub const vld1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33025:9
pub const vld1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33043:9
pub const vld1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33062:9
pub const vld2q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33081:9
pub const vld2_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33098:9
pub const vld2q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33115:9
pub const vld2_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33132:9
pub const vld2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33149:9
pub const vld2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33171:9
pub const vld3q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33193:9
pub const vld3_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33211:9
pub const vld3q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33229:9
pub const vld3_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33247:9
pub const vld3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33265:9
pub const vld3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33289:9
pub const vld4q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33313:9
pub const vld4_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33332:9
pub const vld4q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33351:9
pub const vld4_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33370:9
pub const vld4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33389:9
pub const vld4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33415:9
pub const vsetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33441:9
pub const vset_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33468:9
pub const vst1q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33495:9
pub const vst1_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33508:9
pub const vst1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33521:9
pub const vst1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33534:9
pub const vst1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33547:9
pub const vst1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33562:9
pub const vst1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33577:9
pub const vst1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33593:9
pub const vst1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33609:9
pub const vst1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33626:9
pub const vst2q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33643:9
pub const vst2_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33658:9
pub const vst2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33673:9
pub const vst2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33688:9
pub const vst3q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33703:9
pub const vst3_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33719:9
pub const vst3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33735:9
pub const vst3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33751:9
pub const vst4q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33767:9
pub const vst4_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33784:9
pub const vst4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33801:9
pub const vst4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33818:9
pub const vdotq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_145`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33927:9
pub const vdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_147`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33955:9
pub const vdot_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_149`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:33983:9
pub const vdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_151`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34011:9
pub const vcvtq_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34705:9
pub const vcvtq_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34723:9
pub const vcvt_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34741:9
pub const vcvt_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34759:9
pub const vcvtq_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34777:9
pub const vcvt_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34795:9
pub const vcvtq_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34813:9
pub const vcvt_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:34831:9
pub const vextq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35169:9
pub const vext_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35190:9
pub const vmulq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_153`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35395:9
pub const vmul_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_155`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35416:9
pub const vmulq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35437:9
pub const vmul_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35457:9
pub const vusdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_157`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35954:9
pub const vusdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_159`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:35980:9
pub const vqrdmlahq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_161`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36116:9
pub const vqrdmlahq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_163`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36140:9
pub const vqrdmlah_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_165`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36164:9
pub const vqrdmlah_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_167`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36188:9
pub const vqrdmlshq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_169`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36304:9
pub const vqrdmlshq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_171`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36328:9
pub const vqrdmlsh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_173`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36352:9
pub const vqrdmlsh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_175`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36376:9
pub const vcmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_177`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36514:9
pub const vcmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_179`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36542:9
pub const vcmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_181`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36570:9
pub const vcmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_183`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36598:9
pub const vcmla_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_185`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36672:9
pub const vcmlaq_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_187`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36700:9
pub const vcmla_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_189`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36728:9
pub const vcmlaq_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_191`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36756:9
pub const vcmla_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_193`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36830:9
pub const vcmlaq_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_195`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36858:9
pub const vcmla_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_197`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36886:9
pub const vcmlaq_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_199`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36914:9
pub const vcmla_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_201`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:36988:9
pub const vcmlaq_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_203`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37016:9
pub const vcmla_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_205`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37044:9
pub const vcmlaq_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_207`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37072:9
pub const vcmla_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_209`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37214:9
pub const vcmlaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_211`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37242:9
pub const vcmla_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_213`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37270:9
pub const vcmlaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_215`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37298:9
pub const vcmla_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_217`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37372:9
pub const vcmlaq_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_219`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37400:9
pub const vcmla_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_221`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37428:9
pub const vcmlaq_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_223`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37456:9
pub const vcmla_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_225`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37530:9
pub const vcmlaq_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_227`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37558:9
pub const vcmla_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_229`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37586:9
pub const vcmlaq_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_231`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37614:9
pub const vcmla_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_233`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37688:9
pub const vcmlaq_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_235`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37716:9
pub const vcmla_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_237`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37744:9
pub const vcmlaq_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_239`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:37772:9
pub const vld1q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39663:9
pub const vld1_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39678:9
pub const vld1q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39693:9
pub const vld1_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39708:9
pub const vld1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39723:9
pub const vld1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39741:9
pub const vld1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39759:9
pub const vld1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39776:9
pub const vld1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39793:9
pub const vld1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39811:9
pub const vld1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39829:9
pub const vld1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39848:9
pub const vld2q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39867:9
pub const vld2_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39884:9
pub const vld2q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39901:9
pub const vld2_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39918:9
pub const vld2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39935:9
pub const vld2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39957:9
pub const vld3q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39979:9
pub const vld3_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:39997:9
pub const vld3q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40015:9
pub const vld3_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40033:9
pub const vld3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40051:9
pub const vld3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40075:9
pub const vld4q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40099:9
pub const vld4_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40118:9
pub const vld4q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40137:9
pub const vld4_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40156:9
pub const vld4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40175:9
pub const vld4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40201:9
pub const vst1q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40227:9
pub const vst1_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40240:9
pub const vst1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40253:9
pub const vst1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40266:9
pub const vst1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40279:9
pub const vst1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40294:9
pub const vst1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40309:9
pub const vst1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40325:9
pub const vst1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40341:9
pub const vst1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40358:9
pub const vst2q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40375:9
pub const vst2_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40390:9
pub const vst2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40405:9
pub const vst2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40420:9
pub const vst3q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40435:9
pub const vst3_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40451:9
pub const vst3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40467:9
pub const vst3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40483:9
pub const vst4q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40499:9
pub const vst4_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40516:9
pub const vst4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40533:9
pub const vst4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:40550:9
pub const vcopyq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_257`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44149:9
pub const vcopyq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_259`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44170:9
pub const vcopyq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_261`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44191:9
pub const vcopyq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_263`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44212:9
pub const vcopyq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_265`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44233:9
pub const vcopyq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_267`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44253:9
pub const vcopyq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_269`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44274:9
pub const vcopyq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_271`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44295:9
pub const vcopyq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_273`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44316:9
pub const vcopyq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_275`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44337:9
pub const vcopyq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_277`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44357:9
pub const vcopy_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_279`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44378:9
pub const vcopy_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_281`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44399:9
pub const vcopy_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_283`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44420:9
pub const vcopy_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_285`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44441:9
pub const vcopy_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_287`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44461:9
pub const vcopy_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_288`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44469:9
pub const vcopy_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_290`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44490:9
pub const vcopy_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_292`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44511:9
pub const vcopy_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_294`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44532:9
pub const vcopy_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_296`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44552:9
pub const vcopy_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_297`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44560:9
pub const vcopyq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_299`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44581:9
pub const vcopyq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_301`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44602:9
pub const vcopyq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_303`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44623:9
pub const vcopyq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_305`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44644:9
pub const vcopyq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_307`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44665:9
pub const vcopyq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_309`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44686:9
pub const vcopyq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_311`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44707:9
pub const vcopyq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_313`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44728:9
pub const vcopyq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_315`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44749:9
pub const vcopyq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_317`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44770:9
pub const vcopyq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_319`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44791:9
pub const vcopy_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_321`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44812:9
pub const vcopy_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_323`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44833:9
pub const vcopy_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_325`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44854:9
pub const vcopy_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_327`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44875:9
pub const vcopy_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_329`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44896:9
pub const vcopy_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_331`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44915:9
pub const vcopy_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_333`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44936:9
pub const vcopy_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_335`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44957:9
pub const vcopy_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_337`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44978:9
pub const vcopy_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_339`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:44999:9
pub const vcopy_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_341`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45018:9
pub const vcreate_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45038:9
pub const vcreate_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45044:9
pub const vcvts_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45220:9
pub const vcvts_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45226:9
pub const vcvtq_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45233:9
pub const vcvtq_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45251:9
pub const vcvt_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45268:9
pub const vcvt_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45274:9
pub const vcvtd_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45280:9
pub const vcvtd_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45286:9
pub const vcvts_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45292:9
pub const vcvtq_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45299:9
pub const vcvt_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45316:9
pub const vcvtd_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45322:9
pub const vcvts_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45328:9
pub const vcvtq_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45335:9
pub const vcvt_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45352:9
pub const vcvtd_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45358:9
pub const vdupb_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45774:9
pub const vduph_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45791:9
pub const vdupb_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45808:9
pub const vdups_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45825:9
pub const vdupd_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45841:9
pub const vduph_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45848:9
pub const vdupb_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45865:9
pub const vdupd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45881:9
pub const vdups_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45888:9
pub const vdups_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45905:9
pub const vdupd_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45921:9
pub const vduph_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45928:9
pub const vdup_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_343`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45944:9
pub const vdupq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_344`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45951:9
pub const vdupq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_346`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45968:9
pub const vdup_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_348`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45984:9
pub const vdupb_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:45991:9
pub const vduph_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46008:9
pub const vdupb_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46025:9
pub const vdups_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46042:9
pub const vdupd_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46059:9
pub const vduph_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46076:9
pub const vdupb_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46093:9
pub const vdupd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46110:9
pub const vdups_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46127:9
pub const vdups_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46144:9
pub const vdupd_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46161:9
pub const vduph_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46178:9
pub const vdup_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_349`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46195:9
pub const vdup_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_351`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46213:9
pub const vdup_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_353`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46230:9
pub const vdupq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_355`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46248:9
pub const vdupq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_357`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46266:9
pub const vdupq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_359`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46284:9
pub const vdupq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_361`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46302:9
pub const vdupq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_363`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46320:9
pub const vdupq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_365`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46338:9
pub const vdupq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_367`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46356:9
pub const vdupq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_369`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46374:9
pub const vdupq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_371`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46392:9
pub const vdupq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_373`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46410:9
pub const vdupq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_375`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46428:9
pub const vdupq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_377`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46446:9
pub const vdupq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_379`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46464:9
pub const vdupq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_381`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46482:9
pub const vdup_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_383`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46500:9
pub const vdup_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_385`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46518:9
pub const vdup_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_387`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46536:9
pub const vdup_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_389`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46553:9
pub const vdup_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_391`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46571:9
pub const vdup_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_393`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46589:9
pub const vdup_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_395`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46606:9
pub const vdup_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_397`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46624:9
pub const vdup_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_399`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46642:9
pub const vdup_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_401`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46660:9
pub const vdup_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_403`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46677:9
pub const vext_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46734:9
pub const vextq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46742:9
pub const vextq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46763:9
pub const vext_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46783:9
pub const vfmad_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46818:9
pub const vfmas_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46827:9
pub const vfmaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46856:9
pub const vfmaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46887:9
pub const vfma_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46918:9
pub const vfma_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46927:9
pub const vfmad_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46959:9
pub const vfmas_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:46988:9
pub const vfmaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47017:9
pub const vfmaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47049:9
pub const vfma_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47081:9
pub const vfma_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47110:9
pub const vfmsd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_405`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47186:9
pub const vfmss_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_406`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47195:9
pub const vfmsq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_408`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47216:9
pub const vfmsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_410`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47239:9
pub const vfms_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_412`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47262:9
pub const vfms_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_413`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47271:9
pub const vfmsd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_415`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47295:9
pub const vfmss_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_417`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47316:9
pub const vfmsq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_419`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47337:9
pub const vfmsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_421`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47361:9
pub const vfms_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_423`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47385:9
pub const vfms_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_425`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47406:9
pub const vget_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47520:9
pub const vgetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47527:9
pub const vgetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47550:9
pub const vget_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47572:9
pub const vld1_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47608:9
pub const vld1q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47614:9
pub const vld1q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47629:9
pub const vld1_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47643:9
pub const vld1_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47648:9
pub const vld1q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47654:9
pub const vld1q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47669:9
pub const vld1_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47683:9
pub const vld1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47688:9
pub const vld1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47695:9
pub const vld1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47713:9
pub const vld1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47730:9
pub const vld1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47736:9
pub const vld1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47742:9
pub const vld1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47759:9
pub const vld1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47775:9
pub const vld1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47780:9
pub const vld1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47786:9
pub const vld1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47804:9
pub const vld1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47821:9
pub const vld1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47826:9
pub const vld1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47832:9
pub const vld1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47851:9
pub const vld1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47869:9
pub const vld2_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47874:9
pub const vld2q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47880:9
pub const vld2q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47897:9
pub const vld2q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47914:9
pub const vld2q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47931:9
pub const vld2_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47947:9
pub const vld2_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47952:9
pub const vld2q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47958:9
pub const vld2q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47975:9
pub const vld2_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47991:9
pub const vld2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:47996:9
pub const vld2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48003:9
pub const vld2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48025:9
pub const vld2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48047:9
pub const vld2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48069:9
pub const vld2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48091:9
pub const vld2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48113:9
pub const vld2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48135:9
pub const vld2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48156:9
pub const vld2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48162:9
pub const vld2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48168:9
pub const vld3_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48174:9
pub const vld3q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48180:9
pub const vld3q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48198:9
pub const vld3q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48216:9
pub const vld3q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48234:9
pub const vld3_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48251:9
pub const vld3_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48256:9
pub const vld3q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48262:9
pub const vld3q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48280:9
pub const vld3_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48297:9
pub const vld3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48302:9
pub const vld3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48309:9
pub const vld3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48333:9
pub const vld3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48357:9
pub const vld3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48381:9
pub const vld3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48405:9
pub const vld3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48429:9
pub const vld3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48453:9
pub const vld3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48476:9
pub const vld3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48482:9
pub const vld3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48488:9
pub const vld4_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48494:9
pub const vld4q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48500:9
pub const vld4q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48519:9
pub const vld4q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48538:9
pub const vld4q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48557:9
pub const vld4_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48575:9
pub const vld4_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48580:9
pub const vld4q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48586:9
pub const vld4q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48605:9
pub const vld4_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48623:9
pub const vld4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48628:9
pub const vld4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48635:9
pub const vld4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48661:9
pub const vld4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48687:9
pub const vld4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48713:9
pub const vld4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48739:9
pub const vld4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48765:9
pub const vld4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48791:9
pub const vld4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48816:9
pub const vld4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48822:9
pub const vld4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48828:9
pub const vldrq_p128 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:48834:9
pub const vmlaq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_427`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49447:9
pub const vmlaq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_429`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49471:9
pub const vmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_431`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49495:9
pub const vmlaq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_433`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49519:9
pub const vmlaq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_435`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49543:9
pub const vmla_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_437`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49567:9
pub const vmla_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_439`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49591:9
pub const vmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_441`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49615:9
pub const vmla_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_443`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49639:9
pub const vmla_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_445`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49663:9
pub const vmlal_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_447`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49687:9
pub const vmlal_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_449`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49711:9
pub const vmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_451`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49735:9
pub const vmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_453`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49759:9
pub const vmlal_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_455`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49783:9
pub const vmlal_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_457`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49807:9
pub const vmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_459`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49831:9
pub const vmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_461`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49855:9
pub const vmlal_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_463`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49879:9
pub const vmlal_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_465`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49903:9
pub const vmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_467`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49927:9
pub const vmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_469`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49951:9
pub const vmlsq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_471`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:49998:9
pub const vmlsq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_473`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50022:9
pub const vmlsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_475`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50046:9
pub const vmlsq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_477`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50070:9
pub const vmlsq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_479`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50094:9
pub const vmls_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_481`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50118:9
pub const vmls_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_483`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50142:9
pub const vmls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_485`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50166:9
pub const vmls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_487`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50190:9
pub const vmls_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_489`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50214:9
pub const vmlsl_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_491`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50238:9
pub const vmlsl_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_493`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50262:9
pub const vmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_495`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50286:9
pub const vmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_497`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50310:9
pub const vmlsl_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_499`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50334:9
pub const vmlsl_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_501`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50358:9
pub const vmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_503`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50382:9
pub const vmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_505`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50406:9
pub const vmlsl_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_507`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50430:9
pub const vmlsl_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_509`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50454:9
pub const vmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_511`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50478:9
pub const vmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_513`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50502:9
pub const vmuld_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_533`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50833:9
pub const vmuls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_534`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50841:9
pub const vmul_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50859:9
pub const vmulq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_536`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50867:9
pub const vmuld_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_538`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50887:9
pub const vmuls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_540`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50906:9
pub const vmul_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50925:9
pub const vmulq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_542`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50944:9
pub const vmulq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_544`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50965:9
pub const vmulq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_546`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:50986:9
pub const vmulq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_548`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51007:9
pub const vmulq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_550`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51028:9
pub const vmulq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_552`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51049:9
pub const vmul_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_554`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51070:9
pub const vmul_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_556`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51091:9
pub const vmul_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_558`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51112:9
pub const vmul_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_560`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51133:9
pub const vmul_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_562`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51154:9
pub const vmull_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_564`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51315:9
pub const vmull_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_566`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51336:9
pub const vmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_568`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51357:9
pub const vmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_570`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51378:9
pub const vmull_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_572`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51399:9
pub const vmull_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_574`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51420:9
pub const vmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_576`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51441:9
pub const vmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_578`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51462:9
pub const vmull_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_580`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51547:9
pub const vmull_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_582`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51568:9
pub const vmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_584`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51589:9
pub const vmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_586`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51610:9
pub const vmulxd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_588`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51711:9
pub const vmulxs_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_589`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51719:9
pub const vmulxq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_591`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51738:9
pub const vmulxq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_593`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51758:9
pub const vmulx_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_595`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51779:9
pub const vmulxd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_597`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51800:9
pub const vmulxs_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_599`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51819:9
pub const vmulxq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_601`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51838:9
pub const vmulxq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_603`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51859:9
pub const vmulx_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_605`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:51880:9
pub const vqdmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_607`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52799:9
pub const vqdmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_609`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52823:9
pub const vqdmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_611`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52847:9
pub const vqdmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_613`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52871:9
pub const vqdmlals_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52929:9
pub const vqdmlalh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52950:9
pub const vqdmlals_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52971:9
pub const vqdmlalh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:52992:9
pub const vqdmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_615`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53013:9
pub const vqdmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_617`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53037:9
pub const vqdmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_619`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53107:9
pub const vqdmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_621`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53131:9
pub const vqdmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_623`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53155:9
pub const vqdmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_625`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53179:9
pub const vqdmlsls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53237:9
pub const vqdmlslh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53258:9
pub const vqdmlsls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53279:9
pub const vqdmlslh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53300:9
pub const vqdmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_627`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53321:9
pub const vqdmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_629`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53345:9
pub const vqdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53379:9
pub const vqdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53400:9
pub const vqdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53421:9
pub const vqdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53442:9
pub const vqdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_631`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53463:9
pub const vqdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_633`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53482:9
pub const vqdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_635`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53501:9
pub const vqdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_637`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53520:9
pub const vqdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53539:9
pub const vqdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53560:9
pub const vqdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53581:9
pub const vqdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53602:9
pub const vqdmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_639`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53667:9
pub const vqdmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_641`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53688:9
pub const vqdmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_643`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53709:9
pub const vqdmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_645`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53730:9
pub const vqdmulls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_647`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53783:9
pub const vqdmullh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_649`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53802:9
pub const vqdmulls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_651`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53821:9
pub const vqdmullh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_653`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53840:9
pub const vqdmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_655`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53859:9
pub const vqdmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_657`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:53880:9
pub const vqrdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54150:9
pub const vqrdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54171:9
pub const vqrdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54192:9
pub const vqrdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54213:9
pub const vqrdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_659`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54234:9
pub const vqrdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_661`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54253:9
pub const vqrdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_663`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54272:9
pub const vqrdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_665`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54291:9
pub const vqrdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54310:9
pub const vqrdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54331:9
pub const vqrdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54352:9
pub const vqrdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54373:9
pub const vqrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_667`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54434:9
pub const vqrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_669`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54455:9
pub const vqrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_671`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54476:9
pub const vqrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_673`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54497:9
pub const vqrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_675`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54518:9
pub const vqrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_677`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54539:9
pub const vqrshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54559:9
pub const vqrshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54565:9
pub const vqrshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54571:9
pub const vqrshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54577:9
pub const vqrshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54583:9
pub const vqrshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54589:9
pub const vqrshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_679`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54596:9
pub const vqrshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_681`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54617:9
pub const vqrshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_683`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54638:9
pub const vqrshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54658:9
pub const vqrshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54664:9
pub const vqrshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54670:9
pub const vqshlb_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54716:9
pub const vqshls_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54722:9
pub const vqshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54728:9
pub const vqshlh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54734:9
pub const vqshlb_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54740:9
pub const vqshls_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54746:9
pub const vqshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54752:9
pub const vqshlh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54758:9
pub const vqshlub_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54764:9
pub const vqshlus_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54770:9
pub const vqshlud_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54776:9
pub const vqshluh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54782:9
pub const vqshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_685`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54789:9
pub const vqshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_687`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54810:9
pub const vqshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_689`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54831:9
pub const vqshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_691`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54852:9
pub const vqshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_693`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54873:9
pub const vqshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_695`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54894:9
pub const vqshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54914:9
pub const vqshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54920:9
pub const vqshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54926:9
pub const vqshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54932:9
pub const vqshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54938:9
pub const vqshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54944:9
pub const vqshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_697`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54951:9
pub const vqshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_699`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54972:9
pub const vqshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_701`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:54993:9
pub const vqshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55013:9
pub const vqshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55019:9
pub const vqshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:55025:9
pub const vrshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58266:9
pub const vrshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58272:9
pub const vrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_703`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58279:9
pub const vrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_705`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58300:9
pub const vrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_707`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58321:9
pub const vrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_709`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58342:9
pub const vrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_711`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58363:9
pub const vrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_713`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58384:9
pub const vrsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58467:9
pub const vrsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58474:9
pub const vset_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58589:9
pub const vsetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58597:9
pub const vsetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58624:9
pub const vset_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58650:9
pub const vshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58667:9
pub const vshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58673:9
pub const vshll_high_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret_715`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58680:9
pub const vshll_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_717`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58698:9
pub const vshll_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_719`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58716:9
pub const vshll_high_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret_721`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58734:9
pub const vshll_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_723`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58752:9
pub const vshll_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_725`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58770:9
pub const vshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58787:9
pub const vshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58793:9
pub const vshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_727`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58800:9
pub const vshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_729`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58821:9
pub const vshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_731`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58842:9
pub const vshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_733`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58863:9
pub const vshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_735`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58884:9
pub const vshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_737`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58905:9
pub const vslid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58925:9
pub const vslid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58932:9
pub const vsli_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58939:9
pub const vsliq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:58947:9
pub const vsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59164:9
pub const vsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59171:9
pub const vsrid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59178:9
pub const vsrid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59185:9
pub const vsri_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59192:9
pub const vsriq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59200:9
pub const vst1_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59220:9
pub const vst1q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59225:9
pub const vst1q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59238:9
pub const vst1_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59250:9
pub const vst1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59254:9
pub const vst1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59259:9
pub const vst1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59272:9
pub const vst1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59284:9
pub const vst1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59288:9
pub const vst1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59293:9
pub const vst1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59308:9
pub const vst1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59322:9
pub const vst1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59326:9
pub const vst1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59331:9
pub const vst1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59347:9
pub const vst1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59362:9
pub const vst1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59366:9
pub const vst1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59371:9
pub const vst1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59388:9
pub const vst1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59404:9
pub const vst2_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59408:9
pub const vst2q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59413:9
pub const vst2q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59428:9
pub const vst2q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59443:9
pub const vst2q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59458:9
pub const vst2_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59472:9
pub const vst2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59476:9
pub const vst2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59481:9
pub const vst2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59496:9
pub const vst2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59511:9
pub const vst2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59526:9
pub const vst2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59541:9
pub const vst2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59556:9
pub const vst2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59571:9
pub const vst2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59585:9
pub const vst2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59589:9
pub const vst2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59593:9
pub const vst3_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59597:9
pub const vst3q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59602:9
pub const vst3q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59618:9
pub const vst3q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59634:9
pub const vst3q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59650:9
pub const vst3_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59665:9
pub const vst3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59669:9
pub const vst3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59674:9
pub const vst3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59690:9
pub const vst3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59706:9
pub const vst3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59722:9
pub const vst3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59738:9
pub const vst3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59754:9
pub const vst3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59770:9
pub const vst3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59785:9
pub const vst3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59789:9
pub const vst3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59793:9
pub const vst4_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59797:9
pub const vst4q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59802:9
pub const vst4q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59819:9
pub const vst4q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59836:9
pub const vst4q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59853:9
pub const vst4_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59869:9
pub const vst4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59873:9
pub const vst4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59878:9
pub const vst4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59895:9
pub const vst4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59912:9
pub const vst4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59929:9
pub const vst4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59946:9
pub const vst4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59963:9
pub const vst4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59980:9
pub const vst4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:59996:9
pub const vst4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60000:9
pub const vst4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60004:9
pub const vstrq_p128 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:60008:9
pub const vcopyq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_739`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62863:9
pub const vcopy_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_741`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62884:9
pub const vcopyq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_743`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62905:9
pub const vcopy_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_745`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:62926:9
pub const vdotq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_747`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63286:9
pub const vdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_749`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63314:9
pub const vdot_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_751`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63342:9
pub const vdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_753`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63370:9
pub const vduph_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63616:9
pub const vduph_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63633:9
pub const vfmah_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63650:9
pub const vfmaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63679:9
pub const vfma_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63711:9
pub const vfmah_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63743:9
pub const vfmaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63772:9
pub const vfma_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63804:9
pub const vfmaq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63836:9
pub const vfma_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63859:9
pub const vfmsh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_755`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63882:9
pub const vfmsq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_757`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63903:9
pub const vfms_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_759`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63927:9
pub const vfmsh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_761`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63951:9
pub const vfmsq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_763`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63972:9
pub const vfms_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_765`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:63996:9
pub const vfmsq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64020:9
pub const vfms_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64043:9
pub const vmaxnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64066:9
pub const vmaxnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64083:9
pub const vmaxvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64100:9
pub const vmaxv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64117:9
pub const vminnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64134:9
pub const vminnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64151:9
pub const vminvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64168:9
pub const vminv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64185:9
pub const vmulq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_767`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64202:9
pub const vmul_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_769`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64223:9
pub const vmulxh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64288:9
pub const vmulxq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_771`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64307:9
pub const vmulx_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_773`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64328:9
pub const vmulxh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64349:9
pub const vmulxq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_775`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64368:9
pub const vmulx_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_777`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64389:9
pub const vmulxq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64410:9
pub const vmulx_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64430:9
pub const vsudotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_779`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64837:9
pub const vsudot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_781`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64863:9
pub const vusdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_783`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64889:9
pub const vusdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_785`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64915:9
pub const vldap1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64940:9
pub const vldap1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64947:9
pub const vldap1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64965:9
pub const vldap1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:64983:9
pub const vldap1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65001:9
pub const vldap1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65018:9
pub const vldap1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65024:9
pub const vldap1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65030:9
pub const vstl1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65036:9
pub const vstl1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65041:9
pub const vstl1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65054:9
pub const vstl1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65067:9
pub const vstl1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65080:9
pub const vstl1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65092:9
pub const vstl1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65096:9
pub const vstl1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65100:9
pub const vxarq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65481:9
pub const vsm3tt1aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65556:9
pub const vsm3tt1bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65580:9
pub const vsm3tt2aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65604:9
pub const vsm3tt2bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65628:9
pub const vqrdmlahs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_787`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65696:9
pub const vqrdmlahh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_789`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65717:9
pub const vqrdmlahs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_791`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65738:9
pub const vqrdmlahh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_793`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65759:9
pub const vqrdmlahq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_795`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65780:9
pub const vqrdmlahq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_797`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65804:9
pub const vqrdmlah_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_799`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65828:9
pub const vqrdmlah_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_801`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65852:9
pub const vqrdmlshs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_803`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65886:9
pub const vqrdmlshh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_805`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65907:9
pub const vqrdmlshs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_807`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65928:9
pub const vqrdmlshh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_809`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65949:9
pub const vqrdmlshq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_811`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65970:9
pub const vqrdmlshq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_813`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:65994:9
pub const vqrdmlsh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_815`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66018:9
pub const vqrdmlsh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_817`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66042:9
pub const vcmla_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_819`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66127:9
pub const vcmlaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_820`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66138:9
pub const vcmla_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_822`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66165:9
pub const vcmlaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_824`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66190:9
pub const vcmla_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_826`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66245:9
pub const vcmlaq_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_827`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66256:9
pub const vcmla_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_829`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66283:9
pub const vcmlaq_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_831`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66308:9
pub const vcmla_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_833`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66363:9
pub const vcmlaq_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_834`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66374:9
pub const vcmla_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_836`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66401:9
pub const vcmlaq_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_838`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66426:9
pub const vcmla_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_840`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66481:9
pub const vcmlaq_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_841`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66492:9
pub const vcmla_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_843`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66519:9
pub const vcmlaq_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_845`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:66544:9
pub const vget_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_847`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67448:9
pub const vgetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_850`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67477:9
pub const vmlal_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_853`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67644:9
pub const vmlal_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_855`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67668:9
pub const vmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_857`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67692:9
pub const vmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_859`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67716:9
pub const vmlsl_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_861`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67966:9
pub const vmlsl_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_863`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:67990:9
pub const vmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_865`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68014:9
pub const vmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_867`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68038:9
pub const vset_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_869`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68150:9
pub const vsetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_871`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68176:9
pub const vbfmlalbq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_873`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68202:9
pub const vbfmlalbq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_875`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68226:9
pub const vbfmlaltq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_877`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68250:9
pub const vbfmlaltq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_879`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68274:9
pub const vsudotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_881`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68330:9
pub const vsudot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_883`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68356:9
pub const vcopyq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_885`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68689:9
pub const vcopyq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_887`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68709:9
pub const vcopy_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_889`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68728:9
pub const vcopy_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_890`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68735:9
pub const vcopyq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_891`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68743:9
pub const vcopyq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_893`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68764:9
pub const vcopy_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_895`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68785:9
pub const vcopy_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_897`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:68804:9
pub const vmulx_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_899`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69174:9
pub const vmulx_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_900`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69185:9
pub const vfmlalq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_902`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69210:9
pub const vfmlal_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_904`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69234:9
pub const vfmlalq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_906`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69258:9
pub const vfmlal_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_908`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69282:9
pub const vfmlalq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_910`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69306:9
pub const vfmlal_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_912`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69330:9
pub const vfmlalq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_914`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69354:9
pub const vfmlal_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_916`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69378:9
pub const vfmlslq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_918`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69402:9
pub const vfmlsl_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_920`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69426:9
pub const vfmlslq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_922`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69450:9
pub const vfmlsl_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_924`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69474:9
pub const vfmlslq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_926`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69498:9
pub const vfmlsl_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_928`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69522:9
pub const vfmlslq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_930`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69546:9
pub const vfmlsl_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_932`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69570:9
pub const vmulh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_934`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69594:9
pub const vmulh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_936`"); // /Users/corysmith/zig/0.12.1/files/lib/include/arm_neon.h:69613:9
pub const SDL_VERSION = @compileError("unable to translate C expr: unexpected token '{'"); // /opt/homebrew/include/SDL2/SDL_version.h:79:9
pub const EPOXY_PUBLIC = @compileError("unable to translate C expr: unexpected token 'extern'"); // /opt/homebrew/include/epoxy/common.h:44:11
pub const APIENTRYP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/epoxy/gl.h:80:9
pub const GLAPIENTRYP = @compileError("unable to translate C expr: unexpected token ''"); // /opt/homebrew/include/epoxy/gl.h:84:9
pub const __llvm__ = @as(c_int, 1);
pub const __clang__ = @as(c_int, 1);
pub const __clang_major__ = @as(c_int, 17);
pub const __clang_minor__ = @as(c_int, 0);
pub const __clang_patchlevel__ = @as(c_int, 6);
pub const __clang_version__ = "17.0.6 (https://github.com/ziglang/zig-bootstrap 4a292e8ac57c58f7a011cbf10602a86180771683)";
pub const __GNUC__ = @as(c_int, 4);
pub const __GNUC_MINOR__ = @as(c_int, 2);
pub const __GNUC_PATCHLEVEL__ = @as(c_int, 1);
pub const __GXX_ABI_VERSION = @as(c_int, 1002);
pub const __ATOMIC_RELAXED = @as(c_int, 0);
pub const __ATOMIC_CONSUME = @as(c_int, 1);
pub const __ATOMIC_ACQUIRE = @as(c_int, 2);
pub const __ATOMIC_RELEASE = @as(c_int, 3);
pub const __ATOMIC_ACQ_REL = @as(c_int, 4);
pub const __ATOMIC_SEQ_CST = @as(c_int, 5);
pub const __OPENCL_MEMORY_SCOPE_WORK_ITEM = @as(c_int, 0);
pub const __OPENCL_MEMORY_SCOPE_WORK_GROUP = @as(c_int, 1);
pub const __OPENCL_MEMORY_SCOPE_DEVICE = @as(c_int, 2);
pub const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = @as(c_int, 3);
pub const __OPENCL_MEMORY_SCOPE_SUB_GROUP = @as(c_int, 4);
pub const __FPCLASS_SNAN = @as(c_int, 0x0001);
pub const __FPCLASS_QNAN = @as(c_int, 0x0002);
pub const __FPCLASS_NEGINF = @as(c_int, 0x0004);
pub const __FPCLASS_NEGNORMAL = @as(c_int, 0x0008);
pub const __FPCLASS_NEGSUBNORMAL = @as(c_int, 0x0010);
pub const __FPCLASS_NEGZERO = @as(c_int, 0x0020);
pub const __FPCLASS_POSZERO = @as(c_int, 0x0040);
pub const __FPCLASS_POSSUBNORMAL = @as(c_int, 0x0080);
pub const __FPCLASS_POSNORMAL = @as(c_int, 0x0100);
pub const __FPCLASS_POSINF = @as(c_int, 0x0200);
pub const __PRAGMA_REDEFINE_EXTNAME = @as(c_int, 1);
pub const __VERSION__ = "Clang 17.0.6 (https://github.com/ziglang/zig-bootstrap 4a292e8ac57c58f7a011cbf10602a86180771683)";
pub const __OBJC_BOOL_IS_BOOL = @as(c_int, 1);
pub const __CONSTANT_CFSTRINGS__ = @as(c_int, 1);
pub const __BLOCKS__ = @as(c_int, 1);
pub const __clang_literal_encoding__ = "UTF-8";
pub const __clang_wide_literal_encoding__ = "UTF-32";
pub const __ORDER_LITTLE_ENDIAN__ = @as(c_int, 1234);
pub const __ORDER_BIG_ENDIAN__ = @as(c_int, 4321);
pub const __ORDER_PDP_ENDIAN__ = @as(c_int, 3412);
pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const __LITTLE_ENDIAN__ = @as(c_int, 1);
pub const _LP64 = @as(c_int, 1);
pub const __LP64__ = @as(c_int, 1);
pub const __CHAR_BIT__ = @as(c_int, 8);
pub const __BOOL_WIDTH__ = @as(c_int, 8);
pub const __SHRT_WIDTH__ = @as(c_int, 16);
pub const __INT_WIDTH__ = @as(c_int, 32);
pub const __LONG_WIDTH__ = @as(c_int, 64);
pub const __LLONG_WIDTH__ = @as(c_int, 64);
pub const __BITINT_MAXWIDTH__ = @as(c_int, 128);
pub const __SCHAR_MAX__ = @as(c_int, 127);
pub const __SHRT_MAX__ = @as(c_int, 32767);
pub const __INT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __LONG_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __LONG_LONG_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __WCHAR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WCHAR_WIDTH__ = @as(c_int, 32);
pub const __WINT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WINT_WIDTH__ = @as(c_int, 32);
pub const __INTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTMAX_WIDTH__ = @as(c_int, 64);
pub const __SIZE_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __SIZE_WIDTH__ = @as(c_int, 64);
pub const __UINTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTMAX_WIDTH__ = @as(c_int, 64);
pub const __PTRDIFF_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __PTRDIFF_WIDTH__ = @as(c_int, 64);
pub const __INTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTPTR_WIDTH__ = @as(c_int, 64);
pub const __UINTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTPTR_WIDTH__ = @as(c_int, 64);
pub const __SIZEOF_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_FLOAT__ = @as(c_int, 4);
pub const __SIZEOF_INT__ = @as(c_int, 4);
pub const __SIZEOF_LONG__ = @as(c_int, 8);
pub const __SIZEOF_LONG_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_LONG_LONG__ = @as(c_int, 8);
pub const __SIZEOF_POINTER__ = @as(c_int, 8);
pub const __SIZEOF_SHORT__ = @as(c_int, 2);
pub const __SIZEOF_PTRDIFF_T__ = @as(c_int, 8);
pub const __SIZEOF_SIZE_T__ = @as(c_int, 8);
pub const __SIZEOF_WCHAR_T__ = @as(c_int, 4);
pub const __SIZEOF_WINT_T__ = @as(c_int, 4);
pub const __SIZEOF_INT128__ = @as(c_int, 16);
pub const __INTMAX_TYPE__ = c_long;
pub const __INTMAX_FMTd__ = "ld";
pub const __INTMAX_FMTi__ = "li";
pub const __UINTMAX_TYPE__ = c_ulong;
pub const __UINTMAX_FMTo__ = "lo";
pub const __UINTMAX_FMTu__ = "lu";
pub const __UINTMAX_FMTx__ = "lx";
pub const __UINTMAX_FMTX__ = "lX";
pub const __PTRDIFF_TYPE__ = c_long;
pub const __PTRDIFF_FMTd__ = "ld";
pub const __PTRDIFF_FMTi__ = "li";
pub const __INTPTR_TYPE__ = c_long;
pub const __INTPTR_FMTd__ = "ld";
pub const __INTPTR_FMTi__ = "li";
pub const __SIZE_TYPE__ = c_ulong;
pub const __SIZE_FMTo__ = "lo";
pub const __SIZE_FMTu__ = "lu";
pub const __SIZE_FMTx__ = "lx";
pub const __SIZE_FMTX__ = "lX";
pub const __WCHAR_TYPE__ = c_int;
pub const __WINT_TYPE__ = c_int;
pub const __SIG_ATOMIC_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __SIG_ATOMIC_WIDTH__ = @as(c_int, 32);
pub const __CHAR16_TYPE__ = c_ushort;
pub const __CHAR32_TYPE__ = c_uint;
pub const __UINTPTR_TYPE__ = c_ulong;
pub const __UINTPTR_FMTo__ = "lo";
pub const __UINTPTR_FMTu__ = "lu";
pub const __UINTPTR_FMTx__ = "lx";
pub const __UINTPTR_FMTX__ = "lX";
pub const __FLT16_DENORM_MIN__ = @as(f16, 5.9604644775390625e-8);
pub const __FLT16_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT16_DIG__ = @as(c_int, 3);
pub const __FLT16_DECIMAL_DIG__ = @as(c_int, 5);
pub const __FLT16_EPSILON__ = @as(f16, 9.765625e-4);
pub const __FLT16_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT16_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT16_MANT_DIG__ = @as(c_int, 11);
pub const __FLT16_MAX_10_EXP__ = @as(c_int, 4);
pub const __FLT16_MAX_EXP__ = @as(c_int, 16);
pub const __FLT16_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_MIN_10_EXP__ = -@as(c_int, 4);
pub const __FLT16_MIN_EXP__ = -@as(c_int, 13);
pub const __FLT16_MIN__ = @as(f16, 6.103515625e-5);
pub const __FLT_DENORM_MIN__ = @as(f32, 1.40129846e-45);
pub const __FLT_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT_DIG__ = @as(c_int, 6);
pub const __FLT_DECIMAL_DIG__ = @as(c_int, 9);
pub const __FLT_EPSILON__ = @as(f32, 1.19209290e-7);
pub const __FLT_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT_MANT_DIG__ = @as(c_int, 24);
pub const __FLT_MAX_10_EXP__ = @as(c_int, 38);
pub const __FLT_MAX_EXP__ = @as(c_int, 128);
pub const __FLT_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_MIN_10_EXP__ = -@as(c_int, 37);
pub const __FLT_MIN_EXP__ = -@as(c_int, 125);
pub const __FLT_MIN__ = @as(f32, 1.17549435e-38);
pub const __DBL_DENORM_MIN__ = @as(f64, 4.9406564584124654e-324);
pub const __DBL_HAS_DENORM__ = @as(c_int, 1);
pub const __DBL_DIG__ = @as(c_int, 15);
pub const __DBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __DBL_EPSILON__ = @as(f64, 2.2204460492503131e-16);
pub const __DBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __DBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __DBL_MANT_DIG__ = @as(c_int, 53);
pub const __DBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __DBL_MAX_EXP__ = @as(c_int, 1024);
pub const __DBL_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __DBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __DBL_MIN__ = @as(f64, 2.2250738585072014e-308);
pub const __LDBL_DENORM_MIN__ = @as(c_longdouble, 4.9406564584124654e-324);
pub const __LDBL_HAS_DENORM__ = @as(c_int, 1);
pub const __LDBL_DIG__ = @as(c_int, 15);
pub const __LDBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __LDBL_EPSILON__ = @as(c_longdouble, 2.2204460492503131e-16);
pub const __LDBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __LDBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __LDBL_MANT_DIG__ = @as(c_int, 53);
pub const __LDBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __LDBL_MAX_EXP__ = @as(c_int, 1024);
pub const __LDBL_MAX__ = @as(c_longdouble, 1.7976931348623157e+308);
pub const __LDBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __LDBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __LDBL_MIN__ = @as(c_longdouble, 2.2250738585072014e-308);
pub const __POINTER_WIDTH__ = @as(c_int, 64);
pub const __BIGGEST_ALIGNMENT__ = @as(c_int, 8);
pub const __INT8_TYPE__ = i8;
pub const __INT8_FMTd__ = "hhd";
pub const __INT8_FMTi__ = "hhi";
pub const __INT8_C_SUFFIX__ = "";
pub const __INT16_TYPE__ = c_short;
pub const __INT16_FMTd__ = "hd";
pub const __INT16_FMTi__ = "hi";
pub const __INT16_C_SUFFIX__ = "";
pub const __INT32_TYPE__ = c_int;
pub const __INT32_FMTd__ = "d";
pub const __INT32_FMTi__ = "i";
pub const __INT32_C_SUFFIX__ = "";
pub const __INT64_TYPE__ = c_longlong;
pub const __INT64_FMTd__ = "lld";
pub const __INT64_FMTi__ = "lli";
pub const __UINT8_TYPE__ = u8;
pub const __UINT8_FMTo__ = "hho";
pub const __UINT8_FMTu__ = "hhu";
pub const __UINT8_FMTx__ = "hhx";
pub const __UINT8_FMTX__ = "hhX";
pub const __UINT8_C_SUFFIX__ = "";
pub const __UINT8_MAX__ = @as(c_int, 255);
pub const __INT8_MAX__ = @as(c_int, 127);
pub const __UINT16_TYPE__ = c_ushort;
pub const __UINT16_FMTo__ = "ho";
pub const __UINT16_FMTu__ = "hu";
pub const __UINT16_FMTx__ = "hx";
pub const __UINT16_FMTX__ = "hX";
pub const __UINT16_C_SUFFIX__ = "";
pub const __UINT16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __INT16_MAX__ = @as(c_int, 32767);
pub const __UINT32_TYPE__ = c_uint;
pub const __UINT32_FMTo__ = "o";
pub const __UINT32_FMTu__ = "u";
pub const __UINT32_FMTx__ = "x";
pub const __UINT32_FMTX__ = "X";
pub const __UINT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __INT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __UINT64_TYPE__ = c_ulonglong;
pub const __UINT64_FMTo__ = "llo";
pub const __UINT64_FMTu__ = "llu";
pub const __UINT64_FMTx__ = "llx";
pub const __UINT64_FMTX__ = "llX";
pub const __UINT64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __INT64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST8_TYPE__ = i8;
pub const __INT_LEAST8_MAX__ = @as(c_int, 127);
pub const __INT_LEAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_LEAST8_FMTd__ = "hhd";
pub const __INT_LEAST8_FMTi__ = "hhi";
pub const __UINT_LEAST8_TYPE__ = u8;
pub const __UINT_LEAST8_MAX__ = @as(c_int, 255);
pub const __UINT_LEAST8_FMTo__ = "hho";
pub const __UINT_LEAST8_FMTu__ = "hhu";
pub const __UINT_LEAST8_FMTx__ = "hhx";
pub const __UINT_LEAST8_FMTX__ = "hhX";
pub const __INT_LEAST16_TYPE__ = c_short;
pub const __INT_LEAST16_MAX__ = @as(c_int, 32767);
pub const __INT_LEAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_LEAST16_FMTd__ = "hd";
pub const __INT_LEAST16_FMTi__ = "hi";
pub const __UINT_LEAST16_TYPE__ = c_ushort;
pub const __UINT_LEAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_LEAST16_FMTo__ = "ho";
pub const __UINT_LEAST16_FMTu__ = "hu";
pub const __UINT_LEAST16_FMTx__ = "hx";
pub const __UINT_LEAST16_FMTX__ = "hX";
pub const __INT_LEAST32_TYPE__ = c_int;
pub const __INT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_LEAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_LEAST32_FMTd__ = "d";
pub const __INT_LEAST32_FMTi__ = "i";
pub const __UINT_LEAST32_TYPE__ = c_uint;
pub const __UINT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_LEAST32_FMTo__ = "o";
pub const __UINT_LEAST32_FMTu__ = "u";
pub const __UINT_LEAST32_FMTx__ = "x";
pub const __UINT_LEAST32_FMTX__ = "X";
pub const __INT_LEAST64_TYPE__ = c_longlong;
pub const __INT_LEAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_LEAST64_FMTd__ = "lld";
pub const __INT_LEAST64_FMTi__ = "lli";
pub const __UINT_LEAST64_TYPE__ = c_ulonglong;
pub const __UINT_LEAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_LEAST64_FMTo__ = "llo";
pub const __UINT_LEAST64_FMTu__ = "llu";
pub const __UINT_LEAST64_FMTx__ = "llx";
pub const __UINT_LEAST64_FMTX__ = "llX";
pub const __INT_FAST8_TYPE__ = i8;
pub const __INT_FAST8_MAX__ = @as(c_int, 127);
pub const __INT_FAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_FAST8_FMTd__ = "hhd";
pub const __INT_FAST8_FMTi__ = "hhi";
pub const __UINT_FAST8_TYPE__ = u8;
pub const __UINT_FAST8_MAX__ = @as(c_int, 255);
pub const __UINT_FAST8_FMTo__ = "hho";
pub const __UINT_FAST8_FMTu__ = "hhu";
pub const __UINT_FAST8_FMTx__ = "hhx";
pub const __UINT_FAST8_FMTX__ = "hhX";
pub const __INT_FAST16_TYPE__ = c_short;
pub const __INT_FAST16_MAX__ = @as(c_int, 32767);
pub const __INT_FAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_FAST16_FMTd__ = "hd";
pub const __INT_FAST16_FMTi__ = "hi";
pub const __UINT_FAST16_TYPE__ = c_ushort;
pub const __UINT_FAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_FAST16_FMTo__ = "ho";
pub const __UINT_FAST16_FMTu__ = "hu";
pub const __UINT_FAST16_FMTx__ = "hx";
pub const __UINT_FAST16_FMTX__ = "hX";
pub const __INT_FAST32_TYPE__ = c_int;
pub const __INT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_FAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_FAST32_FMTd__ = "d";
pub const __INT_FAST32_FMTi__ = "i";
pub const __UINT_FAST32_TYPE__ = c_uint;
pub const __UINT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_FAST32_FMTo__ = "o";
pub const __UINT_FAST32_FMTu__ = "u";
pub const __UINT_FAST32_FMTx__ = "x";
pub const __UINT_FAST32_FMTX__ = "X";
pub const __INT_FAST64_TYPE__ = c_longlong;
pub const __INT_FAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_FAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_FAST64_FMTd__ = "lld";
pub const __INT_FAST64_FMTi__ = "lli";
pub const __UINT_FAST64_TYPE__ = c_ulonglong;
pub const __UINT_FAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_FAST64_FMTo__ = "llo";
pub const __UINT_FAST64_FMTu__ = "llu";
pub const __UINT_FAST64_FMTx__ = "llx";
pub const __UINT_FAST64_FMTX__ = "llX";
pub const __NO_MATH_ERRNO__ = @as(c_int, 1);
pub const __FINITE_MATH_ONLY__ = @as(c_int, 0);
pub const __GNUC_STDC_INLINE__ = @as(c_int, 1);
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = @as(c_int, 1);
pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __NO_INLINE__ = @as(c_int, 1);
pub const __PIC__ = @as(c_int, 2);
pub const __pic__ = @as(c_int, 2);
pub const __FLT_RADIX__ = @as(c_int, 2);
pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const __SSP_STRONG__ = @as(c_int, 2);
pub const __AARCH64EL__ = @as(c_int, 1);
pub const __aarch64__ = @as(c_int, 1);
pub const __GCC_ASM_FLAG_OUTPUTS__ = @as(c_int, 1);
pub const __AARCH64_CMODEL_SMALL__ = @as(c_int, 1);
pub const __ARM_ACLE = @as(c_int, 200);
pub const __ARM_ARCH = @as(c_int, 8);
pub const __ARM_ARCH_PROFILE = 'A';
pub const __ARM_64BIT_STATE = @as(c_int, 1);
pub const __ARM_PCS_AAPCS64 = @as(c_int, 1);
pub const __ARM_ARCH_ISA_A64 = @as(c_int, 1);
pub const __ARM_FEATURE_CLZ = @as(c_int, 1);
pub const __ARM_FEATURE_FMA = @as(c_int, 1);
pub const __ARM_FEATURE_LDREX = @as(c_int, 0xF);
pub const __ARM_FEATURE_IDIV = @as(c_int, 1);
pub const __ARM_FEATURE_DIV = @as(c_int, 1);
pub const __ARM_FEATURE_NUMERIC_MAXMIN = @as(c_int, 1);
pub const __ARM_FEATURE_DIRECTED_ROUNDING = @as(c_int, 1);
pub const __ARM_ALIGN_MAX_STACK_PWR = @as(c_int, 4);
pub const __ARM_FP = @as(c_int, 0xE);
pub const __ARM_FP16_FORMAT_IEEE = @as(c_int, 1);
pub const __ARM_FP16_ARGS = @as(c_int, 1);
pub const __ARM_SIZEOF_WCHAR_T = @as(c_int, 4);
pub const __ARM_SIZEOF_MINIMAL_ENUM = @as(c_int, 4);
pub const __ARM_NEON = @as(c_int, 1);
pub const __ARM_NEON_FP = @as(c_int, 0xE);
pub const __ARM_FEATURE_CRC32 = @as(c_int, 1);
pub const __ARM_FEATURE_RCPC = @as(c_int, 1);
pub const __ARM_FEATURE_CRYPTO = @as(c_int, 1);
pub const __ARM_FEATURE_AES = @as(c_int, 1);
pub const __ARM_FEATURE_SHA2 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA3 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA512 = @as(c_int, 1);
pub const __ARM_FEATURE_PAUTH = @as(c_int, 1);
pub const __ARM_FEATURE_UNALIGNED = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_VECTOR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_SCALAR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_DOTPROD = @as(c_int, 1);
pub const __ARM_FEATURE_ATOMICS = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_FML = @as(c_int, 1);
pub const __ARM_FEATURE_COMPLEX = @as(c_int, 1);
pub const __ARM_FEATURE_JCVT = @as(c_int, 1);
pub const __ARM_FEATURE_QRDMX = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = @as(c_int, 1);
pub const __FP_FAST_FMA = @as(c_int, 1);
pub const __FP_FAST_FMAF = @as(c_int, 1);
pub const __AARCH64_SIMD__ = @as(c_int, 1);
pub const __ARM64_ARCH_8__ = @as(c_int, 1);
pub const __ARM_NEON__ = @as(c_int, 1);
pub const __REGISTER_PREFIX__ = "";
pub const __arm64 = @as(c_int, 1);
pub const __arm64__ = @as(c_int, 1);
pub const __APPLE_CC__ = @as(c_int, 6000);
pub const __APPLE__ = @as(c_int, 1);
pub const __STDC_NO_THREADS__ = @as(c_int, 1);
pub const __strong = "";
pub const __unsafe_unretained = "";
pub const __DYNAMIC__ = @as(c_int, 1);
pub const __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __MACH__ = @as(c_int, 1);
pub const __STDC__ = @as(c_int, 1);
pub const __STDC_HOSTED__ = @as(c_int, 1);
pub const __STDC_VERSION__ = @as(c_long, 201710);
pub const __STDC_UTF_16__ = @as(c_int, 1);
pub const __STDC_UTF_32__ = @as(c_int, 1);
pub const _DEBUG = @as(c_int, 1);
pub const _THREAD_SAFE = @as(c_int, 1);
pub const __GCC_HAVE_DWARF2_CFI_ASM = @as(c_int, 1);
pub const STBI_INCLUDE_STB_IMAGE_H = "";
pub const _STDIO_H_ = "";
pub const __STDIO_H_ = "";
pub const _CDEFS_H_ = "";
pub const __BEGIN_DECLS = "";
pub const __END_DECLS = "";
pub inline fn __P(protos: anytype) @TypeOf(protos) {
    _ = &protos;
    return protos;
}
pub const __signed = c_int;
pub inline fn __deprecated_enum_msg(_msg: anytype) @TypeOf(__deprecated_msg(_msg)) {
    _ = &_msg;
    return __deprecated_msg(_msg);
}
pub const __kpi_unavailable = "";
pub const __kpi_deprecated_arm64_macos_unavailable = "";
pub const __dead = "";
pub const __pure = "";
pub const __abortlike = __dead2 ++ __cold ++ __not_tail_called;
pub const __DARWIN_ONLY_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const __DARWIN_ONLY_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_UNIX03 = @as(c_int, 1);
pub const __DARWIN_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_NON_CANCELABLE = @as(c_int, 0);
pub const __DARWIN_SUF_UNIX03 = "";
pub const __DARWIN_SUF_64_BIT_INO_T = "";
pub const __DARWIN_SUF_1050 = "";
pub const __DARWIN_SUF_NON_CANCELABLE = "";
pub const __DARWIN_SUF_EXTSN = "$DARWIN_EXTSN";
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_16(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub const ___POSIX_C_DEPRECATED_STARTING_198808L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199009L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199209L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199309L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199506L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200112L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200809L = "";
pub const __DARWIN_C_ANSI = @as(c_long, 0o10000);
pub const __DARWIN_C_FULL = @as(c_long, 900000);
pub const __DARWIN_C_LEVEL = __DARWIN_C_FULL;
pub const __STDC_WANT_LIB_EXT1__ = @as(c_int, 1);
pub const __DARWIN_NO_LONG_LONG = @as(c_int, 0);
pub const _DARWIN_FEATURE_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_VERS_1050 = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE = @as(c_int, 3);
pub const __has_ptrcheck = @as(c_int, 0);
pub const __single = "";
pub const __unsafe_indexable = "";
pub const __null_terminated = "";
pub inline fn __unsafe_forge_bidi_indexable(T: anytype, P: anytype, S: anytype) @TypeOf(T(P)) {
    _ = &T;
    _ = &P;
    _ = &S;
    return T(P);
}
pub const __unsafe_forge_single = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn __terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub const __array_decay_dicards_count_in_parameters = "";
pub const __unsafe_late_const = "";
pub const __ASSUME_PTR_ABI_SINGLE_BEGIN = __ptrcheck_abi_assume_single();
pub const __ASSUME_PTR_ABI_SINGLE_END = __ptrcheck_abi_assume_unsafe_indexable();
pub const __header_indexable = "";
pub const __header_bidi_indexable = "";
pub const __kernel_ptr_semantics = "";
pub const __kernel_data_semantics = "";
pub const __kernel_dual_semantics = "";
pub const __AVAILABILITY__ = "";
pub const __API_TO_BE_DEPRECATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_IOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACCATALYST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_WATCHOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_TVOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_DRIVERKIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_XROS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __AVAILABILITY_VERSIONS__ = "";
pub const __MAC_10_0 = @as(c_int, 1000);
pub const __MAC_10_1 = @as(c_int, 1010);
pub const __MAC_10_2 = @as(c_int, 1020);
pub const __MAC_10_3 = @as(c_int, 1030);
pub const __MAC_10_4 = @as(c_int, 1040);
pub const __MAC_10_5 = @as(c_int, 1050);
pub const __MAC_10_6 = @as(c_int, 1060);
pub const __MAC_10_7 = @as(c_int, 1070);
pub const __MAC_10_8 = @as(c_int, 1080);
pub const __MAC_10_9 = @as(c_int, 1090);
pub const __MAC_10_10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101000, .decimal);
pub const __MAC_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101002, .decimal);
pub const __MAC_10_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101003, .decimal);
pub const __MAC_10_11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101100, .decimal);
pub const __MAC_10_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101102, .decimal);
pub const __MAC_10_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101103, .decimal);
pub const __MAC_10_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101104, .decimal);
pub const __MAC_10_12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101200, .decimal);
pub const __MAC_10_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101201, .decimal);
pub const __MAC_10_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101202, .decimal);
pub const __MAC_10_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101204, .decimal);
pub const __MAC_10_13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101300, .decimal);
pub const __MAC_10_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101301, .decimal);
pub const __MAC_10_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101302, .decimal);
pub const __MAC_10_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101304, .decimal);
pub const __MAC_10_14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101400, .decimal);
pub const __MAC_10_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101401, .decimal);
pub const __MAC_10_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101404, .decimal);
pub const __MAC_10_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101405, .decimal);
pub const __MAC_10_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101406, .decimal);
pub const __MAC_10_15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101500, .decimal);
pub const __MAC_10_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101501, .decimal);
pub const __MAC_10_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101504, .decimal);
pub const __MAC_10_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101600, .decimal);
pub const __MAC_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __MAC_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __MAC_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __MAC_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __MAC_11_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110500, .decimal);
pub const __MAC_11_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110600, .decimal);
pub const __MAC_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __MAC_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __MAC_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __MAC_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __MAC_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __MAC_12_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120500, .decimal);
pub const __MAC_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __MAC_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __MAC_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __MAC_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __MAC_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __MAC_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __IPHONE_2_0 = @as(c_int, 20000);
pub const __IPHONE_2_1 = @as(c_int, 20100);
pub const __IPHONE_2_2 = @as(c_int, 20200);
pub const __IPHONE_3_0 = @as(c_int, 30000);
pub const __IPHONE_3_1 = @as(c_int, 30100);
pub const __IPHONE_3_2 = @as(c_int, 30200);
pub const __IPHONE_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __IPHONE_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __IPHONE_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __IPHONE_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __IPHONE_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __IPHONE_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __IPHONE_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __IPHONE_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __IPHONE_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __IPHONE_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __IPHONE_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __IPHONE_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __IPHONE_8_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80200, .decimal);
pub const __IPHONE_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __IPHONE_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __IPHONE_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __IPHONE_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __IPHONE_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __IPHONE_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __IPHONE_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __IPHONE_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __IPHONE_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __IPHONE_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100300, .decimal);
pub const __IPHONE_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __IPHONE_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __IPHONE_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __IPHONE_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __IPHONE_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __IPHONE_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __IPHONE_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __IPHONE_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __IPHONE_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __IPHONE_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __IPHONE_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __IPHONE_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __IPHONE_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __IPHONE_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __IPHONE_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __IPHONE_13_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130500, .decimal);
pub const __IPHONE_13_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130600, .decimal);
pub const __IPHONE_13_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130700, .decimal);
pub const __IPHONE_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __IPHONE_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __IPHONE_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __IPHONE_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __IPHONE_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __IPHONE_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140400, .decimal);
pub const __IPHONE_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __IPHONE_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __IPHONE_14_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140800, .decimal);
pub const __IPHONE_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __IPHONE_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __IPHONE_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __IPHONE_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __IPHONE_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __IPHONE_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __IPHONE_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __IPHONE_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __IPHONE_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __IPHONE_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __IPHONE_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __IPHONE_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __IPHONE_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __IPHONE_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __WATCHOS_1_0 = @as(c_int, 10000);
pub const __WATCHOS_2_0 = @as(c_int, 20000);
pub const __WATCHOS_2_1 = @as(c_int, 20100);
pub const __WATCHOS_2_2 = @as(c_int, 20200);
pub const __WATCHOS_3_0 = @as(c_int, 30000);
pub const __WATCHOS_3_1 = @as(c_int, 30100);
pub const __WATCHOS_3_1_1 = @as(c_int, 30101);
pub const __WATCHOS_3_2 = @as(c_int, 30200);
pub const __WATCHOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __WATCHOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __WATCHOS_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __WATCHOS_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __WATCHOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __WATCHOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __WATCHOS_5_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50200, .decimal);
pub const __WATCHOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __WATCHOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __WATCHOS_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __WATCHOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __WATCHOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __WATCHOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __WATCHOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __WATCHOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __WATCHOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __WATCHOS_7_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70500, .decimal);
pub const __WATCHOS_7_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70600, .decimal);
pub const __WATCHOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __WATCHOS_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __WATCHOS_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __WATCHOS_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __WATCHOS_8_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80500, .decimal);
pub const __WATCHOS_8_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80600, .decimal);
pub const __WATCHOS_8_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80700, .decimal);
pub const __WATCHOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __WATCHOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __WATCHOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __WATCHOS_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __WATCHOS_9_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90400, .decimal);
pub const __WATCHOS_9_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90500, .decimal);
pub const __WATCHOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __TVOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __TVOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __TVOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __TVOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __TVOS_10_0_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100001, .decimal);
pub const __TVOS_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __TVOS_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __TVOS_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __TVOS_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __TVOS_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __TVOS_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __TVOS_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __TVOS_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __TVOS_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __TVOS_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __TVOS_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __TVOS_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __TVOS_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __TVOS_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __TVOS_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __TVOS_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __TVOS_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __TVOS_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __TVOS_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __TVOS_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __TVOS_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __TVOS_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __TVOS_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __TVOS_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __TVOS_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __TVOS_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __TVOS_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __TVOS_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __TVOS_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __TVOS_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __TVOS_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __TVOS_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __TVOS_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __TVOS_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __TVOS_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __TVOS_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __TVOS_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __BRIDGEOS_2_0 = @as(c_int, 20000);
pub const __BRIDGEOS_3_0 = @as(c_int, 30000);
pub const __BRIDGEOS_3_1 = @as(c_int, 30100);
pub const __BRIDGEOS_3_4 = @as(c_int, 30400);
pub const __BRIDGEOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __BRIDGEOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __BRIDGEOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __BRIDGEOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __BRIDGEOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __BRIDGEOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __BRIDGEOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __BRIDGEOS_6_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60400, .decimal);
pub const __BRIDGEOS_6_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60500, .decimal);
pub const __BRIDGEOS_6_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60600, .decimal);
pub const __BRIDGEOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __BRIDGEOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __BRIDGEOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __BRIDGEOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __BRIDGEOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __BRIDGEOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __DRIVERKIT_19_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 190000, .decimal);
pub const __DRIVERKIT_20_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 200000, .decimal);
pub const __DRIVERKIT_21_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 210000, .decimal);
pub const __DRIVERKIT_22_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220000, .decimal);
pub const __DRIVERKIT_22_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220400, .decimal);
pub const __DRIVERKIT_22_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220500, .decimal);
pub const __DRIVERKIT_23_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230000, .decimal);
pub const __XROS_1_0 = @as(c_int, 10000);
pub const MAC_OS_X_VERSION_10_0 = __MAC_10_0;
pub const MAC_OS_X_VERSION_10_1 = __MAC_10_1;
pub const MAC_OS_X_VERSION_10_2 = __MAC_10_2;
pub const MAC_OS_X_VERSION_10_3 = __MAC_10_3;
pub const MAC_OS_X_VERSION_10_4 = __MAC_10_4;
pub const MAC_OS_X_VERSION_10_5 = __MAC_10_5;
pub const MAC_OS_X_VERSION_10_6 = __MAC_10_6;
pub const MAC_OS_X_VERSION_10_7 = __MAC_10_7;
pub const MAC_OS_X_VERSION_10_8 = __MAC_10_8;
pub const MAC_OS_X_VERSION_10_9 = __MAC_10_9;
pub const MAC_OS_X_VERSION_10_10 = __MAC_10_10;
pub const MAC_OS_X_VERSION_10_10_2 = __MAC_10_10_2;
pub const MAC_OS_X_VERSION_10_10_3 = __MAC_10_10_3;
pub const MAC_OS_X_VERSION_10_11 = __MAC_10_11;
pub const MAC_OS_X_VERSION_10_11_2 = __MAC_10_11_2;
pub const MAC_OS_X_VERSION_10_11_3 = __MAC_10_11_3;
pub const MAC_OS_X_VERSION_10_11_4 = __MAC_10_11_4;
pub const MAC_OS_X_VERSION_10_12 = __MAC_10_12;
pub const MAC_OS_X_VERSION_10_12_1 = __MAC_10_12_1;
pub const MAC_OS_X_VERSION_10_12_2 = __MAC_10_12_2;
pub const MAC_OS_X_VERSION_10_12_4 = __MAC_10_12_4;
pub const MAC_OS_X_VERSION_10_13 = __MAC_10_13;
pub const MAC_OS_X_VERSION_10_13_1 = __MAC_10_13_1;
pub const MAC_OS_X_VERSION_10_13_2 = __MAC_10_13_2;
pub const MAC_OS_X_VERSION_10_13_4 = __MAC_10_13_4;
pub const MAC_OS_X_VERSION_10_14 = __MAC_10_14;
pub const MAC_OS_X_VERSION_10_14_1 = __MAC_10_14_1;
pub const MAC_OS_X_VERSION_10_14_4 = __MAC_10_14_4;
pub const MAC_OS_X_VERSION_10_14_5 = __MAC_10_14_5;
pub const MAC_OS_X_VERSION_10_14_6 = __MAC_10_14_6;
pub const MAC_OS_X_VERSION_10_15 = __MAC_10_15;
pub const MAC_OS_X_VERSION_10_15_1 = __MAC_10_15_1;
pub const MAC_OS_X_VERSION_10_15_4 = __MAC_10_15_4;
pub const MAC_OS_X_VERSION_10_16 = __MAC_10_16;
pub const MAC_OS_VERSION_11_0 = __MAC_11_0;
pub const MAC_OS_VERSION_11_1 = __MAC_11_1;
pub const MAC_OS_VERSION_11_3 = __MAC_11_3;
pub const MAC_OS_VERSION_11_4 = __MAC_11_4;
pub const MAC_OS_VERSION_11_5 = __MAC_11_5;
pub const MAC_OS_VERSION_11_6 = __MAC_11_6;
pub const MAC_OS_VERSION_12_0 = __MAC_12_0;
pub const MAC_OS_VERSION_12_1 = __MAC_12_1;
pub const MAC_OS_VERSION_12_2 = __MAC_12_2;
pub const MAC_OS_VERSION_12_3 = __MAC_12_3;
pub const MAC_OS_VERSION_12_4 = __MAC_12_4;
pub const MAC_OS_VERSION_12_5 = __MAC_12_5;
pub const MAC_OS_VERSION_13_0 = __MAC_13_0;
pub const MAC_OS_VERSION_13_1 = __MAC_13_1;
pub const MAC_OS_VERSION_13_2 = __MAC_13_2;
pub const MAC_OS_VERSION_13_3 = __MAC_13_3;
pub const MAC_OS_VERSION_13_4 = __MAC_13_4;
pub const MAC_OS_VERSION_14_0 = __MAC_14_0;
pub const __AVAILABILITY_INTERNAL__ = "";
pub const __MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__;
pub const __MAC_OS_X_VERSION_MAX_ALLOWED = __MAC_14_0;
pub const __AVAILABILITY_INTERNAL_REGULAR = "";
pub const __AVAILABILITY_INTERNAL_LEGACY__ = "";
pub const __ENABLE_LEGACY_MAC_AVAILABILITY = @as(c_int, 1);
pub inline fn __API_RANGE_STRINGIFY(x: anytype) @TypeOf(__API_RANGE_STRINGIFY2(x)) {
    _ = &x;
    return __API_RANGE_STRINGIFY2(x);
}
pub inline fn __API_AVAILABLE0(arg0: anytype) @TypeOf(__API_A(arg0)) {
    _ = &arg0;
    return __API_A(arg0);
}
pub inline fn __API_AVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A(arg0) ++ __API_A(arg1);
}
pub inline fn __API_AVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2);
}
pub inline fn __API_AVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3);
}
pub inline fn __API_AVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4);
}
pub inline fn __API_AVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5);
}
pub inline fn __API_AVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6);
}
pub inline fn __API_AVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7);
}
pub inline fn __API_AVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_A_BEGIN(arg0)) {
    _ = &arg0;
    return __API_A_BEGIN(arg0);
}
pub inline fn __API_AVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1);
}
pub inline fn __API_AVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2);
}
pub inline fn __API_AVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3);
}
pub inline fn __API_AVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4);
}
pub inline fn __API_AVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5);
}
pub inline fn __API_AVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6);
}
pub inline fn __API_AVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7);
}
pub inline fn __API_DEPRECATED_MSG0(msg: anytype, arg0: anytype) @TypeOf(__API_D(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D(msg, arg0);
}
pub inline fn __API_DEPRECATED_MSG1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1);
}
pub inline fn __API_DEPRECATED_MSG2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2);
}
pub inline fn __API_DEPRECATED_MSG3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3);
}
pub inline fn __API_DEPRECATED_MSG4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4);
}
pub inline fn __API_DEPRECATED_MSG5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5);
}
pub inline fn __API_DEPRECATED_MSG6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6);
}
pub inline fn __API_DEPRECATED_MSG7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7);
}
pub inline fn __API_DEPRECATED_BEGIN0(msg: anytype, arg0: anytype) @TypeOf(__API_D_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_BEGIN1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_BEGIN2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_BEGIN3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_BEGIN4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_BEGIN5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_BEGIN6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_BEGIN7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7);
}
pub inline fn __API_DEPRECATED_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_R(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_R(msg, arg0);
}
pub inline fn __API_DEPRECATED_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1);
}
pub inline fn __API_DEPRECATED_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2);
}
pub inline fn __API_DEPRECATED_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3);
}
pub inline fn __API_DEPRECATED_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4);
}
pub inline fn __API_DEPRECATED_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5);
}
pub inline fn __API_DEPRECATED_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6);
}
pub inline fn __API_DEPRECATED_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7);
}
pub inline fn __API_DEPRECATED_BEGIN_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_R_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_R_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_BEGIN_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_BEGIN_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_BEGIN_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_BEGIN_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_BEGIN_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_BEGIN_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_BEGIN_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7);
}
pub inline fn __API_UNAVAILABLE0(arg0: anytype) @TypeOf(__API_U(arg0)) {
    _ = &arg0;
    return __API_U(arg0);
}
pub inline fn __API_UNAVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U(arg0) ++ __API_U(arg1);
}
pub inline fn __API_UNAVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2);
}
pub inline fn __API_UNAVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3);
}
pub inline fn __API_UNAVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4);
}
pub inline fn __API_UNAVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5);
}
pub inline fn __API_UNAVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6);
}
pub inline fn __API_UNAVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7);
}
pub inline fn __API_UNAVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_U_BEGIN(arg0)) {
    _ = &arg0;
    return __API_U_BEGIN(arg0);
}
pub inline fn __API_UNAVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1);
}
pub inline fn __API_UNAVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2);
}
pub inline fn __API_UNAVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3);
}
pub inline fn __API_UNAVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4);
}
pub inline fn __API_UNAVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5);
}
pub inline fn __API_UNAVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6);
}
pub inline fn __API_UNAVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7);
}
pub inline fn __OS_EXTENSION_UNAVAILABLE(_msg: anytype) @TypeOf(__OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg)) {
    _ = &_msg;
    return __OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg);
}
pub const __TYPES_H_ = "";
pub const _SYS__TYPES_H_ = "";
pub const _BSD_MACHINE__TYPES_H_ = "";
pub const _BSD_ARM__TYPES_H_ = "";
pub const __DARWIN_NULL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const _SYS__PTHREAD_TYPES_H_ = "";
pub const __PTHREAD_SIZE__ = @as(c_int, 8176);
pub const __PTHREAD_ATTR_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_MUTEXATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_MUTEX_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_CONDATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_COND_SIZE__ = @as(c_int, 40);
pub const __PTHREAD_ONCE_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_RWLOCK_SIZE__ = @as(c_int, 192);
pub const __PTHREAD_RWLOCKATTR_SIZE__ = @as(c_int, 16);
pub const __DARWIN_WCHAR_MAX = __WCHAR_MAX__;
pub const __DARWIN_WCHAR_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex) - @as(c_int, 1);
pub const __DARWIN_WEOF = @import("std").zig.c_translation.cast(__darwin_wint_t, -@as(c_int, 1));
pub const _FORTIFY_SOURCE = @as(c_int, 2);
pub const _VA_LIST_T = "";
pub const _BSD_MACHINE_TYPES_H_ = "";
pub const _ARM_MACHTYPES_H_ = "";
pub const _MACHTYPES_H_ = "";
pub const _INT8_T = "";
pub const _INT16_T = "";
pub const _INT32_T = "";
pub const _INT64_T = "";
pub const _U_INT8_T = "";
pub const _U_INT16_T = "";
pub const _U_INT32_T = "";
pub const _U_INT64_T = "";
pub const _INTPTR_T = "";
pub const _UINTPTR_T = "";
pub const USER_ADDR_NULL = @import("std").zig.c_translation.cast(user_addr_t, @as(c_int, 0));
pub inline fn CAST_USER_ADDR_T(a_ptr: anytype) user_addr_t {
    _ = &a_ptr;
    return @import("std").zig.c_translation.cast(user_addr_t, @import("std").zig.c_translation.cast(usize, a_ptr));
}
pub const _SIZE_T = "";
pub const NULL = __DARWIN_NULL;
pub const _SYS_STDIO_H_ = "";
pub const RENAME_SECLUDE = @as(c_int, 0x00000001);
pub const RENAME_SWAP = @as(c_int, 0x00000002);
pub const RENAME_EXCL = @as(c_int, 0x00000004);
pub const RENAME_RESERVED1 = @as(c_int, 0x00000008);
pub const RENAME_NOFOLLOW_ANY = @as(c_int, 0x00000010);
pub const _FSTDIO = "";
pub const _SEEK_SET_H_ = "";
pub const SEEK_SET = @as(c_int, 0);
pub const SEEK_CUR = @as(c_int, 1);
pub const SEEK_END = @as(c_int, 2);
pub const SEEK_HOLE = @as(c_int, 3);
pub const SEEK_DATA = @as(c_int, 4);
pub const __SLBF = @as(c_int, 0x0001);
pub const __SNBF = @as(c_int, 0x0002);
pub const __SRD = @as(c_int, 0x0004);
pub const __SWR = @as(c_int, 0x0008);
pub const __SRW = @as(c_int, 0x0010);
pub const __SEOF = @as(c_int, 0x0020);
pub const __SERR = @as(c_int, 0x0040);
pub const __SMBF = @as(c_int, 0x0080);
pub const __SAPP = @as(c_int, 0x0100);
pub const __SSTR = @as(c_int, 0x0200);
pub const __SOPT = @as(c_int, 0x0400);
pub const __SNPT = @as(c_int, 0x0800);
pub const __SOFF = @as(c_int, 0x1000);
pub const __SMOD = @as(c_int, 0x2000);
pub const __SALC = @as(c_int, 0x4000);
pub const __SIGN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const _IOFBF = @as(c_int, 0);
pub const _IOLBF = @as(c_int, 1);
pub const _IONBF = @as(c_int, 2);
pub const BUFSIZ = @as(c_int, 1024);
pub const EOF = -@as(c_int, 1);
pub const FOPEN_MAX = @as(c_int, 20);
pub const FILENAME_MAX = @as(c_int, 1024);
pub const P_tmpdir = "/var/tmp/";
pub const L_tmpnam = @as(c_int, 1024);
pub const TMP_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 308915776, .decimal);
pub const stdin = __stdinp;
pub const stdout = __stdoutp;
pub const stderr = __stderrp;
pub const L_ctermid = @as(c_int, 1024);
pub const _CTERMID_H_ = "";
pub inline fn __sfeof(p: anytype) @TypeOf((p.*._flags & __SEOF) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SEOF) != @as(c_int, 0);
}
pub inline fn __sferror(p: anytype) @TypeOf((p.*._flags & __SERR) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SERR) != @as(c_int, 0);
}
pub inline fn __sfileno(p: anytype) @TypeOf(p.*._file) {
    _ = &p;
    return p.*._file;
}
pub const _OFF_T = "";
pub const _SSIZE_T = "";
pub inline fn fropen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0));
}
pub inline fn fwopen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0));
}
pub inline fn feof_unlocked(p: anytype) @TypeOf(__sfeof(p)) {
    _ = &p;
    return __sfeof(p);
}
pub inline fn ferror_unlocked(p: anytype) @TypeOf(__sferror(p)) {
    _ = &p;
    return __sferror(p);
}
pub inline fn clearerr_unlocked(p: anytype) @TypeOf(__sclearerr(p)) {
    _ = &p;
    return __sclearerr(p);
}
pub inline fn fileno_unlocked(p: anytype) @TypeOf(__sfileno(p)) {
    _ = &p;
    return __sfileno(p);
}
pub const _SECURE__STDIO_H_ = "";
pub const _SECURE__COMMON_H_ = "";
pub const _USE_FORTIFY_LEVEL = @as(c_int, 2);
pub inline fn __darwin_obsz0(object: anytype) @TypeOf(__builtin_object_size(object, @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, @as(c_int, 0));
}
pub inline fn __darwin_obsz(object: anytype) @TypeOf(__builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0));
}
pub const STBI_VERSION = @as(c_int, 1);
pub const _STDLIB_H_ = "";
pub const _SYS_WAIT_H_ = "";
pub const _PID_T = "";
pub const _ID_T = "";
pub const _SYS_SIGNAL_H_ = "";
pub const __SYS_APPLEAPIOPTS_H__ = "";
pub const __APPLE_API_STANDARD = "";
pub const __APPLE_API_STABLE = "";
pub const __APPLE_API_EVOLVING = "";
pub const __APPLE_API_UNSTABLE = "";
pub const __APPLE_API_PRIVATE = "";
pub const __APPLE_API_OBSOLETE = "";
pub const __DARWIN_NSIG = @as(c_int, 32);
pub const NSIG = __DARWIN_NSIG;
pub const _BSD_MACHINE_SIGNAL_H_ = "";
pub const _ARM_SIGNAL_ = @as(c_int, 1);
pub const SIGHUP = @as(c_int, 1);
pub const SIGINT = @as(c_int, 2);
pub const SIGQUIT = @as(c_int, 3);
pub const SIGILL = @as(c_int, 4);
pub const SIGTRAP = @as(c_int, 5);
pub const SIGABRT = @as(c_int, 6);
pub const SIGIOT = SIGABRT;
pub const SIGEMT = @as(c_int, 7);
pub const SIGFPE = @as(c_int, 8);
pub const SIGKILL = @as(c_int, 9);
pub const SIGBUS = @as(c_int, 10);
pub const SIGSEGV = @as(c_int, 11);
pub const SIGSYS = @as(c_int, 12);
pub const SIGPIPE = @as(c_int, 13);
pub const SIGALRM = @as(c_int, 14);
pub const SIGTERM = @as(c_int, 15);
pub const SIGURG = @as(c_int, 16);
pub const SIGSTOP = @as(c_int, 17);
pub const SIGTSTP = @as(c_int, 18);
pub const SIGCONT = @as(c_int, 19);
pub const SIGCHLD = @as(c_int, 20);
pub const SIGTTIN = @as(c_int, 21);
pub const SIGTTOU = @as(c_int, 22);
pub const SIGIO = @as(c_int, 23);
pub const SIGXCPU = @as(c_int, 24);
pub const SIGXFSZ = @as(c_int, 25);
pub const SIGVTALRM = @as(c_int, 26);
pub const SIGPROF = @as(c_int, 27);
pub const SIGWINCH = @as(c_int, 28);
pub const SIGINFO = @as(c_int, 29);
pub const SIGUSR1 = @as(c_int, 30);
pub const SIGUSR2 = @as(c_int, 31);
pub const _BSD_MACHINE__MCONTEXT_H_ = "";
pub const __ARM_MCONTEXT_H_ = "";
pub const _MACH_MACHINE__STRUCTS_H_ = "";
pub const _MACH_ARM__STRUCTS_H_ = "";
pub const _STRUCT_ARM_EXCEPTION_STATE = struct___darwin_arm_exception_state;
pub const _STRUCT_ARM_EXCEPTION_STATE64 = struct___darwin_arm_exception_state64;
pub const _STRUCT_ARM_THREAD_STATE = struct___darwin_arm_thread_state;
pub const __DARWIN_OPAQUE_ARM_THREAD_STATE64 = @as(c_int, 0);
pub const _STRUCT_ARM_THREAD_STATE64 = struct___darwin_arm_thread_state64;
pub inline fn __darwin_arm_thread_state64_get_pc(ts: anytype) @TypeOf(ts.__pc) {
    _ = &ts;
    return ts.__pc;
}
pub inline fn __darwin_arm_thread_state64_get_pc_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__pc));
}
pub inline fn __darwin_arm_thread_state64_get_lr(ts: anytype) @TypeOf(ts.__lr) {
    _ = &ts;
    return ts.__lr;
}
pub inline fn __darwin_arm_thread_state64_get_lr_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__lr));
}
pub inline fn __darwin_arm_thread_state64_get_sp(ts: anytype) @TypeOf(ts.__sp) {
    _ = &ts;
    return ts.__sp;
}
pub inline fn __darwin_arm_thread_state64_get_fp(ts: anytype) @TypeOf(ts.__fp) {
    _ = &ts;
    return ts.__fp;
}
pub const __darwin_arm_thread_state64_ptrauth_strip = @import("std").zig.c_translation.Macros.DISCARD;
pub const _STRUCT_ARM_VFP_STATE = struct___darwin_arm_vfp_state;
pub const _STRUCT_ARM_NEON_STATE64 = struct___darwin_arm_neon_state64;
pub const _STRUCT_ARM_NEON_STATE = struct___darwin_arm_neon_state;
pub const _STRUCT_ARM_PAGEIN_STATE = struct___arm_pagein_state;
pub const _STRUCT_ARM_LEGACY_DEBUG_STATE = struct___arm_legacy_debug_state;
pub const _STRUCT_ARM_DEBUG_STATE32 = struct___darwin_arm_debug_state32;
pub const _STRUCT_ARM_DEBUG_STATE64 = struct___darwin_arm_debug_state64;
pub const _STRUCT_ARM_CPMU_STATE64 = struct___darwin_arm_cpmu_state64;
pub const _STRUCT_MCONTEXT32 = struct___darwin_mcontext32;
pub const _STRUCT_MCONTEXT64 = struct___darwin_mcontext64;
pub const _MCONTEXT_T = "";
pub const _STRUCT_MCONTEXT = _STRUCT_MCONTEXT64;
pub const _PTHREAD_ATTR_T = "";
pub const _STRUCT_SIGALTSTACK = struct___darwin_sigaltstack;
pub const _STRUCT_UCONTEXT = struct___darwin_ucontext;
pub const _SIGSET_T = "";
pub const _UID_T = "";
pub const SIGEV_NONE = @as(c_int, 0);
pub const SIGEV_SIGNAL = @as(c_int, 1);
pub const SIGEV_THREAD = @as(c_int, 3);
pub const ILL_NOOP = @as(c_int, 0);
pub const ILL_ILLOPC = @as(c_int, 1);
pub const ILL_ILLTRP = @as(c_int, 2);
pub const ILL_PRVOPC = @as(c_int, 3);
pub const ILL_ILLOPN = @as(c_int, 4);
pub const ILL_ILLADR = @as(c_int, 5);
pub const ILL_PRVREG = @as(c_int, 6);
pub const ILL_COPROC = @as(c_int, 7);
pub const ILL_BADSTK = @as(c_int, 8);
pub const FPE_NOOP = @as(c_int, 0);
pub const FPE_FLTDIV = @as(c_int, 1);
pub const FPE_FLTOVF = @as(c_int, 2);
pub const FPE_FLTUND = @as(c_int, 3);
pub const FPE_FLTRES = @as(c_int, 4);
pub const FPE_FLTINV = @as(c_int, 5);
pub const FPE_FLTSUB = @as(c_int, 6);
pub const FPE_INTDIV = @as(c_int, 7);
pub const FPE_INTOVF = @as(c_int, 8);
pub const SEGV_NOOP = @as(c_int, 0);
pub const SEGV_MAPERR = @as(c_int, 1);
pub const SEGV_ACCERR = @as(c_int, 2);
pub const BUS_NOOP = @as(c_int, 0);
pub const BUS_ADRALN = @as(c_int, 1);
pub const BUS_ADRERR = @as(c_int, 2);
pub const BUS_OBJERR = @as(c_int, 3);
pub const TRAP_BRKPT = @as(c_int, 1);
pub const TRAP_TRACE = @as(c_int, 2);
pub const CLD_NOOP = @as(c_int, 0);
pub const CLD_EXITED = @as(c_int, 1);
pub const CLD_KILLED = @as(c_int, 2);
pub const CLD_DUMPED = @as(c_int, 3);
pub const CLD_TRAPPED = @as(c_int, 4);
pub const CLD_STOPPED = @as(c_int, 5);
pub const CLD_CONTINUED = @as(c_int, 6);
pub const POLL_IN = @as(c_int, 1);
pub const POLL_OUT = @as(c_int, 2);
pub const POLL_MSG = @as(c_int, 3);
pub const POLL_ERR = @as(c_int, 4);
pub const POLL_PRI = @as(c_int, 5);
pub const POLL_HUP = @as(c_int, 6);
pub const sa_handler = __sigaction_u.__sa_handler;
pub const sa_sigaction = __sigaction_u.__sa_sigaction;
pub const SA_ONSTACK = @as(c_int, 0x0001);
pub const SA_RESTART = @as(c_int, 0x0002);
pub const SA_RESETHAND = @as(c_int, 0x0004);
pub const SA_NOCLDSTOP = @as(c_int, 0x0008);
pub const SA_NODEFER = @as(c_int, 0x0010);
pub const SA_NOCLDWAIT = @as(c_int, 0x0020);
pub const SA_SIGINFO = @as(c_int, 0x0040);
pub const SA_USERTRAMP = @as(c_int, 0x0100);
pub const SA_64REGSET = @as(c_int, 0x0200);
pub const SA_USERSPACE_MASK = (((((SA_ONSTACK | SA_RESTART) | SA_RESETHAND) | SA_NOCLDSTOP) | SA_NODEFER) | SA_NOCLDWAIT) | SA_SIGINFO;
pub const SIG_BLOCK = @as(c_int, 1);
pub const SIG_UNBLOCK = @as(c_int, 2);
pub const SIG_SETMASK = @as(c_int, 3);
pub const SI_USER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10001, .hex);
pub const SI_QUEUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10002, .hex);
pub const SI_TIMER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10003, .hex);
pub const SI_ASYNCIO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004, .hex);
pub const SI_MESGQ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10005, .hex);
pub const SS_ONSTACK = @as(c_int, 0x0001);
pub const SS_DISABLE = @as(c_int, 0x0004);
pub const MINSIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const SIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 131072, .decimal);
pub const SV_ONSTACK = SA_ONSTACK;
pub const SV_INTERRUPT = SA_RESTART;
pub const SV_RESETHAND = SA_RESETHAND;
pub const SV_NODEFER = SA_NODEFER;
pub const SV_NOCLDSTOP = SA_NOCLDSTOP;
pub const SV_SIGINFO = SA_SIGINFO;
pub inline fn sigmask(m: anytype) @TypeOf(@as(c_int, 1) << (m - @as(c_int, 1))) {
    _ = &m;
    return @as(c_int, 1) << (m - @as(c_int, 1));
}
pub const BADSIG = SIG_ERR;
pub const _SYS_RESOURCE_H_ = "";
pub const __CLANG_STDINT_H = "";
pub const _STDINT_H_ = "";
pub const __WORDSIZE = @as(c_int, 64);
pub const _UINT8_T = "";
pub const _UINT16_T = "";
pub const _UINT32_T = "";
pub const _UINT64_T = "";
pub const _INTMAX_T = "";
pub const _UINTMAX_T = "";
pub inline fn INT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT32_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const INT64_C = @import("std").zig.c_translation.Macros.LL_SUFFIX;
pub inline fn UINT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn UINT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const UINT32_C = @import("std").zig.c_translation.Macros.U_SUFFIX;
pub const UINT64_C = @import("std").zig.c_translation.Macros.ULL_SUFFIX;
pub const INTMAX_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const UINTMAX_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INT8_MAX = @as(c_int, 127);
pub const INT16_MAX = @as(c_int, 32767);
pub const INT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT64_MAX = @as(c_longlong, 9223372036854775807);
pub const INT8_MIN = -@as(c_int, 128);
pub const INT16_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const INT32_MIN = -INT32_MAX - @as(c_int, 1);
pub const INT64_MIN = -INT64_MAX - @as(c_int, 1);
pub const UINT8_MAX = @as(c_int, 255);
pub const UINT16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UINT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const UINT64_MAX = @as(c_ulonglong, 18446744073709551615);
pub const INT_LEAST8_MIN = INT8_MIN;
pub const INT_LEAST16_MIN = INT16_MIN;
pub const INT_LEAST32_MIN = INT32_MIN;
pub const INT_LEAST64_MIN = INT64_MIN;
pub const INT_LEAST8_MAX = INT8_MAX;
pub const INT_LEAST16_MAX = INT16_MAX;
pub const INT_LEAST32_MAX = INT32_MAX;
pub const INT_LEAST64_MAX = INT64_MAX;
pub const UINT_LEAST8_MAX = UINT8_MAX;
pub const UINT_LEAST16_MAX = UINT16_MAX;
pub const UINT_LEAST32_MAX = UINT32_MAX;
pub const UINT_LEAST64_MAX = UINT64_MAX;
pub const INT_FAST8_MIN = INT8_MIN;
pub const INT_FAST16_MIN = INT16_MIN;
pub const INT_FAST32_MIN = INT32_MIN;
pub const INT_FAST64_MIN = INT64_MIN;
pub const INT_FAST8_MAX = INT8_MAX;
pub const INT_FAST16_MAX = INT16_MAX;
pub const INT_FAST32_MAX = INT32_MAX;
pub const INT_FAST64_MAX = INT64_MAX;
pub const UINT_FAST8_MAX = UINT8_MAX;
pub const UINT_FAST16_MAX = UINT16_MAX;
pub const UINT_FAST32_MAX = UINT32_MAX;
pub const UINT_FAST64_MAX = UINT64_MAX;
pub const INTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const INTPTR_MIN = -INTPTR_MAX - @as(c_int, 1);
pub const UINTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const INTMAX_MAX = INTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINTMAX_MAX = UINTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INTMAX_MIN = -INTMAX_MAX - @as(c_int, 1);
pub const PTRDIFF_MIN = INTMAX_MIN;
pub const PTRDIFF_MAX = INTMAX_MAX;
pub const SIZE_MAX = UINTPTR_MAX;
pub const RSIZE_MAX = SIZE_MAX >> @as(c_int, 1);
pub const WCHAR_MAX = __WCHAR_MAX__;
pub const WCHAR_MIN = -WCHAR_MAX - @as(c_int, 1);
pub const WINT_MIN = INT32_MIN;
pub const WINT_MAX = INT32_MAX;
pub const SIG_ATOMIC_MIN = INT32_MIN;
pub const SIG_ATOMIC_MAX = INT32_MAX;
pub const _STRUCT_TIMEVAL = struct_timeval;
pub const PRIO_PROCESS = @as(c_int, 0);
pub const PRIO_PGRP = @as(c_int, 1);
pub const PRIO_USER = @as(c_int, 2);
pub const PRIO_DARWIN_THREAD = @as(c_int, 3);
pub const PRIO_DARWIN_PROCESS = @as(c_int, 4);
pub const PRIO_MIN = -@as(c_int, 20);
pub const PRIO_MAX = @as(c_int, 20);
pub const PRIO_DARWIN_BG = @as(c_int, 0x1000);
pub const PRIO_DARWIN_NONUI = @as(c_int, 0x1001);
pub const RUSAGE_SELF = @as(c_int, 0);
pub const RUSAGE_CHILDREN = -@as(c_int, 1);
pub const RUSAGE_INFO_V0 = @as(c_int, 0);
pub const RUSAGE_INFO_V1 = @as(c_int, 1);
pub const RUSAGE_INFO_V2 = @as(c_int, 2);
pub const RUSAGE_INFO_V3 = @as(c_int, 3);
pub const RUSAGE_INFO_V4 = @as(c_int, 4);
pub const RUSAGE_INFO_V5 = @as(c_int, 5);
pub const RUSAGE_INFO_V6 = @as(c_int, 6);
pub const RUSAGE_INFO_CURRENT = RUSAGE_INFO_V6;
pub const RU_PROC_RUNS_RESLIDE = @as(c_int, 0x00000001);
pub const RLIM_INFINITY = (@import("std").zig.c_translation.cast(__uint64_t, @as(c_int, 1)) << @as(c_int, 63)) - @as(c_int, 1);
pub const RLIM_SAVED_MAX = RLIM_INFINITY;
pub const RLIM_SAVED_CUR = RLIM_INFINITY;
pub const RLIMIT_CPU = @as(c_int, 0);
pub const RLIMIT_FSIZE = @as(c_int, 1);
pub const RLIMIT_DATA = @as(c_int, 2);
pub const RLIMIT_STACK = @as(c_int, 3);
pub const RLIMIT_CORE = @as(c_int, 4);
pub const RLIMIT_AS = @as(c_int, 5);
pub const RLIMIT_RSS = RLIMIT_AS;
pub const RLIMIT_MEMLOCK = @as(c_int, 6);
pub const RLIMIT_NPROC = @as(c_int, 7);
pub const RLIMIT_NOFILE = @as(c_int, 8);
pub const RLIM_NLIMITS = @as(c_int, 9);
pub const _RLIMIT_POSIX_FLAG = @as(c_int, 0x1000);
pub const RLIMIT_WAKEUPS_MONITOR = @as(c_int, 0x1);
pub const RLIMIT_CPU_USAGE_MONITOR = @as(c_int, 0x2);
pub const RLIMIT_THREAD_CPULIMITS = @as(c_int, 0x3);
pub const RLIMIT_FOOTPRINT_INTERVAL = @as(c_int, 0x4);
pub const WAKEMON_ENABLE = @as(c_int, 0x01);
pub const WAKEMON_DISABLE = @as(c_int, 0x02);
pub const WAKEMON_GET_PARAMS = @as(c_int, 0x04);
pub const WAKEMON_SET_DEFAULTS = @as(c_int, 0x08);
pub const WAKEMON_MAKE_FATAL = @as(c_int, 0x10);
pub const CPUMON_MAKE_FATAL = @as(c_int, 0x1000);
pub const FOOTPRINT_INTERVAL_RESET = @as(c_int, 0x1);
pub const IOPOL_TYPE_DISK = @as(c_int, 0);
pub const IOPOL_TYPE_VFS_ATIME_UPDATES = @as(c_int, 2);
pub const IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = @as(c_int, 3);
pub const IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = @as(c_int, 4);
pub const IOPOL_TYPE_VFS_TRIGGER_RESOLVE = @as(c_int, 5);
pub const IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION = @as(c_int, 6);
pub const IOPOL_TYPE_VFS_IGNORE_PERMISSIONS = @as(c_int, 7);
pub const IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE = @as(c_int, 8);
pub const IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES = @as(c_int, 9);
pub const IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY = @as(c_int, 10);
pub const IOPOL_SCOPE_PROCESS = @as(c_int, 0);
pub const IOPOL_SCOPE_THREAD = @as(c_int, 1);
pub const IOPOL_SCOPE_DARWIN_BG = @as(c_int, 2);
pub const IOPOL_DEFAULT = @as(c_int, 0);
pub const IOPOL_IMPORTANT = @as(c_int, 1);
pub const IOPOL_PASSIVE = @as(c_int, 2);
pub const IOPOL_THROTTLE = @as(c_int, 3);
pub const IOPOL_UTILITY = @as(c_int, 4);
pub const IOPOL_STANDARD = @as(c_int, 5);
pub const IOPOL_APPLICATION = IOPOL_STANDARD;
pub const IOPOL_NORMAL = IOPOL_IMPORTANT;
pub const IOPOL_ATIME_UPDATES_DEFAULT = @as(c_int, 0);
pub const IOPOL_ATIME_UPDATES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = @as(c_int, 0);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_ON = @as(c_int, 2);
pub const IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = @as(c_int, 1);
pub const IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_TRIGGER_RESOLVE_OFF = @as(c_int, 1);
pub const IOPOL_VFS_CONTENT_PROTECTION_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_CONTENT_PROTECTION_IGNORE = @as(c_int, 1);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_OFF = @as(c_int, 0);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_ON = @as(c_int, 1);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_OFF = @as(c_int, 0);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_ON = @as(c_int, 1);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF = @as(c_int, 0);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON = @as(c_int, 1);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON = @as(c_int, 1);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON = @as(c_int, 1);
pub const WNOHANG = @as(c_int, 0x00000001);
pub const WUNTRACED = @as(c_int, 0x00000002);
pub inline fn _W_INT(w: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]c_int, &w).*) {
    _ = &w;
    return @import("std").zig.c_translation.cast([*c]c_int, &w).*;
}
pub const WCOREFLAG = @as(c_int, 0o200);
pub inline fn _WSTATUS(x: anytype) @TypeOf(_W_INT(x) & @as(c_int, 0o177)) {
    _ = &x;
    return _W_INT(x) & @as(c_int, 0o177);
}
pub const _WSTOPPED = @as(c_int, 0o177);
pub inline fn WEXITSTATUS(x: anytype) @TypeOf((_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff)) {
    _ = &x;
    return (_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff);
}
pub inline fn WSTOPSIG(x: anytype) @TypeOf(_W_INT(x) >> @as(c_int, 8)) {
    _ = &x;
    return _W_INT(x) >> @as(c_int, 8);
}
pub inline fn WIFCONTINUED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13));
}
pub inline fn WIFSTOPPED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13));
}
pub inline fn WIFEXITED(x: anytype) @TypeOf(_WSTATUS(x) == @as(c_int, 0)) {
    _ = &x;
    return _WSTATUS(x) == @as(c_int, 0);
}
pub inline fn WIFSIGNALED(x: anytype) @TypeOf((_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0))) {
    _ = &x;
    return (_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0));
}
pub inline fn WTERMSIG(x: anytype) @TypeOf(_WSTATUS(x)) {
    _ = &x;
    return _WSTATUS(x);
}
pub inline fn WCOREDUMP(x: anytype) @TypeOf(_W_INT(x) & WCOREFLAG) {
    _ = &x;
    return _W_INT(x) & WCOREFLAG;
}
pub inline fn W_EXITCODE(ret: anytype, sig: anytype) @TypeOf((ret << @as(c_int, 8)) | sig) {
    _ = &ret;
    _ = &sig;
    return (ret << @as(c_int, 8)) | sig;
}
pub inline fn W_STOPCODE(sig: anytype) @TypeOf((sig << @as(c_int, 8)) | _WSTOPPED) {
    _ = &sig;
    return (sig << @as(c_int, 8)) | _WSTOPPED;
}
pub const WEXITED = @as(c_int, 0x00000004);
pub const WSTOPPED = @as(c_int, 0x00000008);
pub const WCONTINUED = @as(c_int, 0x00000010);
pub const WNOWAIT = @as(c_int, 0x00000020);
pub const WAIT_ANY = -@as(c_int, 1);
pub const WAIT_MYPGRP = @as(c_int, 0);
pub const _BSD_MACHINE_ENDIAN_H_ = "";
pub const _ARM__ENDIAN_H_ = "";
pub const _QUAD_HIGHWORD = @as(c_int, 1);
pub const _QUAD_LOWWORD = @as(c_int, 0);
pub const __DARWIN_LITTLE_ENDIAN = @as(c_int, 1234);
pub const __DARWIN_BIG_ENDIAN = @as(c_int, 4321);
pub const __DARWIN_PDP_ENDIAN = @as(c_int, 3412);
pub const __DARWIN_BYTE_ORDER = __DARWIN_LITTLE_ENDIAN;
pub const LITTLE_ENDIAN = __DARWIN_LITTLE_ENDIAN;
pub const BIG_ENDIAN = __DARWIN_BIG_ENDIAN;
pub const PDP_ENDIAN = __DARWIN_PDP_ENDIAN;
pub const BYTE_ORDER = __DARWIN_BYTE_ORDER;
pub const _SYS__ENDIAN_H_ = "";
pub const _OS__OSBYTEORDER_H = "";
pub inline fn __DARWIN_OSSwapConstInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0xff00)) >> @as(c_int, 8)) | ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0x00ff)) << @as(c_int, 8)));
}
pub inline fn __DARWIN_OSSwapConstInt32(x: anytype) __uint32_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint32_t, ((((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xff000000, .hex)) >> @as(c_int, 24)) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00ff0000, .hex)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x0000ff00)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x000000ff)) << @as(c_int, 24)));
}
pub inline fn __DARWIN_OSSwapConstInt64(x: anytype) __uint64_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint64_t, ((((((((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0xff00000000000000)) >> @as(c_int, 56)) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00ff000000000000)) >> @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000ff0000000000)) >> @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000ff00000000)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000ff000000)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000000000ff0000)) << @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000000000ff00)) << @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000000000ff)) << @as(c_int, 56)));
}
pub const _OS_OSBYTEORDERARM_H = "";
pub const _ARM_ARCH_H = "";
pub inline fn __DARWIN_OSSwapInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt16(x) else _OSSwapInt16(x));
}
pub inline fn __DARWIN_OSSwapInt32(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x);
}
pub inline fn __DARWIN_OSSwapInt64(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x);
}
pub inline fn ntohs(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn htons(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn ntohl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn htonl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn ntohll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub inline fn htonll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub const _ALLOCA_H_ = "";
pub const _CT_RUNE_T = "";
pub const _RUNE_T = "";
pub const _WCHAR_T = "";
pub const EXIT_FAILURE = @as(c_int, 1);
pub const EXIT_SUCCESS = @as(c_int, 0);
pub const RAND_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex);
pub const MB_CUR_MAX = __mb_cur_max;
pub const _MALLOC_UNDERSCORE_MALLOC_H_ = "";
pub const _MALLOC_UNDERSCORE_MALLOC_TYPE_H_ = "";
pub const _DEV_T = "";
pub const _MODE_T = "";
pub const SDL_h_ = "";
pub const SDL_main_h_ = "";
pub const SDL_stdinc_h_ = "";
pub const SDL_config_h_ = "";
pub const SDL_platform_h_ = "";
pub const __AVAILABILITYMACROS__ = "";
pub const MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__;
pub const MAC_OS_X_VERSION_MAX_ALLOWED = MAC_OS_X_VERSION_MIN_REQUIRED;
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER = "";
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED = DEPRECATED_ATTRIBUTE;
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER = DEPRECATED_ATTRIBUTE;
pub const __AVAILABILITY_MACROS_USES_AVAILABILITY = @as(c_int, 1);
pub const __IPHONE_COMPAT_VERSION = __IPHONE_4_0;
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_1, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_13 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_13, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_8, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_9, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_1, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_13_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_13, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_14_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_14, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_15_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_15, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_8_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_9_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_10_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_11_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_12_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_13_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_13, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_14_4_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_14_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const __TARGETCONDITIONALS__ = "";
pub const DYNAMIC_TARGETS_ENABLED = @as(c_int, 0);
pub const TARGET_OS_WIN32 = @as(c_int, 0);
pub const TARGET_OS_WINDOWS = @as(c_int, 0);
pub const TARGET_OS_UNIX = @as(c_int, 0);
pub const TARGET_OS_LINUX = @as(c_int, 0);
pub const TARGET_OS_MAC = @as(c_int, 1);
pub const TARGET_OS_OSX = @as(c_int, 1);
pub const TARGET_OS_IPHONE = @as(c_int, 0);
pub const TARGET_OS_IOS = @as(c_int, 0);
pub const TARGET_OS_WATCH = @as(c_int, 0);
pub const TARGET_OS_TV = @as(c_int, 0);
pub const TARGET_OS_MACCATALYST = @as(c_int, 0);
pub const TARGET_OS_VISION = @as(c_int, 0);
pub const TARGET_OS_UIKITFORMAC = @as(c_int, 0);
pub const TARGET_OS_SIMULATOR = @as(c_int, 0);
pub const TARGET_OS_EMBEDDED = @as(c_int, 0);
pub const TARGET_OS_RTKIT = @as(c_int, 0);
pub const TARGET_OS_DRIVERKIT = @as(c_int, 0);
pub const TARGET_IPHONE_SIMULATOR = TARGET_OS_SIMULATOR;
pub const TARGET_OS_NANO = TARGET_OS_WATCH;
pub const TARGET_ABI_USES_IOS_VALUES = !(TARGET_CPU_X86_64 != 0) or ((TARGET_OS_IPHONE != 0) and !(TARGET_OS_MACCATALYST != 0));
pub const TARGET_CPU_PPC = @as(c_int, 0);
pub const TARGET_CPU_PPC64 = @as(c_int, 0);
pub const TARGET_CPU_68K = @as(c_int, 0);
pub const TARGET_CPU_X86 = @as(c_int, 0);
pub const TARGET_CPU_X86_64 = @as(c_int, 0);
pub const TARGET_CPU_ARM = @as(c_int, 0);
pub const TARGET_CPU_ARM64 = @as(c_int, 1);
pub const TARGET_CPU_MIPS = @as(c_int, 0);
pub const TARGET_CPU_SPARC = @as(c_int, 0);
pub const TARGET_CPU_ALPHA = @as(c_int, 0);
pub const TARGET_RT_MAC_CFM = @as(c_int, 0);
pub const TARGET_RT_MAC_MACHO = @as(c_int, 1);
pub const TARGET_RT_LITTLE_ENDIAN = @as(c_int, 1);
pub const TARGET_RT_BIG_ENDIAN = @as(c_int, 0);
pub const TARGET_RT_64_BIT = @as(c_int, 1);
pub const __MACOSX__ = @as(c_int, 1);
pub const SDL_begin_code_h = "";
pub const SDLCALL = "";
pub const SIZEOF_VOIDP = @as(c_int, 8);
pub const HAVE_GCC_ATOMICS = @as(c_int, 1);
pub const HAVE_LIBC = @as(c_int, 1);
pub const STDC_HEADERS = @as(c_int, 1);
pub const HAVE_ALLOCA_H = @as(c_int, 1);
pub const HAVE_CTYPE_H = @as(c_int, 1);
pub const HAVE_FLOAT_H = @as(c_int, 1);
pub const HAVE_ICONV_H = @as(c_int, 1);
pub const HAVE_INTTYPES_H = @as(c_int, 1);
pub const HAVE_LIMITS_H = @as(c_int, 1);
pub const HAVE_MATH_H = @as(c_int, 1);
pub const HAVE_MEMORY_H = @as(c_int, 1);
pub const HAVE_SIGNAL_H = @as(c_int, 1);
pub const HAVE_STDARG_H = @as(c_int, 1);
pub const HAVE_STDINT_H = @as(c_int, 1);
pub const HAVE_STDIO_H = @as(c_int, 1);
pub const HAVE_STDLIB_H = @as(c_int, 1);
pub const HAVE_STRINGS_H = @as(c_int, 1);
pub const HAVE_STRING_H = @as(c_int, 1);
pub const HAVE_SYS_TYPES_H = @as(c_int, 1);
pub const HAVE_WCHAR_H = @as(c_int, 1);
pub const HAVE_LIBUNWIND_H = @as(c_int, 1);
pub const HAVE_DLOPEN = @as(c_int, 1);
pub const HAVE_MALLOC = @as(c_int, 1);
pub const HAVE_CALLOC = @as(c_int, 1);
pub const HAVE_REALLOC = @as(c_int, 1);
pub const HAVE_FREE = @as(c_int, 1);
pub const HAVE_ALLOCA = @as(c_int, 1);
pub const HAVE_GETENV = @as(c_int, 1);
pub const HAVE_SETENV = @as(c_int, 1);
pub const HAVE_PUTENV = @as(c_int, 1);
pub const HAVE_UNSETENV = @as(c_int, 1);
pub const HAVE_QSORT = @as(c_int, 1);
pub const HAVE_BSEARCH = @as(c_int, 1);
pub const HAVE_ABS = @as(c_int, 1);
pub const HAVE_BCOPY = @as(c_int, 1);
pub const HAVE_MEMSET = @as(c_int, 1);
pub const HAVE_MEMCPY = @as(c_int, 1);
pub const HAVE_MEMMOVE = @as(c_int, 1);
pub const HAVE_MEMCMP = @as(c_int, 1);
pub const HAVE_WCSLEN = @as(c_int, 1);
pub const HAVE_WCSLCPY = @as(c_int, 1);
pub const HAVE_WCSLCAT = @as(c_int, 1);
pub const HAVE_WCSDUP = @as(c_int, 1);
pub const HAVE_WCSSTR = @as(c_int, 1);
pub const HAVE_WCSCMP = @as(c_int, 1);
pub const HAVE_WCSNCMP = @as(c_int, 1);
pub const HAVE_WCSCASECMP = @as(c_int, 1);
pub const HAVE_WCSNCASECMP = @as(c_int, 1);
pub const HAVE_STRLEN = @as(c_int, 1);
pub const HAVE_STRLCPY = @as(c_int, 1);
pub const HAVE_STRLCAT = @as(c_int, 1);
pub const HAVE_INDEX = @as(c_int, 1);
pub const HAVE_RINDEX = @as(c_int, 1);
pub const HAVE_STRCHR = @as(c_int, 1);
pub const HAVE_STRRCHR = @as(c_int, 1);
pub const HAVE_STRSTR = @as(c_int, 1);
pub const HAVE_STRTOK_R = @as(c_int, 1);
pub const HAVE_STRTOL = @as(c_int, 1);
pub const HAVE_STRTOUL = @as(c_int, 1);
pub const HAVE_STRTOLL = @as(c_int, 1);
pub const HAVE_STRTOULL = @as(c_int, 1);
pub const HAVE_STRTOD = @as(c_int, 1);
pub const HAVE_ATOI = @as(c_int, 1);
pub const HAVE_ATOF = @as(c_int, 1);
pub const HAVE_STRCMP = @as(c_int, 1);
pub const HAVE_STRNCMP = @as(c_int, 1);
pub const HAVE_STRCASECMP = @as(c_int, 1);
pub const HAVE_STRNCASECMP = @as(c_int, 1);
pub const HAVE_STRCASESTR = @as(c_int, 1);
pub const HAVE_VSSCANF = @as(c_int, 1);
pub const HAVE_VSNPRINTF = @as(c_int, 1);
pub const HAVE_M_PI = "";
pub const HAVE_ACOS = @as(c_int, 1);
pub const HAVE_ACOSF = @as(c_int, 1);
pub const HAVE_ASIN = @as(c_int, 1);
pub const HAVE_ASINF = @as(c_int, 1);
pub const HAVE_ATAN = @as(c_int, 1);
pub const HAVE_ATANF = @as(c_int, 1);
pub const HAVE_ATAN2 = @as(c_int, 1);
pub const HAVE_ATAN2F = @as(c_int, 1);
pub const HAVE_CEIL = @as(c_int, 1);
pub const HAVE_CEILF = @as(c_int, 1);
pub const HAVE_COPYSIGN = @as(c_int, 1);
pub const HAVE_COPYSIGNF = @as(c_int, 1);
pub const HAVE_COS = @as(c_int, 1);
pub const HAVE_COSF = @as(c_int, 1);
pub const HAVE_EXP = @as(c_int, 1);
pub const HAVE_EXPF = @as(c_int, 1);
pub const HAVE_FABS = @as(c_int, 1);
pub const HAVE_FABSF = @as(c_int, 1);
pub const HAVE_FLOOR = @as(c_int, 1);
pub const HAVE_FLOORF = @as(c_int, 1);
pub const HAVE_FMOD = @as(c_int, 1);
pub const HAVE_FMODF = @as(c_int, 1);
pub const HAVE_LOG = @as(c_int, 1);
pub const HAVE_LOGF = @as(c_int, 1);
pub const HAVE_LOG10 = @as(c_int, 1);
pub const HAVE_LOG10F = @as(c_int, 1);
pub const HAVE_LROUND = @as(c_int, 1);
pub const HAVE_LROUNDF = @as(c_int, 1);
pub const HAVE_POW = @as(c_int, 1);
pub const HAVE_POWF = @as(c_int, 1);
pub const HAVE_ROUND = @as(c_int, 1);
pub const HAVE_ROUNDF = @as(c_int, 1);
pub const HAVE_SCALBN = @as(c_int, 1);
pub const HAVE_SCALBNF = @as(c_int, 1);
pub const HAVE_SIN = @as(c_int, 1);
pub const HAVE_SINF = @as(c_int, 1);
pub const HAVE_SQRT = @as(c_int, 1);
pub const HAVE_SQRTF = @as(c_int, 1);
pub const HAVE_TAN = @as(c_int, 1);
pub const HAVE_TANF = @as(c_int, 1);
pub const HAVE_TRUNC = @as(c_int, 1);
pub const HAVE_TRUNCF = @as(c_int, 1);
pub const HAVE_FSEEKO = @as(c_int, 1);
pub const HAVE_SIGACTION = @as(c_int, 1);
pub const HAVE_SA_SIGACTION = @as(c_int, 1);
pub const HAVE_SETJMP = @as(c_int, 1);
pub const HAVE_NANOSLEEP = @as(c_int, 1);
pub const HAVE_SYSCONF = @as(c_int, 1);
pub const HAVE_SYSCTLBYNAME = @as(c_int, 1);
pub const HAVE_MPROTECT = @as(c_int, 1);
pub const HAVE_ICONV = @as(c_int, 1);
pub const SDL_USE_LIBICONV = @as(c_int, 1);
pub const HAVE_PTHREAD_SETNAME_NP = @as(c_int, 1);
pub const HAVE_POLL = @as(c_int, 1);
pub const HAVE__EXIT = @as(c_int, 1);
pub const HAVE_O_CLOEXEC = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_COREAUDIO = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_DISK = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_DUMMY = @as(c_int, 1);
pub const SDL_JOYSTICK_IOKIT = @as(c_int, 1);
pub const SDL_JOYSTICK_MFI = @as(c_int, 1);
pub const SDL_JOYSTICK_HIDAPI = @as(c_int, 1);
pub const SDL_JOYSTICK_VIRTUAL = @as(c_int, 1);
pub const SDL_HAPTIC_IOKIT = @as(c_int, 1);
pub const SDL_SENSOR_DUMMY = @as(c_int, 1);
pub const SDL_LOADSO_DLOPEN = @as(c_int, 1);
pub const SDL_THREAD_PTHREAD = @as(c_int, 1);
pub const SDL_THREAD_PTHREAD_RECURSIVE_MUTEX = @as(c_int, 1);
pub const SDL_TIMER_UNIX = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_COCOA = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_DUMMY = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_OFFSCREEN = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_OGL = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_OGL_ES2 = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_METAL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_ES2 = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_CGL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_EGL = @as(c_int, 1);
pub const SDL_VIDEO_VULKAN = @as(c_int, 1);
pub const SDL_VIDEO_METAL = @as(c_int, 1);
pub const SDL_POWER_MACOSX = @as(c_int, 1);
pub const SDL_FILESYSTEM_COCOA = @as(c_int, 1);
pub const DYNAPI_NEEDS_DLOPEN = @as(c_int, 1);
pub const _SYS_TYPES_H_ = "";
pub const _U_CHAR = "";
pub const _U_SHORT = "";
pub const _U_INT = "";
pub const _U_LONG = "";
pub const __DARWIN_UINT = "";
pub const _CADDR_T = "";
pub const _BLKCNT_T = "";
pub const _BLKSIZE_T = "";
pub const _GID_T = "";
pub const _IN_ADDR_T = "";
pub const _IN_PORT_T = "";
pub const _INO_T = "";
pub const _INO64_T = "";
pub const _KEY_T = "";
pub const _NLINK_T = "";
pub inline fn major(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, (@import("std").zig.c_translation.cast(u_int32_t, x) >> @as(c_int, 24)) & @as(c_int, 0xff));
}
pub inline fn minor(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, x & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffffff, .hex));
}
pub inline fn makedev(x: anytype, y: anytype) dev_t {
    _ = &x;
    _ = &y;
    return @import("std").zig.c_translation.cast(dev_t, (x << @as(c_int, 24)) | y);
}
pub const _CLOCK_T = "";
pub const _TIME_T = "";
pub const _USECONDS_T = "";
pub const _SUSECONDS_T = "";
pub const _RSIZE_T = "";
pub const _ERRNO_T = "";
pub const _FD_SET = "";
pub const __DARWIN_FD_SETSIZE = @as(c_int, 1024);
pub const __DARWIN_NBBY = @as(c_int, 8);
pub const __DARWIN_NFDBITS = @import("std").zig.c_translation.sizeof(__int32_t) * __DARWIN_NBBY;
pub inline fn __DARWIN_howmany(x: anytype, y: anytype) @TypeOf(if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1)) {
    _ = &x;
    _ = &y;
    return if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1);
}
pub inline fn __DARWIN_FD_SET(n: anytype, p: anytype) @TypeOf(__darwin_fd_set(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_set(n, p);
}
pub inline fn __DARWIN_FD_CLR(n: anytype, p: anytype) @TypeOf(__darwin_fd_clr(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_clr(n, p);
}
pub inline fn __DARWIN_FD_ISSET(n: anytype, p: anytype) @TypeOf(__darwin_fd_isset(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_isset(n, p);
}
pub const NBBY = __DARWIN_NBBY;
pub const NFDBITS = __DARWIN_NFDBITS;
pub inline fn howmany(x: anytype, y: anytype) @TypeOf(__DARWIN_howmany(x, y)) {
    _ = &x;
    _ = &y;
    return __DARWIN_howmany(x, y);
}
pub const FD_SETSIZE = __DARWIN_FD_SETSIZE;
pub inline fn FD_SET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_SET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_SET(n, p);
}
pub inline fn FD_CLR(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_CLR(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_CLR(n, p);
}
pub inline fn FD_ZERO(p: anytype) @TypeOf(__DARWIN_FD_ZERO(p)) {
    _ = &p;
    return __DARWIN_FD_ZERO(p);
}
pub inline fn FD_ISSET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_ISSET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_ISSET(n, p);
}
pub inline fn FD_COPY(f: anytype, t: anytype) @TypeOf(__DARWIN_FD_COPY(f, t)) {
    _ = &f;
    _ = &t;
    return __DARWIN_FD_COPY(f, t);
}
pub const _PTHREAD_COND_T = "";
pub const _PTHREAD_CONDATTR_T = "";
pub const _PTHREAD_MUTEX_T = "";
pub const _PTHREAD_MUTEXATTR_T = "";
pub const _PTHREAD_ONCE_T = "";
pub const _PTHREAD_RWLOCK_T = "";
pub const _PTHREAD_RWLOCKATTR_T = "";
pub const _PTHREAD_T = "";
pub const _PTHREAD_KEY_T = "";
pub const _FSBLKCNT_T = "";
pub const _FSFILCNT_T = "";
pub const __STDDEF_H = "";
pub const __need_ptrdiff_t = "";
pub const __need_size_t = "";
pub const __need_wchar_t = "";
pub const __need_NULL = "";
pub const __need_STDDEF_H_misc = "";
pub const _PTRDIFF_T = "";
pub const __CLANG_MAX_ALIGN_T_DEFINED = "";
pub const __GNUC_VA_LIST = "";
pub const __STDARG_H = "";
pub const _VA_LIST = "";
pub const _STRING_H_ = "";
pub const _STRINGS_H_ = "";
pub const _SECURE__STRINGS_H_ = "";
pub const _SECURE__STRING_H_ = "";
pub const __HAS_FIXED_CHK_PROTOTYPES = @as(c_int, 1);
pub const _WCHAR_H_ = "";
pub const _MBSTATE_T = "";
pub const _TIME_H_ = "";
pub const _STRUCT_TIMESPEC = struct_timespec;
pub const CLOCKS_PER_SEC = @import("std").zig.c_translation.cast(clock_t, @import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000, .decimal));
pub const __CLOCK_AVAILABILITY = __OSX_AVAILABLE(@as(f64, 10.12)) ++ __IOS_AVAILABLE(@as(f64, 10.0)) ++ __TVOS_AVAILABLE(@as(f64, 10.0)) ++ __WATCHOS_AVAILABLE(@as(f64, 3.0));
pub const CLOCK_REALTIME = _CLOCK_REALTIME;
pub const CLOCK_MONOTONIC = _CLOCK_MONOTONIC;
pub const CLOCK_MONOTONIC_RAW = _CLOCK_MONOTONIC_RAW;
pub const CLOCK_MONOTONIC_RAW_APPROX = _CLOCK_MONOTONIC_RAW_APPROX;
pub const CLOCK_UPTIME_RAW = _CLOCK_UPTIME_RAW;
pub const CLOCK_UPTIME_RAW_APPROX = _CLOCK_UPTIME_RAW_APPROX;
pub const CLOCK_PROCESS_CPUTIME_ID = _CLOCK_PROCESS_CPUTIME_ID;
pub const CLOCK_THREAD_CPUTIME_ID = _CLOCK_THREAD_CPUTIME_ID;
pub const TIME_UTC = @as(c_int, 1);
pub const __WCTYPE_H_ = "";
pub const ___WCTYPE_H_ = "";
pub const _WINT_T = "";
pub const _WCTYPE_T = "";
pub const WEOF = __DARWIN_WEOF;
pub const __DARWIN_WCTYPE_TOP_inline = __header_inline;
pub const _CTYPE_H_ = "";
pub const __CTYPE_H_ = "";
pub const _RUNETYPE_H_ = "";
pub const _CACHED_RUNES = @as(c_int, 1) << @as(c_int, 8);
pub const _CRMASK = ~(_CACHED_RUNES - @as(c_int, 1));
pub const _RUNE_MAGIC_A = "RuneMagA";
pub const _CTYPE_A = @as(c_long, 0x00000100);
pub const _CTYPE_C = @as(c_long, 0x00000200);
pub const _CTYPE_D = @as(c_long, 0x00000400);
pub const _CTYPE_G = @as(c_long, 0x00000800);
pub const _CTYPE_L = @as(c_long, 0x00001000);
pub const _CTYPE_P = @as(c_long, 0x00002000);
pub const _CTYPE_S = @as(c_long, 0x00004000);
pub const _CTYPE_U = @as(c_long, 0x00008000);
pub const _CTYPE_X = @as(c_long, 0x00010000);
pub const _CTYPE_B = @as(c_long, 0x00020000);
pub const _CTYPE_R = @as(c_long, 0x00040000);
pub const _CTYPE_I = @as(c_long, 0x00080000);
pub const _CTYPE_T = @as(c_long, 0x00100000);
pub const _CTYPE_Q = @as(c_long, 0x00200000);
pub const _CTYPE_SW0 = @as(c_long, 0x20000000);
pub const _CTYPE_SW1 = @as(c_long, 0x40000000);
pub const _CTYPE_SW2 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0x80000000, .hex);
pub const _CTYPE_SW3 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xc0000000, .hex);
pub const _CTYPE_SWM = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xe0000000, .hex);
pub const _CTYPE_SWS = @as(c_int, 30);
pub const __DARWIN_CTYPE_inline = __header_inline;
pub const __DARWIN_CTYPE_TOP_inline = __header_inline;
pub inline fn _tolower(c: anytype) @TypeOf(__tolower(c)) {
    _ = &c;
    return __tolower(c);
}
pub inline fn _toupper(c: anytype) @TypeOf(__toupper(c)) {
    _ = &c;
    return __toupper(c);
}
pub const __CLANG_INTTYPES_H = "";
pub const _INTTYPES_H_ = "";
pub const __PRI_8_LENGTH_MODIFIER__ = "hh";
pub const __PRI_64_LENGTH_MODIFIER__ = "ll";
pub const __SCN_64_LENGTH_MODIFIER__ = "ll";
pub const __PRI_MAX_LENGTH_MODIFIER__ = "j";
pub const __SCN_MAX_LENGTH_MODIFIER__ = "j";
pub const PRId8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const PRIi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const PRIo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const PRIu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const PRIx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const PRIX8 = __PRI_8_LENGTH_MODIFIER__ ++ "X";
pub const PRId16 = "hd";
pub const PRIi16 = "hi";
pub const PRIo16 = "ho";
pub const PRIu16 = "hu";
pub const PRIx16 = "hx";
pub const PRIX16 = "hX";
pub const PRId32 = "d";
pub const PRIi32 = "i";
pub const PRIo32 = "o";
pub const PRIu32 = "u";
pub const PRIx32 = "x";
pub const PRIX32 = "X";
pub const PRId64 = __PRI_64_LENGTH_MODIFIER__ ++ "d";
pub const PRIi64 = __PRI_64_LENGTH_MODIFIER__ ++ "i";
pub const PRIo64 = __PRI_64_LENGTH_MODIFIER__ ++ "o";
pub const PRIu64 = __PRI_64_LENGTH_MODIFIER__ ++ "u";
pub const PRIx64 = __PRI_64_LENGTH_MODIFIER__ ++ "x";
pub const PRIX64 = __PRI_64_LENGTH_MODIFIER__ ++ "X";
pub const PRIdLEAST8 = PRId8;
pub const PRIiLEAST8 = PRIi8;
pub const PRIoLEAST8 = PRIo8;
pub const PRIuLEAST8 = PRIu8;
pub const PRIxLEAST8 = PRIx8;
pub const PRIXLEAST8 = PRIX8;
pub const PRIdLEAST16 = PRId16;
pub const PRIiLEAST16 = PRIi16;
pub const PRIoLEAST16 = PRIo16;
pub const PRIuLEAST16 = PRIu16;
pub const PRIxLEAST16 = PRIx16;
pub const PRIXLEAST16 = PRIX16;
pub const PRIdLEAST32 = PRId32;
pub const PRIiLEAST32 = PRIi32;
pub const PRIoLEAST32 = PRIo32;
pub const PRIuLEAST32 = PRIu32;
pub const PRIxLEAST32 = PRIx32;
pub const PRIXLEAST32 = PRIX32;
pub const PRIdLEAST64 = PRId64;
pub const PRIiLEAST64 = PRIi64;
pub const PRIoLEAST64 = PRIo64;
pub const PRIuLEAST64 = PRIu64;
pub const PRIxLEAST64 = PRIx64;
pub const PRIXLEAST64 = PRIX64;
pub const PRIdFAST8 = PRId8;
pub const PRIiFAST8 = PRIi8;
pub const PRIoFAST8 = PRIo8;
pub const PRIuFAST8 = PRIu8;
pub const PRIxFAST8 = PRIx8;
pub const PRIXFAST8 = PRIX8;
pub const PRIdFAST16 = PRId16;
pub const PRIiFAST16 = PRIi16;
pub const PRIoFAST16 = PRIo16;
pub const PRIuFAST16 = PRIu16;
pub const PRIxFAST16 = PRIx16;
pub const PRIXFAST16 = PRIX16;
pub const PRIdFAST32 = PRId32;
pub const PRIiFAST32 = PRIi32;
pub const PRIoFAST32 = PRIo32;
pub const PRIuFAST32 = PRIu32;
pub const PRIxFAST32 = PRIx32;
pub const PRIXFAST32 = PRIX32;
pub const PRIdFAST64 = PRId64;
pub const PRIiFAST64 = PRIi64;
pub const PRIoFAST64 = PRIo64;
pub const PRIuFAST64 = PRIu64;
pub const PRIxFAST64 = PRIx64;
pub const PRIXFAST64 = PRIX64;
pub const PRIdPTR = "ld";
pub const PRIiPTR = "li";
pub const PRIoPTR = "lo";
pub const PRIuPTR = "lu";
pub const PRIxPTR = "lx";
pub const PRIXPTR = "lX";
pub const PRIdMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "d";
pub const PRIiMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "i";
pub const PRIoMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "o";
pub const PRIuMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "u";
pub const PRIxMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "x";
pub const PRIXMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "X";
pub const SCNd8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const SCNi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const SCNo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const SCNu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const SCNx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const SCNd16 = "hd";
pub const SCNi16 = "hi";
pub const SCNo16 = "ho";
pub const SCNu16 = "hu";
pub const SCNx16 = "hx";
pub const SCNd32 = "d";
pub const SCNi32 = "i";
pub const SCNo32 = "o";
pub const SCNu32 = "u";
pub const SCNx32 = "x";
pub const SCNd64 = __SCN_64_LENGTH_MODIFIER__ ++ "d";
pub const SCNi64 = __SCN_64_LENGTH_MODIFIER__ ++ "i";
pub const SCNo64 = __SCN_64_LENGTH_MODIFIER__ ++ "o";
pub const SCNu64 = __SCN_64_LENGTH_MODIFIER__ ++ "u";
pub const SCNx64 = __SCN_64_LENGTH_MODIFIER__ ++ "x";
pub const SCNdLEAST8 = SCNd8;
pub const SCNiLEAST8 = SCNi8;
pub const SCNoLEAST8 = SCNo8;
pub const SCNuLEAST8 = SCNu8;
pub const SCNxLEAST8 = SCNx8;
pub const SCNdLEAST16 = SCNd16;
pub const SCNiLEAST16 = SCNi16;
pub const SCNoLEAST16 = SCNo16;
pub const SCNuLEAST16 = SCNu16;
pub const SCNxLEAST16 = SCNx16;
pub const SCNdLEAST32 = SCNd32;
pub const SCNiLEAST32 = SCNi32;
pub const SCNoLEAST32 = SCNo32;
pub const SCNuLEAST32 = SCNu32;
pub const SCNxLEAST32 = SCNx32;
pub const SCNdLEAST64 = SCNd64;
pub const SCNiLEAST64 = SCNi64;
pub const SCNoLEAST64 = SCNo64;
pub const SCNuLEAST64 = SCNu64;
pub const SCNxLEAST64 = SCNx64;
pub const SCNdFAST8 = SCNd8;
pub const SCNiFAST8 = SCNi8;
pub const SCNoFAST8 = SCNo8;
pub const SCNuFAST8 = SCNu8;
pub const SCNxFAST8 = SCNx8;
pub const SCNdFAST16 = SCNd16;
pub const SCNiFAST16 = SCNi16;
pub const SCNoFAST16 = SCNo16;
pub const SCNuFAST16 = SCNu16;
pub const SCNxFAST16 = SCNx16;
pub const SCNdFAST32 = SCNd32;
pub const SCNiFAST32 = SCNi32;
pub const SCNoFAST32 = SCNo32;
pub const SCNuFAST32 = SCNu32;
pub const SCNxFAST32 = SCNx32;
pub const SCNdFAST64 = SCNd64;
pub const SCNiFAST64 = SCNi64;
pub const SCNoFAST64 = SCNo64;
pub const SCNuFAST64 = SCNu64;
pub const SCNxFAST64 = SCNx64;
pub const SCNdPTR = "ld";
pub const SCNiPTR = "li";
pub const SCNoPTR = "lo";
pub const SCNuPTR = "lu";
pub const SCNxPTR = "lx";
pub const SCNdMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "d";
pub const SCNiMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "i";
pub const SCNoMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "o";
pub const SCNuMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "u";
pub const SCNxMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "x";
pub const __MATH_H__ = "";
pub const __MATH__ = "";
pub const HUGE_VALF = __builtin_huge_valf();
pub const NAN = __builtin_nanf("0x7fc00000");
pub const INFINITY = HUGE_VALF;
pub const FP_NAN = @as(c_int, 1);
pub const FP_INFINITE = @as(c_int, 2);
pub const FP_ZERO = @as(c_int, 3);
pub const FP_NORMAL = @as(c_int, 4);
pub const FP_SUBNORMAL = @as(c_int, 5);
pub const FP_SUPERNORMAL = @as(c_int, 6);
pub const FP_FAST_FMA = @as(c_int, 1);
pub const FP_FAST_FMAF = @as(c_int, 1);
pub const FP_FAST_FMAL = @as(c_int, 1);
pub const FP_ILOGB0 = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const FP_ILOGBNAN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const MATH_ERRNO = @as(c_int, 1);
pub const MATH_ERREXCEPT = @as(c_int, 2);
pub const math_errhandling = __math_errhandling();
pub const M_E = @as(f64, 2.71828182845904523536028747135266250);
pub const M_LOG2E = @as(f64, 1.44269504088896340735992468100189214);
pub const M_LOG10E = @as(f64, 0.434294481903251827651128918916605082);
pub const M_LN2 = @as(f64, 0.693147180559945309417232121458176568);
pub const M_LN10 = @as(f64, 2.30258509299404568401799145468436421);
pub const M_PI = @as(f64, 3.14159265358979323846264338327950288);
pub const M_PI_2 = @as(f64, 1.57079632679489661923132169163975144);
pub const M_PI_4 = @as(f64, 0.785398163397448309615660845819875721);
pub const M_1_PI = @as(f64, 0.318309886183790671537767526745028724);
pub const M_2_PI = @as(f64, 0.636619772367581343075535053490057448);
pub const M_2_SQRTPI = @as(f64, 1.12837916709551257389615890312154517);
pub const M_SQRT2 = @as(f64, 1.41421356237309504880168872420969808);
pub const M_SQRT1_2 = @as(f64, 0.707106781186547524400844362104849039);
pub const MAXFLOAT = @as(f32, 0x1.fffffep+127);
pub const FP_SNAN = FP_NAN;
pub const FP_QNAN = FP_NAN;
pub const HUGE = MAXFLOAT;
pub const X_TLOSS = @as(f64, 1.41484755040568800000e+16);
pub const DOMAIN = @as(c_int, 1);
pub const SING = @as(c_int, 2);
pub const OVERFLOW = @as(c_int, 3);
pub const UNDERFLOW = @as(c_int, 4);
pub const TLOSS = @as(c_int, 5);
pub const PLOSS = @as(c_int, 6);
pub const __CLANG_FLOAT_H = "";
pub const _FLOAT_H_ = "";
pub const __FLOAT_H = "";
pub const FLT_RADIX = __FLT_RADIX__;
pub const FLT_MANT_DIG = __FLT_MANT_DIG__;
pub const DBL_MANT_DIG = __DBL_MANT_DIG__;
pub const LDBL_MANT_DIG = __LDBL_MANT_DIG__;
pub const FLT_DIG = __FLT_DIG__;
pub const DBL_DIG = __DBL_DIG__;
pub const LDBL_DIG = __LDBL_DIG__;
pub const FLT_MIN_EXP = __FLT_MIN_EXP__;
pub const DBL_MIN_EXP = __DBL_MIN_EXP__;
pub const LDBL_MIN_EXP = __LDBL_MIN_EXP__;
pub const FLT_MIN_10_EXP = __FLT_MIN_10_EXP__;
pub const DBL_MIN_10_EXP = __DBL_MIN_10_EXP__;
pub const LDBL_MIN_10_EXP = __LDBL_MIN_10_EXP__;
pub const FLT_MAX_EXP = __FLT_MAX_EXP__;
pub const DBL_MAX_EXP = __DBL_MAX_EXP__;
pub const LDBL_MAX_EXP = __LDBL_MAX_EXP__;
pub const FLT_MAX_10_EXP = __FLT_MAX_10_EXP__;
pub const DBL_MAX_10_EXP = __DBL_MAX_10_EXP__;
pub const LDBL_MAX_10_EXP = __LDBL_MAX_10_EXP__;
pub const FLT_MAX = __FLT_MAX__;
pub const DBL_MAX = __DBL_MAX__;
pub const LDBL_MAX = __LDBL_MAX__;
pub const FLT_EPSILON = __FLT_EPSILON__;
pub const DBL_EPSILON = __DBL_EPSILON__;
pub const LDBL_EPSILON = __LDBL_EPSILON__;
pub const FLT_MIN = __FLT_MIN__;
pub const DBL_MIN = __DBL_MIN__;
pub const LDBL_MIN = __LDBL_MIN__;
pub const DECIMAL_DIG = __DECIMAL_DIG__;
pub const FLT_HAS_SUBNORM = @as(c_int, 1);
pub const DBL_HAS_SUBNORM = @as(c_int, 1);
pub const LDBL_HAS_SUBNORM = @as(c_int, 1);
pub const FLT_TRUE_MIN = __FLT_DENORM_MIN__;
pub const DBL_TRUE_MIN = __DBL_DENORM_MIN__;
pub const LDBL_TRUE_MIN = __LDBL_DENORM_MIN__;
pub const FLT_DECIMAL_DIG = __FLT_DECIMAL_DIG__;
pub const DBL_DECIMAL_DIG = __DBL_DECIMAL_DIG__;
pub const LDBL_DECIMAL_DIG = __LDBL_DECIMAL_DIG__;
pub const SDL_SIZE_MAX = SIZE_MAX;
pub inline fn _SDL_HAS_BUILTIN(x: anytype) @TypeOf(__has_builtin(x)) {
    _ = &x;
    return __has_builtin(x);
}
pub inline fn SDL_TABLESIZE(table: anytype) @TypeOf(SDL_arraysize(table)) {
    _ = &table;
    return SDL_arraysize(table);
}
pub const SDL_reinterpret_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub const SDL_static_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub const SDL_const_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn SDL_FOURCC(A: anytype, B: anytype, C: anytype, D: anytype) @TypeOf((((SDL_static_cast(Uint32, SDL_static_cast(Uint8, A)) << @as(c_int, 0)) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, B)) << @as(c_int, 8))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, C)) << @as(c_int, 16))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, D)) << @as(c_int, 24))) {
    _ = &A;
    _ = &B;
    _ = &C;
    _ = &D;
    return (((SDL_static_cast(Uint32, SDL_static_cast(Uint8, A)) << @as(c_int, 0)) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, B)) << @as(c_int, 8))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, C)) << @as(c_int, 16))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, D)) << @as(c_int, 24));
}
pub const SDL_MAX_SINT8 = @import("std").zig.c_translation.cast(Sint8, @as(c_int, 0x7F));
pub const SDL_MIN_SINT8 = @import("std").zig.c_translation.cast(Sint8, ~@as(c_int, 0x7F));
pub const SDL_MAX_UINT8 = @import("std").zig.c_translation.cast(Uint8, @as(c_int, 0xFF));
pub const SDL_MIN_UINT8 = @import("std").zig.c_translation.cast(Uint8, @as(c_int, 0x00));
pub const SDL_MAX_SINT16 = @import("std").zig.c_translation.cast(Sint16, @as(c_int, 0x7FFF));
pub const SDL_MIN_SINT16 = @import("std").zig.c_translation.cast(Sint16, ~@as(c_int, 0x7FFF));
pub const SDL_MAX_UINT16 = @import("std").zig.c_translation.cast(Uint16, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF, .hex));
pub const SDL_MIN_UINT16 = @import("std").zig.c_translation.cast(Uint16, @as(c_int, 0x0000));
pub const SDL_MAX_SINT32 = @import("std").zig.c_translation.cast(Sint32, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7FFFFFFF, .hex));
pub const SDL_MIN_SINT32 = @import("std").zig.c_translation.cast(Sint32, ~@import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7FFFFFFF, .hex));
pub const SDL_MAX_UINT32 = @import("std").zig.c_translation.cast(Uint32, @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xFFFFFFFF, .hex));
pub const SDL_MIN_UINT32 = @import("std").zig.c_translation.cast(Uint32, @as(c_int, 0x00000000));
pub const SDL_MAX_SINT64 = @import("std").zig.c_translation.cast(Sint64, @as(c_longlong, 0x7FFFFFFFFFFFFFFF));
pub const SDL_MIN_SINT64 = @import("std").zig.c_translation.cast(Sint64, ~@as(c_longlong, 0x7FFFFFFFFFFFFFFF));
pub const SDL_MAX_UINT64 = @import("std").zig.c_translation.cast(Uint64, @as(c_ulonglong, 0xFFFFFFFFFFFFFFFF));
pub const SDL_MIN_UINT64 = @import("std").zig.c_translation.cast(Uint64, @as(c_ulonglong, 0x0000000000000000));
pub const SDL_FLT_EPSILON = FLT_EPSILON;
pub const SDL_PRIs64 = "lld";
pub const SDL_PRIu64 = PRIu64;
pub const SDL_PRIx64 = PRIx64;
pub const SDL_PRIX64 = PRIX64;
pub const SDL_PRIs32 = PRId32;
pub const SDL_PRIu32 = PRIu32;
pub const SDL_PRIx32 = PRIx32;
pub const SDL_PRIX32 = PRIX32;
pub const SDL_PRINTF_FORMAT_STRING = "";
pub const SDL_SCANF_FORMAT_STRING = "";
pub inline fn SDL_min(x: anytype, y: anytype) @TypeOf(if (x < y) x else y) {
    _ = &x;
    _ = &y;
    return if (x < y) x else y;
}
pub inline fn SDL_max(x: anytype, y: anytype) @TypeOf(if (x > y) x else y) {
    _ = &x;
    _ = &y;
    return if (x > y) x else y;
}
pub inline fn SDL_clamp(x: anytype, a: anytype, b: anytype) @TypeOf(if (x < a) a else if (x > b) b else x) {
    _ = &x;
    _ = &a;
    _ = &b;
    return if (x < a) a else if (x > b) b else x;
}
pub const SDL_ICONV_ERROR = @import("std").zig.c_translation.cast(usize, -@as(c_int, 1));
pub const SDL_ICONV_E2BIG = @import("std").zig.c_translation.cast(usize, -@as(c_int, 2));
pub const SDL_ICONV_EILSEQ = @import("std").zig.c_translation.cast(usize, -@as(c_int, 3));
pub const SDL_ICONV_EINVAL = @import("std").zig.c_translation.cast(usize, -@as(c_int, 4));
pub inline fn SDL_iconv_utf8_locale(S: anytype) @TypeOf(SDL_iconv_string("", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1))) {
    _ = &S;
    return SDL_iconv_string("", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1));
}
pub inline fn SDL_iconv_utf8_ucs2(S: anytype) [*c]Uint16 {
    _ = &S;
    return @import("std").zig.c_translation.cast([*c]Uint16, SDL_iconv_string("UCS-2", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1)));
}
pub inline fn SDL_iconv_utf8_ucs4(S: anytype) [*c]Uint32 {
    _ = &S;
    return @import("std").zig.c_translation.cast([*c]Uint32, SDL_iconv_string("UCS-4", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1)));
}
pub inline fn SDL_iconv_wchar_utf8(S: anytype) @TypeOf(SDL_iconv_string("UTF-8", "WCHAR_T", @import("std").zig.c_translation.cast([*c]u8, S), (SDL_wcslen(S) + @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(wchar_t))) {
    _ = &S;
    return SDL_iconv_string("UTF-8", "WCHAR_T", @import("std").zig.c_translation.cast([*c]u8, S), (SDL_wcslen(S) + @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(wchar_t));
}
pub const SDLMAIN_DECLSPEC = "";
pub const SDL_assert_h_ = "";
pub const SDL_ASSERT_LEVEL = @as(c_int, 2);
pub const SDL_NULL_WHILE_LOOP_CONDITION = @as(c_int, 0);
pub inline fn SDL_assert(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub inline fn SDL_assert_release(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub inline fn SDL_assert_paranoid(condition: anytype) @TypeOf(SDL_disabled_assert(condition)) {
    _ = &condition;
    return SDL_disabled_assert(condition);
}
pub inline fn SDL_assert_always(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub const SDL_assert_state = SDL_AssertState;
pub const SDL_assert_data = SDL_AssertData;
pub const SDL_atomic_h_ = "";
pub inline fn SDL_AtomicIncRef(a: anytype) @TypeOf(SDL_AtomicAdd(a, @as(c_int, 1))) {
    _ = &a;
    return SDL_AtomicAdd(a, @as(c_int, 1));
}
pub inline fn SDL_AtomicDecRef(a: anytype) @TypeOf(SDL_AtomicAdd(a, -@as(c_int, 1)) == @as(c_int, 1)) {
    _ = &a;
    return SDL_AtomicAdd(a, -@as(c_int, 1)) == @as(c_int, 1);
}
pub const SDL_audio_h_ = "";
pub const SDL_error_h_ = "";
pub inline fn SDL_OutOfMemory() @TypeOf(SDL_Error(SDL_ENOMEM)) {
    return SDL_Error(SDL_ENOMEM);
}
pub inline fn SDL_Unsupported() @TypeOf(SDL_Error(SDL_UNSUPPORTED)) {
    return SDL_Error(SDL_UNSUPPORTED);
}
pub inline fn SDL_InvalidParamError(param: anytype) @TypeOf(SDL_SetError("Parameter '%s' is invalid", param)) {
    _ = &param;
    return SDL_SetError("Parameter '%s' is invalid", param);
}
pub const SDL_endian_h_ = "";
pub const SDL_LIL_ENDIAN = @as(c_int, 1234);
pub const SDL_BIG_ENDIAN = @as(c_int, 4321);
pub const SDL_BYTEORDER = SDL_LIL_ENDIAN;
pub const SDL_FLOATWORDORDER = SDL_BYTEORDER;
pub const HAS_BUILTIN_BSWAP16 = (_SDL_HAS_BUILTIN(__builtin_bswap16) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 8))));
pub const HAS_BUILTIN_BSWAP32 = (_SDL_HAS_BUILTIN(__builtin_bswap32) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 3))));
pub const HAS_BUILTIN_BSWAP64 = (_SDL_HAS_BUILTIN(__builtin_bswap64) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 3))));
pub const HAS_BROKEN_BSWAP = (__GNUC__ == @as(c_int, 2)) and (__GNUC_MINOR__ <= @as(c_int, 95));
pub inline fn SDL_Swap16(x: anytype) @TypeOf(__builtin_bswap16(x)) {
    _ = &x;
    return __builtin_bswap16(x);
}
pub inline fn SDL_Swap32(x: anytype) @TypeOf(__builtin_bswap32(x)) {
    _ = &x;
    return __builtin_bswap32(x);
}
pub inline fn SDL_Swap64(x: anytype) @TypeOf(__builtin_bswap64(x)) {
    _ = &x;
    return __builtin_bswap64(x);
}
pub inline fn SDL_SwapLE16(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapLE32(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapLE64(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapFloatLE(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapBE16(X: anytype) @TypeOf(SDL_Swap16(X)) {
    _ = &X;
    return SDL_Swap16(X);
}
pub inline fn SDL_SwapBE32(X: anytype) @TypeOf(SDL_Swap32(X)) {
    _ = &X;
    return SDL_Swap32(X);
}
pub inline fn SDL_SwapBE64(X: anytype) @TypeOf(SDL_Swap64(X)) {
    _ = &X;
    return SDL_Swap64(X);
}
pub inline fn SDL_SwapFloatBE(X: anytype) @TypeOf(SDL_SwapFloat(X)) {
    _ = &X;
    return SDL_SwapFloat(X);
}
pub const SDL_mutex_h_ = "";
pub const SDL_MUTEX_TIMEDOUT = @as(c_int, 1);
pub const SDL_MUTEX_MAXWAIT = ~@import("std").zig.c_translation.cast(Uint32, @as(c_int, 0));
pub inline fn SDL_mutexP(m: anytype) @TypeOf(SDL_LockMutex(m)) {
    _ = &m;
    return SDL_LockMutex(m);
}
pub inline fn SDL_mutexV(m: anytype) @TypeOf(SDL_UnlockMutex(m)) {
    _ = &m;
    return SDL_UnlockMutex(m);
}
pub const SDL_thread_h_ = "";
pub const SDL_rwops_h_ = "";
pub const SDL_RWOPS_UNKNOWN = @as(c_uint, 0);
pub const SDL_RWOPS_WINFILE = @as(c_uint, 1);
pub const SDL_RWOPS_STDFILE = @as(c_uint, 2);
pub const SDL_RWOPS_JNIFILE = @as(c_uint, 3);
pub const SDL_RWOPS_MEMORY = @as(c_uint, 4);
pub const SDL_RWOPS_MEMORY_RO = @as(c_uint, 5);
pub const RW_SEEK_SET = @as(c_int, 0);
pub const RW_SEEK_CUR = @as(c_int, 1);
pub const RW_SEEK_END = @as(c_int, 2);
pub const SDL_AUDIO_MASK_BITSIZE = @as(c_int, 0xFF);
pub const SDL_AUDIO_MASK_DATATYPE = @as(c_int, 1) << @as(c_int, 8);
pub const SDL_AUDIO_MASK_ENDIAN = @as(c_int, 1) << @as(c_int, 12);
pub const SDL_AUDIO_MASK_SIGNED = @as(c_int, 1) << @as(c_int, 15);
pub inline fn SDL_AUDIO_BITSIZE(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_BITSIZE) {
    _ = &x;
    return x & SDL_AUDIO_MASK_BITSIZE;
}
pub inline fn SDL_AUDIO_ISFLOAT(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_DATATYPE) {
    _ = &x;
    return x & SDL_AUDIO_MASK_DATATYPE;
}
pub inline fn SDL_AUDIO_ISBIGENDIAN(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_ENDIAN) {
    _ = &x;
    return x & SDL_AUDIO_MASK_ENDIAN;
}
pub inline fn SDL_AUDIO_ISSIGNED(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_SIGNED) {
    _ = &x;
    return x & SDL_AUDIO_MASK_SIGNED;
}
pub inline fn SDL_AUDIO_ISINT(x: anytype) @TypeOf(!(SDL_AUDIO_ISFLOAT(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISFLOAT(x) != 0);
}
pub inline fn SDL_AUDIO_ISLITTLEENDIAN(x: anytype) @TypeOf(!(SDL_AUDIO_ISBIGENDIAN(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISBIGENDIAN(x) != 0);
}
pub inline fn SDL_AUDIO_ISUNSIGNED(x: anytype) @TypeOf(!(SDL_AUDIO_ISSIGNED(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISSIGNED(x) != 0);
}
pub const AUDIO_U8 = @as(c_int, 0x0008);
pub const AUDIO_S8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8008, .hex);
pub const AUDIO_U16LSB = @as(c_int, 0x0010);
pub const AUDIO_S16LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8010, .hex);
pub const AUDIO_U16MSB = @as(c_int, 0x1010);
pub const AUDIO_S16MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9010, .hex);
pub const AUDIO_U16 = AUDIO_U16LSB;
pub const AUDIO_S16 = AUDIO_S16LSB;
pub const AUDIO_S32LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8020, .hex);
pub const AUDIO_S32MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9020, .hex);
pub const AUDIO_S32 = AUDIO_S32LSB;
pub const AUDIO_F32LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8120, .hex);
pub const AUDIO_F32MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9120, .hex);
pub const AUDIO_F32 = AUDIO_F32LSB;
pub const AUDIO_U16SYS = AUDIO_U16LSB;
pub const AUDIO_S16SYS = AUDIO_S16LSB;
pub const AUDIO_S32SYS = AUDIO_S32LSB;
pub const AUDIO_F32SYS = AUDIO_F32LSB;
pub const SDL_AUDIO_ALLOW_FREQUENCY_CHANGE = @as(c_int, 0x00000001);
pub const SDL_AUDIO_ALLOW_FORMAT_CHANGE = @as(c_int, 0x00000002);
pub const SDL_AUDIO_ALLOW_CHANNELS_CHANGE = @as(c_int, 0x00000004);
pub const SDL_AUDIO_ALLOW_SAMPLES_CHANGE = @as(c_int, 0x00000008);
pub const SDL_AUDIO_ALLOW_ANY_CHANGE = ((SDL_AUDIO_ALLOW_FREQUENCY_CHANGE | SDL_AUDIO_ALLOW_FORMAT_CHANGE) | SDL_AUDIO_ALLOW_CHANNELS_CHANGE) | SDL_AUDIO_ALLOW_SAMPLES_CHANGE;
pub const SDL_AUDIOCVT_MAX_FILTERS = @as(c_int, 9);
pub inline fn SDL_LoadWAV(file: anytype, spec: anytype, audio_buf: anytype, audio_len: anytype) @TypeOf(SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1), spec, audio_buf, audio_len)) {
    _ = &file;
    _ = &spec;
    _ = &audio_buf;
    _ = &audio_len;
    return SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1), spec, audio_buf, audio_len);
}
pub const SDL_MIX_MAXVOLUME = @as(c_int, 128);
pub const SDL_clipboard_h_ = "";
pub const SDL_cpuinfo_h_ = "";
pub const __ARM_NEON_H = "";
pub const __ARM_BF16_H = "";
pub const SDL_CACHELINE_SIZE = @as(c_int, 128);
pub const SDL_events_h_ = "";
pub const SDL_video_h_ = "";
pub const SDL_pixels_h_ = "";
pub const SDL_ALPHA_OPAQUE = @as(c_int, 255);
pub const SDL_ALPHA_TRANSPARENT = @as(c_int, 0);
pub inline fn SDL_DEFINE_PIXELFOURCC(A: anytype, B: anytype, C: anytype, D: anytype) @TypeOf(SDL_FOURCC(A, B, C, D)) {
    _ = &A;
    _ = &B;
    _ = &C;
    _ = &D;
    return SDL_FOURCC(A, B, C, D);
}
pub inline fn SDL_DEFINE_PIXELFORMAT(@"type": anytype, order: anytype, layout: anytype, bits: anytype, bytes: anytype) @TypeOf((((((@as(c_int, 1) << @as(c_int, 28)) | (@"type" << @as(c_int, 24))) | (order << @as(c_int, 20))) | (layout << @as(c_int, 16))) | (bits << @as(c_int, 8))) | (bytes << @as(c_int, 0))) {
    _ = &@"type";
    _ = &order;
    _ = &layout;
    _ = &bits;
    _ = &bytes;
    return (((((@as(c_int, 1) << @as(c_int, 28)) | (@"type" << @as(c_int, 24))) | (order << @as(c_int, 20))) | (layout << @as(c_int, 16))) | (bits << @as(c_int, 8))) | (bytes << @as(c_int, 0));
}
pub inline fn SDL_PIXELFLAG(X: anytype) @TypeOf((X >> @as(c_int, 28)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 28)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELTYPE(X: anytype) @TypeOf((X >> @as(c_int, 24)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 24)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELORDER(X: anytype) @TypeOf((X >> @as(c_int, 20)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 20)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELLAYOUT(X: anytype) @TypeOf((X >> @as(c_int, 16)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 16)) & @as(c_int, 0x0F);
}
pub inline fn SDL_BITSPERPIXEL(X: anytype) @TypeOf((X >> @as(c_int, 8)) & @as(c_int, 0xFF)) {
    _ = &X;
    return (X >> @as(c_int, 8)) & @as(c_int, 0xFF);
}
pub inline fn SDL_BYTESPERPIXEL(X: anytype) @TypeOf(if (SDL_ISPIXELFORMAT_FOURCC(X)) if (((X == SDL_PIXELFORMAT_YUY2) or (X == SDL_PIXELFORMAT_UYVY)) or (X == SDL_PIXELFORMAT_YVYU)) @as(c_int, 2) else @as(c_int, 1) else (X >> @as(c_int, 0)) & @as(c_int, 0xFF)) {
    _ = &X;
    return if (SDL_ISPIXELFORMAT_FOURCC(X)) if (((X == SDL_PIXELFORMAT_YUY2) or (X == SDL_PIXELFORMAT_UYVY)) or (X == SDL_PIXELFORMAT_YVYU)) @as(c_int, 2) else @as(c_int, 1) else (X >> @as(c_int, 0)) & @as(c_int, 0xFF);
}
pub inline fn SDL_ISPIXELFORMAT_INDEXED(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and ((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX2)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and ((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX2)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8));
}
pub inline fn SDL_ISPIXELFORMAT_PACKED(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32));
}
pub inline fn SDL_ISPIXELFORMAT_ARRAY(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32));
}
pub inline fn SDL_ISPIXELFORMAT_ALPHA(format: anytype) @TypeOf(((SDL_ISPIXELFORMAT_PACKED(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))) or ((SDL_ISPIXELFORMAT_ARRAY(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_ARRAYORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_BGRA)))) {
    _ = &format;
    return ((SDL_ISPIXELFORMAT_PACKED(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))) or ((SDL_ISPIXELFORMAT_ARRAY(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_ARRAYORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_BGRA)));
}
pub inline fn SDL_ISPIXELFORMAT_FOURCC(format: anytype) @TypeOf((format != 0) and (SDL_PIXELFLAG(format) != @as(c_int, 1))) {
    _ = &format;
    return (format != 0) and (SDL_PIXELFLAG(format) != @as(c_int, 1));
}
pub const SDL_Colour = SDL_Color;
pub const SDL_rect_h_ = "";
pub const SDL_surface_h_ = "";
pub const SDL_blendmode_h_ = "";
pub const SDL_SWSURFACE = @as(c_int, 0);
pub const SDL_PREALLOC = @as(c_int, 0x00000001);
pub const SDL_RLEACCEL = @as(c_int, 0x00000002);
pub const SDL_DONTFREE = @as(c_int, 0x00000004);
pub const SDL_SIMD_ALIGNED = @as(c_int, 0x00000008);
pub inline fn SDL_MUSTLOCK(S: anytype) @TypeOf((S.*.flags & SDL_RLEACCEL) != @as(c_int, 0)) {
    _ = &S;
    return (S.*.flags & SDL_RLEACCEL) != @as(c_int, 0);
}
pub inline fn SDL_LoadBMP(file: anytype) @TypeOf(SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1))) {
    _ = &file;
    return SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1));
}
pub inline fn SDL_SaveBMP(surface: anytype, file: anytype) @TypeOf(SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), @as(c_int, 1))) {
    _ = &surface;
    _ = &file;
    return SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), @as(c_int, 1));
}
pub const SDL_BlitSurface = SDL_UpperBlit;
pub const SDL_BlitScaled = SDL_UpperBlitScaled;
pub const SDL_WINDOWPOS_UNDEFINED_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x1FFF0000, .hex);
pub inline fn SDL_WINDOWPOS_UNDEFINED_DISPLAY(X: anytype) @TypeOf(SDL_WINDOWPOS_UNDEFINED_MASK | X) {
    _ = &X;
    return SDL_WINDOWPOS_UNDEFINED_MASK | X;
}
pub const SDL_WINDOWPOS_UNDEFINED = SDL_WINDOWPOS_UNDEFINED_DISPLAY(@as(c_int, 0));
pub inline fn SDL_WINDOWPOS_ISUNDEFINED(X: anytype) @TypeOf((X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_UNDEFINED_MASK) {
    _ = &X;
    return (X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_UNDEFINED_MASK;
}
pub const SDL_WINDOWPOS_CENTERED_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x2FFF0000, .hex);
pub inline fn SDL_WINDOWPOS_CENTERED_DISPLAY(X: anytype) @TypeOf(SDL_WINDOWPOS_CENTERED_MASK | X) {
    _ = &X;
    return SDL_WINDOWPOS_CENTERED_MASK | X;
}
pub const SDL_WINDOWPOS_CENTERED = SDL_WINDOWPOS_CENTERED_DISPLAY(@as(c_int, 0));
pub inline fn SDL_WINDOWPOS_ISCENTERED(X: anytype) @TypeOf((X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_CENTERED_MASK) {
    _ = &X;
    return (X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_CENTERED_MASK;
}
pub const SDL_keyboard_h_ = "";
pub const SDL_keycode_h_ = "";
pub const SDL_scancode_h_ = "";
pub const SDLK_SCANCODE_MASK = @as(c_int, 1) << @as(c_int, 30);
pub inline fn SDL_SCANCODE_TO_KEYCODE(X: anytype) @TypeOf(X | SDLK_SCANCODE_MASK) {
    _ = &X;
    return X | SDLK_SCANCODE_MASK;
}
pub const SDL_mouse_h_ = "";
pub inline fn SDL_BUTTON(X: anytype) @TypeOf(@as(c_int, 1) << (X - @as(c_int, 1))) {
    _ = &X;
    return @as(c_int, 1) << (X - @as(c_int, 1));
}
pub const SDL_BUTTON_LEFT = @as(c_int, 1);
pub const SDL_BUTTON_MIDDLE = @as(c_int, 2);
pub const SDL_BUTTON_RIGHT = @as(c_int, 3);
pub const SDL_BUTTON_X1 = @as(c_int, 4);
pub const SDL_BUTTON_X2 = @as(c_int, 5);
pub const SDL_BUTTON_LMASK = SDL_BUTTON(SDL_BUTTON_LEFT);
pub const SDL_BUTTON_MMASK = SDL_BUTTON(SDL_BUTTON_MIDDLE);
pub const SDL_BUTTON_RMASK = SDL_BUTTON(SDL_BUTTON_RIGHT);
pub const SDL_BUTTON_X1MASK = SDL_BUTTON(SDL_BUTTON_X1);
pub const SDL_BUTTON_X2MASK = SDL_BUTTON(SDL_BUTTON_X2);
pub const SDL_joystick_h_ = "";
pub const SDL_guid_h_ = "";
pub const SDL_IPHONE_MAX_GFORCE = @as(f64, 5.0);
pub const SDL_VIRTUAL_JOYSTICK_DESC_VERSION = @as(c_int, 1);
pub const SDL_JOYSTICK_AXIS_MAX = @as(c_int, 32767);
pub const SDL_JOYSTICK_AXIS_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const SDL_HAT_CENTERED = @as(c_int, 0x00);
pub const SDL_HAT_UP = @as(c_int, 0x01);
pub const SDL_HAT_RIGHT = @as(c_int, 0x02);
pub const SDL_HAT_DOWN = @as(c_int, 0x04);
pub const SDL_HAT_LEFT = @as(c_int, 0x08);
pub const SDL_HAT_RIGHTUP = SDL_HAT_RIGHT | SDL_HAT_UP;
pub const SDL_HAT_RIGHTDOWN = SDL_HAT_RIGHT | SDL_HAT_DOWN;
pub const SDL_HAT_LEFTUP = SDL_HAT_LEFT | SDL_HAT_UP;
pub const SDL_HAT_LEFTDOWN = SDL_HAT_LEFT | SDL_HAT_DOWN;
pub const SDL_gamecontroller_h_ = "";
pub const SDL_sensor_h_ = "";
pub const SDL_STANDARD_GRAVITY = @as(f32, 9.80665);
pub inline fn SDL_GameControllerAddMappingsFromFile(file: anytype) @TypeOf(SDL_GameControllerAddMappingsFromRW(SDL_RWFromFile(file, "rb"), @as(c_int, 1))) {
    _ = &file;
    return SDL_GameControllerAddMappingsFromRW(SDL_RWFromFile(file, "rb"), @as(c_int, 1));
}
pub const SDL_quit_h_ = "";
pub inline fn SDL_QuitRequested() @TypeOf(SDL_PeepEvents(NULL, @as(c_int, 0), SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > @as(c_int, 0)) {
    return blk_1: {
        _ = SDL_PumpEvents();
        break :blk_1 SDL_PeepEvents(NULL, @as(c_int, 0), SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > @as(c_int, 0);
    };
}
pub const SDL_gesture_h_ = "";
pub const SDL_touch_h_ = "";
pub const SDL_TOUCH_MOUSEID = @import("std").zig.c_translation.cast(Uint32, -@as(c_int, 1));
pub const SDL_MOUSE_TOUCHID = @import("std").zig.c_translation.cast(Sint64, -@as(c_int, 1));
pub const SDL_RELEASED = @as(c_int, 0);
pub const SDL_PRESSED = @as(c_int, 1);
pub const SDL_TEXTEDITINGEVENT_TEXT_SIZE = @as(c_int, 32);
pub const SDL_TEXTINPUTEVENT_TEXT_SIZE = @as(c_int, 32);
pub const SDL_QUERY = -@as(c_int, 1);
pub const SDL_IGNORE = @as(c_int, 0);
pub const SDL_DISABLE = @as(c_int, 0);
pub const SDL_ENABLE = @as(c_int, 1);
pub inline fn SDL_GetEventState(@"type": anytype) @TypeOf(SDL_EventState(@"type", SDL_QUERY)) {
    _ = &@"type";
    return SDL_EventState(@"type", SDL_QUERY);
}
pub const SDL_filesystem_h_ = "";
pub const SDL_haptic_h_ = "";
pub const SDL_HAPTIC_CONSTANT = @as(c_uint, 1) << @as(c_int, 0);
pub const SDL_HAPTIC_SINE = @as(c_uint, 1) << @as(c_int, 1);
pub const SDL_HAPTIC_LEFTRIGHT = @as(c_uint, 1) << @as(c_int, 2);
pub const SDL_HAPTIC_TRIANGLE = @as(c_uint, 1) << @as(c_int, 3);
pub const SDL_HAPTIC_SAWTOOTHUP = @as(c_uint, 1) << @as(c_int, 4);
pub const SDL_HAPTIC_SAWTOOTHDOWN = @as(c_uint, 1) << @as(c_int, 5);
pub const SDL_HAPTIC_RAMP = @as(c_uint, 1) << @as(c_int, 6);
pub const SDL_HAPTIC_SPRING = @as(c_uint, 1) << @as(c_int, 7);
pub const SDL_HAPTIC_DAMPER = @as(c_uint, 1) << @as(c_int, 8);
pub const SDL_HAPTIC_INERTIA = @as(c_uint, 1) << @as(c_int, 9);
pub const SDL_HAPTIC_FRICTION = @as(c_uint, 1) << @as(c_int, 10);
pub const SDL_HAPTIC_CUSTOM = @as(c_uint, 1) << @as(c_int, 11);
pub const SDL_HAPTIC_GAIN = @as(c_uint, 1) << @as(c_int, 12);
pub const SDL_HAPTIC_AUTOCENTER = @as(c_uint, 1) << @as(c_int, 13);
pub const SDL_HAPTIC_STATUS = @as(c_uint, 1) << @as(c_int, 14);
pub const SDL_HAPTIC_PAUSE = @as(c_uint, 1) << @as(c_int, 15);
pub const SDL_HAPTIC_POLAR = @as(c_int, 0);
pub const SDL_HAPTIC_CARTESIAN = @as(c_int, 1);
pub const SDL_HAPTIC_SPHERICAL = @as(c_int, 2);
pub const SDL_HAPTIC_STEERING_AXIS = @as(c_int, 3);
pub const SDL_HAPTIC_INFINITY = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const SDL_hidapi_h_ = "";
pub const SDL_hints_h_ = "";
pub const SDL_HINT_ACCELEROMETER_AS_JOYSTICK = "SDL_ACCELEROMETER_AS_JOYSTICK";
pub const SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED";
pub const SDL_HINT_ALLOW_TOPMOST = "SDL_ALLOW_TOPMOST";
pub const SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION";
pub const SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION";
pub const SDL_HINT_ANDROID_BLOCK_ON_PAUSE = "SDL_ANDROID_BLOCK_ON_PAUSE";
pub const SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO = "SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO";
pub const SDL_HINT_ANDROID_TRAP_BACK_BUTTON = "SDL_ANDROID_TRAP_BACK_BUTTON";
pub const SDL_HINT_APP_NAME = "SDL_APP_NAME";
pub const SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS";
pub const SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION";
pub const SDL_HINT_AUDIO_CATEGORY = "SDL_AUDIO_CATEGORY";
pub const SDL_HINT_AUDIO_DEVICE_APP_NAME = "SDL_AUDIO_DEVICE_APP_NAME";
pub const SDL_HINT_AUDIO_DEVICE_STREAM_NAME = "SDL_AUDIO_DEVICE_STREAM_NAME";
pub const SDL_HINT_AUDIO_DEVICE_STREAM_ROLE = "SDL_AUDIO_DEVICE_STREAM_ROLE";
pub const SDL_HINT_AUDIO_RESAMPLING_MODE = "SDL_AUDIO_RESAMPLING_MODE";
pub const SDL_HINT_AUTO_UPDATE_JOYSTICKS = "SDL_AUTO_UPDATE_JOYSTICKS";
pub const SDL_HINT_AUTO_UPDATE_SENSORS = "SDL_AUTO_UPDATE_SENSORS";
pub const SDL_HINT_BMP_SAVE_LEGACY_FORMAT = "SDL_BMP_SAVE_LEGACY_FORMAT";
pub const SDL_HINT_DISPLAY_USABLE_BOUNDS = "SDL_DISPLAY_USABLE_BOUNDS";
pub const SDL_HINT_EMSCRIPTEN_ASYNCIFY = "SDL_EMSCRIPTEN_ASYNCIFY";
pub const SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT";
pub const SDL_HINT_ENABLE_SCREEN_KEYBOARD = "SDL_ENABLE_SCREEN_KEYBOARD";
pub const SDL_HINT_ENABLE_STEAM_CONTROLLERS = "SDL_ENABLE_STEAM_CONTROLLERS";
pub const SDL_HINT_EVENT_LOGGING = "SDL_EVENT_LOGGING";
pub const SDL_HINT_FORCE_RAISEWINDOW = "SDL_HINT_FORCE_RAISEWINDOW";
pub const SDL_HINT_FRAMEBUFFER_ACCELERATION = "SDL_FRAMEBUFFER_ACCELERATION";
pub const SDL_HINT_GAMECONTROLLERCONFIG = "SDL_GAMECONTROLLERCONFIG";
pub const SDL_HINT_GAMECONTROLLERCONFIG_FILE = "SDL_GAMECONTROLLERCONFIG_FILE";
pub const SDL_HINT_GAMECONTROLLERTYPE = "SDL_GAMECONTROLLERTYPE";
pub const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES = "SDL_GAMECONTROLLER_IGNORE_DEVICES";
pub const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT";
pub const SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS = "SDL_GAMECONTROLLER_USE_BUTTON_LABELS";
pub const SDL_HINT_GRAB_KEYBOARD = "SDL_GRAB_KEYBOARD";
pub const SDL_HINT_HIDAPI_IGNORE_DEVICES = "SDL_HIDAPI_IGNORE_DEVICES";
pub const SDL_HINT_IDLE_TIMER_DISABLED = "SDL_IOS_IDLE_TIMER_DISABLED";
pub const SDL_HINT_IME_INTERNAL_EDITING = "SDL_IME_INTERNAL_EDITING";
pub const SDL_HINT_IME_SHOW_UI = "SDL_IME_SHOW_UI";
pub const SDL_HINT_IME_SUPPORT_EXTENDED_TEXT = "SDL_IME_SUPPORT_EXTENDED_TEXT";
pub const SDL_HINT_IOS_HIDE_HOME_INDICATOR = "SDL_IOS_HIDE_HOME_INDICATOR";
pub const SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS";
pub const SDL_HINT_JOYSTICK_ARCADESTICK_DEVICES = "SDL_JOYSTICK_ARCADESTICK_DEVICES";
pub const SDL_HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_BLACKLIST_DEVICES = "SDL_JOYSTICK_BLACKLIST_DEVICES";
pub const SDL_HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_FLIGHTSTICK_DEVICES = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES";
pub const SDL_HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_GAMECUBE_DEVICES = "SDL_JOYSTICK_GAMECUBE_DEVICES";
pub const SDL_HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_HIDAPI = "SDL_JOYSTICK_HIDAPI";
pub const SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE = "SDL_JOYSTICK_HIDAPI_GAMECUBE";
pub const SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE = "SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE";
pub const SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS = "SDL_JOYSTICK_HIDAPI_JOY_CONS";
pub const SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS";
pub const SDL_HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS";
pub const SDL_HINT_JOYSTICK_HIDAPI_LUNA = "SDL_JOYSTICK_HIDAPI_LUNA";
pub const SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC";
pub const SDL_HINT_JOYSTICK_HIDAPI_SHIELD = "SDL_JOYSTICK_HIDAPI_SHIELD";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS3 = "SDL_JOYSTICK_HIDAPI_PS3";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS4 = "SDL_JOYSTICK_HIDAPI_PS4";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5 = "SDL_JOYSTICK_HIDAPI_PS5";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE";
pub const SDL_HINT_JOYSTICK_HIDAPI_STADIA = "SDL_JOYSTICK_HIDAPI_STADIA";
pub const SDL_HINT_JOYSTICK_HIDAPI_STEAM = "SDL_JOYSTICK_HIDAPI_STEAM";
pub const SDL_HINT_JOYSTICK_HIDAPI_STEAMDECK = "SDL_JOYSTICK_HIDAPI_STEAMDECK";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH = "SDL_JOYSTICK_HIDAPI_SWITCH";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_WII = "SDL_JOYSTICK_HIDAPI_WII";
pub const SDL_HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX = "SDL_JOYSTICK_HIDAPI_XBOX";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360 = "SDL_JOYSTICK_HIDAPI_XBOX_360";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE = "SDL_JOYSTICK_HIDAPI_XBOX_ONE";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED";
pub const SDL_HINT_JOYSTICK_IOKIT = "SDL_JOYSTICK_IOKIT";
pub const SDL_HINT_JOYSTICK_MFI = "SDL_JOYSTICK_MFI";
pub const SDL_HINT_JOYSTICK_RAWINPUT = "SDL_JOYSTICK_RAWINPUT";
pub const SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT";
pub const SDL_HINT_JOYSTICK_ROG_CHAKRAM = "SDL_JOYSTICK_ROG_CHAKRAM";
pub const SDL_HINT_JOYSTICK_THREAD = "SDL_JOYSTICK_THREAD";
pub const SDL_HINT_JOYSTICK_THROTTLE_DEVICES = "SDL_JOYSTICK_THROTTLE_DEVICES";
pub const SDL_HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_WGI = "SDL_JOYSTICK_WGI";
pub const SDL_HINT_JOYSTICK_WHEEL_DEVICES = "SDL_JOYSTICK_WHEEL_DEVICES";
pub const SDL_HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED";
pub const SDL_HINT_JOYSTICK_ZERO_CENTERED_DEVICES = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES";
pub const SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER = "SDL_KMSDRM_REQUIRE_DRM_MASTER";
pub const SDL_HINT_JOYSTICK_DEVICE = "SDL_JOYSTICK_DEVICE";
pub const SDL_HINT_LINUX_DIGITAL_HATS = "SDL_LINUX_DIGITAL_HATS";
pub const SDL_HINT_LINUX_HAT_DEADZONES = "SDL_LINUX_HAT_DEADZONES";
pub const SDL_HINT_LINUX_JOYSTICK_CLASSIC = "SDL_LINUX_JOYSTICK_CLASSIC";
pub const SDL_HINT_LINUX_JOYSTICK_DEADZONES = "SDL_LINUX_JOYSTICK_DEADZONES";
pub const SDL_HINT_LOGGING = "SDL_LOGGING";
pub const SDL_HINT_MAC_BACKGROUND_APP = "SDL_MAC_BACKGROUND_APP";
pub const SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK";
pub const SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH = "SDL_MAC_OPENGL_ASYNC_DISPATCH";
pub const SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS = "SDL_MOUSE_DOUBLE_CLICK_RADIUS";
pub const SDL_HINT_MOUSE_DOUBLE_CLICK_TIME = "SDL_MOUSE_DOUBLE_CLICK_TIME";
pub const SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH = "SDL_MOUSE_FOCUS_CLICKTHROUGH";
pub const SDL_HINT_MOUSE_NORMAL_SPEED_SCALE = "SDL_MOUSE_NORMAL_SPEED_SCALE";
pub const SDL_HINT_MOUSE_RELATIVE_MODE_CENTER = "SDL_MOUSE_RELATIVE_MODE_CENTER";
pub const SDL_HINT_MOUSE_RELATIVE_MODE_WARP = "SDL_MOUSE_RELATIVE_MODE_WARP";
pub const SDL_HINT_MOUSE_RELATIVE_SCALING = "SDL_MOUSE_RELATIVE_SCALING";
pub const SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE = "SDL_MOUSE_RELATIVE_SPEED_SCALE";
pub const SDL_HINT_MOUSE_RELATIVE_SYSTEM_SCALE = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE";
pub const SDL_HINT_MOUSE_RELATIVE_WARP_MOTION = "SDL_MOUSE_RELATIVE_WARP_MOTION";
pub const SDL_HINT_MOUSE_TOUCH_EVENTS = "SDL_MOUSE_TOUCH_EVENTS";
pub const SDL_HINT_MOUSE_AUTO_CAPTURE = "SDL_MOUSE_AUTO_CAPTURE";
pub const SDL_HINT_NO_SIGNAL_HANDLERS = "SDL_NO_SIGNAL_HANDLERS";
pub const SDL_HINT_OPENGL_ES_DRIVER = "SDL_OPENGL_ES_DRIVER";
pub const SDL_HINT_ORIENTATIONS = "SDL_IOS_ORIENTATIONS";
pub const SDL_HINT_POLL_SENTINEL = "SDL_POLL_SENTINEL";
pub const SDL_HINT_PREFERRED_LOCALES = "SDL_PREFERRED_LOCALES";
pub const SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION = "SDL_QTWAYLAND_CONTENT_ORIENTATION";
pub const SDL_HINT_QTWAYLAND_WINDOW_FLAGS = "SDL_QTWAYLAND_WINDOW_FLAGS";
pub const SDL_HINT_RENDER_BATCHING = "SDL_RENDER_BATCHING";
pub const SDL_HINT_RENDER_LINE_METHOD = "SDL_RENDER_LINE_METHOD";
pub const SDL_HINT_RENDER_DIRECT3D11_DEBUG = "SDL_RENDER_DIRECT3D11_DEBUG";
pub const SDL_HINT_RENDER_DIRECT3D_THREADSAFE = "SDL_RENDER_DIRECT3D_THREADSAFE";
pub const SDL_HINT_RENDER_DRIVER = "SDL_RENDER_DRIVER";
pub const SDL_HINT_RENDER_LOGICAL_SIZE_MODE = "SDL_RENDER_LOGICAL_SIZE_MODE";
pub const SDL_HINT_RENDER_OPENGL_SHADERS = "SDL_RENDER_OPENGL_SHADERS";
pub const SDL_HINT_RENDER_SCALE_QUALITY = "SDL_RENDER_SCALE_QUALITY";
pub const SDL_HINT_RENDER_VSYNC = "SDL_RENDER_VSYNC";
pub const SDL_HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE";
pub const SDL_HINT_ROG_GAMEPAD_MICE = "SDL_ROG_GAMEPAD_MICE";
pub const SDL_HINT_ROG_GAMEPAD_MICE_EXCLUDED = "SDL_ROG_GAMEPAD_MICE_EXCLUDED";
pub const SDL_HINT_PS2_DYNAMIC_VSYNC = "SDL_PS2_DYNAMIC_VSYNC";
pub const SDL_HINT_RETURN_KEY_HIDES_IME = "SDL_RETURN_KEY_HIDES_IME";
pub const SDL_HINT_RPI_VIDEO_LAYER = "SDL_RPI_VIDEO_LAYER";
pub const SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME";
pub const SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL";
pub const SDL_HINT_THREAD_PRIORITY_POLICY = "SDL_THREAD_PRIORITY_POLICY";
pub const SDL_HINT_THREAD_STACK_SIZE = "SDL_THREAD_STACK_SIZE";
pub const SDL_HINT_TIMER_RESOLUTION = "SDL_TIMER_RESOLUTION";
pub const SDL_HINT_TOUCH_MOUSE_EVENTS = "SDL_TOUCH_MOUSE_EVENTS";
pub const SDL_HINT_VITA_TOUCH_MOUSE_DEVICE = "SDL_HINT_VITA_TOUCH_MOUSE_DEVICE";
pub const SDL_HINT_TV_REMOTE_AS_JOYSTICK = "SDL_TV_REMOTE_AS_JOYSTICK";
pub const SDL_HINT_VIDEO_ALLOW_SCREENSAVER = "SDL_VIDEO_ALLOW_SCREENSAVER";
pub const SDL_HINT_VIDEO_DOUBLE_BUFFER = "SDL_VIDEO_DOUBLE_BUFFER";
pub const SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY = "SDL_VIDEO_EGL_ALLOW_TRANSPARENCY";
pub const SDL_HINT_VIDEO_EXTERNAL_CONTEXT = "SDL_VIDEO_EXTERNAL_CONTEXT";
pub const SDL_HINT_VIDEO_HIGHDPI_DISABLED = "SDL_VIDEO_HIGHDPI_DISABLED";
pub const SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES = "SDL_VIDEO_MAC_FULLSCREEN_SPACES";
pub const SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS";
pub const SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR";
pub const SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR";
pub const SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION = "SDL_VIDEO_WAYLAND_MODE_EMULATION";
pub const SDL_HINT_VIDEO_WAYLAND_EMULATE_MOUSE_WARP = "SDL_VIDEO_WAYLAND_EMULATE_MOUSE_WARP";
pub const SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT = "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT";
pub const SDL_HINT_VIDEO_FOREIGN_WINDOW_OPENGL = "SDL_VIDEO_FOREIGN_WINDOW_OPENGL";
pub const SDL_HINT_VIDEO_FOREIGN_WINDOW_VULKAN = "SDL_VIDEO_FOREIGN_WINDOW_VULKAN";
pub const SDL_HINT_VIDEO_WIN_D3DCOMPILER = "SDL_VIDEO_WIN_D3DCOMPILER";
pub const SDL_HINT_VIDEO_X11_FORCE_EGL = "SDL_VIDEO_X11_FORCE_EGL";
pub const SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR";
pub const SDL_HINT_VIDEO_X11_NET_WM_PING = "SDL_VIDEO_X11_NET_WM_PING";
pub const SDL_HINT_VIDEO_X11_WINDOW_VISUALID = "SDL_VIDEO_X11_WINDOW_VISUALID";
pub const SDL_HINT_VIDEO_X11_XINERAMA = "SDL_VIDEO_X11_XINERAMA";
pub const SDL_HINT_VIDEO_X11_XRANDR = "SDL_VIDEO_X11_XRANDR";
pub const SDL_HINT_VIDEO_X11_XVIDMODE = "SDL_VIDEO_X11_XVIDMODE";
pub const SDL_HINT_WAVE_FACT_CHUNK = "SDL_WAVE_FACT_CHUNK";
pub const SDL_HINT_WAVE_RIFF_CHUNK_SIZE = "SDL_WAVE_RIFF_CHUNK_SIZE";
pub const SDL_HINT_WAVE_TRUNCATION = "SDL_WAVE_TRUNCATION";
pub const SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING = "SDL_WINDOWS_DISABLE_THREAD_NAMING";
pub const SDL_HINT_WINDOWS_ENABLE_MENU_MNEMONICS = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS";
pub const SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP = "SDL_WINDOWS_ENABLE_MESSAGELOOP";
pub const SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS = "SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS";
pub const SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL";
pub const SDL_HINT_WINDOWS_INTRESOURCE_ICON = "SDL_WINDOWS_INTRESOURCE_ICON";
pub const SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL";
pub const SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 = "SDL_WINDOWS_NO_CLOSE_ON_ALT_F4";
pub const SDL_HINT_WINDOWS_USE_D3D9EX = "SDL_WINDOWS_USE_D3D9EX";
pub const SDL_HINT_WINDOWS_DPI_AWARENESS = "SDL_WINDOWS_DPI_AWARENESS";
pub const SDL_HINT_WINDOWS_DPI_SCALING = "SDL_WINDOWS_DPI_SCALING";
pub const SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN";
pub const SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN = "SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN";
pub const SDL_HINT_WINRT_HANDLE_BACK_BUTTON = "SDL_WINRT_HANDLE_BACK_BUTTON";
pub const SDL_HINT_WINRT_PRIVACY_POLICY_LABEL = "SDL_WINRT_PRIVACY_POLICY_LABEL";
pub const SDL_HINT_WINRT_PRIVACY_POLICY_URL = "SDL_WINRT_PRIVACY_POLICY_URL";
pub const SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT = "SDL_X11_FORCE_OVERRIDE_REDIRECT";
pub const SDL_HINT_XINPUT_ENABLED = "SDL_XINPUT_ENABLED";
pub const SDL_HINT_DIRECTINPUT_ENABLED = "SDL_DIRECTINPUT_ENABLED";
pub const SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING = "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING";
pub const SDL_HINT_AUDIO_INCLUDE_MONITORS = "SDL_AUDIO_INCLUDE_MONITORS";
pub const SDL_HINT_X11_WINDOW_TYPE = "SDL_X11_WINDOW_TYPE";
pub const SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE = "SDL_QUIT_ON_LAST_WINDOW_CLOSE";
pub const SDL_HINT_VIDEODRIVER = "SDL_VIDEODRIVER";
pub const SDL_HINT_AUDIODRIVER = "SDL_AUDIODRIVER";
pub const SDL_HINT_KMSDRM_DEVICE_INDEX = "SDL_KMSDRM_DEVICE_INDEX";
pub const SDL_HINT_TRACKPAD_IS_TOUCH_ONLY = "SDL_TRACKPAD_IS_TOUCH_ONLY";
pub const SDL_HINT_SHUTDOWN_DBUS_ON_QUIT = "SDL_SHUTDOWN_DBUS_ON_QUIT";
pub const SDL_loadso_h_ = "";
pub const SDL_log_h_ = "";
pub const SDL_MAX_LOG_MESSAGE = @as(c_int, 4096);
pub const SDL_messagebox_h_ = "";
pub const SDL_metal_h_ = "";
pub const SDL_power_h_ = "";
pub const SDL_render_h_ = "";
pub const SDL_shape_h_ = "";
pub const SDL_NONSHAPEABLE_WINDOW = -@as(c_int, 1);
pub const SDL_INVALID_SHAPE_ARGUMENT = -@as(c_int, 2);
pub const SDL_WINDOW_LACKS_SHAPE = -@as(c_int, 3);
pub inline fn SDL_SHAPEMODEALPHA(mode: anytype) @TypeOf(((mode == ShapeModeDefault) or (mode == ShapeModeBinarizeAlpha)) or (mode == ShapeModeReverseBinarizeAlpha)) {
    _ = &mode;
    return ((mode == ShapeModeDefault) or (mode == ShapeModeBinarizeAlpha)) or (mode == ShapeModeReverseBinarizeAlpha);
}
pub const SDL_system_h_ = "";
pub const SDL_timer_h_ = "";
pub inline fn SDL_TICKS_PASSED(A: anytype, B: anytype) @TypeOf(@import("std").zig.c_translation.cast(Sint32, B - A) <= @as(c_int, 0)) {
    _ = &A;
    _ = &B;
    return @import("std").zig.c_translation.cast(Sint32, B - A) <= @as(c_int, 0);
}
pub const SDL_version_h_ = "";
pub const SDL_MAJOR_VERSION = @as(c_int, 2);
pub const SDL_MINOR_VERSION = @as(c_int, 30);
pub const SDL_PATCHLEVEL = @as(c_int, 3);
pub inline fn SDL_VERSIONNUM(X: anytype, Y: anytype, Z: anytype) @TypeOf(((X * @as(c_int, 1000)) + (Y * @as(c_int, 100))) + Z) {
    _ = &X;
    _ = &Y;
    _ = &Z;
    return ((X * @as(c_int, 1000)) + (Y * @as(c_int, 100))) + Z;
}
pub const SDL_COMPILEDVERSION = SDL_VERSIONNUM(SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
pub inline fn SDL_VERSION_ATLEAST(X: anytype, Y: anytype, Z: anytype) @TypeOf(((SDL_MAJOR_VERSION >= X) and ((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION >= Y))) and (((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION > Y)) or (SDL_PATCHLEVEL >= Z))) {
    _ = &X;
    _ = &Y;
    _ = &Z;
    return ((SDL_MAJOR_VERSION >= X) and ((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION >= Y))) and (((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION > Y)) or (SDL_PATCHLEVEL >= Z));
}
pub const _SDL_locale_h = "";
pub const SDL_misc_h_ = "";
pub const SDL_INIT_TIMER = @as(c_uint, 0x00000001);
pub const SDL_INIT_AUDIO = @as(c_uint, 0x00000010);
pub const SDL_INIT_VIDEO = @as(c_uint, 0x00000020);
pub const SDL_INIT_JOYSTICK = @as(c_uint, 0x00000200);
pub const SDL_INIT_HAPTIC = @as(c_uint, 0x00001000);
pub const SDL_INIT_GAMECONTROLLER = @as(c_uint, 0x00002000);
pub const SDL_INIT_EVENTS = @as(c_uint, 0x00004000);
pub const SDL_INIT_SENSOR = @as(c_uint, 0x00008000);
pub const SDL_INIT_NOPARACHUTE = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00100000, .hex);
pub const SDL_INIT_EVERYTHING = ((((((SDL_INIT_TIMER | SDL_INIT_AUDIO) | SDL_INIT_VIDEO) | SDL_INIT_EVENTS) | SDL_INIT_JOYSTICK) | SDL_INIT_HAPTIC) | SDL_INIT_GAMECONTROLLER) | SDL_INIT_SENSOR;
pub const EPOXY_GL_H = "";
pub const EPOXY_COMMON_H = "";
pub const EPOXY_BEGIN_DECLS = "";
pub const EPOXY_END_DECLS = "";
pub const __STDBOOL_H = "";
pub const __bool_true_false_are_defined = @as(c_int, 1);
pub const @"bool" = bool;
pub const @"true" = @as(c_int, 1);
pub const @"false" = @as(c_int, 0);
pub const __gl_h_ = "";
pub const __glext_h_ = "";
pub const KHRONOS_SUPPORT_INT64 = @as(c_int, 1);
pub const KHRONOS_SUPPORT_FLOAT = @as(c_int, 1);
pub const KHRONOS_APIATTRIBUTES = "";
pub const APIENTRY = "";
pub const GLAPIENTRY = "";
pub const EPOXY_CALLSPEC = "";
pub const GLAPI = "";
pub const KHRONOS_APIENTRY = "";
pub const KHRONOS_APICALL = "";
pub const __khrplatform_h_ = @as(c_int, 1);
pub const KHRONOS_MAX_ENUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7FFFFFFF, .hex);
pub const GL_ES_VERSION_2_0 = @as(c_int, 1);
pub const GL_ES_VERSION_3_0 = @as(c_int, 1);
pub const GL_ES_VERSION_3_1 = @as(c_int, 1);
pub const GL_ES_VERSION_3_2 = @as(c_int, 1);
pub const GL_SC_VERSION_2_0 = @as(c_int, 1);
pub const GL_VERSION_1_0 = @as(c_int, 1);
pub const GL_VERSION_1_1 = @as(c_int, 1);
pub const GL_VERSION_1_2 = @as(c_int, 1);
pub const GL_VERSION_1_3 = @as(c_int, 1);
pub const GL_VERSION_1_4 = @as(c_int, 1);
pub const GL_VERSION_1_5 = @as(c_int, 1);
pub const GL_VERSION_2_0 = @as(c_int, 1);
pub const GL_VERSION_2_1 = @as(c_int, 1);
pub const GL_VERSION_3_0 = @as(c_int, 1);
pub const GL_VERSION_3_1 = @as(c_int, 1);
pub const GL_VERSION_3_2 = @as(c_int, 1);
pub const GL_VERSION_3_3 = @as(c_int, 1);
pub const GL_VERSION_4_0 = @as(c_int, 1);
pub const GL_VERSION_4_1 = @as(c_int, 1);
pub const GL_VERSION_4_2 = @as(c_int, 1);
pub const GL_VERSION_4_3 = @as(c_int, 1);
pub const GL_VERSION_4_4 = @as(c_int, 1);
pub const GL_VERSION_4_5 = @as(c_int, 1);
pub const GL_VERSION_4_6 = @as(c_int, 1);
pub const GL_VERSION_ES_CM_1_0 = @as(c_int, 1);
pub const GL_3DFX_multisample = @as(c_int, 1);
pub const GL_3DFX_tbuffer = @as(c_int, 1);
pub const GL_3DFX_texture_compression_FXT1 = @as(c_int, 1);
pub const GL_AMD_blend_minmax_factor = @as(c_int, 1);
pub const GL_AMD_compressed_3DC_texture = @as(c_int, 1);
pub const GL_AMD_compressed_ATC_texture = @as(c_int, 1);
pub const GL_AMD_conservative_depth = @as(c_int, 1);
pub const GL_AMD_debug_output = @as(c_int, 1);
pub const GL_AMD_depth_clamp_separate = @as(c_int, 1);
pub const GL_AMD_draw_buffers_blend = @as(c_int, 1);
pub const GL_AMD_framebuffer_multisample_advanced = @as(c_int, 1);
pub const GL_AMD_framebuffer_sample_positions = @as(c_int, 1);
pub const GL_AMD_gcn_shader = @as(c_int, 1);
pub const GL_AMD_gpu_shader_half_float = @as(c_int, 1);
pub const GL_AMD_gpu_shader_int16 = @as(c_int, 1);
pub const GL_AMD_gpu_shader_int64 = @as(c_int, 1);
pub const GL_AMD_interleaved_elements = @as(c_int, 1);
pub const GL_AMD_multi_draw_indirect = @as(c_int, 1);
pub const GL_AMD_name_gen_delete = @as(c_int, 1);
pub const GL_AMD_occlusion_query_event = @as(c_int, 1);
pub const GL_AMD_performance_monitor = @as(c_int, 1);
pub const GL_AMD_pinned_memory = @as(c_int, 1);
pub const GL_AMD_program_binary_Z400 = @as(c_int, 1);
pub const GL_AMD_query_buffer_object = @as(c_int, 1);
pub const GL_AMD_sample_positions = @as(c_int, 1);
pub const GL_AMD_seamless_cubemap_per_texture = @as(c_int, 1);
pub const GL_AMD_shader_atomic_counter_ops = @as(c_int, 1);
pub const GL_AMD_shader_ballot = @as(c_int, 1);
pub const GL_AMD_shader_explicit_vertex_parameter = @as(c_int, 1);
pub const GL_AMD_shader_gpu_shader_half_float_fetch = @as(c_int, 1);
pub const GL_AMD_shader_image_load_store_lod = @as(c_int, 1);
pub const GL_AMD_shader_stencil_export = @as(c_int, 1);
pub const GL_AMD_shader_trinary_minmax = @as(c_int, 1);
pub const GL_AMD_sparse_texture = @as(c_int, 1);
pub const GL_AMD_stencil_operation_extended = @as(c_int, 1);
pub const GL_AMD_texture_gather_bias_lod = @as(c_int, 1);
pub const GL_AMD_texture_texture4 = @as(c_int, 1);
pub const GL_AMD_transform_feedback3_lines_triangles = @as(c_int, 1);
pub const GL_AMD_transform_feedback4 = @as(c_int, 1);
pub const GL_AMD_vertex_shader_layer = @as(c_int, 1);
pub const GL_AMD_vertex_shader_tessellator = @as(c_int, 1);
pub const GL_AMD_vertex_shader_viewport_index = @as(c_int, 1);
pub const GL_ANDROID_extension_pack_es31a = @as(c_int, 1);
pub const GL_ANGLE_depth_texture = @as(c_int, 1);
pub const GL_ANGLE_framebuffer_blit = @as(c_int, 1);
pub const GL_ANGLE_framebuffer_multisample = @as(c_int, 1);
pub const GL_ANGLE_instanced_arrays = @as(c_int, 1);
pub const GL_ANGLE_pack_reverse_row_order = @as(c_int, 1);
pub const GL_ANGLE_program_binary = @as(c_int, 1);
pub const GL_ANGLE_texture_compression_dxt3 = @as(c_int, 1);
pub const GL_ANGLE_texture_compression_dxt5 = @as(c_int, 1);
pub const GL_ANGLE_texture_usage = @as(c_int, 1);
pub const GL_ANGLE_translated_shader_source = @as(c_int, 1);
pub const GL_APPLE_aux_depth_stencil = @as(c_int, 1);
pub const GL_APPLE_client_storage = @as(c_int, 1);
pub const GL_APPLE_clip_distance = @as(c_int, 1);
pub const GL_APPLE_color_buffer_packed_float = @as(c_int, 1);
pub const GL_APPLE_copy_texture_levels = @as(c_int, 1);
pub const GL_APPLE_element_array = @as(c_int, 1);
pub const GL_APPLE_fence = @as(c_int, 1);
pub const GL_APPLE_float_pixels = @as(c_int, 1);
pub const GL_APPLE_flush_buffer_range = @as(c_int, 1);
pub const GL_APPLE_framebuffer_multisample = @as(c_int, 1);
pub const GL_APPLE_object_purgeable = @as(c_int, 1);
pub const GL_APPLE_rgb_422 = @as(c_int, 1);
pub const GL_APPLE_row_bytes = @as(c_int, 1);
pub const GL_APPLE_specular_vector = @as(c_int, 1);
pub const GL_APPLE_sync = @as(c_int, 1);
pub const GL_APPLE_texture_2D_limited_npot = @as(c_int, 1);
pub const GL_APPLE_texture_format_BGRA8888 = @as(c_int, 1);
pub const GL_APPLE_texture_max_level = @as(c_int, 1);
pub const GL_APPLE_texture_packed_float = @as(c_int, 1);
pub const GL_APPLE_texture_range = @as(c_int, 1);
pub const GL_APPLE_transform_hint = @as(c_int, 1);
pub const GL_APPLE_vertex_array_object = @as(c_int, 1);
pub const GL_APPLE_vertex_array_range = @as(c_int, 1);
pub const GL_APPLE_vertex_program_evaluators = @as(c_int, 1);
pub const GL_APPLE_ycbcr_422 = @as(c_int, 1);
pub const GL_ARB_ES2_compatibility = @as(c_int, 1);
pub const GL_ARB_ES3_1_compatibility = @as(c_int, 1);
pub const GL_ARB_ES3_2_compatibility = @as(c_int, 1);
pub const GL_ARB_ES3_compatibility = @as(c_int, 1);
pub const GL_ARB_arrays_of_arrays = @as(c_int, 1);
pub const GL_ARB_base_instance = @as(c_int, 1);
pub const GL_ARB_bindless_texture = @as(c_int, 1);
pub const GL_ARB_blend_func_extended = @as(c_int, 1);
pub const GL_ARB_buffer_storage = @as(c_int, 1);
pub const GL_ARB_cl_event = @as(c_int, 1);
pub const GL_ARB_clear_buffer_object = @as(c_int, 1);
pub const GL_ARB_clear_texture = @as(c_int, 1);
pub const GL_ARB_clip_control = @as(c_int, 1);
pub const GL_ARB_color_buffer_float = @as(c_int, 1);
pub const GL_ARB_compatibility = @as(c_int, 1);
pub const GL_ARB_compressed_texture_pixel_storage = @as(c_int, 1);
pub const GL_ARB_compute_shader = @as(c_int, 1);
pub const GL_ARB_compute_variable_group_size = @as(c_int, 1);
pub const GL_ARB_conditional_render_inverted = @as(c_int, 1);
pub const GL_ARB_conservative_depth = @as(c_int, 1);
pub const GL_ARB_copy_buffer = @as(c_int, 1);
pub const GL_ARB_copy_image = @as(c_int, 1);
pub const GL_ARB_cull_distance = @as(c_int, 1);
pub const GL_ARB_debug_output = @as(c_int, 1);
pub const GL_ARB_depth_buffer_float = @as(c_int, 1);
pub const GL_ARB_depth_clamp = @as(c_int, 1);
pub const GL_ARB_depth_texture = @as(c_int, 1);
pub const GL_ARB_derivative_control = @as(c_int, 1);
pub const GL_ARB_direct_state_access = @as(c_int, 1);
pub const GL_ARB_draw_buffers = @as(c_int, 1);
pub const GL_ARB_draw_buffers_blend = @as(c_int, 1);
pub const GL_ARB_draw_elements_base_vertex = @as(c_int, 1);
pub const GL_ARB_draw_indirect = @as(c_int, 1);
pub const GL_ARB_draw_instanced = @as(c_int, 1);
pub const GL_ARB_enhanced_layouts = @as(c_int, 1);
pub const GL_ARB_explicit_attrib_location = @as(c_int, 1);
pub const GL_ARB_explicit_uniform_location = @as(c_int, 1);
pub const GL_ARB_fragment_coord_conventions = @as(c_int, 1);
pub const GL_ARB_fragment_layer_viewport = @as(c_int, 1);
pub const GL_ARB_fragment_program = @as(c_int, 1);
pub const GL_ARB_fragment_program_shadow = @as(c_int, 1);
pub const GL_ARB_fragment_shader = @as(c_int, 1);
pub const GL_ARB_fragment_shader_interlock = @as(c_int, 1);
pub const GL_ARB_framebuffer_no_attachments = @as(c_int, 1);
pub const GL_ARB_framebuffer_object = @as(c_int, 1);
pub const GL_ARB_framebuffer_sRGB = @as(c_int, 1);
pub const GL_ARB_geometry_shader4 = @as(c_int, 1);
pub const GL_ARB_get_program_binary = @as(c_int, 1);
pub const GL_ARB_get_texture_sub_image = @as(c_int, 1);
pub const GL_ARB_gl_spirv = @as(c_int, 1);
pub const GL_ARB_gpu_shader5 = @as(c_int, 1);
pub const GL_ARB_gpu_shader_fp64 = @as(c_int, 1);
pub const GL_ARB_gpu_shader_int64 = @as(c_int, 1);
pub const GL_ARB_half_float_pixel = @as(c_int, 1);
pub const GL_ARB_half_float_vertex = @as(c_int, 1);
pub const GL_ARB_imaging = @as(c_int, 1);
pub const GL_ARB_indirect_parameters = @as(c_int, 1);
pub const GL_ARB_instanced_arrays = @as(c_int, 1);
pub const GL_ARB_internalformat_query = @as(c_int, 1);
pub const GL_ARB_internalformat_query2 = @as(c_int, 1);
pub const GL_ARB_invalidate_subdata = @as(c_int, 1);
pub const GL_ARB_map_buffer_alignment = @as(c_int, 1);
pub const GL_ARB_map_buffer_range = @as(c_int, 1);
pub const GL_ARB_matrix_palette = @as(c_int, 1);
pub const GL_ARB_multi_bind = @as(c_int, 1);
pub const GL_ARB_multi_draw_indirect = @as(c_int, 1);
pub const GL_ARB_multisample = @as(c_int, 1);
pub const GL_ARB_multitexture = @as(c_int, 1);
pub const GL_ARB_occlusion_query = @as(c_int, 1);
pub const GL_ARB_occlusion_query2 = @as(c_int, 1);
pub const GL_ARB_parallel_shader_compile = @as(c_int, 1);
pub const GL_ARB_pipeline_statistics_query = @as(c_int, 1);
pub const GL_ARB_pixel_buffer_object = @as(c_int, 1);
pub const GL_ARB_point_parameters = @as(c_int, 1);
pub const GL_ARB_point_sprite = @as(c_int, 1);
pub const GL_ARB_polygon_offset_clamp = @as(c_int, 1);
pub const GL_ARB_post_depth_coverage = @as(c_int, 1);
pub const GL_ARB_program_interface_query = @as(c_int, 1);
pub const GL_ARB_provoking_vertex = @as(c_int, 1);
pub const GL_ARB_query_buffer_object = @as(c_int, 1);
pub const GL_ARB_robust_buffer_access_behavior = @as(c_int, 1);
pub const GL_ARB_robustness = @as(c_int, 1);
pub const GL_ARB_robustness_isolation = @as(c_int, 1);
pub const GL_ARB_sample_locations = @as(c_int, 1);
pub const GL_ARB_sample_shading = @as(c_int, 1);
pub const GL_ARB_sampler_objects = @as(c_int, 1);
pub const GL_ARB_seamless_cube_map = @as(c_int, 1);
pub const GL_ARB_seamless_cubemap_per_texture = @as(c_int, 1);
pub const GL_ARB_separate_shader_objects = @as(c_int, 1);
pub const GL_ARB_shader_atomic_counter_ops = @as(c_int, 1);
pub const GL_ARB_shader_atomic_counters = @as(c_int, 1);
pub const GL_ARB_shader_ballot = @as(c_int, 1);
pub const GL_ARB_shader_bit_encoding = @as(c_int, 1);
pub const GL_ARB_shader_clock = @as(c_int, 1);
pub const GL_ARB_shader_draw_parameters = @as(c_int, 1);
pub const GL_ARB_shader_group_vote = @as(c_int, 1);
pub const GL_ARB_shader_image_load_store = @as(c_int, 1);
pub const GL_ARB_shader_image_size = @as(c_int, 1);
pub const GL_ARB_shader_objects = @as(c_int, 1);
pub const GL_ARB_shader_precision = @as(c_int, 1);
pub const GL_ARB_shader_stencil_export = @as(c_int, 1);
pub const GL_ARB_shader_storage_buffer_object = @as(c_int, 1);
pub const GL_ARB_shader_subroutine = @as(c_int, 1);
pub const GL_ARB_shader_texture_image_samples = @as(c_int, 1);
pub const GL_ARB_shader_texture_lod = @as(c_int, 1);
pub const GL_ARB_shader_viewport_layer_array = @as(c_int, 1);
pub const GL_ARB_shading_language_100 = @as(c_int, 1);
pub const GL_ARB_shading_language_420pack = @as(c_int, 1);
pub const GL_ARB_shading_language_include = @as(c_int, 1);
pub const GL_ARB_shading_language_packing = @as(c_int, 1);
pub const GL_ARB_shadow = @as(c_int, 1);
pub const GL_ARB_shadow_ambient = @as(c_int, 1);
pub const GL_ARB_sparse_buffer = @as(c_int, 1);
pub const GL_ARB_sparse_texture = @as(c_int, 1);
pub const GL_ARB_sparse_texture2 = @as(c_int, 1);
pub const GL_ARB_sparse_texture_clamp = @as(c_int, 1);
pub const GL_ARB_spirv_extensions = @as(c_int, 1);
pub const GL_ARB_stencil_texturing = @as(c_int, 1);
pub const GL_ARB_sync = @as(c_int, 1);
pub const GL_ARB_tessellation_shader = @as(c_int, 1);
pub const GL_ARB_texture_barrier = @as(c_int, 1);
pub const GL_ARB_texture_border_clamp = @as(c_int, 1);
pub const GL_ARB_texture_buffer_object = @as(c_int, 1);
pub const GL_ARB_texture_buffer_object_rgb32 = @as(c_int, 1);
pub const GL_ARB_texture_buffer_range = @as(c_int, 1);
pub const GL_ARB_texture_compression = @as(c_int, 1);
pub const GL_ARB_texture_compression_bptc = @as(c_int, 1);
pub const GL_ARB_texture_compression_rgtc = @as(c_int, 1);
pub const GL_ARB_texture_cube_map = @as(c_int, 1);
pub const GL_ARB_texture_cube_map_array = @as(c_int, 1);
pub const GL_ARB_texture_env_add = @as(c_int, 1);
pub const GL_ARB_texture_env_combine = @as(c_int, 1);
pub const GL_ARB_texture_env_crossbar = @as(c_int, 1);
pub const GL_ARB_texture_env_dot3 = @as(c_int, 1);
pub const GL_ARB_texture_filter_anisotropic = @as(c_int, 1);
pub const GL_ARB_texture_filter_minmax = @as(c_int, 1);
pub const GL_ARB_texture_float = @as(c_int, 1);
pub const GL_ARB_texture_gather = @as(c_int, 1);
pub const GL_ARB_texture_mirror_clamp_to_edge = @as(c_int, 1);
pub const GL_ARB_texture_mirrored_repeat = @as(c_int, 1);
pub const GL_ARB_texture_multisample = @as(c_int, 1);
pub const GL_ARB_texture_non_power_of_two = @as(c_int, 1);
pub const GL_ARB_texture_query_levels = @as(c_int, 1);
pub const GL_ARB_texture_query_lod = @as(c_int, 1);
pub const GL_ARB_texture_rectangle = @as(c_int, 1);
pub const GL_ARB_texture_rg = @as(c_int, 1);
pub const GL_ARB_texture_rgb10_a2ui = @as(c_int, 1);
pub const GL_ARB_texture_stencil8 = @as(c_int, 1);
pub const GL_ARB_texture_storage = @as(c_int, 1);
pub const GL_ARB_texture_storage_multisample = @as(c_int, 1);
pub const GL_ARB_texture_swizzle = @as(c_int, 1);
pub const GL_ARB_texture_view = @as(c_int, 1);
pub const GL_ARB_timer_query = @as(c_int, 1);
pub const GL_ARB_transform_feedback2 = @as(c_int, 1);
pub const GL_ARB_transform_feedback3 = @as(c_int, 1);
pub const GL_ARB_transform_feedback_instanced = @as(c_int, 1);
pub const GL_ARB_transform_feedback_overflow_query = @as(c_int, 1);
pub const GL_ARB_transpose_matrix = @as(c_int, 1);
pub const GL_ARB_uniform_buffer_object = @as(c_int, 1);
pub const GL_ARB_vertex_array_bgra = @as(c_int, 1);
pub const GL_ARB_vertex_array_object = @as(c_int, 1);
pub const GL_ARB_vertex_attrib_64bit = @as(c_int, 1);
pub const GL_ARB_vertex_attrib_binding = @as(c_int, 1);
pub const GL_ARB_vertex_blend = @as(c_int, 1);
pub const GL_ARB_vertex_buffer_object = @as(c_int, 1);
pub const GL_ARB_vertex_program = @as(c_int, 1);
pub const GL_ARB_vertex_shader = @as(c_int, 1);
pub const GL_ARB_vertex_type_10f_11f_11f_rev = @as(c_int, 1);
pub const GL_ARB_vertex_type_2_10_10_10_rev = @as(c_int, 1);
pub const GL_ARB_viewport_array = @as(c_int, 1);
pub const GL_ARB_window_pos = @as(c_int, 1);
pub const GL_ARM_mali_program_binary = @as(c_int, 1);
pub const GL_ARM_mali_shader_binary = @as(c_int, 1);
pub const GL_ARM_rgba8 = @as(c_int, 1);
pub const GL_ARM_shader_framebuffer_fetch = @as(c_int, 1);
pub const GL_ARM_shader_framebuffer_fetch_depth_stencil = @as(c_int, 1);
pub const GL_ATI_draw_buffers = @as(c_int, 1);
pub const GL_ATI_element_array = @as(c_int, 1);
pub const GL_ATI_envmap_bumpmap = @as(c_int, 1);
pub const GL_ATI_fragment_shader = @as(c_int, 1);
pub const GL_ATI_map_object_buffer = @as(c_int, 1);
pub const GL_ATI_meminfo = @as(c_int, 1);
pub const GL_ATI_pixel_format_float = @as(c_int, 1);
pub const GL_ATI_pn_triangles = @as(c_int, 1);
pub const GL_ATI_separate_stencil = @as(c_int, 1);
pub const GL_ATI_text_fragment_shader = @as(c_int, 1);
pub const GL_ATI_texture_env_combine3 = @as(c_int, 1);
pub const GL_ATI_texture_float = @as(c_int, 1);
pub const GL_ATI_texture_mirror_once = @as(c_int, 1);
pub const GL_ATI_vertex_array_object = @as(c_int, 1);
pub const GL_ATI_vertex_attrib_array_object = @as(c_int, 1);
pub const GL_ATI_vertex_streams = @as(c_int, 1);
pub const GL_DMP_program_binary = @as(c_int, 1);
pub const GL_DMP_shader_binary = @as(c_int, 1);
pub const GL_EXT_422_pixels = @as(c_int, 1);
pub const GL_EXT_EGL_image_array = @as(c_int, 1);
pub const GL_EXT_EGL_image_storage = @as(c_int, 1);
pub const GL_EXT_YUV_target = @as(c_int, 1);
pub const GL_EXT_abgr = @as(c_int, 1);
pub const GL_EXT_base_instance = @as(c_int, 1);
pub const GL_EXT_bgra = @as(c_int, 1);
pub const GL_EXT_bindable_uniform = @as(c_int, 1);
pub const GL_EXT_blend_color = @as(c_int, 1);
pub const GL_EXT_blend_equation_separate = @as(c_int, 1);
pub const GL_EXT_blend_func_extended = @as(c_int, 1);
pub const GL_EXT_blend_func_separate = @as(c_int, 1);
pub const GL_EXT_blend_logic_op = @as(c_int, 1);
pub const GL_EXT_blend_minmax = @as(c_int, 1);
pub const GL_EXT_blend_subtract = @as(c_int, 1);
pub const GL_EXT_buffer_storage = @as(c_int, 1);
pub const GL_EXT_clear_texture = @as(c_int, 1);
pub const GL_EXT_clip_control = @as(c_int, 1);
pub const GL_EXT_clip_cull_distance = @as(c_int, 1);
pub const GL_EXT_clip_volume_hint = @as(c_int, 1);
pub const GL_EXT_cmyka = @as(c_int, 1);
pub const GL_EXT_color_buffer_float = @as(c_int, 1);
pub const GL_EXT_color_buffer_half_float = @as(c_int, 1);
pub const GL_EXT_color_subtable = @as(c_int, 1);
pub const GL_EXT_compiled_vertex_array = @as(c_int, 1);
pub const GL_EXT_conservative_depth = @as(c_int, 1);
pub const GL_EXT_convolution = @as(c_int, 1);
pub const GL_EXT_coordinate_frame = @as(c_int, 1);
pub const GL_EXT_copy_image = @as(c_int, 1);
pub const GL_EXT_copy_texture = @as(c_int, 1);
pub const GL_EXT_cull_vertex = @as(c_int, 1);
pub const GL_EXT_debug_label = @as(c_int, 1);
pub const GL_EXT_debug_marker = @as(c_int, 1);
pub const GL_EXT_depth_bounds_test = @as(c_int, 1);
pub const GL_EXT_depth_clamp = @as(c_int, 1);
pub const GL_EXT_direct_state_access = @as(c_int, 1);
pub const GL_EXT_discard_framebuffer = @as(c_int, 1);
pub const GL_EXT_disjoint_timer_query = @as(c_int, 1);
pub const GL_EXT_draw_buffers = @as(c_int, 1);
pub const GL_EXT_draw_buffers2 = @as(c_int, 1);
pub const GL_EXT_draw_buffers_indexed = @as(c_int, 1);
pub const GL_EXT_draw_elements_base_vertex = @as(c_int, 1);
pub const GL_EXT_draw_instanced = @as(c_int, 1);
pub const GL_EXT_draw_range_elements = @as(c_int, 1);
pub const GL_EXT_draw_transform_feedback = @as(c_int, 1);
pub const GL_EXT_external_buffer = @as(c_int, 1);
pub const GL_EXT_float_blend = @as(c_int, 1);
pub const GL_EXT_fog_coord = @as(c_int, 1);
pub const GL_EXT_framebuffer_blit = @as(c_int, 1);
pub const GL_EXT_framebuffer_multisample = @as(c_int, 1);
pub const GL_EXT_framebuffer_multisample_blit_scaled = @as(c_int, 1);
pub const GL_EXT_framebuffer_object = @as(c_int, 1);
pub const GL_EXT_framebuffer_sRGB = @as(c_int, 1);
pub const GL_EXT_geometry_point_size = @as(c_int, 1);
pub const GL_EXT_geometry_shader = @as(c_int, 1);
pub const GL_EXT_geometry_shader4 = @as(c_int, 1);
pub const GL_EXT_gpu_program_parameters = @as(c_int, 1);
pub const GL_EXT_gpu_shader4 = @as(c_int, 1);
pub const GL_EXT_gpu_shader5 = @as(c_int, 1);
pub const GL_EXT_histogram = @as(c_int, 1);
pub const GL_EXT_index_array_formats = @as(c_int, 1);
pub const GL_EXT_index_func = @as(c_int, 1);
pub const GL_EXT_index_material = @as(c_int, 1);
pub const GL_EXT_index_texture = @as(c_int, 1);
pub const GL_EXT_instanced_arrays = @as(c_int, 1);
pub const GL_EXT_light_texture = @as(c_int, 1);
pub const GL_EXT_map_buffer_range = @as(c_int, 1);
pub const GL_EXT_memory_object = @as(c_int, 1);
pub const GL_EXT_memory_object_fd = @as(c_int, 1);
pub const GL_EXT_memory_object_win32 = @as(c_int, 1);
pub const GL_EXT_misc_attribute = @as(c_int, 1);
pub const GL_EXT_multi_draw_arrays = @as(c_int, 1);
pub const GL_EXT_multi_draw_indirect = @as(c_int, 1);
pub const GL_EXT_multisample = @as(c_int, 1);
pub const GL_EXT_multisampled_compatibility = @as(c_int, 1);
pub const GL_EXT_multisampled_render_to_texture = @as(c_int, 1);
pub const GL_EXT_multiview_draw_buffers = @as(c_int, 1);
pub const GL_EXT_multiview_tessellation_geometry_shader = @as(c_int, 1);
pub const GL_EXT_multiview_texture_multisample = @as(c_int, 1);
pub const GL_EXT_multiview_timer_query = @as(c_int, 1);
pub const GL_EXT_occlusion_query_boolean = @as(c_int, 1);
pub const GL_EXT_packed_depth_stencil = @as(c_int, 1);
pub const GL_EXT_packed_float = @as(c_int, 1);
pub const GL_EXT_packed_pixels = @as(c_int, 1);
pub const GL_EXT_paletted_texture = @as(c_int, 1);
pub const GL_EXT_pixel_buffer_object = @as(c_int, 1);
pub const GL_EXT_pixel_transform = @as(c_int, 1);
pub const GL_EXT_pixel_transform_color_table = @as(c_int, 1);
pub const GL_EXT_point_parameters = @as(c_int, 1);
pub const GL_EXT_polygon_offset = @as(c_int, 1);
pub const GL_EXT_polygon_offset_clamp = @as(c_int, 1);
pub const GL_EXT_post_depth_coverage = @as(c_int, 1);
pub const GL_EXT_primitive_bounding_box = @as(c_int, 1);
pub const GL_EXT_protected_textures = @as(c_int, 1);
pub const GL_EXT_provoking_vertex = @as(c_int, 1);
pub const GL_EXT_pvrtc_sRGB = @as(c_int, 1);
pub const GL_EXT_raster_multisample = @as(c_int, 1);
pub const GL_EXT_read_format_bgra = @as(c_int, 1);
pub const GL_EXT_render_snorm = @as(c_int, 1);
pub const GL_EXT_rescale_normal = @as(c_int, 1);
pub const GL_EXT_robustness = @as(c_int, 1);
pub const GL_EXT_sRGB = @as(c_int, 1);
pub const GL_EXT_sRGB_write_control = @as(c_int, 1);
pub const GL_EXT_secondary_color = @as(c_int, 1);
pub const GL_EXT_semaphore = @as(c_int, 1);
pub const GL_EXT_semaphore_fd = @as(c_int, 1);
pub const GL_EXT_semaphore_win32 = @as(c_int, 1);
pub const GL_EXT_separate_shader_objects = @as(c_int, 1);
pub const GL_EXT_separate_specular_color = @as(c_int, 1);
pub const GL_EXT_shader_framebuffer_fetch = @as(c_int, 1);
pub const GL_EXT_shader_framebuffer_fetch_non_coherent = @as(c_int, 1);
pub const GL_EXT_shader_group_vote = @as(c_int, 1);
pub const GL_EXT_shader_image_load_formatted = @as(c_int, 1);
pub const GL_EXT_shader_image_load_store = @as(c_int, 1);
pub const GL_EXT_shader_implicit_conversions = @as(c_int, 1);
pub const GL_EXT_shader_integer_mix = @as(c_int, 1);
pub const GL_EXT_shader_io_blocks = @as(c_int, 1);
pub const GL_EXT_shader_non_constant_global_initializers = @as(c_int, 1);
pub const GL_EXT_shader_pixel_local_storage = @as(c_int, 1);
pub const GL_EXT_shader_pixel_local_storage2 = @as(c_int, 1);
pub const GL_EXT_shader_texture_lod = @as(c_int, 1);
pub const GL_EXT_shadow_funcs = @as(c_int, 1);
pub const GL_EXT_shadow_samplers = @as(c_int, 1);
pub const GL_EXT_shared_texture_palette = @as(c_int, 1);
pub const GL_EXT_sparse_texture = @as(c_int, 1);
pub const GL_EXT_sparse_texture2 = @as(c_int, 1);
pub const GL_EXT_stencil_clear_tag = @as(c_int, 1);
pub const GL_EXT_stencil_two_side = @as(c_int, 1);
pub const GL_EXT_stencil_wrap = @as(c_int, 1);
pub const GL_EXT_subtexture = @as(c_int, 1);
pub const GL_EXT_tessellation_point_size = @as(c_int, 1);
pub const GL_EXT_tessellation_shader = @as(c_int, 1);
pub const GL_EXT_texture = @as(c_int, 1);
pub const GL_EXT_texture3D = @as(c_int, 1);
pub const GL_EXT_texture_array = @as(c_int, 1);
pub const GL_EXT_texture_border_clamp = @as(c_int, 1);
pub const GL_EXT_texture_buffer = @as(c_int, 1);
pub const GL_EXT_texture_buffer_object = @as(c_int, 1);
pub const GL_EXT_texture_compression_astc_decode_mode = @as(c_int, 1);
pub const GL_EXT_texture_compression_bptc = @as(c_int, 1);
pub const GL_EXT_texture_compression_dxt1 = @as(c_int, 1);
pub const GL_EXT_texture_compression_latc = @as(c_int, 1);
pub const GL_EXT_texture_compression_rgtc = @as(c_int, 1);
pub const GL_EXT_texture_compression_s3tc = @as(c_int, 1);
pub const GL_EXT_texture_compression_s3tc_srgb = @as(c_int, 1);
pub const GL_EXT_texture_cube_map = @as(c_int, 1);
pub const GL_EXT_texture_cube_map_array = @as(c_int, 1);
pub const GL_EXT_texture_env_add = @as(c_int, 1);
pub const GL_EXT_texture_env_combine = @as(c_int, 1);
pub const GL_EXT_texture_env_dot3 = @as(c_int, 1);
pub const GL_EXT_texture_filter_anisotropic = @as(c_int, 1);
pub const GL_EXT_texture_filter_minmax = @as(c_int, 1);
pub const GL_EXT_texture_format_BGRA8888 = @as(c_int, 1);
pub const GL_EXT_texture_format_sRGB_override = @as(c_int, 1);
pub const GL_EXT_texture_integer = @as(c_int, 1);
pub const GL_EXT_texture_lod_bias = @as(c_int, 1);
pub const GL_EXT_texture_mirror_clamp = @as(c_int, 1);
pub const GL_EXT_texture_mirror_clamp_to_edge = @as(c_int, 1);
pub const GL_EXT_texture_norm16 = @as(c_int, 1);
pub const GL_EXT_texture_object = @as(c_int, 1);
pub const GL_EXT_texture_perturb_normal = @as(c_int, 1);
pub const GL_EXT_texture_query_lod = @as(c_int, 1);
pub const GL_EXT_texture_rg = @as(c_int, 1);
pub const GL_EXT_texture_sRGB = @as(c_int, 1);
pub const GL_EXT_texture_sRGB_R8 = @as(c_int, 1);
pub const GL_EXT_texture_sRGB_RG8 = @as(c_int, 1);
pub const GL_EXT_texture_sRGB_decode = @as(c_int, 1);
pub const GL_EXT_texture_shadow_lod = @as(c_int, 1);
pub const GL_EXT_texture_shared_exponent = @as(c_int, 1);
pub const GL_EXT_texture_snorm = @as(c_int, 1);
pub const GL_EXT_texture_storage = @as(c_int, 1);
pub const GL_EXT_texture_swizzle = @as(c_int, 1);
pub const GL_EXT_texture_type_2_10_10_10_REV = @as(c_int, 1);
pub const GL_EXT_texture_view = @as(c_int, 1);
pub const GL_EXT_timer_query = @as(c_int, 1);
pub const GL_EXT_transform_feedback = @as(c_int, 1);
pub const GL_EXT_unpack_subimage = @as(c_int, 1);
pub const GL_EXT_vertex_array = @as(c_int, 1);
pub const GL_EXT_vertex_array_bgra = @as(c_int, 1);
pub const GL_EXT_vertex_attrib_64bit = @as(c_int, 1);
pub const GL_EXT_vertex_shader = @as(c_int, 1);
pub const GL_EXT_vertex_weighting = @as(c_int, 1);
pub const GL_EXT_win32_keyed_mutex = @as(c_int, 1);
pub const GL_EXT_window_rectangles = @as(c_int, 1);
pub const GL_EXT_x11_sync_object = @as(c_int, 1);
pub const GL_FJ_shader_binary_GCCSO = @as(c_int, 1);
pub const GL_GREMEDY_frame_terminator = @as(c_int, 1);
pub const GL_GREMEDY_string_marker = @as(c_int, 1);
pub const GL_HP_convolution_border_modes = @as(c_int, 1);
pub const GL_HP_image_transform = @as(c_int, 1);
pub const GL_HP_occlusion_test = @as(c_int, 1);
pub const GL_HP_texture_lighting = @as(c_int, 1);
pub const GL_IBM_cull_vertex = @as(c_int, 1);
pub const GL_IBM_multimode_draw_arrays = @as(c_int, 1);
pub const GL_IBM_rasterpos_clip = @as(c_int, 1);
pub const GL_IBM_static_data = @as(c_int, 1);
pub const GL_IBM_texture_mirrored_repeat = @as(c_int, 1);
pub const GL_IBM_vertex_array_lists = @as(c_int, 1);
pub const GL_IMG_bindless_texture = @as(c_int, 1);
pub const GL_IMG_framebuffer_downsample = @as(c_int, 1);
pub const GL_IMG_multisampled_render_to_texture = @as(c_int, 1);
pub const GL_IMG_program_binary = @as(c_int, 1);
pub const GL_IMG_read_format = @as(c_int, 1);
pub const GL_IMG_shader_binary = @as(c_int, 1);
pub const GL_IMG_texture_compression_pvrtc = @as(c_int, 1);
pub const GL_IMG_texture_compression_pvrtc2 = @as(c_int, 1);
pub const GL_IMG_texture_env_enhanced_fixed_function = @as(c_int, 1);
pub const GL_IMG_texture_filter_cubic = @as(c_int, 1);
pub const GL_IMG_user_clip_plane = @as(c_int, 1);
pub const GL_INGR_blend_func_separate = @as(c_int, 1);
pub const GL_INGR_color_clamp = @as(c_int, 1);
pub const GL_INGR_interlace_read = @as(c_int, 1);
pub const GL_INTEL_blackhole_render = @as(c_int, 1);
pub const GL_INTEL_conservative_rasterization = @as(c_int, 1);
pub const GL_INTEL_fragment_shader_ordering = @as(c_int, 1);
pub const GL_INTEL_framebuffer_CMAA = @as(c_int, 1);
pub const GL_INTEL_map_texture = @as(c_int, 1);
pub const GL_INTEL_parallel_arrays = @as(c_int, 1);
pub const GL_INTEL_performance_query = @as(c_int, 1);
pub const GL_KHR_blend_equation_advanced = @as(c_int, 1);
pub const GL_KHR_blend_equation_advanced_coherent = @as(c_int, 1);
pub const GL_KHR_context_flush_control = @as(c_int, 1);
pub const GL_KHR_debug = @as(c_int, 1);
pub const GL_KHR_no_error = @as(c_int, 1);
pub const GL_KHR_parallel_shader_compile = @as(c_int, 1);
pub const GL_KHR_robust_buffer_access_behavior = @as(c_int, 1);
pub const GL_KHR_robustness = @as(c_int, 1);
pub const GL_KHR_shader_subgroup = @as(c_int, 1);
pub const GL_KHR_texture_compression_astc_hdr = @as(c_int, 1);
pub const GL_KHR_texture_compression_astc_ldr = @as(c_int, 1);
pub const GL_KHR_texture_compression_astc_sliced_3d = @as(c_int, 1);
pub const GL_MESAX_texture_stack = @as(c_int, 1);
pub const GL_MESA_framebuffer_flip_y = @as(c_int, 1);
pub const GL_MESA_pack_invert = @as(c_int, 1);
pub const GL_MESA_program_binary_formats = @as(c_int, 1);
pub const GL_MESA_resize_buffers = @as(c_int, 1);
pub const GL_MESA_shader_integer_functions = @as(c_int, 1);
pub const GL_MESA_tile_raster_order = @as(c_int, 1);
pub const GL_MESA_window_pos = @as(c_int, 1);
pub const GL_MESA_ycbcr_texture = @as(c_int, 1);
pub const GL_NVX_blend_equation_advanced_multi_draw_buffers = @as(c_int, 1);
pub const GL_NVX_conditional_render = @as(c_int, 1);
pub const GL_NVX_cross_process_interop = @as(c_int, 1);
pub const GL_NVX_gpu_memory_info = @as(c_int, 1);
pub const GL_NVX_gpu_multicast2 = @as(c_int, 1);
pub const GL_NVX_linked_gpu_multicast = @as(c_int, 1);
pub const GL_NVX_progress_fence = @as(c_int, 1);
pub const GL_NV_alpha_to_coverage_dither_control = @as(c_int, 1);
pub const GL_NV_bindless_multi_draw_indirect = @as(c_int, 1);
pub const GL_NV_bindless_multi_draw_indirect_count = @as(c_int, 1);
pub const GL_NV_bindless_texture = @as(c_int, 1);
pub const GL_NV_blend_equation_advanced = @as(c_int, 1);
pub const GL_NV_blend_equation_advanced_coherent = @as(c_int, 1);
pub const GL_NV_blend_minmax_factor = @as(c_int, 1);
pub const GL_NV_blend_square = @as(c_int, 1);
pub const GL_NV_clip_space_w_scaling = @as(c_int, 1);
pub const GL_NV_command_list = @as(c_int, 1);
pub const GL_NV_compute_program5 = @as(c_int, 1);
pub const GL_NV_compute_shader_derivatives = @as(c_int, 1);
pub const GL_NV_conditional_render = @as(c_int, 1);
pub const GL_NV_conservative_raster = @as(c_int, 1);
pub const GL_NV_conservative_raster_dilate = @as(c_int, 1);
pub const GL_NV_conservative_raster_pre_snap = @as(c_int, 1);
pub const GL_NV_conservative_raster_pre_snap_triangles = @as(c_int, 1);
pub const GL_NV_conservative_raster_underestimation = @as(c_int, 1);
pub const GL_NV_copy_buffer = @as(c_int, 1);
pub const GL_NV_copy_depth_to_color = @as(c_int, 1);
pub const GL_NV_copy_image = @as(c_int, 1);
pub const GL_NV_coverage_sample = @as(c_int, 1);
pub const GL_NV_deep_texture3D = @as(c_int, 1);
pub const GL_NV_depth_buffer_float = @as(c_int, 1);
pub const GL_NV_depth_clamp = @as(c_int, 1);
pub const GL_NV_depth_nonlinear = @as(c_int, 1);
pub const GL_NV_draw_buffers = @as(c_int, 1);
pub const GL_NV_draw_instanced = @as(c_int, 1);
pub const GL_NV_draw_texture = @as(c_int, 1);
pub const GL_NV_draw_vulkan_image = @as(c_int, 1);
pub const GL_NV_evaluators = @as(c_int, 1);
pub const GL_NV_explicit_attrib_location = @as(c_int, 1);
pub const GL_NV_explicit_multisample = @as(c_int, 1);
pub const GL_NV_fbo_color_attachments = @as(c_int, 1);
pub const GL_NV_fence = @as(c_int, 1);
pub const GL_NV_fill_rectangle = @as(c_int, 1);
pub const GL_NV_float_buffer = @as(c_int, 1);
pub const GL_NV_fog_distance = @as(c_int, 1);
pub const GL_NV_fragment_coverage_to_color = @as(c_int, 1);
pub const GL_NV_fragment_program = @as(c_int, 1);
pub const GL_NV_fragment_program2 = @as(c_int, 1);
pub const GL_NV_fragment_program4 = @as(c_int, 1);
pub const GL_NV_fragment_program_option = @as(c_int, 1);
pub const GL_NV_fragment_shader_barycentric = @as(c_int, 1);
pub const GL_NV_fragment_shader_interlock = @as(c_int, 1);
pub const GL_NV_framebuffer_blit = @as(c_int, 1);
pub const GL_NV_framebuffer_mixed_samples = @as(c_int, 1);
pub const GL_NV_framebuffer_multisample = @as(c_int, 1);
pub const GL_NV_framebuffer_multisample_coverage = @as(c_int, 1);
pub const GL_NV_generate_mipmap_sRGB = @as(c_int, 1);
pub const GL_NV_geometry_program4 = @as(c_int, 1);
pub const GL_NV_geometry_shader4 = @as(c_int, 1);
pub const GL_NV_geometry_shader_passthrough = @as(c_int, 1);
pub const GL_NV_gpu_multicast = @as(c_int, 1);
pub const GL_NV_gpu_program4 = @as(c_int, 1);
pub const GL_NV_gpu_program5 = @as(c_int, 1);
pub const GL_NV_gpu_program5_mem_extended = @as(c_int, 1);
pub const GL_NV_gpu_shader5 = @as(c_int, 1);
pub const GL_NV_half_float = @as(c_int, 1);
pub const GL_NV_image_formats = @as(c_int, 1);
pub const GL_NV_instanced_arrays = @as(c_int, 1);
pub const GL_NV_internalformat_sample_query = @as(c_int, 1);
pub const GL_NV_light_max_exponent = @as(c_int, 1);
pub const GL_NV_memory_attachment = @as(c_int, 1);
pub const GL_NV_mesh_shader = @as(c_int, 1);
pub const GL_NV_multisample_coverage = @as(c_int, 1);
pub const GL_NV_multisample_filter_hint = @as(c_int, 1);
pub const GL_NV_non_square_matrices = @as(c_int, 1);
pub const GL_NV_occlusion_query = @as(c_int, 1);
pub const GL_NV_packed_depth_stencil = @as(c_int, 1);
pub const GL_NV_parameter_buffer_object = @as(c_int, 1);
pub const GL_NV_parameter_buffer_object2 = @as(c_int, 1);
pub const GL_NV_path_rendering = @as(c_int, 1);
pub const GL_NV_path_rendering_shared_edge = @as(c_int, 1);
pub const GL_NV_pixel_buffer_object = @as(c_int, 1);
pub const GL_NV_pixel_data_range = @as(c_int, 1);
pub const GL_NV_point_sprite = @as(c_int, 1);
pub const GL_NV_polygon_mode = @as(c_int, 1);
pub const GL_NV_present_video = @as(c_int, 1);
pub const GL_NV_primitive_restart = @as(c_int, 1);
pub const GL_NV_query_resource = @as(c_int, 1);
pub const GL_NV_query_resource_tag = @as(c_int, 1);
pub const GL_NV_read_buffer = @as(c_int, 1);
pub const GL_NV_read_buffer_front = @as(c_int, 1);
pub const GL_NV_read_depth = @as(c_int, 1);
pub const GL_NV_read_depth_stencil = @as(c_int, 1);
pub const GL_NV_read_stencil = @as(c_int, 1);
pub const GL_NV_register_combiners = @as(c_int, 1);
pub const GL_NV_register_combiners2 = @as(c_int, 1);
pub const GL_NV_representative_fragment_test = @as(c_int, 1);
pub const GL_NV_robustness_video_memory_purge = @as(c_int, 1);
pub const GL_NV_sRGB_formats = @as(c_int, 1);
pub const GL_NV_sample_locations = @as(c_int, 1);
pub const GL_NV_sample_mask_override_coverage = @as(c_int, 1);
pub const GL_NV_scissor_exclusive = @as(c_int, 1);
pub const GL_NV_shader_atomic_counters = @as(c_int, 1);
pub const GL_NV_shader_atomic_float = @as(c_int, 1);
pub const GL_NV_shader_atomic_float64 = @as(c_int, 1);
pub const GL_NV_shader_atomic_fp16_vector = @as(c_int, 1);
pub const GL_NV_shader_atomic_int64 = @as(c_int, 1);
pub const GL_NV_shader_buffer_load = @as(c_int, 1);
pub const GL_NV_shader_buffer_store = @as(c_int, 1);
pub const GL_NV_shader_noperspective_interpolation = @as(c_int, 1);
pub const GL_NV_shader_storage_buffer_object = @as(c_int, 1);
pub const GL_NV_shader_subgroup_partitioned = @as(c_int, 1);
pub const GL_NV_shader_texture_footprint = @as(c_int, 1);
pub const GL_NV_shader_thread_group = @as(c_int, 1);
pub const GL_NV_shader_thread_shuffle = @as(c_int, 1);
pub const GL_NV_shading_rate_image = @as(c_int, 1);
pub const GL_NV_shadow_samplers_array = @as(c_int, 1);
pub const GL_NV_shadow_samplers_cube = @as(c_int, 1);
pub const GL_NV_stereo_view_rendering = @as(c_int, 1);
pub const GL_NV_tessellation_program5 = @as(c_int, 1);
pub const GL_NV_texgen_emboss = @as(c_int, 1);
pub const GL_NV_texgen_reflection = @as(c_int, 1);
pub const GL_NV_texture_barrier = @as(c_int, 1);
pub const GL_NV_texture_border_clamp = @as(c_int, 1);
pub const GL_NV_texture_compression_s3tc_update = @as(c_int, 1);
pub const GL_NV_texture_compression_vtc = @as(c_int, 1);
pub const GL_NV_texture_env_combine4 = @as(c_int, 1);
pub const GL_NV_texture_expand_normal = @as(c_int, 1);
pub const GL_NV_texture_multisample = @as(c_int, 1);
pub const GL_NV_texture_npot_2D_mipmap = @as(c_int, 1);
pub const GL_NV_texture_rectangle = @as(c_int, 1);
pub const GL_NV_texture_rectangle_compressed = @as(c_int, 1);
pub const GL_NV_texture_shader = @as(c_int, 1);
pub const GL_NV_texture_shader2 = @as(c_int, 1);
pub const GL_NV_texture_shader3 = @as(c_int, 1);
pub const GL_NV_transform_feedback = @as(c_int, 1);
pub const GL_NV_transform_feedback2 = @as(c_int, 1);
pub const GL_NV_uniform_buffer_unified_memory = @as(c_int, 1);
pub const GL_NV_vdpau_interop = @as(c_int, 1);
pub const GL_NV_vdpau_interop2 = @as(c_int, 1);
pub const GL_NV_vertex_array_range = @as(c_int, 1);
pub const GL_NV_vertex_array_range2 = @as(c_int, 1);
pub const GL_NV_vertex_attrib_integer_64bit = @as(c_int, 1);
pub const GL_NV_vertex_buffer_unified_memory = @as(c_int, 1);
pub const GL_NV_vertex_program = @as(c_int, 1);
pub const GL_NV_vertex_program1_1 = @as(c_int, 1);
pub const GL_NV_vertex_program2 = @as(c_int, 1);
pub const GL_NV_vertex_program2_option = @as(c_int, 1);
pub const GL_NV_vertex_program3 = @as(c_int, 1);
pub const GL_NV_vertex_program4 = @as(c_int, 1);
pub const GL_NV_video_capture = @as(c_int, 1);
pub const GL_NV_viewport_array = @as(c_int, 1);
pub const GL_NV_viewport_array2 = @as(c_int, 1);
pub const GL_NV_viewport_swizzle = @as(c_int, 1);
pub const GL_OES_EGL_image = @as(c_int, 1);
pub const GL_OES_EGL_image_external = @as(c_int, 1);
pub const GL_OES_EGL_image_external_essl3 = @as(c_int, 1);
pub const GL_OES_blend_equation_separate = @as(c_int, 1);
pub const GL_OES_blend_func_separate = @as(c_int, 1);
pub const GL_OES_blend_subtract = @as(c_int, 1);
pub const GL_OES_byte_coordinates = @as(c_int, 1);
pub const GL_OES_compressed_ETC1_RGB8_sub_texture = @as(c_int, 1);
pub const GL_OES_compressed_ETC1_RGB8_texture = @as(c_int, 1);
pub const GL_OES_compressed_paletted_texture = @as(c_int, 1);
pub const GL_OES_copy_image = @as(c_int, 1);
pub const GL_OES_depth24 = @as(c_int, 1);
pub const GL_OES_depth32 = @as(c_int, 1);
pub const GL_OES_depth_texture = @as(c_int, 1);
pub const GL_OES_draw_buffers_indexed = @as(c_int, 1);
pub const GL_OES_draw_elements_base_vertex = @as(c_int, 1);
pub const GL_OES_draw_texture = @as(c_int, 1);
pub const GL_OES_element_index_uint = @as(c_int, 1);
pub const GL_OES_extended_matrix_palette = @as(c_int, 1);
pub const GL_OES_fbo_render_mipmap = @as(c_int, 1);
pub const GL_OES_fixed_point = @as(c_int, 1);
pub const GL_OES_fragment_precision_high = @as(c_int, 1);
pub const GL_OES_framebuffer_object = @as(c_int, 1);
pub const GL_OES_geometry_point_size = @as(c_int, 1);
pub const GL_OES_geometry_shader = @as(c_int, 1);
pub const GL_OES_get_program_binary = @as(c_int, 1);
pub const GL_OES_gpu_shader5 = @as(c_int, 1);
pub const GL_OES_mapbuffer = @as(c_int, 1);
pub const GL_OES_matrix_get = @as(c_int, 1);
pub const GL_OES_matrix_palette = @as(c_int, 1);
pub const GL_OES_packed_depth_stencil = @as(c_int, 1);
pub const GL_OES_point_size_array = @as(c_int, 1);
pub const GL_OES_point_sprite = @as(c_int, 1);
pub const GL_OES_primitive_bounding_box = @as(c_int, 1);
pub const GL_OES_query_matrix = @as(c_int, 1);
pub const GL_OES_read_format = @as(c_int, 1);
pub const GL_OES_required_internalformat = @as(c_int, 1);
pub const GL_OES_rgb8_rgba8 = @as(c_int, 1);
pub const GL_OES_sample_shading = @as(c_int, 1);
pub const GL_OES_sample_variables = @as(c_int, 1);
pub const GL_OES_shader_image_atomic = @as(c_int, 1);
pub const GL_OES_shader_io_blocks = @as(c_int, 1);
pub const GL_OES_shader_multisample_interpolation = @as(c_int, 1);
pub const GL_OES_single_precision = @as(c_int, 1);
pub const GL_OES_standard_derivatives = @as(c_int, 1);
pub const GL_OES_stencil1 = @as(c_int, 1);
pub const GL_OES_stencil4 = @as(c_int, 1);
pub const GL_OES_stencil8 = @as(c_int, 1);
pub const GL_OES_stencil_wrap = @as(c_int, 1);
pub const GL_OES_surfaceless_context = @as(c_int, 1);
pub const GL_OES_tessellation_point_size = @as(c_int, 1);
pub const GL_OES_tessellation_shader = @as(c_int, 1);
pub const GL_OES_texture_3D = @as(c_int, 1);
pub const GL_OES_texture_border_clamp = @as(c_int, 1);
pub const GL_OES_texture_buffer = @as(c_int, 1);
pub const GL_OES_texture_compression_astc = @as(c_int, 1);
pub const GL_OES_texture_cube_map = @as(c_int, 1);
pub const GL_OES_texture_cube_map_array = @as(c_int, 1);
pub const GL_OES_texture_env_crossbar = @as(c_int, 1);
pub const GL_OES_texture_float = @as(c_int, 1);
pub const GL_OES_texture_float_linear = @as(c_int, 1);
pub const GL_OES_texture_half_float = @as(c_int, 1);
pub const GL_OES_texture_half_float_linear = @as(c_int, 1);
pub const GL_OES_texture_mirrored_repeat = @as(c_int, 1);
pub const GL_OES_texture_npot = @as(c_int, 1);
pub const GL_OES_texture_stencil8 = @as(c_int, 1);
pub const GL_OES_texture_storage_multisample_2d_array = @as(c_int, 1);
pub const GL_OES_texture_view = @as(c_int, 1);
pub const GL_OES_vertex_array_object = @as(c_int, 1);
pub const GL_OES_vertex_half_float = @as(c_int, 1);
pub const GL_OES_vertex_type_10_10_10_2 = @as(c_int, 1);
pub const GL_OES_viewport_array = @as(c_int, 1);
pub const GL_OML_interlace = @as(c_int, 1);
pub const GL_OML_resample = @as(c_int, 1);
pub const GL_OML_subsample = @as(c_int, 1);
pub const GL_OVR_multiview = @as(c_int, 1);
pub const GL_OVR_multiview2 = @as(c_int, 1);
pub const GL_OVR_multiview_multisampled_render_to_texture = @as(c_int, 1);
pub const GL_PGI_misc_hints = @as(c_int, 1);
pub const GL_PGI_vertex_hints = @as(c_int, 1);
pub const GL_QCOM_YUV_texture_gather = @as(c_int, 1);
pub const GL_QCOM_alpha_test = @as(c_int, 1);
pub const GL_QCOM_binning_control = @as(c_int, 1);
pub const GL_QCOM_driver_control = @as(c_int, 1);
pub const GL_QCOM_extended_get = @as(c_int, 1);
pub const GL_QCOM_extended_get2 = @as(c_int, 1);
pub const GL_QCOM_framebuffer_foveated = @as(c_int, 1);
pub const GL_QCOM_perfmon_global_mode = @as(c_int, 1);
pub const GL_QCOM_shader_framebuffer_fetch_noncoherent = @as(c_int, 1);
pub const GL_QCOM_shader_framebuffer_fetch_rate = @as(c_int, 1);
pub const GL_QCOM_texture_foveated = @as(c_int, 1);
pub const GL_QCOM_texture_foveated_subsampled_layout = @as(c_int, 1);
pub const GL_QCOM_tiled_rendering = @as(c_int, 1);
pub const GL_QCOM_writeonly_rendering = @as(c_int, 1);
pub const GL_REND_screen_coordinates = @as(c_int, 1);
pub const GL_S3_s3tc = @as(c_int, 1);
pub const GL_SGIS_detail_texture = @as(c_int, 1);
pub const GL_SGIS_fog_function = @as(c_int, 1);
pub const GL_SGIS_generate_mipmap = @as(c_int, 1);
pub const GL_SGIS_multisample = @as(c_int, 1);
pub const GL_SGIS_pixel_texture = @as(c_int, 1);
pub const GL_SGIS_point_line_texgen = @as(c_int, 1);
pub const GL_SGIS_point_parameters = @as(c_int, 1);
pub const GL_SGIS_sharpen_texture = @as(c_int, 1);
pub const GL_SGIS_texture4D = @as(c_int, 1);
pub const GL_SGIS_texture_border_clamp = @as(c_int, 1);
pub const GL_SGIS_texture_color_mask = @as(c_int, 1);
pub const GL_SGIS_texture_edge_clamp = @as(c_int, 1);
pub const GL_SGIS_texture_filter4 = @as(c_int, 1);
pub const GL_SGIS_texture_lod = @as(c_int, 1);
pub const GL_SGIS_texture_select = @as(c_int, 1);
pub const GL_SGIX_async = @as(c_int, 1);
pub const GL_SGIX_async_histogram = @as(c_int, 1);
pub const GL_SGIX_async_pixel = @as(c_int, 1);
pub const GL_SGIX_blend_alpha_minmax = @as(c_int, 1);
pub const GL_SGIX_calligraphic_fragment = @as(c_int, 1);
pub const GL_SGIX_clipmap = @as(c_int, 1);
pub const GL_SGIX_convolution_accuracy = @as(c_int, 1);
pub const GL_SGIX_depth_pass_instrument = @as(c_int, 1);
pub const GL_SGIX_depth_texture = @as(c_int, 1);
pub const GL_SGIX_flush_raster = @as(c_int, 1);
pub const GL_SGIX_fog_offset = @as(c_int, 1);
pub const GL_SGIX_fragment_lighting = @as(c_int, 1);
pub const GL_SGIX_framezoom = @as(c_int, 1);
pub const GL_SGIX_igloo_interface = @as(c_int, 1);
pub const GL_SGIX_instruments = @as(c_int, 1);
pub const GL_SGIX_interlace = @as(c_int, 1);
pub const GL_SGIX_ir_instrument1 = @as(c_int, 1);
pub const GL_SGIX_list_priority = @as(c_int, 1);
pub const GL_SGIX_pixel_texture = @as(c_int, 1);
pub const GL_SGIX_pixel_tiles = @as(c_int, 1);
pub const GL_SGIX_polynomial_ffd = @as(c_int, 1);
pub const GL_SGIX_reference_plane = @as(c_int, 1);
pub const GL_SGIX_resample = @as(c_int, 1);
pub const GL_SGIX_scalebias_hint = @as(c_int, 1);
pub const GL_SGIX_shadow = @as(c_int, 1);
pub const GL_SGIX_shadow_ambient = @as(c_int, 1);
pub const GL_SGIX_sprite = @as(c_int, 1);
pub const GL_SGIX_subsample = @as(c_int, 1);
pub const GL_SGIX_tag_sample_buffer = @as(c_int, 1);
pub const GL_SGIX_texture_add_env = @as(c_int, 1);
pub const GL_SGIX_texture_coordinate_clamp = @as(c_int, 1);
pub const GL_SGIX_texture_lod_bias = @as(c_int, 1);
pub const GL_SGIX_texture_multi_buffer = @as(c_int, 1);
pub const GL_SGIX_texture_scale_bias = @as(c_int, 1);
pub const GL_SGIX_vertex_preclip = @as(c_int, 1);
pub const GL_SGIX_ycrcb = @as(c_int, 1);
pub const GL_SGIX_ycrcb_subsample = @as(c_int, 1);
pub const GL_SGIX_ycrcba = @as(c_int, 1);
pub const GL_SGI_color_matrix = @as(c_int, 1);
pub const GL_SGI_color_table = @as(c_int, 1);
pub const GL_SGI_texture_color_table = @as(c_int, 1);
pub const GL_SUNX_constant_data = @as(c_int, 1);
pub const GL_SUN_convolution_border_modes = @as(c_int, 1);
pub const GL_SUN_global_alpha = @as(c_int, 1);
pub const GL_SUN_mesh_array = @as(c_int, 1);
pub const GL_SUN_slice_accum = @as(c_int, 1);
pub const GL_SUN_triangle_list = @as(c_int, 1);
pub const GL_SUN_vertex = @as(c_int, 1);
pub const GL_VIV_shader_binary = @as(c_int, 1);
pub const GL_WIN_phong_shading = @as(c_int, 1);
pub const GL_WIN_specular_fog = @as(c_int, 1);
pub const GL_NEXT_BUFFER_NV = -@as(c_int, 2);
pub const GL_SKIP_COMPONENTS4_NV = -@as(c_int, 3);
pub const GL_SKIP_COMPONENTS3_NV = -@as(c_int, 4);
pub const GL_SKIP_COMPONENTS2_NV = -@as(c_int, 5);
pub const GL_SKIP_COMPONENTS1_NV = -@as(c_int, 6);
pub const GL_FALSE = @as(c_int, 0);
pub const GL_LAYOUT_DEFAULT_INTEL = @as(c_int, 0);
pub const GL_NONE = @as(c_int, 0);
pub const GL_NONE_OES = @as(c_int, 0);
pub const GL_NO_ERROR = @as(c_int, 0);
pub const GL_ZERO = @as(c_int, 0);
pub const GL_CLOSE_PATH_NV = @as(c_int, 0x00);
pub const GL_POINTS = @as(c_int, 0x0000);
pub const GL_TERMINATE_SEQUENCE_COMMAND_NV = @as(c_int, 0x0000);
pub const GL_PERFQUERY_SINGLE_CONTEXT_INTEL = @as(c_int, 0x00000000);
pub const GL_2X_BIT_ATI = @as(c_int, 0x00000001);
pub const GL_CLIENT_PIXEL_STORE_BIT = @as(c_int, 0x00000001);
pub const GL_COLOR_BUFFER_BIT0_QCOM = @as(c_int, 0x00000001);
pub const GL_CONTEXT_CORE_PROFILE_BIT = @as(c_int, 0x00000001);
pub const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = @as(c_int, 0x00000001);
pub const GL_CURRENT_BIT = @as(c_int, 0x00000001);
pub const GL_FOVEATION_ENABLE_BIT_QCOM = @as(c_int, 0x00000001);
pub const GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = @as(c_int, 0x00000001);
pub const GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = @as(c_int, 0x00000001);
pub const GL_RED_BIT_ATI = @as(c_int, 0x00000001);
pub const GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = @as(c_int, 0x00000001);
pub const GL_SYNC_FLUSH_COMMANDS_BIT = @as(c_int, 0x00000001);
pub const GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = @as(c_int, 0x00000001);
pub const GL_TEXTURE_DEFORMATION_BIT_SGIX = @as(c_int, 0x00000001);
pub const GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = @as(c_int, 0x00000001);
pub const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = @as(c_int, 0x00000001);
pub const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = @as(c_int, 0x00000001);
pub const GL_VERTEX_SHADER_BIT = @as(c_int, 0x00000001);
pub const GL_VERTEX_SHADER_BIT_EXT = @as(c_int, 0x00000001);
pub const GL_4X_BIT_ATI = @as(c_int, 0x00000002);
pub const GL_CLIENT_VERTEX_ARRAY_BIT = @as(c_int, 0x00000002);
pub const GL_COLOR_BUFFER_BIT1_QCOM = @as(c_int, 0x00000002);
pub const GL_COMP_BIT_ATI = @as(c_int, 0x00000002);
pub const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = @as(c_int, 0x00000002);
pub const GL_CONTEXT_FLAG_DEBUG_BIT = @as(c_int, 0x00000002);
pub const GL_CONTEXT_FLAG_DEBUG_BIT_KHR = @as(c_int, 0x00000002);
pub const GL_ELEMENT_ARRAY_BARRIER_BIT = @as(c_int, 0x00000002);
pub const GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = @as(c_int, 0x00000002);
pub const GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM = @as(c_int, 0x00000002);
pub const GL_FRAGMENT_SHADER_BIT = @as(c_int, 0x00000002);
pub const GL_FRAGMENT_SHADER_BIT_EXT = @as(c_int, 0x00000002);
pub const GL_GEOMETRY_DEFORMATION_BIT_SGIX = @as(c_int, 0x00000002);
pub const GL_GREEN_BIT_ATI = @as(c_int, 0x00000002);
pub const GL_POINT_BIT = @as(c_int, 0x00000002);
pub const GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = @as(c_int, 0x00000002);
pub const GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = @as(c_int, 0x00000002);
pub const GL_8X_BIT_ATI = @as(c_int, 0x00000004);
pub const GL_BLUE_BIT_ATI = @as(c_int, 0x00000004);
pub const GL_COLOR_BUFFER_BIT2_QCOM = @as(c_int, 0x00000004);
pub const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = @as(c_int, 0x00000004);
pub const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = @as(c_int, 0x00000004);
pub const GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM = @as(c_int, 0x00000004);
pub const GL_GEOMETRY_SHADER_BIT = @as(c_int, 0x00000004);
pub const GL_GEOMETRY_SHADER_BIT_EXT = @as(c_int, 0x00000004);
pub const GL_GEOMETRY_SHADER_BIT_OES = @as(c_int, 0x00000004);
pub const GL_LINE_BIT = @as(c_int, 0x00000004);
pub const GL_NEGATE_BIT_ATI = @as(c_int, 0x00000004);
pub const GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = @as(c_int, 0x00000004);
pub const GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = @as(c_int, 0x00000004);
pub const GL_UNIFORM_BARRIER_BIT = @as(c_int, 0x00000004);
pub const GL_UNIFORM_BARRIER_BIT_EXT = @as(c_int, 0x00000004);
pub const GL_VERTEX23_BIT_PGI = @as(c_int, 0x00000004);
pub const GL_BIAS_BIT_ATI = @as(c_int, 0x00000008);
pub const GL_COLOR_BUFFER_BIT3_QCOM = @as(c_int, 0x00000008);
pub const GL_CONTEXT_FLAG_NO_ERROR_BIT = @as(c_int, 0x00000008);
pub const GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = @as(c_int, 0x00000008);
pub const GL_HALF_BIT_ATI = @as(c_int, 0x00000008);
pub const GL_POLYGON_BIT = @as(c_int, 0x00000008);
pub const GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = @as(c_int, 0x00000008);
pub const GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = @as(c_int, 0x00000008);
pub const GL_TESS_CONTROL_SHADER_BIT = @as(c_int, 0x00000008);
pub const GL_TESS_CONTROL_SHADER_BIT_EXT = @as(c_int, 0x00000008);
pub const GL_TESS_CONTROL_SHADER_BIT_OES = @as(c_int, 0x00000008);
pub const GL_TEXTURE_FETCH_BARRIER_BIT = @as(c_int, 0x00000008);
pub const GL_TEXTURE_FETCH_BARRIER_BIT_EXT = @as(c_int, 0x00000008);
pub const GL_VERTEX4_BIT_PGI = @as(c_int, 0x00000008);
pub const GL_COLOR_BUFFER_BIT4_QCOM = @as(c_int, 0x00000010);
pub const GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT = @as(c_int, 0x00000010);
pub const GL_POLYGON_STIPPLE_BIT = @as(c_int, 0x00000010);
pub const GL_QUARTER_BIT_ATI = @as(c_int, 0x00000010);
pub const GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = @as(c_int, 0x00000010);
pub const GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = @as(c_int, 0x00000010);
pub const GL_TESS_EVALUATION_SHADER_BIT = @as(c_int, 0x00000010);
pub const GL_TESS_EVALUATION_SHADER_BIT_EXT = @as(c_int, 0x00000010);
pub const GL_TESS_EVALUATION_SHADER_BIT_OES = @as(c_int, 0x00000010);
pub const GL_COLOR_BUFFER_BIT5_QCOM = @as(c_int, 0x00000020);
pub const GL_COMPUTE_SHADER_BIT = @as(c_int, 0x00000020);
pub const GL_EIGHTH_BIT_ATI = @as(c_int, 0x00000020);
pub const GL_PIXEL_MODE_BIT = @as(c_int, 0x00000020);
pub const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = @as(c_int, 0x00000020);
pub const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = @as(c_int, 0x00000020);
pub const GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = @as(c_int, 0x00000020);
pub const GL_COLOR_BUFFER_BIT6_QCOM = @as(c_int, 0x00000040);
pub const GL_COMMAND_BARRIER_BIT = @as(c_int, 0x00000040);
pub const GL_COMMAND_BARRIER_BIT_EXT = @as(c_int, 0x00000040);
pub const GL_LIGHTING_BIT = @as(c_int, 0x00000040);
pub const GL_MESH_SHADER_BIT_NV = @as(c_int, 0x00000040);
pub const GL_SATURATE_BIT_ATI = @as(c_int, 0x00000040);
pub const GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = @as(c_int, 0x00000040);
pub const GL_COLOR_BUFFER_BIT7_QCOM = @as(c_int, 0x00000080);
pub const GL_FOG_BIT = @as(c_int, 0x00000080);
pub const GL_PIXEL_BUFFER_BARRIER_BIT = @as(c_int, 0x00000080);
pub const GL_PIXEL_BUFFER_BARRIER_BIT_EXT = @as(c_int, 0x00000080);
pub const GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = @as(c_int, 0x00000080);
pub const GL_TASK_SHADER_BIT_NV = @as(c_int, 0x00000080);
pub const GL_DEPTH_BUFFER_BIT = @as(c_int, 0x00000100);
pub const GL_DEPTH_BUFFER_BIT0_QCOM = @as(c_int, 0x00000100);
pub const GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = @as(c_int, 0x00000100);
pub const GL_TEXTURE_UPDATE_BARRIER_BIT = @as(c_int, 0x00000100);
pub const GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = @as(c_int, 0x00000100);
pub const GL_ACCUM_BUFFER_BIT = @as(c_int, 0x00000200);
pub const GL_BUFFER_UPDATE_BARRIER_BIT = @as(c_int, 0x00000200);
pub const GL_BUFFER_UPDATE_BARRIER_BIT_EXT = @as(c_int, 0x00000200);
pub const GL_DEPTH_BUFFER_BIT1_QCOM = @as(c_int, 0x00000200);
pub const GL_DEPTH_BUFFER_BIT2_QCOM = @as(c_int, 0x00000400);
pub const GL_FRAMEBUFFER_BARRIER_BIT = @as(c_int, 0x00000400);
pub const GL_FRAMEBUFFER_BARRIER_BIT_EXT = @as(c_int, 0x00000400);
pub const GL_STENCIL_BUFFER_BIT = @as(c_int, 0x00000400);
pub const GL_DEPTH_BUFFER_BIT3_QCOM = @as(c_int, 0x00000800);
pub const GL_TRANSFORM_FEEDBACK_BARRIER_BIT = @as(c_int, 0x00000800);
pub const GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = @as(c_int, 0x00000800);
pub const GL_VIEWPORT_BIT = @as(c_int, 0x00000800);
pub const GL_ATOMIC_COUNTER_BARRIER_BIT = @as(c_int, 0x00001000);
pub const GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = @as(c_int, 0x00001000);
pub const GL_DEPTH_BUFFER_BIT4_QCOM = @as(c_int, 0x00001000);
pub const GL_TRANSFORM_BIT = @as(c_int, 0x00001000);
pub const GL_DEPTH_BUFFER_BIT5_QCOM = @as(c_int, 0x00002000);
pub const GL_ENABLE_BIT = @as(c_int, 0x00002000);
pub const GL_SHADER_STORAGE_BARRIER_BIT = @as(c_int, 0x00002000);
pub const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = @as(c_int, 0x00004000);
pub const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = @as(c_int, 0x00004000);
pub const GL_COLOR_BUFFER_BIT = @as(c_int, 0x00004000);
pub const GL_DEPTH_BUFFER_BIT6_QCOM = @as(c_int, 0x00004000);
pub const GL_COVERAGE_BUFFER_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const GL_DEPTH_BUFFER_BIT7_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const GL_HINT_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const GL_QUERY_BUFFER_BARRIER_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const GL_LINES = @as(c_int, 0x0001);
pub const GL_MAP_READ_BIT = @as(c_int, 0x0001);
pub const GL_MAP_READ_BIT_EXT = @as(c_int, 0x0001);
pub const GL_NOP_COMMAND_NV = @as(c_int, 0x0001);
pub const GL_RESTART_SUN = @as(c_int, 0x0001);
pub const GL_TRACE_OPERATIONS_BIT_MESA = @as(c_int, 0x0001);
pub const GL_COLOR3_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const GL_EVAL_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const GL_FONT_X_MIN_BOUNDS_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const GL_STENCIL_BUFFER_BIT0_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const GL_DRAW_ELEMENTS_COMMAND_NV = @as(c_int, 0x0002);
pub const GL_LINE_LOOP = @as(c_int, 0x0002);
pub const GL_MAP_WRITE_BIT = @as(c_int, 0x0002);
pub const GL_MAP_WRITE_BIT_EXT = @as(c_int, 0x0002);
pub const GL_REPLACE_MIDDLE_SUN = @as(c_int, 0x0002);
pub const GL_TRACE_PRIMITIVES_BIT_MESA = @as(c_int, 0x0002);
pub const GL_COLOR4_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const GL_FONT_Y_MIN_BOUNDS_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const GL_LIST_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const GL_STENCIL_BUFFER_BIT1_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const GL_DRAW_ARRAYS_COMMAND_NV = @as(c_int, 0x0003);
pub const GL_LINE_STRIP = @as(c_int, 0x0003);
pub const GL_REPLACE_OLDEST_SUN = @as(c_int, 0x0003);
pub const GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = @as(c_int, 0x0004);
pub const GL_MAP_INVALIDATE_RANGE_BIT = @as(c_int, 0x0004);
pub const GL_MAP_INVALIDATE_RANGE_BIT_EXT = @as(c_int, 0x0004);
pub const GL_TRACE_ARRAYS_BIT_MESA = @as(c_int, 0x0004);
pub const GL_TRIANGLES = @as(c_int, 0x0004);
pub const GL_EDGEFLAG_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const GL_FONT_X_MAX_BOUNDS_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const GL_STENCIL_BUFFER_BIT2_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const GL_TEXTURE_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const GL_DRAW_ARRAYS_STRIP_COMMAND_NV = @as(c_int, 0x0005);
pub const GL_TRIANGLE_STRIP = @as(c_int, 0x0005);
pub const GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = @as(c_int, 0x0006);
pub const GL_TRIANGLE_FAN = @as(c_int, 0x0006);
pub const GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = @as(c_int, 0x0007);
pub const GL_QUADS = @as(c_int, 0x0007);
pub const GL_QUADS_EXT = @as(c_int, 0x0007);
pub const GL_QUADS_OES = @as(c_int, 0x0007);
pub const GL_ELEMENT_ADDRESS_COMMAND_NV = @as(c_int, 0x0008);
pub const GL_MAP_INVALIDATE_BUFFER_BIT = @as(c_int, 0x0008);
pub const GL_MAP_INVALIDATE_BUFFER_BIT_EXT = @as(c_int, 0x0008);
pub const GL_QUAD_STRIP = @as(c_int, 0x0008);
pub const GL_TRACE_TEXTURES_BIT_MESA = @as(c_int, 0x0008);
pub const GL_FONT_Y_MAX_BOUNDS_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const GL_INDEX_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const GL_SCISSOR_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const GL_STENCIL_BUFFER_BIT3_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const GL_ATTRIBUTE_ADDRESS_COMMAND_NV = @as(c_int, 0x0009);
pub const GL_POLYGON = @as(c_int, 0x0009);
pub const GL_LINES_ADJACENCY = @as(c_int, 0x000A);
pub const GL_LINES_ADJACENCY_ARB = @as(c_int, 0x000A);
pub const GL_LINES_ADJACENCY_EXT = @as(c_int, 0x000A);
pub const GL_LINES_ADJACENCY_OES = @as(c_int, 0x000A);
pub const GL_UNIFORM_ADDRESS_COMMAND_NV = @as(c_int, 0x000A);
pub const GL_BLEND_COLOR_COMMAND_NV = @as(c_int, 0x000B);
pub const GL_LINE_STRIP_ADJACENCY = @as(c_int, 0x000B);
pub const GL_LINE_STRIP_ADJACENCY_ARB = @as(c_int, 0x000B);
pub const GL_LINE_STRIP_ADJACENCY_EXT = @as(c_int, 0x000B);
pub const GL_LINE_STRIP_ADJACENCY_OES = @as(c_int, 0x000B);
pub const GL_STENCIL_REF_COMMAND_NV = @as(c_int, 0x000C);
pub const GL_TRIANGLES_ADJACENCY = @as(c_int, 0x000C);
pub const GL_TRIANGLES_ADJACENCY_ARB = @as(c_int, 0x000C);
pub const GL_TRIANGLES_ADJACENCY_EXT = @as(c_int, 0x000C);
pub const GL_TRIANGLES_ADJACENCY_OES = @as(c_int, 0x000C);
pub const GL_LINE_WIDTH_COMMAND_NV = @as(c_int, 0x000D);
pub const GL_TRIANGLE_STRIP_ADJACENCY = @as(c_int, 0x000D);
pub const GL_TRIANGLE_STRIP_ADJACENCY_ARB = @as(c_int, 0x000D);
pub const GL_TRIANGLE_STRIP_ADJACENCY_EXT = @as(c_int, 0x000D);
pub const GL_TRIANGLE_STRIP_ADJACENCY_OES = @as(c_int, 0x000D);
pub const GL_PATCHES = @as(c_int, 0x000E);
pub const GL_PATCHES_EXT = @as(c_int, 0x000E);
pub const GL_PATCHES_OES = @as(c_int, 0x000E);
pub const GL_POLYGON_OFFSET_COMMAND_NV = @as(c_int, 0x000E);
pub const GL_ALPHA_REF_COMMAND_NV = @as(c_int, 0x000F);
pub const GL_MAP_FLUSH_EXPLICIT_BIT = @as(c_int, 0x0010);
pub const GL_MAP_FLUSH_EXPLICIT_BIT_EXT = @as(c_int, 0x0010);
pub const GL_TRACE_PIXELS_BIT_MESA = @as(c_int, 0x0010);
pub const GL_VIEWPORT_COMMAND_NV = @as(c_int, 0x0010);
pub const GL_FONT_UNITS_PER_EM_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const GL_MAT_AMBIENT_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const GL_STENCIL_BUFFER_BIT4_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const GL_SCISSOR_COMMAND_NV = @as(c_int, 0x0011);
pub const GL_FRONT_FACE_COMMAND_NV = @as(c_int, 0x0012);
pub const GL_MAP_UNSYNCHRONIZED_BIT = @as(c_int, 0x0020);
pub const GL_MAP_UNSYNCHRONIZED_BIT_EXT = @as(c_int, 0x0020);
pub const GL_TRACE_ERRORS_BIT_MESA = @as(c_int, 0x0020);
pub const GL_FONT_ASCENDER_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const GL_STENCIL_BUFFER_BIT5_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const GL_MAP_PERSISTENT_BIT = @as(c_int, 0x0040);
pub const GL_MAP_PERSISTENT_BIT_EXT = @as(c_int, 0x0040);
pub const GL_FONT_DESCENDER_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const GL_MAT_DIFFUSE_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const GL_STENCIL_BUFFER_BIT6_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const GL_MAP_COHERENT_BIT = @as(c_int, 0x0080);
pub const GL_MAP_COHERENT_BIT_EXT = @as(c_int, 0x0080);
pub const GL_FONT_HEIGHT_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const GL_MAT_EMISSION_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const GL_STENCIL_BUFFER_BIT7_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const GL_BOLD_BIT_NV = @as(c_int, 0x01);
pub const GL_GLYPH_WIDTH_BIT_NV = @as(c_int, 0x01);
pub const GL_ACCUM = @as(c_int, 0x0100);
pub const GL_DYNAMIC_STORAGE_BIT = @as(c_int, 0x0100);
pub const GL_DYNAMIC_STORAGE_BIT_EXT = @as(c_int, 0x0100);
pub const GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const GL_MAT_COLOR_INDEXES_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT0_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const GL_LOAD = @as(c_int, 0x0101);
pub const GL_RETURN = @as(c_int, 0x0102);
pub const GL_MULT = @as(c_int, 0x0103);
pub const GL_ADD = @as(c_int, 0x0104);
pub const GL_GLYPH_HEIGHT_BIT_NV = @as(c_int, 0x02);
pub const GL_ITALIC_BIT_NV = @as(c_int, 0x02);
pub const GL_MOVE_TO_NV = @as(c_int, 0x02);
pub const GL_CLIENT_STORAGE_BIT = @as(c_int, 0x0200);
pub const GL_CLIENT_STORAGE_BIT_EXT = @as(c_int, 0x0200);
pub const GL_NEVER = @as(c_int, 0x0200);
pub const GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const GL_MAT_SHININESS_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT1_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const GL_LESS = @as(c_int, 0x0201);
pub const GL_EQUAL = @as(c_int, 0x0202);
pub const GL_LEQUAL = @as(c_int, 0x0203);
pub const GL_GREATER = @as(c_int, 0x0204);
pub const GL_NOTEQUAL = @as(c_int, 0x0205);
pub const GL_GEQUAL = @as(c_int, 0x0206);
pub const GL_ALWAYS = @as(c_int, 0x0207);
pub const GL_RELATIVE_MOVE_TO_NV = @as(c_int, 0x03);
pub const GL_SRC_COLOR = @as(c_int, 0x0300);
pub const GL_ONE_MINUS_SRC_COLOR = @as(c_int, 0x0301);
pub const GL_SRC_ALPHA = @as(c_int, 0x0302);
pub const GL_ONE_MINUS_SRC_ALPHA = @as(c_int, 0x0303);
pub const GL_DST_ALPHA = @as(c_int, 0x0304);
pub const GL_ONE_MINUS_DST_ALPHA = @as(c_int, 0x0305);
pub const GL_DST_COLOR = @as(c_int, 0x0306);
pub const GL_ONE_MINUS_DST_COLOR = @as(c_int, 0x0307);
pub const GL_SRC_ALPHA_SATURATE = @as(c_int, 0x0308);
pub const GL_SRC_ALPHA_SATURATE_EXT = @as(c_int, 0x0308);
pub const GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = @as(c_int, 0x04);
pub const GL_LINE_TO_NV = @as(c_int, 0x04);
pub const GL_FRONT_LEFT = @as(c_int, 0x0400);
pub const GL_SPARSE_STORAGE_BIT_ARB = @as(c_int, 0x0400);
pub const GL_FONT_UNDERLINE_POSITION_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04000000, .hex);
pub const GL_MAT_SPECULAR_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT2_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04000000, .hex);
pub const GL_FRONT_RIGHT = @as(c_int, 0x0401);
pub const GL_BACK_LEFT = @as(c_int, 0x0402);
pub const GL_BACK_RIGHT = @as(c_int, 0x0403);
pub const GL_FRONT = @as(c_int, 0x0404);
pub const GL_BACK = @as(c_int, 0x0405);
pub const GL_LEFT = @as(c_int, 0x0406);
pub const GL_RIGHT = @as(c_int, 0x0407);
pub const GL_FRONT_AND_BACK = @as(c_int, 0x0408);
pub const GL_AUX0 = @as(c_int, 0x0409);
pub const GL_AUX1 = @as(c_int, 0x040A);
pub const GL_AUX2 = @as(c_int, 0x040B);
pub const GL_AUX3 = @as(c_int, 0x040C);
pub const GL_RELATIVE_LINE_TO_NV = @as(c_int, 0x05);
pub const GL_INVALID_ENUM = @as(c_int, 0x0500);
pub const GL_INVALID_VALUE = @as(c_int, 0x0501);
pub const GL_INVALID_OPERATION = @as(c_int, 0x0502);
pub const GL_STACK_OVERFLOW = @as(c_int, 0x0503);
pub const GL_STACK_OVERFLOW_KHR = @as(c_int, 0x0503);
pub const GL_STACK_UNDERFLOW = @as(c_int, 0x0504);
pub const GL_STACK_UNDERFLOW_KHR = @as(c_int, 0x0504);
pub const GL_OUT_OF_MEMORY = @as(c_int, 0x0505);
pub const GL_INVALID_FRAMEBUFFER_OPERATION = @as(c_int, 0x0506);
pub const GL_INVALID_FRAMEBUFFER_OPERATION_EXT = @as(c_int, 0x0506);
pub const GL_INVALID_FRAMEBUFFER_OPERATION_OES = @as(c_int, 0x0506);
pub const GL_CONTEXT_LOST = @as(c_int, 0x0507);
pub const GL_CONTEXT_LOST_KHR = @as(c_int, 0x0507);
pub const GL_HORIZONTAL_LINE_TO_NV = @as(c_int, 0x06);
pub const GL_2D = @as(c_int, 0x0600);
pub const GL_3D = @as(c_int, 0x0601);
pub const GL_3D_COLOR = @as(c_int, 0x0602);
pub const GL_3D_COLOR_TEXTURE = @as(c_int, 0x0603);
pub const GL_4D_COLOR_TEXTURE = @as(c_int, 0x0604);
pub const GL_RELATIVE_HORIZONTAL_LINE_TO_NV = @as(c_int, 0x07);
pub const GL_PASS_THROUGH_TOKEN = @as(c_int, 0x0700);
pub const GL_POINT_TOKEN = @as(c_int, 0x0701);
pub const GL_LINE_TOKEN = @as(c_int, 0x0702);
pub const GL_POLYGON_TOKEN = @as(c_int, 0x0703);
pub const GL_BITMAP_TOKEN = @as(c_int, 0x0704);
pub const GL_DRAW_PIXEL_TOKEN = @as(c_int, 0x0705);
pub const GL_COPY_PIXEL_TOKEN = @as(c_int, 0x0706);
pub const GL_LINE_RESET_TOKEN = @as(c_int, 0x0707);
pub const GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = @as(c_int, 0x08);
pub const GL_VERTICAL_LINE_TO_NV = @as(c_int, 0x08);
pub const GL_EXP = @as(c_int, 0x0800);
pub const GL_LGPU_SEPARATE_STORAGE_BIT_NVX = @as(c_int, 0x0800);
pub const GL_PER_GPU_STORAGE_BIT_NV = @as(c_int, 0x0800);
pub const GL_FONT_UNDERLINE_THICKNESS_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x08000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT3_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x08000000, .hex);
pub const GL_NORMAL_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x08000000, .hex);
pub const GL_EXP2 = @as(c_int, 0x0801);
pub const GL_RELATIVE_VERTICAL_LINE_TO_NV = @as(c_int, 0x09);
pub const GL_CW = @as(c_int, 0x0900);
pub const GL_CCW = @as(c_int, 0x0901);
pub const GL_QUADRATIC_CURVE_TO_NV = @as(c_int, 0x0A);
pub const GL_COEFF = @as(c_int, 0x0A00);
pub const GL_ORDER = @as(c_int, 0x0A01);
pub const GL_DOMAIN = @as(c_int, 0x0A02);
pub const GL_RELATIVE_QUADRATIC_CURVE_TO_NV = @as(c_int, 0x0B);
pub const GL_CURRENT_COLOR = @as(c_int, 0x0B00);
pub const GL_CURRENT_INDEX = @as(c_int, 0x0B01);
pub const GL_CURRENT_NORMAL = @as(c_int, 0x0B02);
pub const GL_CURRENT_TEXTURE_COORDS = @as(c_int, 0x0B03);
pub const GL_CURRENT_RASTER_COLOR = @as(c_int, 0x0B04);
pub const GL_CURRENT_RASTER_INDEX = @as(c_int, 0x0B05);
pub const GL_CURRENT_RASTER_TEXTURE_COORDS = @as(c_int, 0x0B06);
pub const GL_CURRENT_RASTER_POSITION = @as(c_int, 0x0B07);
pub const GL_CURRENT_RASTER_POSITION_VALID = @as(c_int, 0x0B08);
pub const GL_CURRENT_RASTER_DISTANCE = @as(c_int, 0x0B09);
pub const GL_POINT_SMOOTH = @as(c_int, 0x0B10);
pub const GL_POINT_SIZE = @as(c_int, 0x0B11);
pub const GL_POINT_SIZE_RANGE = @as(c_int, 0x0B12);
pub const GL_SMOOTH_POINT_SIZE_RANGE = @as(c_int, 0x0B12);
pub const GL_POINT_SIZE_GRANULARITY = @as(c_int, 0x0B13);
pub const GL_SMOOTH_POINT_SIZE_GRANULARITY = @as(c_int, 0x0B13);
pub const GL_LINE_SMOOTH = @as(c_int, 0x0B20);
pub const GL_LINE_WIDTH = @as(c_int, 0x0B21);
pub const GL_LINE_WIDTH_RANGE = @as(c_int, 0x0B22);
pub const GL_SMOOTH_LINE_WIDTH_RANGE = @as(c_int, 0x0B22);
pub const GL_LINE_WIDTH_GRANULARITY = @as(c_int, 0x0B23);
pub const GL_SMOOTH_LINE_WIDTH_GRANULARITY = @as(c_int, 0x0B23);
pub const GL_LINE_STIPPLE = @as(c_int, 0x0B24);
pub const GL_LINE_STIPPLE_PATTERN = @as(c_int, 0x0B25);
pub const GL_LINE_STIPPLE_REPEAT = @as(c_int, 0x0B26);
pub const GL_LIST_MODE = @as(c_int, 0x0B30);
pub const GL_MAX_LIST_NESTING = @as(c_int, 0x0B31);
pub const GL_LIST_BASE = @as(c_int, 0x0B32);
pub const GL_LIST_INDEX = @as(c_int, 0x0B33);
pub const GL_POLYGON_MODE = @as(c_int, 0x0B40);
pub const GL_POLYGON_MODE_NV = @as(c_int, 0x0B40);
pub const GL_POLYGON_SMOOTH = @as(c_int, 0x0B41);
pub const GL_POLYGON_STIPPLE = @as(c_int, 0x0B42);
pub const GL_EDGE_FLAG = @as(c_int, 0x0B43);
pub const GL_CULL_FACE = @as(c_int, 0x0B44);
pub const GL_CULL_FACE_MODE = @as(c_int, 0x0B45);
pub const GL_FRONT_FACE = @as(c_int, 0x0B46);
pub const GL_LIGHTING = @as(c_int, 0x0B50);
pub const GL_LIGHT_MODEL_LOCAL_VIEWER = @as(c_int, 0x0B51);
pub const GL_LIGHT_MODEL_TWO_SIDE = @as(c_int, 0x0B52);
pub const GL_LIGHT_MODEL_AMBIENT = @as(c_int, 0x0B53);
pub const GL_SHADE_MODEL = @as(c_int, 0x0B54);
pub const GL_COLOR_MATERIAL_FACE = @as(c_int, 0x0B55);
pub const GL_COLOR_MATERIAL_PARAMETER = @as(c_int, 0x0B56);
pub const GL_COLOR_MATERIAL = @as(c_int, 0x0B57);
pub const GL_FOG = @as(c_int, 0x0B60);
pub const GL_FOG_INDEX = @as(c_int, 0x0B61);
pub const GL_FOG_DENSITY = @as(c_int, 0x0B62);
pub const GL_FOG_START = @as(c_int, 0x0B63);
pub const GL_FOG_END = @as(c_int, 0x0B64);
pub const GL_FOG_MODE = @as(c_int, 0x0B65);
pub const GL_FOG_COLOR = @as(c_int, 0x0B66);
pub const GL_DEPTH_RANGE = @as(c_int, 0x0B70);
pub const GL_DEPTH_TEST = @as(c_int, 0x0B71);
pub const GL_DEPTH_WRITEMASK = @as(c_int, 0x0B72);
pub const GL_DEPTH_CLEAR_VALUE = @as(c_int, 0x0B73);
pub const GL_DEPTH_FUNC = @as(c_int, 0x0B74);
pub const GL_ACCUM_CLEAR_VALUE = @as(c_int, 0x0B80);
pub const GL_STENCIL_TEST = @as(c_int, 0x0B90);
pub const GL_STENCIL_CLEAR_VALUE = @as(c_int, 0x0B91);
pub const GL_STENCIL_FUNC = @as(c_int, 0x0B92);
pub const GL_STENCIL_VALUE_MASK = @as(c_int, 0x0B93);
pub const GL_STENCIL_FAIL = @as(c_int, 0x0B94);
pub const GL_STENCIL_PASS_DEPTH_FAIL = @as(c_int, 0x0B95);
pub const GL_STENCIL_PASS_DEPTH_PASS = @as(c_int, 0x0B96);
pub const GL_STENCIL_REF = @as(c_int, 0x0B97);
pub const GL_STENCIL_WRITEMASK = @as(c_int, 0x0B98);
pub const GL_MATRIX_MODE = @as(c_int, 0x0BA0);
pub const GL_NORMALIZE = @as(c_int, 0x0BA1);
pub const GL_VIEWPORT = @as(c_int, 0x0BA2);
pub const GL_MODELVIEW0_STACK_DEPTH_EXT = @as(c_int, 0x0BA3);
pub const GL_MODELVIEW_STACK_DEPTH = @as(c_int, 0x0BA3);
pub const GL_PATH_MODELVIEW_STACK_DEPTH_NV = @as(c_int, 0x0BA3);
pub const GL_PATH_PROJECTION_STACK_DEPTH_NV = @as(c_int, 0x0BA4);
pub const GL_PROJECTION_STACK_DEPTH = @as(c_int, 0x0BA4);
pub const GL_TEXTURE_STACK_DEPTH = @as(c_int, 0x0BA5);
pub const GL_MODELVIEW0_MATRIX_EXT = @as(c_int, 0x0BA6);
pub const GL_MODELVIEW_MATRIX = @as(c_int, 0x0BA6);
pub const GL_PATH_MODELVIEW_MATRIX_NV = @as(c_int, 0x0BA6);
pub const GL_PATH_PROJECTION_MATRIX_NV = @as(c_int, 0x0BA7);
pub const GL_PROJECTION_MATRIX = @as(c_int, 0x0BA7);
pub const GL_TEXTURE_MATRIX = @as(c_int, 0x0BA8);
pub const GL_ATTRIB_STACK_DEPTH = @as(c_int, 0x0BB0);
pub const GL_CLIENT_ATTRIB_STACK_DEPTH = @as(c_int, 0x0BB1);
pub const GL_ALPHA_TEST = @as(c_int, 0x0BC0);
pub const GL_ALPHA_TEST_QCOM = @as(c_int, 0x0BC0);
pub const GL_ALPHA_TEST_FUNC = @as(c_int, 0x0BC1);
pub const GL_ALPHA_TEST_FUNC_QCOM = @as(c_int, 0x0BC1);
pub const GL_ALPHA_TEST_REF = @as(c_int, 0x0BC2);
pub const GL_ALPHA_TEST_REF_QCOM = @as(c_int, 0x0BC2);
pub const GL_DITHER = @as(c_int, 0x0BD0);
pub const GL_BLEND_DST = @as(c_int, 0x0BE0);
pub const GL_BLEND_SRC = @as(c_int, 0x0BE1);
pub const GL_BLEND = @as(c_int, 0x0BE2);
pub const GL_LOGIC_OP_MODE = @as(c_int, 0x0BF0);
pub const GL_INDEX_LOGIC_OP = @as(c_int, 0x0BF1);
pub const GL_LOGIC_OP = @as(c_int, 0x0BF1);
pub const GL_COLOR_LOGIC_OP = @as(c_int, 0x0BF2);
pub const GL_CUBIC_CURVE_TO_NV = @as(c_int, 0x0C);
pub const GL_AUX_BUFFERS = @as(c_int, 0x0C00);
pub const GL_DRAW_BUFFER = @as(c_int, 0x0C01);
pub const GL_DRAW_BUFFER_EXT = @as(c_int, 0x0C01);
pub const GL_READ_BUFFER = @as(c_int, 0x0C02);
pub const GL_READ_BUFFER_EXT = @as(c_int, 0x0C02);
pub const GL_READ_BUFFER_NV = @as(c_int, 0x0C02);
pub const GL_SCISSOR_BOX = @as(c_int, 0x0C10);
pub const GL_SCISSOR_TEST = @as(c_int, 0x0C11);
pub const GL_INDEX_CLEAR_VALUE = @as(c_int, 0x0C20);
pub const GL_INDEX_WRITEMASK = @as(c_int, 0x0C21);
pub const GL_COLOR_CLEAR_VALUE = @as(c_int, 0x0C22);
pub const GL_COLOR_WRITEMASK = @as(c_int, 0x0C23);
pub const GL_INDEX_MODE = @as(c_int, 0x0C30);
pub const GL_RGBA_MODE = @as(c_int, 0x0C31);
pub const GL_DOUBLEBUFFER = @as(c_int, 0x0C32);
pub const GL_STEREO = @as(c_int, 0x0C33);
pub const GL_RENDER_MODE = @as(c_int, 0x0C40);
pub const GL_PERSPECTIVE_CORRECTION_HINT = @as(c_int, 0x0C50);
pub const GL_POINT_SMOOTH_HINT = @as(c_int, 0x0C51);
pub const GL_LINE_SMOOTH_HINT = @as(c_int, 0x0C52);
pub const GL_POLYGON_SMOOTH_HINT = @as(c_int, 0x0C53);
pub const GL_FOG_HINT = @as(c_int, 0x0C54);
pub const GL_TEXTURE_GEN_S = @as(c_int, 0x0C60);
pub const GL_TEXTURE_GEN_T = @as(c_int, 0x0C61);
pub const GL_TEXTURE_GEN_R = @as(c_int, 0x0C62);
pub const GL_TEXTURE_GEN_Q = @as(c_int, 0x0C63);
pub const GL_PIXEL_MAP_I_TO_I = @as(c_int, 0x0C70);
pub const GL_PIXEL_MAP_S_TO_S = @as(c_int, 0x0C71);
pub const GL_PIXEL_MAP_I_TO_R = @as(c_int, 0x0C72);
pub const GL_PIXEL_MAP_I_TO_G = @as(c_int, 0x0C73);
pub const GL_PIXEL_MAP_I_TO_B = @as(c_int, 0x0C74);
pub const GL_PIXEL_MAP_I_TO_A = @as(c_int, 0x0C75);
pub const GL_PIXEL_MAP_R_TO_R = @as(c_int, 0x0C76);
pub const GL_PIXEL_MAP_G_TO_G = @as(c_int, 0x0C77);
pub const GL_PIXEL_MAP_B_TO_B = @as(c_int, 0x0C78);
pub const GL_PIXEL_MAP_A_TO_A = @as(c_int, 0x0C79);
pub const GL_PIXEL_MAP_I_TO_I_SIZE = @as(c_int, 0x0CB0);
pub const GL_PIXEL_MAP_S_TO_S_SIZE = @as(c_int, 0x0CB1);
pub const GL_PIXEL_MAP_I_TO_R_SIZE = @as(c_int, 0x0CB2);
pub const GL_PIXEL_MAP_I_TO_G_SIZE = @as(c_int, 0x0CB3);
pub const GL_PIXEL_MAP_I_TO_B_SIZE = @as(c_int, 0x0CB4);
pub const GL_PIXEL_MAP_I_TO_A_SIZE = @as(c_int, 0x0CB5);
pub const GL_PIXEL_MAP_R_TO_R_SIZE = @as(c_int, 0x0CB6);
pub const GL_PIXEL_MAP_G_TO_G_SIZE = @as(c_int, 0x0CB7);
pub const GL_PIXEL_MAP_B_TO_B_SIZE = @as(c_int, 0x0CB8);
pub const GL_PIXEL_MAP_A_TO_A_SIZE = @as(c_int, 0x0CB9);
pub const GL_UNPACK_SWAP_BYTES = @as(c_int, 0x0CF0);
pub const GL_UNPACK_LSB_FIRST = @as(c_int, 0x0CF1);
pub const GL_UNPACK_ROW_LENGTH = @as(c_int, 0x0CF2);
pub const GL_UNPACK_ROW_LENGTH_EXT = @as(c_int, 0x0CF2);
pub const GL_UNPACK_SKIP_ROWS = @as(c_int, 0x0CF3);
pub const GL_UNPACK_SKIP_ROWS_EXT = @as(c_int, 0x0CF3);
pub const GL_UNPACK_SKIP_PIXELS = @as(c_int, 0x0CF4);
pub const GL_UNPACK_SKIP_PIXELS_EXT = @as(c_int, 0x0CF4);
pub const GL_UNPACK_ALIGNMENT = @as(c_int, 0x0CF5);
pub const GL_RELATIVE_CUBIC_CURVE_TO_NV = @as(c_int, 0x0D);
pub const GL_PACK_SWAP_BYTES = @as(c_int, 0x0D00);
pub const GL_PACK_LSB_FIRST = @as(c_int, 0x0D01);
pub const GL_PACK_ROW_LENGTH = @as(c_int, 0x0D02);
pub const GL_PACK_SKIP_ROWS = @as(c_int, 0x0D03);
pub const GL_PACK_SKIP_PIXELS = @as(c_int, 0x0D04);
pub const GL_PACK_ALIGNMENT = @as(c_int, 0x0D05);
pub const GL_MAP_COLOR = @as(c_int, 0x0D10);
pub const GL_MAP_STENCIL = @as(c_int, 0x0D11);
pub const GL_INDEX_SHIFT = @as(c_int, 0x0D12);
pub const GL_INDEX_OFFSET = @as(c_int, 0x0D13);
pub const GL_RED_SCALE = @as(c_int, 0x0D14);
pub const GL_RED_BIAS = @as(c_int, 0x0D15);
pub const GL_ZOOM_X = @as(c_int, 0x0D16);
pub const GL_ZOOM_Y = @as(c_int, 0x0D17);
pub const GL_GREEN_SCALE = @as(c_int, 0x0D18);
pub const GL_GREEN_BIAS = @as(c_int, 0x0D19);
pub const GL_BLUE_SCALE = @as(c_int, 0x0D1A);
pub const GL_BLUE_BIAS = @as(c_int, 0x0D1B);
pub const GL_ALPHA_SCALE = @as(c_int, 0x0D1C);
pub const GL_ALPHA_BIAS = @as(c_int, 0x0D1D);
pub const GL_DEPTH_SCALE = @as(c_int, 0x0D1E);
pub const GL_DEPTH_BIAS = @as(c_int, 0x0D1F);
pub const GL_MAX_EVAL_ORDER = @as(c_int, 0x0D30);
pub const GL_MAX_LIGHTS = @as(c_int, 0x0D31);
pub const GL_MAX_CLIP_DISTANCES = @as(c_int, 0x0D32);
pub const GL_MAX_CLIP_DISTANCES_APPLE = @as(c_int, 0x0D32);
pub const GL_MAX_CLIP_DISTANCES_EXT = @as(c_int, 0x0D32);
pub const GL_MAX_CLIP_PLANES = @as(c_int, 0x0D32);
pub const GL_MAX_CLIP_PLANES_IMG = @as(c_int, 0x0D32);
pub const GL_MAX_TEXTURE_SIZE = @as(c_int, 0x0D33);
pub const GL_MAX_PIXEL_MAP_TABLE = @as(c_int, 0x0D34);
pub const GL_MAX_ATTRIB_STACK_DEPTH = @as(c_int, 0x0D35);
pub const GL_MAX_MODELVIEW_STACK_DEPTH = @as(c_int, 0x0D36);
pub const GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = @as(c_int, 0x0D36);
pub const GL_MAX_NAME_STACK_DEPTH = @as(c_int, 0x0D37);
pub const GL_MAX_PROJECTION_STACK_DEPTH = @as(c_int, 0x0D38);
pub const GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = @as(c_int, 0x0D38);
pub const GL_MAX_TEXTURE_STACK_DEPTH = @as(c_int, 0x0D39);
pub const GL_MAX_VIEWPORT_DIMS = @as(c_int, 0x0D3A);
pub const GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = @as(c_int, 0x0D3B);
pub const GL_SUBPIXEL_BITS = @as(c_int, 0x0D50);
pub const GL_INDEX_BITS = @as(c_int, 0x0D51);
pub const GL_RED_BITS = @as(c_int, 0x0D52);
pub const GL_GREEN_BITS = @as(c_int, 0x0D53);
pub const GL_BLUE_BITS = @as(c_int, 0x0D54);
pub const GL_ALPHA_BITS = @as(c_int, 0x0D55);
pub const GL_DEPTH_BITS = @as(c_int, 0x0D56);
pub const GL_STENCIL_BITS = @as(c_int, 0x0D57);
pub const GL_ACCUM_RED_BITS = @as(c_int, 0x0D58);
pub const GL_ACCUM_GREEN_BITS = @as(c_int, 0x0D59);
pub const GL_ACCUM_BLUE_BITS = @as(c_int, 0x0D5A);
pub const GL_ACCUM_ALPHA_BITS = @as(c_int, 0x0D5B);
pub const GL_NAME_STACK_DEPTH = @as(c_int, 0x0D70);
pub const GL_AUTO_NORMAL = @as(c_int, 0x0D80);
pub const GL_MAP1_COLOR_4 = @as(c_int, 0x0D90);
pub const GL_MAP1_INDEX = @as(c_int, 0x0D91);
pub const GL_MAP1_NORMAL = @as(c_int, 0x0D92);
pub const GL_MAP1_TEXTURE_COORD_1 = @as(c_int, 0x0D93);
pub const GL_MAP1_TEXTURE_COORD_2 = @as(c_int, 0x0D94);
pub const GL_MAP1_TEXTURE_COORD_3 = @as(c_int, 0x0D95);
pub const GL_MAP1_TEXTURE_COORD_4 = @as(c_int, 0x0D96);
pub const GL_MAP1_VERTEX_3 = @as(c_int, 0x0D97);
pub const GL_MAP1_VERTEX_4 = @as(c_int, 0x0D98);
pub const GL_MAP2_COLOR_4 = @as(c_int, 0x0DB0);
pub const GL_MAP2_INDEX = @as(c_int, 0x0DB1);
pub const GL_MAP2_NORMAL = @as(c_int, 0x0DB2);
pub const GL_MAP2_TEXTURE_COORD_1 = @as(c_int, 0x0DB3);
pub const GL_MAP2_TEXTURE_COORD_2 = @as(c_int, 0x0DB4);
pub const GL_MAP2_TEXTURE_COORD_3 = @as(c_int, 0x0DB5);
pub const GL_MAP2_TEXTURE_COORD_4 = @as(c_int, 0x0DB6);
pub const GL_MAP2_VERTEX_3 = @as(c_int, 0x0DB7);
pub const GL_MAP2_VERTEX_4 = @as(c_int, 0x0DB8);
pub const GL_MAP1_GRID_DOMAIN = @as(c_int, 0x0DD0);
pub const GL_MAP1_GRID_SEGMENTS = @as(c_int, 0x0DD1);
pub const GL_MAP2_GRID_DOMAIN = @as(c_int, 0x0DD2);
pub const GL_MAP2_GRID_SEGMENTS = @as(c_int, 0x0DD3);
pub const GL_TEXTURE_1D = @as(c_int, 0x0DE0);
pub const GL_TEXTURE_2D = @as(c_int, 0x0DE1);
pub const GL_FEEDBACK_BUFFER_POINTER = @as(c_int, 0x0DF0);
pub const GL_FEEDBACK_BUFFER_SIZE = @as(c_int, 0x0DF1);
pub const GL_FEEDBACK_BUFFER_TYPE = @as(c_int, 0x0DF2);
pub const GL_SELECTION_BUFFER_POINTER = @as(c_int, 0x0DF3);
pub const GL_SELECTION_BUFFER_SIZE = @as(c_int, 0x0DF4);
pub const GL_SMOOTH_QUADRATIC_CURVE_TO_NV = @as(c_int, 0x0E);
pub const GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = @as(c_int, 0x0F);
pub const GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = @as(c_int, 0x10);
pub const GL_SMOOTH_CUBIC_CURVE_TO_NV = @as(c_int, 0x10);
pub const GL_GLYPH_HAS_KERNING_BIT_NV = @as(c_int, 0x100);
pub const GL_TEXTURE_WIDTH = @as(c_int, 0x1000);
pub const GL_FONT_HAS_KERNING_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT4_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000000, .hex);
pub const GL_TEXCOORD1_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000000, .hex);
pub const GL_TEXTURE_HEIGHT = @as(c_int, 0x1001);
pub const GL_TEXTURE_COMPONENTS = @as(c_int, 0x1003);
pub const GL_TEXTURE_INTERNAL_FORMAT = @as(c_int, 0x1003);
pub const GL_TEXTURE_BORDER_COLOR = @as(c_int, 0x1004);
pub const GL_TEXTURE_BORDER_COLOR_EXT = @as(c_int, 0x1004);
pub const GL_TEXTURE_BORDER_COLOR_NV = @as(c_int, 0x1004);
pub const GL_TEXTURE_BORDER_COLOR_OES = @as(c_int, 0x1004);
pub const GL_TEXTURE_BORDER = @as(c_int, 0x1005);
pub const GL_TEXTURE_TARGET = @as(c_int, 0x1006);
pub const GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = @as(c_int, 0x11);
pub const GL_DONT_CARE = @as(c_int, 0x1100);
pub const GL_FASTEST = @as(c_int, 0x1101);
pub const GL_NICEST = @as(c_int, 0x1102);
pub const GL_SMALL_CCW_ARC_TO_NV = @as(c_int, 0x12);
pub const GL_AMBIENT = @as(c_int, 0x1200);
pub const GL_DIFFUSE = @as(c_int, 0x1201);
pub const GL_SPECULAR = @as(c_int, 0x1202);
pub const GL_POSITION = @as(c_int, 0x1203);
pub const GL_SPOT_DIRECTION = @as(c_int, 0x1204);
pub const GL_SPOT_EXPONENT = @as(c_int, 0x1205);
pub const GL_SPOT_CUTOFF = @as(c_int, 0x1206);
pub const GL_CONSTANT_ATTENUATION = @as(c_int, 0x1207);
pub const GL_LINEAR_ATTENUATION = @as(c_int, 0x1208);
pub const GL_QUADRATIC_ATTENUATION = @as(c_int, 0x1209);
pub const GL_RELATIVE_SMALL_CCW_ARC_TO_NV = @as(c_int, 0x13);
pub const GL_COMPILE = @as(c_int, 0x1300);
pub const GL_COMPILE_AND_EXECUTE = @as(c_int, 0x1301);
pub const GL_SMALL_CW_ARC_TO_NV = @as(c_int, 0x14);
pub const GL_BYTE = @as(c_int, 0x1400);
pub const GL_UNSIGNED_BYTE = @as(c_int, 0x1401);
pub const GL_SHORT = @as(c_int, 0x1402);
pub const GL_UNSIGNED_SHORT = @as(c_int, 0x1403);
pub const GL_INT = @as(c_int, 0x1404);
pub const GL_UNSIGNED_INT = @as(c_int, 0x1405);
pub const GL_FLOAT = @as(c_int, 0x1406);
pub const GL_2_BYTES = @as(c_int, 0x1407);
pub const GL_2_BYTES_NV = @as(c_int, 0x1407);
pub const GL_3_BYTES = @as(c_int, 0x1408);
pub const GL_3_BYTES_NV = @as(c_int, 0x1408);
pub const GL_4_BYTES = @as(c_int, 0x1409);
pub const GL_4_BYTES_NV = @as(c_int, 0x1409);
pub const GL_DOUBLE = @as(c_int, 0x140A);
pub const GL_DOUBLE_EXT = @as(c_int, 0x140A);
pub const GL_HALF_APPLE = @as(c_int, 0x140B);
pub const GL_HALF_FLOAT = @as(c_int, 0x140B);
pub const GL_HALF_FLOAT_ARB = @as(c_int, 0x140B);
pub const GL_HALF_FLOAT_NV = @as(c_int, 0x140B);
pub const GL_FIXED = @as(c_int, 0x140C);
pub const GL_FIXED_OES = @as(c_int, 0x140C);
pub const GL_INT64_ARB = @as(c_int, 0x140E);
pub const GL_INT64_NV = @as(c_int, 0x140E);
pub const GL_UNSIGNED_INT64_ARB = @as(c_int, 0x140F);
pub const GL_UNSIGNED_INT64_NV = @as(c_int, 0x140F);
pub const GL_RELATIVE_SMALL_CW_ARC_TO_NV = @as(c_int, 0x15);
pub const GL_CLEAR = @as(c_int, 0x1500);
pub const GL_AND = @as(c_int, 0x1501);
pub const GL_AND_REVERSE = @as(c_int, 0x1502);
pub const GL_COPY = @as(c_int, 0x1503);
pub const GL_AND_INVERTED = @as(c_int, 0x1504);
pub const GL_NOOP = @as(c_int, 0x1505);
pub const GL_XOR = @as(c_int, 0x1506);
pub const GL_XOR_NV = @as(c_int, 0x1506);
pub const GL_OR = @as(c_int, 0x1507);
pub const GL_NOR = @as(c_int, 0x1508);
pub const GL_EQUIV = @as(c_int, 0x1509);
pub const GL_INVERT = @as(c_int, 0x150A);
pub const GL_OR_REVERSE = @as(c_int, 0x150B);
pub const GL_COPY_INVERTED = @as(c_int, 0x150C);
pub const GL_OR_INVERTED = @as(c_int, 0x150D);
pub const GL_NAND = @as(c_int, 0x150E);
pub const GL_SET = @as(c_int, 0x150F);
pub const GL_LARGE_CCW_ARC_TO_NV = @as(c_int, 0x16);
pub const GL_EMISSION = @as(c_int, 0x1600);
pub const GL_SHININESS = @as(c_int, 0x1601);
pub const GL_AMBIENT_AND_DIFFUSE = @as(c_int, 0x1602);
pub const GL_COLOR_INDEXES = @as(c_int, 0x1603);
pub const GL_RELATIVE_LARGE_CCW_ARC_TO_NV = @as(c_int, 0x17);
pub const GL_MODELVIEW = @as(c_int, 0x1700);
pub const GL_MODELVIEW0_ARB = @as(c_int, 0x1700);
pub const GL_MODELVIEW0_EXT = @as(c_int, 0x1700);
pub const GL_PATH_MODELVIEW_NV = @as(c_int, 0x1700);
pub const GL_PATH_PROJECTION_NV = @as(c_int, 0x1701);
pub const GL_PROJECTION = @as(c_int, 0x1701);
pub const GL_TEXTURE = @as(c_int, 0x1702);
pub const GL_LARGE_CW_ARC_TO_NV = @as(c_int, 0x18);
pub const GL_COLOR = @as(c_int, 0x1800);
pub const GL_COLOR_EXT = @as(c_int, 0x1800);
pub const GL_DEPTH = @as(c_int, 0x1801);
pub const GL_DEPTH_EXT = @as(c_int, 0x1801);
pub const GL_STENCIL = @as(c_int, 0x1802);
pub const GL_STENCIL_EXT = @as(c_int, 0x1802);
pub const GL_RELATIVE_LARGE_CW_ARC_TO_NV = @as(c_int, 0x19);
pub const GL_COLOR_INDEX = @as(c_int, 0x1900);
pub const GL_STENCIL_INDEX = @as(c_int, 0x1901);
pub const GL_STENCIL_INDEX_OES = @as(c_int, 0x1901);
pub const GL_DEPTH_COMPONENT = @as(c_int, 0x1902);
pub const GL_RED = @as(c_int, 0x1903);
pub const GL_RED_EXT = @as(c_int, 0x1903);
pub const GL_RED_NV = @as(c_int, 0x1903);
pub const GL_GREEN = @as(c_int, 0x1904);
pub const GL_GREEN_NV = @as(c_int, 0x1904);
pub const GL_BLUE = @as(c_int, 0x1905);
pub const GL_BLUE_NV = @as(c_int, 0x1905);
pub const GL_ALPHA = @as(c_int, 0x1906);
pub const GL_RGB = @as(c_int, 0x1907);
pub const GL_RGBA = @as(c_int, 0x1908);
pub const GL_LUMINANCE = @as(c_int, 0x1909);
pub const GL_LUMINANCE_ALPHA = @as(c_int, 0x190A);
pub const GL_RASTER_POSITION_UNCLIPPED_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x19262, .hex);
pub const GL_CONIC_CURVE_TO_NV = @as(c_int, 0x1A);
pub const GL_BITMAP = @as(c_int, 0x1A00);
pub const GL_PREFER_DOUBLEBUFFER_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A1F8, .hex);
pub const GL_CONSERVE_MEMORY_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A1FD, .hex);
pub const GL_RECLAIM_MEMORY_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A1FE, .hex);
pub const GL_NATIVE_GRAPHICS_HANDLE_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A202, .hex);
pub const GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A203, .hex);
pub const GL_NATIVE_GRAPHICS_END_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A204, .hex);
pub const GL_ALWAYS_FAST_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A20C, .hex);
pub const GL_ALWAYS_SOFT_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A20D, .hex);
pub const GL_ALLOW_DRAW_OBJ_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A20E, .hex);
pub const GL_ALLOW_DRAW_WIN_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A20F, .hex);
pub const GL_ALLOW_DRAW_FRG_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A210, .hex);
pub const GL_ALLOW_DRAW_MEM_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A211, .hex);
pub const GL_STRICT_DEPTHFUNC_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A216, .hex);
pub const GL_STRICT_LIGHTING_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A217, .hex);
pub const GL_STRICT_SCISSOR_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A218, .hex);
pub const GL_FULL_STIPPLE_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A219, .hex);
pub const GL_CLIP_NEAR_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A220, .hex);
pub const GL_CLIP_FAR_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A221, .hex);
pub const GL_WIDE_LINE_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A222, .hex);
pub const GL_BACK_NORMALS_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A223, .hex);
pub const GL_VERTEX_DATA_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A22A, .hex);
pub const GL_VERTEX_CONSISTENT_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A22B, .hex);
pub const GL_MATERIAL_SIDE_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A22C, .hex);
pub const GL_MAX_VERTEX_HINT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1A22D, .hex);
pub const GL_RELATIVE_CONIC_CURVE_TO_NV = @as(c_int, 0x1B);
pub const GL_POINT = @as(c_int, 0x1B00);
pub const GL_POINT_NV = @as(c_int, 0x1B00);
pub const GL_LINE = @as(c_int, 0x1B01);
pub const GL_LINE_NV = @as(c_int, 0x1B01);
pub const GL_FILL = @as(c_int, 0x1B02);
pub const GL_FILL_NV = @as(c_int, 0x1B02);
pub const GL_RENDER = @as(c_int, 0x1C00);
pub const GL_FEEDBACK = @as(c_int, 0x1C01);
pub const GL_SELECT = @as(c_int, 0x1C02);
pub const GL_FLAT = @as(c_int, 0x1D00);
pub const GL_SMOOTH = @as(c_int, 0x1D01);
pub const GL_KEEP = @as(c_int, 0x1E00);
pub const GL_REPLACE = @as(c_int, 0x1E01);
pub const GL_INCR = @as(c_int, 0x1E02);
pub const GL_DECR = @as(c_int, 0x1E03);
pub const GL_VENDOR = @as(c_int, 0x1F00);
pub const GL_RENDERER = @as(c_int, 0x1F01);
pub const GL_VERSION = @as(c_int, 0x1F02);
pub const GL_EXTENSIONS = @as(c_int, 0x1F03);
pub const GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = @as(c_int, 0x20);
pub const GL_EXTERNAL_STORAGE_BIT_NVX = @as(c_int, 0x2000);
pub const GL_S = @as(c_int, 0x2000);
pub const GL_FONT_NUM_GLYPH_INDICES_BIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_MULTISAMPLE_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_MULTISAMPLE_BIT_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_MULTISAMPLE_BIT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_MULTISAMPLE_BIT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT5_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_TEXCOORD2_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_T = @as(c_int, 0x2001);
pub const GL_R = @as(c_int, 0x2002);
pub const GL_Q = @as(c_int, 0x2003);
pub const GL_MODULATE = @as(c_int, 0x2100);
pub const GL_DECAL = @as(c_int, 0x2101);
pub const GL_TEXTURE_ENV_MODE = @as(c_int, 0x2200);
pub const GL_TEXTURE_ENV_COLOR = @as(c_int, 0x2201);
pub const GL_TEXTURE_ENV = @as(c_int, 0x2300);
pub const GL_EYE_LINEAR = @as(c_int, 0x2400);
pub const GL_EYE_LINEAR_NV = @as(c_int, 0x2400);
pub const GL_OBJECT_LINEAR = @as(c_int, 0x2401);
pub const GL_OBJECT_LINEAR_NV = @as(c_int, 0x2401);
pub const GL_SPHERE_MAP = @as(c_int, 0x2402);
pub const GL_TEXTURE_GEN_MODE = @as(c_int, 0x2500);
pub const GL_TEXTURE_GEN_MODE_OES = @as(c_int, 0x2500);
pub const GL_OBJECT_PLANE = @as(c_int, 0x2501);
pub const GL_EYE_PLANE = @as(c_int, 0x2502);
pub const GL_NEAREST = @as(c_int, 0x2600);
pub const GL_LINEAR = @as(c_int, 0x2601);
pub const GL_NEAREST_MIPMAP_NEAREST = @as(c_int, 0x2700);
pub const GL_LINEAR_MIPMAP_NEAREST = @as(c_int, 0x2701);
pub const GL_NEAREST_MIPMAP_LINEAR = @as(c_int, 0x2702);
pub const GL_LINEAR_MIPMAP_LINEAR = @as(c_int, 0x2703);
pub const GL_TEXTURE_MAG_FILTER = @as(c_int, 0x2800);
pub const GL_TEXTURE_MIN_FILTER = @as(c_int, 0x2801);
pub const GL_TEXTURE_WRAP_S = @as(c_int, 0x2802);
pub const GL_TEXTURE_WRAP_T = @as(c_int, 0x2803);
pub const GL_CLAMP = @as(c_int, 0x2900);
pub const GL_REPEAT = @as(c_int, 0x2901);
pub const GL_POLYGON_OFFSET_UNITS = @as(c_int, 0x2A00);
pub const GL_POLYGON_OFFSET_POINT = @as(c_int, 0x2A01);
pub const GL_POLYGON_OFFSET_POINT_NV = @as(c_int, 0x2A01);
pub const GL_POLYGON_OFFSET_LINE = @as(c_int, 0x2A02);
pub const GL_POLYGON_OFFSET_LINE_NV = @as(c_int, 0x2A02);
pub const GL_R3_G3_B2 = @as(c_int, 0x2A10);
pub const GL_V2F = @as(c_int, 0x2A20);
pub const GL_V3F = @as(c_int, 0x2A21);
pub const GL_C4UB_V2F = @as(c_int, 0x2A22);
pub const GL_C4UB_V3F = @as(c_int, 0x2A23);
pub const GL_C3F_V3F = @as(c_int, 0x2A24);
pub const GL_N3F_V3F = @as(c_int, 0x2A25);
pub const GL_C4F_N3F_V3F = @as(c_int, 0x2A26);
pub const GL_T2F_V3F = @as(c_int, 0x2A27);
pub const GL_T4F_V4F = @as(c_int, 0x2A28);
pub const GL_T2F_C4UB_V3F = @as(c_int, 0x2A29);
pub const GL_T2F_C3F_V3F = @as(c_int, 0x2A2A);
pub const GL_T2F_N3F_V3F = @as(c_int, 0x2A2B);
pub const GL_T2F_C4F_N3F_V3F = @as(c_int, 0x2A2C);
pub const GL_T4F_C4F_N3F_V4F = @as(c_int, 0x2A2D);
pub const GL_CLIP_DISTANCE0 = @as(c_int, 0x3000);
pub const GL_CLIP_DISTANCE0_APPLE = @as(c_int, 0x3000);
pub const GL_CLIP_DISTANCE0_EXT = @as(c_int, 0x3000);
pub const GL_CLIP_PLANE0 = @as(c_int, 0x3000);
pub const GL_CLIP_PLANE0_IMG = @as(c_int, 0x3000);
pub const GL_CLIP_DISTANCE1 = @as(c_int, 0x3001);
pub const GL_CLIP_DISTANCE1_APPLE = @as(c_int, 0x3001);
pub const GL_CLIP_DISTANCE1_EXT = @as(c_int, 0x3001);
pub const GL_CLIP_PLANE1 = @as(c_int, 0x3001);
pub const GL_CLIP_PLANE1_IMG = @as(c_int, 0x3001);
pub const GL_CLIP_DISTANCE2 = @as(c_int, 0x3002);
pub const GL_CLIP_DISTANCE2_APPLE = @as(c_int, 0x3002);
pub const GL_CLIP_DISTANCE2_EXT = @as(c_int, 0x3002);
pub const GL_CLIP_PLANE2 = @as(c_int, 0x3002);
pub const GL_CLIP_PLANE2_IMG = @as(c_int, 0x3002);
pub const GL_CLIP_DISTANCE3 = @as(c_int, 0x3003);
pub const GL_CLIP_DISTANCE3_APPLE = @as(c_int, 0x3003);
pub const GL_CLIP_DISTANCE3_EXT = @as(c_int, 0x3003);
pub const GL_CLIP_PLANE3 = @as(c_int, 0x3003);
pub const GL_CLIP_PLANE3_IMG = @as(c_int, 0x3003);
pub const GL_CLIP_DISTANCE4 = @as(c_int, 0x3004);
pub const GL_CLIP_DISTANCE4_APPLE = @as(c_int, 0x3004);
pub const GL_CLIP_DISTANCE4_EXT = @as(c_int, 0x3004);
pub const GL_CLIP_PLANE4 = @as(c_int, 0x3004);
pub const GL_CLIP_PLANE4_IMG = @as(c_int, 0x3004);
pub const GL_CLIP_DISTANCE5 = @as(c_int, 0x3005);
pub const GL_CLIP_DISTANCE5_APPLE = @as(c_int, 0x3005);
pub const GL_CLIP_DISTANCE5_EXT = @as(c_int, 0x3005);
pub const GL_CLIP_PLANE5 = @as(c_int, 0x3005);
pub const GL_CLIP_PLANE5_IMG = @as(c_int, 0x3005);
pub const GL_CLIP_DISTANCE6 = @as(c_int, 0x3006);
pub const GL_CLIP_DISTANCE6_APPLE = @as(c_int, 0x3006);
pub const GL_CLIP_DISTANCE6_EXT = @as(c_int, 0x3006);
pub const GL_CLIP_DISTANCE7 = @as(c_int, 0x3007);
pub const GL_CLIP_DISTANCE7_APPLE = @as(c_int, 0x3007);
pub const GL_CLIP_DISTANCE7_EXT = @as(c_int, 0x3007);
pub const GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = @as(c_int, 0x40);
pub const GL_LIGHT0 = @as(c_int, 0x4000);
pub const GL_MULTISAMPLE_BUFFER_BIT6_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const GL_TEXCOORD3_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const GL_LIGHT1 = @as(c_int, 0x4001);
pub const GL_LIGHT2 = @as(c_int, 0x4002);
pub const GL_LIGHT3 = @as(c_int, 0x4003);
pub const GL_LIGHT4 = @as(c_int, 0x4004);
pub const GL_LIGHT5 = @as(c_int, 0x4005);
pub const GL_LIGHT6 = @as(c_int, 0x4006);
pub const GL_LIGHT7 = @as(c_int, 0x4007);
pub const GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = @as(c_int, 0x80);
pub const GL_ABGR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const GL_MULTISAMPLE_BUFFER_BIT7_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const GL_TEXCOORD4_BIT_PGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const GL_CONSTANT_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8001, .hex);
pub const GL_CONSTANT_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8001, .hex);
pub const GL_ONE_MINUS_CONSTANT_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8002, .hex);
pub const GL_ONE_MINUS_CONSTANT_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8002, .hex);
pub const GL_CONSTANT_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8003, .hex);
pub const GL_CONSTANT_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8003, .hex);
pub const GL_ONE_MINUS_CONSTANT_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8004, .hex);
pub const GL_ONE_MINUS_CONSTANT_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8004, .hex);
pub const GL_BLEND_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8005, .hex);
pub const GL_BLEND_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8005, .hex);
pub const GL_FUNC_ADD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8006, .hex);
pub const GL_FUNC_ADD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8006, .hex);
pub const GL_FUNC_ADD_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8006, .hex);
pub const GL_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8007, .hex);
pub const GL_MIN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8007, .hex);
pub const GL_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8008, .hex);
pub const GL_MAX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8008, .hex);
pub const GL_BLEND_EQUATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_RGB_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_FUNC_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800A, .hex);
pub const GL_FUNC_SUBTRACT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800A, .hex);
pub const GL_FUNC_SUBTRACT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800A, .hex);
pub const GL_FUNC_REVERSE_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800B, .hex);
pub const GL_FUNC_REVERSE_SUBTRACT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800B, .hex);
pub const GL_FUNC_REVERSE_SUBTRACT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800B, .hex);
pub const GL_CMYK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800C, .hex);
pub const GL_CMYKA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800D, .hex);
pub const GL_PACK_CMYK_HINT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800E, .hex);
pub const GL_UNPACK_CMYK_HINT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800F, .hex);
pub const GL_CONVOLUTION_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8010, .hex);
pub const GL_CONVOLUTION_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8010, .hex);
pub const GL_CONVOLUTION_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8011, .hex);
pub const GL_CONVOLUTION_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8011, .hex);
pub const GL_SEPARABLE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8012, .hex);
pub const GL_SEPARABLE_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8012, .hex);
pub const GL_CONVOLUTION_BORDER_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8013, .hex);
pub const GL_CONVOLUTION_BORDER_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8013, .hex);
pub const GL_CONVOLUTION_FILTER_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8014, .hex);
pub const GL_CONVOLUTION_FILTER_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8014, .hex);
pub const GL_CONVOLUTION_FILTER_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8015, .hex);
pub const GL_CONVOLUTION_FILTER_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8015, .hex);
pub const GL_REDUCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8016, .hex);
pub const GL_REDUCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8016, .hex);
pub const GL_CONVOLUTION_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8017, .hex);
pub const GL_CONVOLUTION_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8017, .hex);
pub const GL_CONVOLUTION_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8018, .hex);
pub const GL_CONVOLUTION_WIDTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8018, .hex);
pub const GL_CONVOLUTION_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8019, .hex);
pub const GL_CONVOLUTION_HEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8019, .hex);
pub const GL_MAX_CONVOLUTION_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801A, .hex);
pub const GL_MAX_CONVOLUTION_WIDTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801A, .hex);
pub const GL_MAX_CONVOLUTION_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801B, .hex);
pub const GL_MAX_CONVOLUTION_HEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801B, .hex);
pub const GL_POST_CONVOLUTION_RED_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801C, .hex);
pub const GL_POST_CONVOLUTION_RED_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801C, .hex);
pub const GL_POST_CONVOLUTION_GREEN_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801D, .hex);
pub const GL_POST_CONVOLUTION_GREEN_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801D, .hex);
pub const GL_POST_CONVOLUTION_BLUE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801E, .hex);
pub const GL_POST_CONVOLUTION_BLUE_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801E, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801F, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801F, .hex);
pub const GL_POST_CONVOLUTION_RED_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8020, .hex);
pub const GL_POST_CONVOLUTION_RED_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8020, .hex);
pub const GL_POST_CONVOLUTION_GREEN_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8021, .hex);
pub const GL_POST_CONVOLUTION_GREEN_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8021, .hex);
pub const GL_POST_CONVOLUTION_BLUE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8022, .hex);
pub const GL_POST_CONVOLUTION_BLUE_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8022, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8023, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8023, .hex);
pub const GL_HISTOGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8024, .hex);
pub const GL_HISTOGRAM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8024, .hex);
pub const GL_PROXY_HISTOGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8025, .hex);
pub const GL_PROXY_HISTOGRAM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8025, .hex);
pub const GL_HISTOGRAM_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8026, .hex);
pub const GL_HISTOGRAM_WIDTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8026, .hex);
pub const GL_HISTOGRAM_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8027, .hex);
pub const GL_HISTOGRAM_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8027, .hex);
pub const GL_HISTOGRAM_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8028, .hex);
pub const GL_HISTOGRAM_RED_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8028, .hex);
pub const GL_HISTOGRAM_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8029, .hex);
pub const GL_HISTOGRAM_GREEN_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8029, .hex);
pub const GL_HISTOGRAM_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802A, .hex);
pub const GL_HISTOGRAM_BLUE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802A, .hex);
pub const GL_HISTOGRAM_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802B, .hex);
pub const GL_HISTOGRAM_ALPHA_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802B, .hex);
pub const GL_HISTOGRAM_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802C, .hex);
pub const GL_HISTOGRAM_LUMINANCE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802C, .hex);
pub const GL_HISTOGRAM_SINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802D, .hex);
pub const GL_HISTOGRAM_SINK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802D, .hex);
pub const GL_MINMAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802E, .hex);
pub const GL_MINMAX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802E, .hex);
pub const GL_MINMAX_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802F, .hex);
pub const GL_MINMAX_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802F, .hex);
pub const GL_MINMAX_SINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8030, .hex);
pub const GL_MINMAX_SINK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8030, .hex);
pub const GL_TABLE_TOO_LARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8031, .hex);
pub const GL_TABLE_TOO_LARGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8031, .hex);
pub const GL_UNSIGNED_BYTE_3_3_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8032, .hex);
pub const GL_UNSIGNED_BYTE_3_3_2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8032, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8033, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8033, .hex);
pub const GL_UNSIGNED_SHORT_5_5_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8034, .hex);
pub const GL_UNSIGNED_SHORT_5_5_5_1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8034, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8035, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8035, .hex);
pub const GL_UNSIGNED_INT_10_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8036, .hex);
pub const GL_UNSIGNED_INT_10_10_10_2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8036, .hex);
pub const GL_POLYGON_OFFSET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8037, .hex);
pub const GL_POLYGON_OFFSET_FILL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8037, .hex);
pub const GL_POLYGON_OFFSET_FACTOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8038, .hex);
pub const GL_POLYGON_OFFSET_FACTOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8038, .hex);
pub const GL_POLYGON_OFFSET_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8039, .hex);
pub const GL_RESCALE_NORMAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803A, .hex);
pub const GL_RESCALE_NORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803A, .hex);
pub const GL_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803B, .hex);
pub const GL_ALPHA4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803B, .hex);
pub const GL_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803C, .hex);
pub const GL_ALPHA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803C, .hex);
pub const GL_ALPHA8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803C, .hex);
pub const GL_ALPHA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803D, .hex);
pub const GL_ALPHA12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803D, .hex);
pub const GL_ALPHA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803E, .hex);
pub const GL_ALPHA16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803E, .hex);
pub const GL_LUMINANCE4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803F, .hex);
pub const GL_LUMINANCE4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803F, .hex);
pub const GL_LUMINANCE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8040, .hex);
pub const GL_LUMINANCE8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8040, .hex);
pub const GL_LUMINANCE8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8040, .hex);
pub const GL_LUMINANCE12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8041, .hex);
pub const GL_LUMINANCE12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8041, .hex);
pub const GL_LUMINANCE16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8042, .hex);
pub const GL_LUMINANCE16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8042, .hex);
pub const GL_LUMINANCE4_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8043, .hex);
pub const GL_LUMINANCE4_ALPHA4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8043, .hex);
pub const GL_LUMINANCE4_ALPHA4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8043, .hex);
pub const GL_LUMINANCE6_ALPHA2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8044, .hex);
pub const GL_LUMINANCE6_ALPHA2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8044, .hex);
pub const GL_LUMINANCE8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8045, .hex);
pub const GL_LUMINANCE8_ALPHA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8045, .hex);
pub const GL_LUMINANCE8_ALPHA8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8045, .hex);
pub const GL_LUMINANCE12_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8046, .hex);
pub const GL_LUMINANCE12_ALPHA4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8046, .hex);
pub const GL_LUMINANCE12_ALPHA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8047, .hex);
pub const GL_LUMINANCE12_ALPHA12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8047, .hex);
pub const GL_LUMINANCE16_ALPHA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8048, .hex);
pub const GL_LUMINANCE16_ALPHA16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8048, .hex);
pub const GL_INTENSITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8049, .hex);
pub const GL_INTENSITY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8049, .hex);
pub const GL_INTENSITY4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804A, .hex);
pub const GL_INTENSITY4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804A, .hex);
pub const GL_INTENSITY8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804B, .hex);
pub const GL_INTENSITY8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804B, .hex);
pub const GL_INTENSITY12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804C, .hex);
pub const GL_INTENSITY12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804C, .hex);
pub const GL_INTENSITY16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804D, .hex);
pub const GL_INTENSITY16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804D, .hex);
pub const GL_RGB2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804E, .hex);
pub const GL_RGB4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804F, .hex);
pub const GL_RGB4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804F, .hex);
pub const GL_RGB5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8050, .hex);
pub const GL_RGB5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8050, .hex);
pub const GL_RGB8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8051, .hex);
pub const GL_RGB8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8051, .hex);
pub const GL_RGB8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8051, .hex);
pub const GL_RGB10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8052, .hex);
pub const GL_RGB10_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8052, .hex);
pub const GL_RGB12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8053, .hex);
pub const GL_RGB12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8053, .hex);
pub const GL_RGB16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8054, .hex);
pub const GL_RGB16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8054, .hex);
pub const GL_RGBA2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8055, .hex);
pub const GL_RGBA2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8055, .hex);
pub const GL_RGBA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8056, .hex);
pub const GL_RGBA4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8056, .hex);
pub const GL_RGBA4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8056, .hex);
pub const GL_RGB5_A1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8057, .hex);
pub const GL_RGB5_A1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8057, .hex);
pub const GL_RGB5_A1_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8057, .hex);
pub const GL_RGBA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8058, .hex);
pub const GL_RGBA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8058, .hex);
pub const GL_RGBA8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8058, .hex);
pub const GL_RGB10_A2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8059, .hex);
pub const GL_RGB10_A2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8059, .hex);
pub const GL_RGBA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805A, .hex);
pub const GL_RGBA12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805A, .hex);
pub const GL_RGBA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805B, .hex);
pub const GL_RGBA16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805B, .hex);
pub const GL_TEXTURE_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805C, .hex);
pub const GL_TEXTURE_RED_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805C, .hex);
pub const GL_TEXTURE_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805D, .hex);
pub const GL_TEXTURE_GREEN_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805D, .hex);
pub const GL_TEXTURE_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805E, .hex);
pub const GL_TEXTURE_BLUE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805E, .hex);
pub const GL_TEXTURE_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805F, .hex);
pub const GL_TEXTURE_ALPHA_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805F, .hex);
pub const GL_TEXTURE_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8060, .hex);
pub const GL_TEXTURE_LUMINANCE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8060, .hex);
pub const GL_TEXTURE_INTENSITY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8061, .hex);
pub const GL_TEXTURE_INTENSITY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8061, .hex);
pub const GL_REPLACE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8062, .hex);
pub const GL_PROXY_TEXTURE_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8063, .hex);
pub const GL_PROXY_TEXTURE_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8063, .hex);
pub const GL_PROXY_TEXTURE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8064, .hex);
pub const GL_PROXY_TEXTURE_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8064, .hex);
pub const GL_TEXTURE_TOO_LARGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8065, .hex);
pub const GL_TEXTURE_PRIORITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8066, .hex);
pub const GL_TEXTURE_PRIORITY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8066, .hex);
pub const GL_TEXTURE_RESIDENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8067, .hex);
pub const GL_TEXTURE_RESIDENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8067, .hex);
pub const GL_TEXTURE_1D_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8068, .hex);
pub const GL_TEXTURE_BINDING_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8068, .hex);
pub const GL_TEXTURE_2D_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8069, .hex);
pub const GL_TEXTURE_BINDING_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8069, .hex);
pub const GL_TEXTURE_3D_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A, .hex);
pub const GL_TEXTURE_3D_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A, .hex);
pub const GL_TEXTURE_BINDING_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A, .hex);
pub const GL_TEXTURE_BINDING_3D_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A, .hex);
pub const GL_PACK_SKIP_IMAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806B, .hex);
pub const GL_PACK_SKIP_IMAGES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806B, .hex);
pub const GL_PACK_IMAGE_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806C, .hex);
pub const GL_PACK_IMAGE_HEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806C, .hex);
pub const GL_UNPACK_SKIP_IMAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806D, .hex);
pub const GL_UNPACK_SKIP_IMAGES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806D, .hex);
pub const GL_UNPACK_IMAGE_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806E, .hex);
pub const GL_UNPACK_IMAGE_HEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806E, .hex);
pub const GL_TEXTURE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806F, .hex);
pub const GL_TEXTURE_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806F, .hex);
pub const GL_TEXTURE_3D_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806F, .hex);
pub const GL_PROXY_TEXTURE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8070, .hex);
pub const GL_PROXY_TEXTURE_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8070, .hex);
pub const GL_TEXTURE_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8071, .hex);
pub const GL_TEXTURE_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8071, .hex);
pub const GL_TEXTURE_WRAP_R = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8072, .hex);
pub const GL_TEXTURE_WRAP_R_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8072, .hex);
pub const GL_TEXTURE_WRAP_R_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8072, .hex);
pub const GL_MAX_3D_TEXTURE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8073, .hex);
pub const GL_MAX_3D_TEXTURE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8073, .hex);
pub const GL_MAX_3D_TEXTURE_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8073, .hex);
pub const GL_VERTEX_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8074, .hex);
pub const GL_VERTEX_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8074, .hex);
pub const GL_VERTEX_ARRAY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8074, .hex);
pub const GL_NORMAL_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8075, .hex);
pub const GL_NORMAL_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8075, .hex);
pub const GL_COLOR_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8076, .hex);
pub const GL_COLOR_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8076, .hex);
pub const GL_INDEX_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8077, .hex);
pub const GL_INDEX_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8077, .hex);
pub const GL_TEXTURE_COORD_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8078, .hex);
pub const GL_TEXTURE_COORD_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8078, .hex);
pub const GL_EDGE_FLAG_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8079, .hex);
pub const GL_EDGE_FLAG_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8079, .hex);
pub const GL_VERTEX_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807A, .hex);
pub const GL_VERTEX_ARRAY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807A, .hex);
pub const GL_VERTEX_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807B, .hex);
pub const GL_VERTEX_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807B, .hex);
pub const GL_VERTEX_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807C, .hex);
pub const GL_VERTEX_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807C, .hex);
pub const GL_VERTEX_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807D, .hex);
pub const GL_NORMAL_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807E, .hex);
pub const GL_NORMAL_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807E, .hex);
pub const GL_NORMAL_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807F, .hex);
pub const GL_NORMAL_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807F, .hex);
pub const GL_NORMAL_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8080, .hex);
pub const GL_COLOR_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8081, .hex);
pub const GL_COLOR_ARRAY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8081, .hex);
pub const GL_COLOR_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8082, .hex);
pub const GL_COLOR_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8082, .hex);
pub const GL_COLOR_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8083, .hex);
pub const GL_COLOR_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8083, .hex);
pub const GL_COLOR_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8084, .hex);
pub const GL_INDEX_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8085, .hex);
pub const GL_INDEX_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8085, .hex);
pub const GL_INDEX_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8086, .hex);
pub const GL_INDEX_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8086, .hex);
pub const GL_INDEX_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8087, .hex);
pub const GL_TEXTURE_COORD_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8088, .hex);
pub const GL_TEXTURE_COORD_ARRAY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8088, .hex);
pub const GL_TEXTURE_COORD_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8089, .hex);
pub const GL_TEXTURE_COORD_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8089, .hex);
pub const GL_TEXTURE_COORD_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808A, .hex);
pub const GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808A, .hex);
pub const GL_TEXTURE_COORD_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808B, .hex);
pub const GL_EDGE_FLAG_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808C, .hex);
pub const GL_EDGE_FLAG_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808C, .hex);
pub const GL_EDGE_FLAG_ARRAY_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808D, .hex);
pub const GL_VERTEX_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808E, .hex);
pub const GL_VERTEX_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808E, .hex);
pub const GL_NORMAL_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808F, .hex);
pub const GL_NORMAL_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808F, .hex);
pub const GL_COLOR_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8090, .hex);
pub const GL_COLOR_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8090, .hex);
pub const GL_INDEX_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8091, .hex);
pub const GL_INDEX_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8091, .hex);
pub const GL_TEXTURE_COORD_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8092, .hex);
pub const GL_TEXTURE_COORD_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8092, .hex);
pub const GL_EDGE_FLAG_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8093, .hex);
pub const GL_EDGE_FLAG_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8093, .hex);
pub const GL_INTERLACE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8094, .hex);
pub const GL_DETAIL_TEXTURE_2D_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8095, .hex);
pub const GL_DETAIL_TEXTURE_2D_BINDING_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8096, .hex);
pub const GL_LINEAR_DETAIL_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8097, .hex);
pub const GL_LINEAR_DETAIL_ALPHA_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8098, .hex);
pub const GL_LINEAR_DETAIL_COLOR_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8099, .hex);
pub const GL_DETAIL_TEXTURE_LEVEL_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809A, .hex);
pub const GL_DETAIL_TEXTURE_MODE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809B, .hex);
pub const GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809C, .hex);
pub const GL_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D, .hex);
pub const GL_MULTISAMPLE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D, .hex);
pub const GL_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D, .hex);
pub const GL_MULTISAMPLE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D, .hex);
pub const GL_SAMPLE_ALPHA_TO_COVERAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E, .hex);
pub const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E, .hex);
pub const GL_SAMPLE_ALPHA_TO_MASK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E, .hex);
pub const GL_SAMPLE_ALPHA_TO_MASK_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E, .hex);
pub const GL_SAMPLE_ALPHA_TO_ONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F, .hex);
pub const GL_SAMPLE_ALPHA_TO_ONE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F, .hex);
pub const GL_SAMPLE_ALPHA_TO_ONE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F, .hex);
pub const GL_SAMPLE_ALPHA_TO_ONE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F, .hex);
pub const GL_SAMPLE_COVERAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A0, .hex);
pub const GL_SAMPLE_COVERAGE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A0, .hex);
pub const GL_SAMPLE_MASK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A0, .hex);
pub const GL_SAMPLE_MASK_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A0, .hex);
pub const GL_1PASS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A1, .hex);
pub const GL_1PASS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A1, .hex);
pub const GL_2PASS_0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A2, .hex);
pub const GL_2PASS_0_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A2, .hex);
pub const GL_2PASS_1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A3, .hex);
pub const GL_2PASS_1_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A3, .hex);
pub const GL_4PASS_0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A4, .hex);
pub const GL_4PASS_0_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A4, .hex);
pub const GL_4PASS_1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A5, .hex);
pub const GL_4PASS_1_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A5, .hex);
pub const GL_4PASS_2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A6, .hex);
pub const GL_4PASS_2_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A6, .hex);
pub const GL_4PASS_3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A7, .hex);
pub const GL_4PASS_3_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A7, .hex);
pub const GL_SAMPLE_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A8, .hex);
pub const GL_SAMPLE_BUFFERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A8, .hex);
pub const GL_SAMPLE_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A8, .hex);
pub const GL_SAMPLE_BUFFERS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A8, .hex);
pub const GL_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A9, .hex);
pub const GL_SAMPLES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A9, .hex);
pub const GL_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A9, .hex);
pub const GL_SAMPLES_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A9, .hex);
pub const GL_SAMPLE_COVERAGE_VALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AA, .hex);
pub const GL_SAMPLE_COVERAGE_VALUE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AA, .hex);
pub const GL_SAMPLE_MASK_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AA, .hex);
pub const GL_SAMPLE_MASK_VALUE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AA, .hex);
pub const GL_SAMPLE_COVERAGE_INVERT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB, .hex);
pub const GL_SAMPLE_COVERAGE_INVERT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB, .hex);
pub const GL_SAMPLE_MASK_INVERT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB, .hex);
pub const GL_SAMPLE_MASK_INVERT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB, .hex);
pub const GL_SAMPLE_PATTERN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AC, .hex);
pub const GL_SAMPLE_PATTERN_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AC, .hex);
pub const GL_LINEAR_SHARPEN_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AD, .hex);
pub const GL_LINEAR_SHARPEN_ALPHA_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AE, .hex);
pub const GL_LINEAR_SHARPEN_COLOR_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AF, .hex);
pub const GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B0, .hex);
pub const GL_COLOR_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B1, .hex);
pub const GL_COLOR_MATRIX_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B1, .hex);
pub const GL_COLOR_MATRIX_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B2, .hex);
pub const GL_COLOR_MATRIX_STACK_DEPTH_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B2, .hex);
pub const GL_MAX_COLOR_MATRIX_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B3, .hex);
pub const GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B3, .hex);
pub const GL_POST_COLOR_MATRIX_RED_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B4, .hex);
pub const GL_POST_COLOR_MATRIX_RED_SCALE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B4, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B5, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B5, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B6, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B6, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B7, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B7, .hex);
pub const GL_POST_COLOR_MATRIX_RED_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B8, .hex);
pub const GL_POST_COLOR_MATRIX_RED_BIAS_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B8, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B9, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B9, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BA, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BA, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BB, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BB, .hex);
pub const GL_TEXTURE_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BC, .hex);
pub const GL_PROXY_TEXTURE_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BD, .hex);
pub const GL_TEXTURE_ENV_BIAS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BE, .hex);
pub const GL_SHADOW_AMBIENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BF, .hex);
pub const GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BF, .hex);
pub const GL_BLEND_DST_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C8, .hex);
pub const GL_BLEND_DST_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C8, .hex);
pub const GL_BLEND_DST_RGB_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C8, .hex);
pub const GL_BLEND_SRC_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C9, .hex);
pub const GL_BLEND_SRC_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C9, .hex);
pub const GL_BLEND_SRC_RGB_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C9, .hex);
pub const GL_BLEND_DST_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CA, .hex);
pub const GL_BLEND_DST_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CA, .hex);
pub const GL_BLEND_DST_ALPHA_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CA, .hex);
pub const GL_BLEND_SRC_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CB, .hex);
pub const GL_BLEND_SRC_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CB, .hex);
pub const GL_BLEND_SRC_ALPHA_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CB, .hex);
pub const GL_422_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CC, .hex);
pub const GL_422_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CD, .hex);
pub const GL_422_AVERAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CE, .hex);
pub const GL_422_REV_AVERAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CF, .hex);
pub const GL_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D0, .hex);
pub const GL_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D0, .hex);
pub const GL_POST_CONVOLUTION_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D1, .hex);
pub const GL_POST_CONVOLUTION_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D1, .hex);
pub const GL_POST_COLOR_MATRIX_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D2, .hex);
pub const GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D2, .hex);
pub const GL_PROXY_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D3, .hex);
pub const GL_PROXY_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D3, .hex);
pub const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D4, .hex);
pub const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D4, .hex);
pub const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D5, .hex);
pub const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D5, .hex);
pub const GL_COLOR_TABLE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D6, .hex);
pub const GL_COLOR_TABLE_SCALE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D6, .hex);
pub const GL_COLOR_TABLE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D7, .hex);
pub const GL_COLOR_TABLE_BIAS_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D7, .hex);
pub const GL_COLOR_TABLE_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D8, .hex);
pub const GL_COLOR_TABLE_FORMAT_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D8, .hex);
pub const GL_COLOR_TABLE_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D9, .hex);
pub const GL_COLOR_TABLE_WIDTH_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D9, .hex);
pub const GL_COLOR_TABLE_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DA, .hex);
pub const GL_COLOR_TABLE_RED_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DA, .hex);
pub const GL_COLOR_TABLE_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DB, .hex);
pub const GL_COLOR_TABLE_GREEN_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DB, .hex);
pub const GL_COLOR_TABLE_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DC, .hex);
pub const GL_COLOR_TABLE_BLUE_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DC, .hex);
pub const GL_COLOR_TABLE_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DD, .hex);
pub const GL_COLOR_TABLE_ALPHA_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DD, .hex);
pub const GL_COLOR_TABLE_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DE, .hex);
pub const GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DE, .hex);
pub const GL_COLOR_TABLE_INTENSITY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DF, .hex);
pub const GL_COLOR_TABLE_INTENSITY_SIZE_SGI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DF, .hex);
pub const GL_BGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E0, .hex);
pub const GL_BGR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E0, .hex);
pub const GL_BGRA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E1, .hex);
pub const GL_BGRA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E1, .hex);
pub const GL_BGRA_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E1, .hex);
pub const GL_COLOR_INDEX1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E2, .hex);
pub const GL_COLOR_INDEX2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E3, .hex);
pub const GL_COLOR_INDEX4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E4, .hex);
pub const GL_COLOR_INDEX8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E5, .hex);
pub const GL_COLOR_INDEX12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E6, .hex);
pub const GL_COLOR_INDEX16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E7, .hex);
pub const GL_MAX_ELEMENTS_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E8, .hex);
pub const GL_MAX_ELEMENTS_VERTICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E8, .hex);
pub const GL_MAX_ELEMENTS_INDICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E9, .hex);
pub const GL_MAX_ELEMENTS_INDICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E9, .hex);
pub const GL_PHONG_WIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EA, .hex);
pub const GL_PHONG_HINT_WIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EB, .hex);
pub const GL_FOG_SPECULAR_TEXTURE_WIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EC, .hex);
pub const GL_TEXTURE_INDEX_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80ED, .hex);
pub const GL_PARAMETER_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EE, .hex);
pub const GL_PARAMETER_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EE, .hex);
pub const GL_PARAMETER_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EF, .hex);
pub const GL_PARAMETER_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80EF, .hex);
pub const GL_CLIP_VOLUME_CLIPPING_HINT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80F0, .hex);
pub const GL_DUAL_ALPHA4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8110, .hex);
pub const GL_DUAL_ALPHA8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8111, .hex);
pub const GL_DUAL_ALPHA12_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8112, .hex);
pub const GL_DUAL_ALPHA16_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8113, .hex);
pub const GL_DUAL_LUMINANCE4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8114, .hex);
pub const GL_DUAL_LUMINANCE8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8115, .hex);
pub const GL_DUAL_LUMINANCE12_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8116, .hex);
pub const GL_DUAL_LUMINANCE16_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8117, .hex);
pub const GL_DUAL_INTENSITY4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8118, .hex);
pub const GL_DUAL_INTENSITY8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8119, .hex);
pub const GL_DUAL_INTENSITY12_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811A, .hex);
pub const GL_DUAL_INTENSITY16_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811B, .hex);
pub const GL_DUAL_LUMINANCE_ALPHA4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811C, .hex);
pub const GL_DUAL_LUMINANCE_ALPHA8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811D, .hex);
pub const GL_QUAD_ALPHA4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811E, .hex);
pub const GL_QUAD_ALPHA8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811F, .hex);
pub const GL_QUAD_LUMINANCE4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8120, .hex);
pub const GL_QUAD_LUMINANCE8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8121, .hex);
pub const GL_QUAD_INTENSITY4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8122, .hex);
pub const GL_QUAD_INTENSITY8_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8123, .hex);
pub const GL_DUAL_TEXTURE_SELECT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8124, .hex);
pub const GL_QUAD_TEXTURE_SELECT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8125, .hex);
pub const GL_POINT_SIZE_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8126, .hex);
pub const GL_POINT_SIZE_MIN_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8126, .hex);
pub const GL_POINT_SIZE_MIN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8126, .hex);
pub const GL_POINT_SIZE_MIN_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8126, .hex);
pub const GL_POINT_SIZE_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8127, .hex);
pub const GL_POINT_SIZE_MAX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8127, .hex);
pub const GL_POINT_SIZE_MAX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8127, .hex);
pub const GL_POINT_SIZE_MAX_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8127, .hex);
pub const GL_POINT_FADE_THRESHOLD_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8128, .hex);
pub const GL_POINT_FADE_THRESHOLD_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8128, .hex);
pub const GL_POINT_FADE_THRESHOLD_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8128, .hex);
pub const GL_POINT_FADE_THRESHOLD_SIZE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8128, .hex);
pub const GL_DISTANCE_ATTENUATION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8129, .hex);
pub const GL_DISTANCE_ATTENUATION_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8129, .hex);
pub const GL_POINT_DISTANCE_ATTENUATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8129, .hex);
pub const GL_POINT_DISTANCE_ATTENUATION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8129, .hex);
pub const GL_FOG_FUNC_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812A, .hex);
pub const GL_FOG_FUNC_POINTS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812B, .hex);
pub const GL_MAX_FOG_FUNC_POINTS_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812C, .hex);
pub const GL_CLAMP_TO_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_CLAMP_TO_BORDER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_CLAMP_TO_BORDER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_CLAMP_TO_BORDER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_CLAMP_TO_BORDER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_CLAMP_TO_BORDER_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812E, .hex);
pub const GL_CLAMP_TO_EDGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812F, .hex);
pub const GL_CLAMP_TO_EDGE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812F, .hex);
pub const GL_PACK_SKIP_VOLUMES_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8130, .hex);
pub const GL_PACK_IMAGE_DEPTH_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8131, .hex);
pub const GL_UNPACK_SKIP_VOLUMES_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8132, .hex);
pub const GL_UNPACK_IMAGE_DEPTH_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8133, .hex);
pub const GL_TEXTURE_4D_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8134, .hex);
pub const GL_PROXY_TEXTURE_4D_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8135, .hex);
pub const GL_TEXTURE_4DSIZE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8136, .hex);
pub const GL_TEXTURE_WRAP_Q_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8137, .hex);
pub const GL_MAX_4D_TEXTURE_SIZE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8138, .hex);
pub const GL_PIXEL_TEX_GEN_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8139, .hex);
pub const GL_TEXTURE_MIN_LOD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813A, .hex);
pub const GL_TEXTURE_MIN_LOD_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813A, .hex);
pub const GL_TEXTURE_MAX_LOD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813B, .hex);
pub const GL_TEXTURE_MAX_LOD_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813B, .hex);
pub const GL_TEXTURE_BASE_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813C, .hex);
pub const GL_TEXTURE_BASE_LEVEL_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813C, .hex);
pub const GL_TEXTURE_MAX_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813D, .hex);
pub const GL_TEXTURE_MAX_LEVEL_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813D, .hex);
pub const GL_TEXTURE_MAX_LEVEL_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813D, .hex);
pub const GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813E, .hex);
pub const GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813F, .hex);
pub const GL_PIXEL_TILE_WIDTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8140, .hex);
pub const GL_PIXEL_TILE_HEIGHT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8141, .hex);
pub const GL_PIXEL_TILE_GRID_WIDTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8142, .hex);
pub const GL_PIXEL_TILE_GRID_HEIGHT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8143, .hex);
pub const GL_PIXEL_TILE_GRID_DEPTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8144, .hex);
pub const GL_PIXEL_TILE_CACHE_SIZE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8145, .hex);
pub const GL_FILTER4_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8146, .hex);
pub const GL_TEXTURE_FILTER4_SIZE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8147, .hex);
pub const GL_SPRITE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8148, .hex);
pub const GL_SPRITE_MODE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8149, .hex);
pub const GL_SPRITE_AXIS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814A, .hex);
pub const GL_SPRITE_TRANSLATION_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814B, .hex);
pub const GL_SPRITE_AXIAL_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814C, .hex);
pub const GL_SPRITE_OBJECT_ALIGNED_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814D, .hex);
pub const GL_SPRITE_EYE_ALIGNED_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814E, .hex);
pub const GL_TEXTURE_4D_BINDING_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x814F, .hex);
pub const GL_IGNORE_BORDER_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8150, .hex);
pub const GL_CONSTANT_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8151, .hex);
pub const GL_CONSTANT_BORDER_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8151, .hex);
pub const GL_REPLICATE_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8153, .hex);
pub const GL_REPLICATE_BORDER_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8153, .hex);
pub const GL_CONVOLUTION_BORDER_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8154, .hex);
pub const GL_CONVOLUTION_BORDER_COLOR_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8154, .hex);
pub const GL_IMAGE_SCALE_X_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8155, .hex);
pub const GL_IMAGE_SCALE_Y_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8156, .hex);
pub const GL_IMAGE_TRANSLATE_X_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8157, .hex);
pub const GL_IMAGE_TRANSLATE_Y_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8158, .hex);
pub const GL_IMAGE_ROTATE_ANGLE_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8159, .hex);
pub const GL_IMAGE_ROTATE_ORIGIN_X_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815A, .hex);
pub const GL_IMAGE_ROTATE_ORIGIN_Y_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815B, .hex);
pub const GL_IMAGE_MAG_FILTER_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815C, .hex);
pub const GL_IMAGE_MIN_FILTER_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815D, .hex);
pub const GL_IMAGE_CUBIC_WEIGHT_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815E, .hex);
pub const GL_CUBIC_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x815F, .hex);
pub const GL_AVERAGE_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8160, .hex);
pub const GL_IMAGE_TRANSFORM_2D_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8161, .hex);
pub const GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8162, .hex);
pub const GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8163, .hex);
pub const GL_OCCLUSION_TEST_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8165, .hex);
pub const GL_OCCLUSION_TEST_RESULT_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8166, .hex);
pub const GL_TEXTURE_LIGHTING_MODE_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8167, .hex);
pub const GL_TEXTURE_POST_SPECULAR_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8168, .hex);
pub const GL_TEXTURE_PRE_SPECULAR_HP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8169, .hex);
pub const GL_LINEAR_CLIPMAP_LINEAR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8170, .hex);
pub const GL_TEXTURE_CLIPMAP_CENTER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8171, .hex);
pub const GL_TEXTURE_CLIPMAP_FRAME_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8172, .hex);
pub const GL_TEXTURE_CLIPMAP_OFFSET_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8173, .hex);
pub const GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8174, .hex);
pub const GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8175, .hex);
pub const GL_TEXTURE_CLIPMAP_DEPTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8176, .hex);
pub const GL_MAX_CLIPMAP_DEPTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8177, .hex);
pub const GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8178, .hex);
pub const GL_POST_TEXTURE_FILTER_BIAS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8179, .hex);
pub const GL_POST_TEXTURE_FILTER_SCALE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817A, .hex);
pub const GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817B, .hex);
pub const GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817C, .hex);
pub const GL_REFERENCE_PLANE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817D, .hex);
pub const GL_REFERENCE_PLANE_EQUATION_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817E, .hex);
pub const GL_IR_INSTRUMENT1_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x817F, .hex);
pub const GL_INSTRUMENT_BUFFER_POINTER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8180, .hex);
pub const GL_INSTRUMENT_MEASUREMENTS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8181, .hex);
pub const GL_LIST_PRIORITY_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8182, .hex);
pub const GL_CALLIGRAPHIC_FRAGMENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8183, .hex);
pub const GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8184, .hex);
pub const GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8185, .hex);
pub const GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8186, .hex);
pub const GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8187, .hex);
pub const GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8188, .hex);
pub const GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8189, .hex);
pub const GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818A, .hex);
pub const GL_FRAMEZOOM_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818B, .hex);
pub const GL_FRAMEZOOM_FACTOR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818C, .hex);
pub const GL_MAX_FRAMEZOOM_FACTOR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818D, .hex);
pub const GL_TEXTURE_LOD_BIAS_S_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818E, .hex);
pub const GL_TEXTURE_LOD_BIAS_T_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x818F, .hex);
pub const GL_TEXTURE_LOD_BIAS_R_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8190, .hex);
pub const GL_GENERATE_MIPMAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8191, .hex);
pub const GL_GENERATE_MIPMAP_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8191, .hex);
pub const GL_GENERATE_MIPMAP_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8192, .hex);
pub const GL_GENERATE_MIPMAP_HINT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8192, .hex);
pub const GL_GEOMETRY_DEFORMATION_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8194, .hex);
pub const GL_TEXTURE_DEFORMATION_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8195, .hex);
pub const GL_DEFORMATIONS_MASK_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8196, .hex);
pub const GL_MAX_DEFORMATION_ORDER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8197, .hex);
pub const GL_FOG_OFFSET_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8198, .hex);
pub const GL_FOG_OFFSET_VALUE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8199, .hex);
pub const GL_TEXTURE_COMPARE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x819A, .hex);
pub const GL_TEXTURE_COMPARE_OPERATOR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x819B, .hex);
pub const GL_TEXTURE_LEQUAL_R_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x819C, .hex);
pub const GL_TEXTURE_GEQUAL_R_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x819D, .hex);
pub const GL_DEPTH_COMPONENT16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A5, .hex);
pub const GL_DEPTH_COMPONENT16_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A5, .hex);
pub const GL_DEPTH_COMPONENT16_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A5, .hex);
pub const GL_DEPTH_COMPONENT16_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A5, .hex);
pub const GL_DEPTH_COMPONENT24 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A6, .hex);
pub const GL_DEPTH_COMPONENT24_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A6, .hex);
pub const GL_DEPTH_COMPONENT24_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A6, .hex);
pub const GL_DEPTH_COMPONENT24_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A6, .hex);
pub const GL_DEPTH_COMPONENT32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A7, .hex);
pub const GL_DEPTH_COMPONENT32_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A7, .hex);
pub const GL_DEPTH_COMPONENT32_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A7, .hex);
pub const GL_DEPTH_COMPONENT32_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A7, .hex);
pub const GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A8, .hex);
pub const GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A9, .hex);
pub const GL_CULL_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AA, .hex);
pub const GL_CULL_VERTEX_EYE_POSITION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AB, .hex);
pub const GL_CULL_VERTEX_OBJECT_POSITION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AC, .hex);
pub const GL_IUI_V2F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AD, .hex);
pub const GL_IUI_V3F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AE, .hex);
pub const GL_IUI_N3F_V2F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81AF, .hex);
pub const GL_IUI_N3F_V3F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B0, .hex);
pub const GL_T2F_IUI_V2F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B1, .hex);
pub const GL_T2F_IUI_V3F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B2, .hex);
pub const GL_T2F_IUI_N3F_V2F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B3, .hex);
pub const GL_T2F_IUI_N3F_V3F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B4, .hex);
pub const GL_INDEX_TEST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B5, .hex);
pub const GL_INDEX_TEST_FUNC_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B6, .hex);
pub const GL_INDEX_TEST_REF_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B7, .hex);
pub const GL_INDEX_MATERIAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B8, .hex);
pub const GL_INDEX_MATERIAL_PARAMETER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81B9, .hex);
pub const GL_INDEX_MATERIAL_FACE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81BA, .hex);
pub const GL_YCRCB_422_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81BB, .hex);
pub const GL_YCRCB_444_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81BC, .hex);
pub const GL_WRAP_BORDER_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D4, .hex);
pub const GL_UNPACK_CONSTANT_DATA_SUNX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D5, .hex);
pub const GL_TEXTURE_CONSTANT_DATA_SUNX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D6, .hex);
pub const GL_TRIANGLE_LIST_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D7, .hex);
pub const GL_REPLACEMENT_CODE_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D8, .hex);
pub const GL_GLOBAL_ALPHA_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81D9, .hex);
pub const GL_GLOBAL_ALPHA_FACTOR_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81DA, .hex);
pub const GL_TEXTURE_COLOR_WRITEMASK_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81EF, .hex);
pub const GL_EYE_DISTANCE_TO_POINT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F0, .hex);
pub const GL_OBJECT_DISTANCE_TO_POINT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F1, .hex);
pub const GL_EYE_DISTANCE_TO_LINE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F2, .hex);
pub const GL_OBJECT_DISTANCE_TO_LINE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F3, .hex);
pub const GL_EYE_POINT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F4, .hex);
pub const GL_OBJECT_POINT_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F5, .hex);
pub const GL_EYE_LINE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F6, .hex);
pub const GL_OBJECT_LINE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F7, .hex);
pub const GL_LIGHT_MODEL_COLOR_CONTROL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F8, .hex);
pub const GL_LIGHT_MODEL_COLOR_CONTROL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F8, .hex);
pub const GL_SINGLE_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F9, .hex);
pub const GL_SINGLE_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F9, .hex);
pub const GL_SEPARATE_SPECULAR_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81FA, .hex);
pub const GL_SEPARATE_SPECULAR_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81FA, .hex);
pub const GL_SHARED_TEXTURE_PALETTE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81FB, .hex);
pub const GL_TEXT_FRAGMENT_SHADER_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8200, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8210, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8210, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8211, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8211, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8212, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8213, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8214, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8215, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8216, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8217, .hex);
pub const GL_FRAMEBUFFER_DEFAULT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8218, .hex);
pub const GL_FRAMEBUFFER_UNDEFINED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8219, .hex);
pub const GL_FRAMEBUFFER_UNDEFINED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8219, .hex);
pub const GL_DEPTH_STENCIL_ATTACHMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821A, .hex);
pub const GL_MAJOR_VERSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821B, .hex);
pub const GL_MINOR_VERSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821C, .hex);
pub const GL_NUM_EXTENSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821D, .hex);
pub const GL_CONTEXT_FLAGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821E, .hex);
pub const GL_BUFFER_IMMUTABLE_STORAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821F, .hex);
pub const GL_BUFFER_IMMUTABLE_STORAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x821F, .hex);
pub const GL_BUFFER_STORAGE_FLAGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8220, .hex);
pub const GL_BUFFER_STORAGE_FLAGS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8220, .hex);
pub const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8221, .hex);
pub const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8221, .hex);
pub const GL_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8222, .hex);
pub const GL_COMPRESSED_RED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8225, .hex);
pub const GL_COMPRESSED_RG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8226, .hex);
pub const GL_RG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8227, .hex);
pub const GL_RG_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8227, .hex);
pub const GL_RG_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8228, .hex);
pub const GL_R8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8229, .hex);
pub const GL_R8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8229, .hex);
pub const GL_R16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822A, .hex);
pub const GL_R16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822A, .hex);
pub const GL_RG8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822B, .hex);
pub const GL_RG8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822B, .hex);
pub const GL_RG16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822C, .hex);
pub const GL_RG16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822C, .hex);
pub const GL_R16F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822D, .hex);
pub const GL_R16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822D, .hex);
pub const GL_R32F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822E, .hex);
pub const GL_R32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822E, .hex);
pub const GL_RG16F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822F, .hex);
pub const GL_RG16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x822F, .hex);
pub const GL_RG32F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8230, .hex);
pub const GL_RG32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8230, .hex);
pub const GL_R8I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8231, .hex);
pub const GL_R8UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8232, .hex);
pub const GL_R16I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8233, .hex);
pub const GL_R16UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8234, .hex);
pub const GL_R32I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8235, .hex);
pub const GL_R32UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8236, .hex);
pub const GL_RG8I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8237, .hex);
pub const GL_RG8UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8238, .hex);
pub const GL_RG16I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8239, .hex);
pub const GL_RG16UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x823A, .hex);
pub const GL_RG32I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x823B, .hex);
pub const GL_RG32UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x823C, .hex);
pub const GL_SYNC_CL_EVENT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8240, .hex);
pub const GL_SYNC_CL_EVENT_COMPLETE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8241, .hex);
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8242, .hex);
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8242, .hex);
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8242, .hex);
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8243, .hex);
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8243, .hex);
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8243, .hex);
pub const GL_DEBUG_CALLBACK_FUNCTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8244, .hex);
pub const GL_DEBUG_CALLBACK_FUNCTION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8244, .hex);
pub const GL_DEBUG_CALLBACK_FUNCTION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8244, .hex);
pub const GL_DEBUG_CALLBACK_USER_PARAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8245, .hex);
pub const GL_DEBUG_CALLBACK_USER_PARAM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8245, .hex);
pub const GL_DEBUG_CALLBACK_USER_PARAM_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8245, .hex);
pub const GL_DEBUG_SOURCE_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8246, .hex);
pub const GL_DEBUG_SOURCE_API_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8246, .hex);
pub const GL_DEBUG_SOURCE_API_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8246, .hex);
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8247, .hex);
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8247, .hex);
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8247, .hex);
pub const GL_DEBUG_SOURCE_SHADER_COMPILER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8248, .hex);
pub const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8248, .hex);
pub const GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8248, .hex);
pub const GL_DEBUG_SOURCE_THIRD_PARTY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8249, .hex);
pub const GL_DEBUG_SOURCE_THIRD_PARTY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8249, .hex);
pub const GL_DEBUG_SOURCE_THIRD_PARTY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8249, .hex);
pub const GL_DEBUG_SOURCE_APPLICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824A, .hex);
pub const GL_DEBUG_SOURCE_APPLICATION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824A, .hex);
pub const GL_DEBUG_SOURCE_APPLICATION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824A, .hex);
pub const GL_DEBUG_SOURCE_OTHER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824B, .hex);
pub const GL_DEBUG_SOURCE_OTHER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824B, .hex);
pub const GL_DEBUG_SOURCE_OTHER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824B, .hex);
pub const GL_DEBUG_TYPE_ERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824C, .hex);
pub const GL_DEBUG_TYPE_ERROR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824C, .hex);
pub const GL_DEBUG_TYPE_ERROR_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824C, .hex);
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824D, .hex);
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824D, .hex);
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824D, .hex);
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824E, .hex);
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824E, .hex);
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824E, .hex);
pub const GL_DEBUG_TYPE_PORTABILITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824F, .hex);
pub const GL_DEBUG_TYPE_PORTABILITY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824F, .hex);
pub const GL_DEBUG_TYPE_PORTABILITY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x824F, .hex);
pub const GL_DEBUG_TYPE_PERFORMANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8250, .hex);
pub const GL_DEBUG_TYPE_PERFORMANCE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8250, .hex);
pub const GL_DEBUG_TYPE_PERFORMANCE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8250, .hex);
pub const GL_DEBUG_TYPE_OTHER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8251, .hex);
pub const GL_DEBUG_TYPE_OTHER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8251, .hex);
pub const GL_DEBUG_TYPE_OTHER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8251, .hex);
pub const GL_LOSE_CONTEXT_ON_RESET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8252, .hex);
pub const GL_LOSE_CONTEXT_ON_RESET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8252, .hex);
pub const GL_LOSE_CONTEXT_ON_RESET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8252, .hex);
pub const GL_LOSE_CONTEXT_ON_RESET_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8252, .hex);
pub const GL_GUILTY_CONTEXT_RESET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8253, .hex);
pub const GL_GUILTY_CONTEXT_RESET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8253, .hex);
pub const GL_GUILTY_CONTEXT_RESET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8253, .hex);
pub const GL_GUILTY_CONTEXT_RESET_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8253, .hex);
pub const GL_INNOCENT_CONTEXT_RESET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8254, .hex);
pub const GL_INNOCENT_CONTEXT_RESET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8254, .hex);
pub const GL_INNOCENT_CONTEXT_RESET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8254, .hex);
pub const GL_INNOCENT_CONTEXT_RESET_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8254, .hex);
pub const GL_UNKNOWN_CONTEXT_RESET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8255, .hex);
pub const GL_UNKNOWN_CONTEXT_RESET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8255, .hex);
pub const GL_UNKNOWN_CONTEXT_RESET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8255, .hex);
pub const GL_UNKNOWN_CONTEXT_RESET_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8255, .hex);
pub const GL_RESET_NOTIFICATION_STRATEGY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8256, .hex);
pub const GL_RESET_NOTIFICATION_STRATEGY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8256, .hex);
pub const GL_RESET_NOTIFICATION_STRATEGY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8256, .hex);
pub const GL_RESET_NOTIFICATION_STRATEGY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8256, .hex);
pub const GL_PROGRAM_BINARY_RETRIEVABLE_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8257, .hex);
pub const GL_PROGRAM_SEPARABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8258, .hex);
pub const GL_PROGRAM_SEPARABLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8258, .hex);
pub const GL_ACTIVE_PROGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8259, .hex);
pub const GL_PROGRAM_PIPELINE_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825A, .hex);
pub const GL_PROGRAM_PIPELINE_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825A, .hex);
pub const GL_MAX_VIEWPORTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825B, .hex);
pub const GL_MAX_VIEWPORTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825B, .hex);
pub const GL_MAX_VIEWPORTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825B, .hex);
pub const GL_VIEWPORT_SUBPIXEL_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825C, .hex);
pub const GL_VIEWPORT_SUBPIXEL_BITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825C, .hex);
pub const GL_VIEWPORT_SUBPIXEL_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825C, .hex);
pub const GL_VIEWPORT_SUBPIXEL_BITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825C, .hex);
pub const GL_VIEWPORT_BOUNDS_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825D, .hex);
pub const GL_VIEWPORT_BOUNDS_RANGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825D, .hex);
pub const GL_VIEWPORT_BOUNDS_RANGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825D, .hex);
pub const GL_VIEWPORT_BOUNDS_RANGE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825D, .hex);
pub const GL_LAYER_PROVOKING_VERTEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825E, .hex);
pub const GL_LAYER_PROVOKING_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825E, .hex);
pub const GL_LAYER_PROVOKING_VERTEX_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825E, .hex);
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825F, .hex);
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825F, .hex);
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825F, .hex);
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x825F, .hex);
pub const GL_UNDEFINED_VERTEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8260, .hex);
pub const GL_UNDEFINED_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8260, .hex);
pub const GL_UNDEFINED_VERTEX_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8260, .hex);
pub const GL_NO_RESET_NOTIFICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8261, .hex);
pub const GL_NO_RESET_NOTIFICATION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8261, .hex);
pub const GL_NO_RESET_NOTIFICATION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8261, .hex);
pub const GL_NO_RESET_NOTIFICATION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8261, .hex);
pub const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8262, .hex);
pub const GL_MAX_COMPUTE_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8263, .hex);
pub const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8264, .hex);
pub const GL_MAX_COMPUTE_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8265, .hex);
pub const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8266, .hex);
pub const GL_COMPUTE_WORK_GROUP_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8267, .hex);
pub const GL_DEBUG_TYPE_MARKER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8268, .hex);
pub const GL_DEBUG_TYPE_MARKER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8268, .hex);
pub const GL_DEBUG_TYPE_PUSH_GROUP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8269, .hex);
pub const GL_DEBUG_TYPE_PUSH_GROUP_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8269, .hex);
pub const GL_DEBUG_TYPE_POP_GROUP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826A, .hex);
pub const GL_DEBUG_TYPE_POP_GROUP_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826A, .hex);
pub const GL_DEBUG_SEVERITY_NOTIFICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826B, .hex);
pub const GL_DEBUG_SEVERITY_NOTIFICATION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826B, .hex);
pub const GL_MAX_DEBUG_GROUP_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826C, .hex);
pub const GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826C, .hex);
pub const GL_DEBUG_GROUP_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826D, .hex);
pub const GL_DEBUG_GROUP_STACK_DEPTH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826D, .hex);
pub const GL_MAX_UNIFORM_LOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826E, .hex);
pub const GL_INTERNALFORMAT_SUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x826F, .hex);
pub const GL_INTERNALFORMAT_PREFERRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8270, .hex);
pub const GL_INTERNALFORMAT_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8271, .hex);
pub const GL_INTERNALFORMAT_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8272, .hex);
pub const GL_INTERNALFORMAT_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8273, .hex);
pub const GL_INTERNALFORMAT_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8274, .hex);
pub const GL_INTERNALFORMAT_DEPTH_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8275, .hex);
pub const GL_INTERNALFORMAT_STENCIL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8276, .hex);
pub const GL_INTERNALFORMAT_SHARED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8277, .hex);
pub const GL_INTERNALFORMAT_RED_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8278, .hex);
pub const GL_INTERNALFORMAT_GREEN_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8279, .hex);
pub const GL_INTERNALFORMAT_BLUE_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827A, .hex);
pub const GL_INTERNALFORMAT_ALPHA_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827B, .hex);
pub const GL_INTERNALFORMAT_DEPTH_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827C, .hex);
pub const GL_INTERNALFORMAT_STENCIL_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827D, .hex);
pub const GL_MAX_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827E, .hex);
pub const GL_MAX_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x827F, .hex);
pub const GL_MAX_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8280, .hex);
pub const GL_MAX_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8281, .hex);
pub const GL_MAX_COMBINED_DIMENSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8282, .hex);
pub const GL_COLOR_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8283, .hex);
pub const GL_DEPTH_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8284, .hex);
pub const GL_STENCIL_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8285, .hex);
pub const GL_COLOR_RENDERABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8286, .hex);
pub const GL_DEPTH_RENDERABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8287, .hex);
pub const GL_STENCIL_RENDERABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8288, .hex);
pub const GL_FRAMEBUFFER_RENDERABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8289, .hex);
pub const GL_FRAMEBUFFER_RENDERABLE_LAYERED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828A, .hex);
pub const GL_FRAMEBUFFER_BLEND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828B, .hex);
pub const GL_READ_PIXELS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828C, .hex);
pub const GL_READ_PIXELS_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828D, .hex);
pub const GL_READ_PIXELS_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828E, .hex);
pub const GL_TEXTURE_IMAGE_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x828F, .hex);
pub const GL_TEXTURE_IMAGE_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8290, .hex);
pub const GL_GET_TEXTURE_IMAGE_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8291, .hex);
pub const GL_GET_TEXTURE_IMAGE_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8292, .hex);
pub const GL_MIPMAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8293, .hex);
pub const GL_MANUAL_GENERATE_MIPMAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8294, .hex);
pub const GL_AUTO_GENERATE_MIPMAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8295, .hex);
pub const GL_COLOR_ENCODING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8296, .hex);
pub const GL_SRGB_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8297, .hex);
pub const GL_SRGB_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8298, .hex);
pub const GL_SRGB_DECODE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8299, .hex);
pub const GL_FILTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829A, .hex);
pub const GL_VERTEX_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829B, .hex);
pub const GL_TESS_CONTROL_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829C, .hex);
pub const GL_TESS_EVALUATION_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829D, .hex);
pub const GL_GEOMETRY_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829E, .hex);
pub const GL_FRAGMENT_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x829F, .hex);
pub const GL_COMPUTE_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A0, .hex);
pub const GL_TEXTURE_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A1, .hex);
pub const GL_TEXTURE_GATHER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A2, .hex);
pub const GL_TEXTURE_GATHER_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A3, .hex);
pub const GL_SHADER_IMAGE_LOAD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A4, .hex);
pub const GL_SHADER_IMAGE_STORE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A5, .hex);
pub const GL_SHADER_IMAGE_ATOMIC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A6, .hex);
pub const GL_IMAGE_TEXEL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A7, .hex);
pub const GL_IMAGE_COMPATIBILITY_CLASS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A8, .hex);
pub const GL_IMAGE_PIXEL_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82A9, .hex);
pub const GL_IMAGE_PIXEL_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82AA, .hex);
pub const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82AC, .hex);
pub const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82AD, .hex);
pub const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82AE, .hex);
pub const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82AF, .hex);
pub const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B1, .hex);
pub const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B2, .hex);
pub const GL_TEXTURE_COMPRESSED_BLOCK_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B3, .hex);
pub const GL_CLEAR_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B4, .hex);
pub const GL_TEXTURE_VIEW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B5, .hex);
pub const GL_VIEW_COMPATIBILITY_CLASS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B6, .hex);
pub const GL_FULL_SUPPORT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B7, .hex);
pub const GL_CAVEAT_SUPPORT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B8, .hex);
pub const GL_IMAGE_CLASS_4_X_32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82B9, .hex);
pub const GL_IMAGE_CLASS_2_X_32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BA, .hex);
pub const GL_IMAGE_CLASS_1_X_32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BB, .hex);
pub const GL_IMAGE_CLASS_4_X_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BC, .hex);
pub const GL_IMAGE_CLASS_2_X_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BD, .hex);
pub const GL_IMAGE_CLASS_1_X_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BE, .hex);
pub const GL_IMAGE_CLASS_4_X_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82BF, .hex);
pub const GL_IMAGE_CLASS_2_X_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C0, .hex);
pub const GL_IMAGE_CLASS_1_X_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C1, .hex);
pub const GL_IMAGE_CLASS_11_11_10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C2, .hex);
pub const GL_IMAGE_CLASS_10_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C3, .hex);
pub const GL_VIEW_CLASS_128_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C4, .hex);
pub const GL_VIEW_CLASS_96_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C5, .hex);
pub const GL_VIEW_CLASS_64_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C6, .hex);
pub const GL_VIEW_CLASS_48_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C7, .hex);
pub const GL_VIEW_CLASS_32_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C8, .hex);
pub const GL_VIEW_CLASS_24_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82C9, .hex);
pub const GL_VIEW_CLASS_16_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CA, .hex);
pub const GL_VIEW_CLASS_8_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CB, .hex);
pub const GL_VIEW_CLASS_S3TC_DXT1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CC, .hex);
pub const GL_VIEW_CLASS_S3TC_DXT1_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CD, .hex);
pub const GL_VIEW_CLASS_S3TC_DXT3_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CE, .hex);
pub const GL_VIEW_CLASS_S3TC_DXT5_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82CF, .hex);
pub const GL_VIEW_CLASS_RGTC1_RED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D0, .hex);
pub const GL_VIEW_CLASS_RGTC2_RG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D1, .hex);
pub const GL_VIEW_CLASS_BPTC_UNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D2, .hex);
pub const GL_VIEW_CLASS_BPTC_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D3, .hex);
pub const GL_VERTEX_ATTRIB_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D4, .hex);
pub const GL_VERTEX_ATTRIB_RELATIVE_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D5, .hex);
pub const GL_VERTEX_BINDING_DIVISOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D6, .hex);
pub const GL_VERTEX_BINDING_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D7, .hex);
pub const GL_VERTEX_BINDING_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D8, .hex);
pub const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82D9, .hex);
pub const GL_MAX_VERTEX_ATTRIB_BINDINGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DA, .hex);
pub const GL_TEXTURE_VIEW_MIN_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DB, .hex);
pub const GL_TEXTURE_VIEW_MIN_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DB, .hex);
pub const GL_TEXTURE_VIEW_MIN_LEVEL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DB, .hex);
pub const GL_TEXTURE_VIEW_NUM_LEVELS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DC, .hex);
pub const GL_TEXTURE_VIEW_NUM_LEVELS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DC, .hex);
pub const GL_TEXTURE_VIEW_NUM_LEVELS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DC, .hex);
pub const GL_TEXTURE_VIEW_MIN_LAYER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DD, .hex);
pub const GL_TEXTURE_VIEW_MIN_LAYER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DD, .hex);
pub const GL_TEXTURE_VIEW_MIN_LAYER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DD, .hex);
pub const GL_TEXTURE_VIEW_NUM_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DE, .hex);
pub const GL_TEXTURE_VIEW_NUM_LAYERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DE, .hex);
pub const GL_TEXTURE_VIEW_NUM_LAYERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DE, .hex);
pub const GL_TEXTURE_IMMUTABLE_LEVELS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82DF, .hex);
pub const GL_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E0, .hex);
pub const GL_BUFFER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E0, .hex);
pub const GL_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E1, .hex);
pub const GL_SHADER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E1, .hex);
pub const GL_PROGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E2, .hex);
pub const GL_PROGRAM_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E2, .hex);
pub const GL_QUERY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E3, .hex);
pub const GL_QUERY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E3, .hex);
pub const GL_PROGRAM_PIPELINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E4, .hex);
pub const GL_PROGRAM_PIPELINE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E4, .hex);
pub const GL_MAX_VERTEX_ATTRIB_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E5, .hex);
pub const GL_SAMPLER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E6, .hex);
pub const GL_SAMPLER_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E6, .hex);
pub const GL_DISPLAY_LIST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E7, .hex);
pub const GL_MAX_LABEL_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E8, .hex);
pub const GL_MAX_LABEL_LENGTH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E8, .hex);
pub const GL_NUM_SHADING_LANGUAGE_VERSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82E9, .hex);
pub const GL_QUERY_TARGET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EA, .hex);
pub const GL_TRANSFORM_FEEDBACK_OVERFLOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EC, .hex);
pub const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EC, .hex);
pub const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82ED, .hex);
pub const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82ED, .hex);
pub const GL_VERTICES_SUBMITTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EE, .hex);
pub const GL_VERTICES_SUBMITTED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EE, .hex);
pub const GL_PRIMITIVES_SUBMITTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EF, .hex);
pub const GL_PRIMITIVES_SUBMITTED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82EF, .hex);
pub const GL_VERTEX_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F0, .hex);
pub const GL_VERTEX_SHADER_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F0, .hex);
pub const GL_TESS_CONTROL_SHADER_PATCHES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F1, .hex);
pub const GL_TESS_CONTROL_SHADER_PATCHES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F1, .hex);
pub const GL_TESS_EVALUATION_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F2, .hex);
pub const GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F2, .hex);
pub const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F3, .hex);
pub const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F3, .hex);
pub const GL_FRAGMENT_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F4, .hex);
pub const GL_FRAGMENT_SHADER_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F4, .hex);
pub const GL_COMPUTE_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F5, .hex);
pub const GL_COMPUTE_SHADER_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F5, .hex);
pub const GL_CLIPPING_INPUT_PRIMITIVES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F6, .hex);
pub const GL_CLIPPING_INPUT_PRIMITIVES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F6, .hex);
pub const GL_CLIPPING_OUTPUT_PRIMITIVES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F7, .hex);
pub const GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F7, .hex);
pub const GL_SPARSE_BUFFER_PAGE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F8, .hex);
pub const GL_MAX_CULL_DISTANCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F9, .hex);
pub const GL_MAX_CULL_DISTANCES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82F9, .hex);
pub const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FA, .hex);
pub const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FA, .hex);
pub const GL_CONTEXT_RELEASE_BEHAVIOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FB, .hex);
pub const GL_CONTEXT_RELEASE_BEHAVIOR_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FB, .hex);
pub const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FC, .hex);
pub const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FC, .hex);
pub const GL_ROBUST_GPU_TIMEOUT_MS_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x82FD, .hex);
pub const GL_DEPTH_PASS_INSTRUMENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8310, .hex);
pub const GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8311, .hex);
pub const GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8312, .hex);
pub const GL_FRAGMENTS_INSTRUMENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8313, .hex);
pub const GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8314, .hex);
pub const GL_FRAGMENTS_INSTRUMENT_MAX_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8315, .hex);
pub const GL_CONVOLUTION_HINT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8316, .hex);
pub const GL_YCRCB_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8318, .hex);
pub const GL_YCRCBA_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8319, .hex);
pub const GL_UNPACK_COMPRESSED_SIZE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831A, .hex);
pub const GL_PACK_MAX_COMPRESSED_SIZE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831B, .hex);
pub const GL_PACK_COMPRESSED_SIZE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831C, .hex);
pub const GL_SLIM8U_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831D, .hex);
pub const GL_SLIM10U_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831E, .hex);
pub const GL_SLIM12S_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x831F, .hex);
pub const GL_ALPHA_MIN_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8320, .hex);
pub const GL_ALPHA_MAX_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8321, .hex);
pub const GL_SCALEBIAS_HINT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8322, .hex);
pub const GL_ASYNC_MARKER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8329, .hex);
pub const GL_PIXEL_TEX_GEN_MODE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x832B, .hex);
pub const GL_ASYNC_HISTOGRAM_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x832C, .hex);
pub const GL_MAX_ASYNC_HISTOGRAM_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x832D, .hex);
pub const GL_PIXEL_TRANSFORM_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8330, .hex);
pub const GL_PIXEL_MAG_FILTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8331, .hex);
pub const GL_PIXEL_MIN_FILTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8332, .hex);
pub const GL_PIXEL_CUBIC_WEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8333, .hex);
pub const GL_CUBIC_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8334, .hex);
pub const GL_AVERAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8335, .hex);
pub const GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8336, .hex);
pub const GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8337, .hex);
pub const GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8338, .hex);
pub const GL_FRAGMENT_MATERIAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8349, .hex);
pub const GL_FRAGMENT_NORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x834A, .hex);
pub const GL_FRAGMENT_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x834C, .hex);
pub const GL_ATTENUATION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x834D, .hex);
pub const GL_SHADOW_ATTENUATION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x834E, .hex);
pub const GL_TEXTURE_APPLICATION_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x834F, .hex);
pub const GL_TEXTURE_LIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8350, .hex);
pub const GL_TEXTURE_MATERIAL_FACE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8351, .hex);
pub const GL_TEXTURE_MATERIAL_PARAMETER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8352, .hex);
pub const GL_PIXEL_TEXTURE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8353, .hex);
pub const GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8354, .hex);
pub const GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8355, .hex);
pub const GL_PIXEL_GROUP_COLOR_SGIS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8356, .hex);
pub const GL_LINE_QUALITY_HINT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x835B, .hex);
pub const GL_ASYNC_TEX_IMAGE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x835C, .hex);
pub const GL_ASYNC_DRAW_PIXELS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x835D, .hex);
pub const GL_ASYNC_READ_PIXELS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x835E, .hex);
pub const GL_MAX_ASYNC_TEX_IMAGE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x835F, .hex);
pub const GL_MAX_ASYNC_DRAW_PIXELS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8360, .hex);
pub const GL_MAX_ASYNC_READ_PIXELS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8361, .hex);
pub const GL_UNSIGNED_BYTE_2_3_3_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8362, .hex);
pub const GL_UNSIGNED_BYTE_2_3_3_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8362, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8363, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8363, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8364, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8364, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8365, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8365, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8365, .hex);
pub const GL_UNSIGNED_SHORT_1_5_5_5_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8366, .hex);
pub const GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8366, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8367, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8367, .hex);
pub const GL_UNSIGNED_INT_2_10_10_10_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8368, .hex);
pub const GL_UNSIGNED_INT_2_10_10_10_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8368, .hex);
pub const GL_TEXTURE_MAX_CLAMP_S_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8369, .hex);
pub const GL_TEXTURE_MAX_CLAMP_T_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x836A, .hex);
pub const GL_TEXTURE_MAX_CLAMP_R_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x836B, .hex);
pub const GL_MIRRORED_REPEAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8370, .hex);
pub const GL_MIRRORED_REPEAT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8370, .hex);
pub const GL_MIRRORED_REPEAT_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8370, .hex);
pub const GL_MIRRORED_REPEAT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8370, .hex);
pub const GL_RGB_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A0, .hex);
pub const GL_RGB4_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A1, .hex);
pub const GL_RGBA_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A2, .hex);
pub const GL_RGBA4_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A3, .hex);
pub const GL_RGBA_DXT5_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A4, .hex);
pub const GL_RGBA4_DXT5_S3TC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83A5, .hex);
pub const GL_VERTEX_PRECLIP_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83EE, .hex);
pub const GL_VERTEX_PRECLIP_HINT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83EF, .hex);
pub const GL_COMPRESSED_RGB_S3TC_DXT1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F0, .hex);
pub const GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F1, .hex);
pub const GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F2, .hex);
pub const GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F2, .hex);
pub const GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F3, .hex);
pub const GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F3, .hex);
pub const GL_PARALLEL_ARRAYS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F4, .hex);
pub const GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F5, .hex);
pub const GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F6, .hex);
pub const GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F7, .hex);
pub const GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F8, .hex);
pub const GL_PERFQUERY_DONOT_FLUSH_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83F9, .hex);
pub const GL_PERFQUERY_FLUSH_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83FA, .hex);
pub const GL_PERFQUERY_WAIT_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83FB, .hex);
pub const GL_BLACKHOLE_RENDER_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83FC, .hex);
pub const GL_CONSERVATIVE_RASTERIZATION_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83FE, .hex);
pub const GL_TEXTURE_MEMORY_LAYOUT_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x83FF, .hex);
pub const GL_FRAGMENT_LIGHTING_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8400, .hex);
pub const GL_FRAGMENT_COLOR_MATERIAL_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8401, .hex);
pub const GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8402, .hex);
pub const GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8403, .hex);
pub const GL_MAX_FRAGMENT_LIGHTS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8404, .hex);
pub const GL_MAX_ACTIVE_LIGHTS_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8405, .hex);
pub const GL_CURRENT_RASTER_NORMAL_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8406, .hex);
pub const GL_LIGHT_ENV_MODE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8407, .hex);
pub const GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8408, .hex);
pub const GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8409, .hex);
pub const GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840A, .hex);
pub const GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840B, .hex);
pub const GL_FRAGMENT_LIGHT0_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840C, .hex);
pub const GL_FRAGMENT_LIGHT1_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840D, .hex);
pub const GL_FRAGMENT_LIGHT2_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840E, .hex);
pub const GL_FRAGMENT_LIGHT3_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x840F, .hex);
pub const GL_FRAGMENT_LIGHT4_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8410, .hex);
pub const GL_FRAGMENT_LIGHT5_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8411, .hex);
pub const GL_FRAGMENT_LIGHT6_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8412, .hex);
pub const GL_FRAGMENT_LIGHT7_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8413, .hex);
pub const GL_PACK_RESAMPLE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x842E, .hex);
pub const GL_UNPACK_RESAMPLE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x842F, .hex);
pub const GL_RESAMPLE_DECIMATE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8430, .hex);
pub const GL_RESAMPLE_REPLICATE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8433, .hex);
pub const GL_RESAMPLE_ZERO_FILL_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8434, .hex);
pub const GL_TANGENT_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8439, .hex);
pub const GL_BINORMAL_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x843A, .hex);
pub const GL_CURRENT_TANGENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x843B, .hex);
pub const GL_CURRENT_BINORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x843C, .hex);
pub const GL_TANGENT_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x843E, .hex);
pub const GL_TANGENT_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x843F, .hex);
pub const GL_BINORMAL_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8440, .hex);
pub const GL_BINORMAL_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8441, .hex);
pub const GL_TANGENT_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8442, .hex);
pub const GL_BINORMAL_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8443, .hex);
pub const GL_MAP1_TANGENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8444, .hex);
pub const GL_MAP2_TANGENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8445, .hex);
pub const GL_MAP1_BINORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8446, .hex);
pub const GL_MAP2_BINORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8447, .hex);
pub const GL_NEAREST_CLIPMAP_NEAREST_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x844D, .hex);
pub const GL_NEAREST_CLIPMAP_LINEAR_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x844E, .hex);
pub const GL_LINEAR_CLIPMAP_NEAREST_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x844F, .hex);
pub const GL_FOG_COORDINATE_SOURCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8450, .hex);
pub const GL_FOG_COORDINATE_SOURCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8450, .hex);
pub const GL_FOG_COORD_SRC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8450, .hex);
pub const GL_FOG_COORD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8451, .hex);
pub const GL_FOG_COORDINATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8451, .hex);
pub const GL_FOG_COORDINATE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8451, .hex);
pub const GL_FRAGMENT_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8452, .hex);
pub const GL_FRAGMENT_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8452, .hex);
pub const GL_CURRENT_FOG_COORD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8453, .hex);
pub const GL_CURRENT_FOG_COORDINATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8453, .hex);
pub const GL_CURRENT_FOG_COORDINATE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8453, .hex);
pub const GL_FOG_COORDINATE_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8454, .hex);
pub const GL_FOG_COORDINATE_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8454, .hex);
pub const GL_FOG_COORD_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8454, .hex);
pub const GL_FOG_COORDINATE_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8455, .hex);
pub const GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8455, .hex);
pub const GL_FOG_COORD_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8455, .hex);
pub const GL_FOG_COORDINATE_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8456, .hex);
pub const GL_FOG_COORDINATE_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8456, .hex);
pub const GL_FOG_COORD_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8456, .hex);
pub const GL_FOG_COORDINATE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8457, .hex);
pub const GL_FOG_COORDINATE_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8457, .hex);
pub const GL_FOG_COORD_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8457, .hex);
pub const GL_COLOR_SUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8458, .hex);
pub const GL_COLOR_SUM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8458, .hex);
pub const GL_COLOR_SUM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8458, .hex);
pub const GL_CURRENT_SECONDARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8459, .hex);
pub const GL_CURRENT_SECONDARY_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8459, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845A, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845A, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845B, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845B, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845C, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845C, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845D, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845D, .hex);
pub const GL_SECONDARY_COLOR_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845E, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845E, .hex);
pub const GL_CURRENT_RASTER_SECONDARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845F, .hex);
pub const GL_ALIASED_POINT_SIZE_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x846D, .hex);
pub const GL_ALIASED_LINE_WIDTH_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x846E, .hex);
pub const GL_SCREEN_COORDINATES_REND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8490, .hex);
pub const GL_INVERTED_SCREEN_W_REND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8491, .hex);
pub const GL_TEXTURE0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C0, .hex);
pub const GL_TEXTURE0_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C0, .hex);
pub const GL_TEXTURE1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C1, .hex);
pub const GL_TEXTURE1_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C1, .hex);
pub const GL_TEXTURE2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C2, .hex);
pub const GL_TEXTURE2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C2, .hex);
pub const GL_TEXTURE3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C3, .hex);
pub const GL_TEXTURE3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C3, .hex);
pub const GL_TEXTURE4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C4, .hex);
pub const GL_TEXTURE4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C4, .hex);
pub const GL_TEXTURE5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C5, .hex);
pub const GL_TEXTURE5_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C5, .hex);
pub const GL_TEXTURE6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C6, .hex);
pub const GL_TEXTURE6_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C6, .hex);
pub const GL_TEXTURE7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C7, .hex);
pub const GL_TEXTURE7_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C7, .hex);
pub const GL_TEXTURE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C8, .hex);
pub const GL_TEXTURE8_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C8, .hex);
pub const GL_TEXTURE9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C9, .hex);
pub const GL_TEXTURE9_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C9, .hex);
pub const GL_TEXTURE10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CA, .hex);
pub const GL_TEXTURE10_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CA, .hex);
pub const GL_TEXTURE11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CB, .hex);
pub const GL_TEXTURE11_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CB, .hex);
pub const GL_TEXTURE12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CC, .hex);
pub const GL_TEXTURE12_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CC, .hex);
pub const GL_TEXTURE13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CD, .hex);
pub const GL_TEXTURE13_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CD, .hex);
pub const GL_TEXTURE14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CE, .hex);
pub const GL_TEXTURE14_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CE, .hex);
pub const GL_TEXTURE15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CF, .hex);
pub const GL_TEXTURE15_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CF, .hex);
pub const GL_TEXTURE16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D0, .hex);
pub const GL_TEXTURE16_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D0, .hex);
pub const GL_TEXTURE17 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D1, .hex);
pub const GL_TEXTURE17_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D1, .hex);
pub const GL_TEXTURE18 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D2, .hex);
pub const GL_TEXTURE18_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D2, .hex);
pub const GL_TEXTURE19 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D3, .hex);
pub const GL_TEXTURE19_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D3, .hex);
pub const GL_TEXTURE20 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D4, .hex);
pub const GL_TEXTURE20_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D4, .hex);
pub const GL_TEXTURE21 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D5, .hex);
pub const GL_TEXTURE21_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D5, .hex);
pub const GL_TEXTURE22 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D6, .hex);
pub const GL_TEXTURE22_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D6, .hex);
pub const GL_TEXTURE23 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D7, .hex);
pub const GL_TEXTURE23_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D7, .hex);
pub const GL_TEXTURE24 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D8, .hex);
pub const GL_TEXTURE24_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D8, .hex);
pub const GL_TEXTURE25 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D9, .hex);
pub const GL_TEXTURE25_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D9, .hex);
pub const GL_TEXTURE26 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DA, .hex);
pub const GL_TEXTURE26_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DA, .hex);
pub const GL_TEXTURE27 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DB, .hex);
pub const GL_TEXTURE27_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DB, .hex);
pub const GL_TEXTURE28 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DC, .hex);
pub const GL_TEXTURE28_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DC, .hex);
pub const GL_TEXTURE29 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DD, .hex);
pub const GL_TEXTURE29_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DD, .hex);
pub const GL_TEXTURE30 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DE, .hex);
pub const GL_TEXTURE30_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DE, .hex);
pub const GL_TEXTURE31 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DF, .hex);
pub const GL_TEXTURE31_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DF, .hex);
pub const GL_ACTIVE_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E0, .hex);
pub const GL_ACTIVE_TEXTURE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E0, .hex);
pub const GL_CLIENT_ACTIVE_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E1, .hex);
pub const GL_CLIENT_ACTIVE_TEXTURE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E1, .hex);
pub const GL_MAX_TEXTURE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E2, .hex);
pub const GL_MAX_TEXTURE_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E2, .hex);
pub const GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E3, .hex);
pub const GL_TRANSPOSE_MODELVIEW_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E3, .hex);
pub const GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E3, .hex);
pub const GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E4, .hex);
pub const GL_TRANSPOSE_PROJECTION_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E4, .hex);
pub const GL_TRANSPOSE_PROJECTION_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E4, .hex);
pub const GL_TRANSPOSE_TEXTURE_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E5, .hex);
pub const GL_TRANSPOSE_TEXTURE_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E5, .hex);
pub const GL_TRANSPOSE_COLOR_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E6, .hex);
pub const GL_TRANSPOSE_COLOR_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E6, .hex);
pub const GL_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E7, .hex);
pub const GL_SUBTRACT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E7, .hex);
pub const GL_MAX_RENDERBUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E8, .hex);
pub const GL_MAX_RENDERBUFFER_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E8, .hex);
pub const GL_MAX_RENDERBUFFER_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E8, .hex);
pub const GL_COMPRESSED_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E9, .hex);
pub const GL_COMPRESSED_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E9, .hex);
pub const GL_COMPRESSED_LUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EA, .hex);
pub const GL_COMPRESSED_LUMINANCE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EA, .hex);
pub const GL_COMPRESSED_LUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EB, .hex);
pub const GL_COMPRESSED_LUMINANCE_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EB, .hex);
pub const GL_COMPRESSED_INTENSITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EC, .hex);
pub const GL_COMPRESSED_INTENSITY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EC, .hex);
pub const GL_COMPRESSED_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84ED, .hex);
pub const GL_COMPRESSED_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84ED, .hex);
pub const GL_COMPRESSED_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EE, .hex);
pub const GL_COMPRESSED_RGBA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EE, .hex);
pub const GL_TEXTURE_COMPRESSION_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EF, .hex);
pub const GL_TEXTURE_COMPRESSION_HINT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EF, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F0, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F1, .hex);
pub const GL_ALL_COMPLETED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F2, .hex);
pub const GL_FENCE_STATUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F3, .hex);
pub const GL_FENCE_CONDITION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F4, .hex);
pub const GL_TEXTURE_RECTANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F5, .hex);
pub const GL_TEXTURE_RECTANGLE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F5, .hex);
pub const GL_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F5, .hex);
pub const GL_TEXTURE_BINDING_RECTANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F6, .hex);
pub const GL_TEXTURE_BINDING_RECTANGLE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F6, .hex);
pub const GL_TEXTURE_BINDING_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F6, .hex);
pub const GL_PROXY_TEXTURE_RECTANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F7, .hex);
pub const GL_PROXY_TEXTURE_RECTANGLE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F7, .hex);
pub const GL_PROXY_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F7, .hex);
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F8, .hex);
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F8, .hex);
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F8, .hex);
pub const GL_DEPTH_STENCIL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F9, .hex);
pub const GL_DEPTH_STENCIL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F9, .hex);
pub const GL_DEPTH_STENCIL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F9, .hex);
pub const GL_DEPTH_STENCIL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84F9, .hex);
pub const GL_UNSIGNED_INT_24_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FA, .hex);
pub const GL_UNSIGNED_INT_24_8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FA, .hex);
pub const GL_UNSIGNED_INT_24_8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FA, .hex);
pub const GL_UNSIGNED_INT_24_8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FA, .hex);
pub const GL_MAX_TEXTURE_LOD_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FD, .hex);
pub const GL_MAX_TEXTURE_LOD_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FD, .hex);
pub const GL_TEXTURE_MAX_ANISOTROPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FE, .hex);
pub const GL_TEXTURE_MAX_ANISOTROPY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FE, .hex);
pub const GL_MAX_TEXTURE_MAX_ANISOTROPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FF, .hex);
pub const GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FF, .hex);
pub const GL_TEXTURE_FILTER_CONTROL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8500, .hex);
pub const GL_TEXTURE_FILTER_CONTROL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8500, .hex);
pub const GL_TEXTURE_LOD_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8501, .hex);
pub const GL_TEXTURE_LOD_BIAS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8501, .hex);
pub const GL_MODELVIEW1_STACK_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8502, .hex);
pub const GL_COMBINE4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8503, .hex);
pub const GL_MAX_SHININESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8504, .hex);
pub const GL_MAX_SPOT_EXPONENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8505, .hex);
pub const GL_MODELVIEW1_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8506, .hex);
pub const GL_INCR_WRAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8507, .hex);
pub const GL_INCR_WRAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8507, .hex);
pub const GL_INCR_WRAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8507, .hex);
pub const GL_DECR_WRAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8508, .hex);
pub const GL_DECR_WRAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8508, .hex);
pub const GL_DECR_WRAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8508, .hex);
pub const GL_VERTEX_WEIGHTING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8509, .hex);
pub const GL_MODELVIEW1_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850A, .hex);
pub const GL_MODELVIEW1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850A, .hex);
pub const GL_CURRENT_VERTEX_WEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850B, .hex);
pub const GL_VERTEX_WEIGHT_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850C, .hex);
pub const GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850D, .hex);
pub const GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850E, .hex);
pub const GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x850F, .hex);
pub const GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8510, .hex);
pub const GL_NORMAL_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_NORMAL_MAP_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_NORMAL_MAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_NORMAL_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_NORMAL_MAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_REFLECTION_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_REFLECTION_MAP_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_REFLECTION_MAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_REFLECTION_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_REFLECTION_MAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_TEXTURE_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8513, .hex);
pub const GL_TEXTURE_CUBE_MAP_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8513, .hex);
pub const GL_TEXTURE_CUBE_MAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8513, .hex);
pub const GL_TEXTURE_CUBE_MAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8513, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8514, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8514, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8514, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8514, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8515, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8515, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8515, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8515, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8516, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8516, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8516, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8516, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8517, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8517, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8517, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8517, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8518, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8518, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8518, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8518, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8519, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8519, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8519, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8519, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851A, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851A, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851A, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851A, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851B, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851B, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851B, .hex);
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851C, .hex);
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851C, .hex);
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851C, .hex);
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851C, .hex);
pub const GL_VERTEX_ARRAY_RANGE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851D, .hex);
pub const GL_VERTEX_ARRAY_RANGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851D, .hex);
pub const GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851E, .hex);
pub const GL_VERTEX_ARRAY_RANGE_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851E, .hex);
pub const GL_VERTEX_ARRAY_RANGE_VALID_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851F, .hex);
pub const GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851F, .hex);
pub const GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8520, .hex);
pub const GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8521, .hex);
pub const GL_VERTEX_ARRAY_RANGE_POINTER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8521, .hex);
pub const GL_REGISTER_COMBINERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8522, .hex);
pub const GL_VARIABLE_A_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8523, .hex);
pub const GL_VARIABLE_B_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8524, .hex);
pub const GL_VARIABLE_C_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8525, .hex);
pub const GL_VARIABLE_D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8526, .hex);
pub const GL_VARIABLE_E_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8527, .hex);
pub const GL_VARIABLE_F_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8528, .hex);
pub const GL_VARIABLE_G_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8529, .hex);
pub const GL_CONSTANT_COLOR0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852A, .hex);
pub const GL_CONSTANT_COLOR1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852B, .hex);
pub const GL_PRIMARY_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852C, .hex);
pub const GL_SECONDARY_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852D, .hex);
pub const GL_SPARE0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852E, .hex);
pub const GL_SPARE1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x852F, .hex);
pub const GL_DISCARD_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8530, .hex);
pub const GL_E_TIMES_F_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8531, .hex);
pub const GL_SPARE0_PLUS_SECONDARY_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8532, .hex);
pub const GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8533, .hex);
pub const GL_MULTISAMPLE_FILTER_HINT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8534, .hex);
pub const GL_PER_STAGE_CONSTANTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8535, .hex);
pub const GL_UNSIGNED_IDENTITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8536, .hex);
pub const GL_UNSIGNED_INVERT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8537, .hex);
pub const GL_EXPAND_NORMAL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8538, .hex);
pub const GL_EXPAND_NEGATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8539, .hex);
pub const GL_HALF_BIAS_NORMAL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853A, .hex);
pub const GL_HALF_BIAS_NEGATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853B, .hex);
pub const GL_SIGNED_IDENTITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853C, .hex);
pub const GL_SIGNED_NEGATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853D, .hex);
pub const GL_SCALE_BY_TWO_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853E, .hex);
pub const GL_SCALE_BY_FOUR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x853F, .hex);
pub const GL_SCALE_BY_ONE_HALF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8540, .hex);
pub const GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8541, .hex);
pub const GL_COMBINER_INPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8542, .hex);
pub const GL_COMBINER_MAPPING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8543, .hex);
pub const GL_COMBINER_COMPONENT_USAGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8544, .hex);
pub const GL_COMBINER_AB_DOT_PRODUCT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8545, .hex);
pub const GL_COMBINER_CD_DOT_PRODUCT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8546, .hex);
pub const GL_COMBINER_MUX_SUM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8547, .hex);
pub const GL_COMBINER_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8548, .hex);
pub const GL_COMBINER_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8549, .hex);
pub const GL_COMBINER_AB_OUTPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854A, .hex);
pub const GL_COMBINER_CD_OUTPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854B, .hex);
pub const GL_COMBINER_SUM_OUTPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854C, .hex);
pub const GL_MAX_GENERAL_COMBINERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854D, .hex);
pub const GL_NUM_GENERAL_COMBINERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854E, .hex);
pub const GL_COLOR_SUM_CLAMP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x854F, .hex);
pub const GL_COMBINER0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8550, .hex);
pub const GL_COMBINER1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8551, .hex);
pub const GL_COMBINER2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8552, .hex);
pub const GL_COMBINER3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8553, .hex);
pub const GL_COMBINER4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8554, .hex);
pub const GL_COMBINER5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8555, .hex);
pub const GL_COMBINER6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8556, .hex);
pub const GL_COMBINER7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8557, .hex);
pub const GL_PRIMITIVE_RESTART_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8558, .hex);
pub const GL_PRIMITIVE_RESTART_INDEX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8559, .hex);
pub const GL_FOG_DISTANCE_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855A, .hex);
pub const GL_EYE_RADIAL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855B, .hex);
pub const GL_EYE_PLANE_ABSOLUTE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855C, .hex);
pub const GL_EMBOSS_LIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855D, .hex);
pub const GL_EMBOSS_CONSTANT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855E, .hex);
pub const GL_EMBOSS_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x855F, .hex);
pub const GL_RED_MIN_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8560, .hex);
pub const GL_GREEN_MIN_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8561, .hex);
pub const GL_BLUE_MIN_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8562, .hex);
pub const GL_ALPHA_MIN_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8563, .hex);
pub const GL_RED_MAX_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8564, .hex);
pub const GL_GREEN_MAX_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8565, .hex);
pub const GL_BLUE_MAX_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8566, .hex);
pub const GL_ALPHA_MAX_CLAMP_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8567, .hex);
pub const GL_INTERLACE_READ_INGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8568, .hex);
pub const GL_COMBINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8570, .hex);
pub const GL_COMBINE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8570, .hex);
pub const GL_COMBINE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8570, .hex);
pub const GL_COMBINE_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8571, .hex);
pub const GL_COMBINE_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8571, .hex);
pub const GL_COMBINE_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8571, .hex);
pub const GL_COMBINE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8572, .hex);
pub const GL_COMBINE_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8572, .hex);
pub const GL_COMBINE_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8572, .hex);
pub const GL_RGB_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8573, .hex);
pub const GL_RGB_SCALE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8573, .hex);
pub const GL_RGB_SCALE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8573, .hex);
pub const GL_ADD_SIGNED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8574, .hex);
pub const GL_ADD_SIGNED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8574, .hex);
pub const GL_ADD_SIGNED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8574, .hex);
pub const GL_INTERPOLATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8575, .hex);
pub const GL_INTERPOLATE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8575, .hex);
pub const GL_INTERPOLATE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8575, .hex);
pub const GL_CONSTANT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8576, .hex);
pub const GL_CONSTANT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8576, .hex);
pub const GL_CONSTANT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8576, .hex);
pub const GL_CONSTANT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8576, .hex);
pub const GL_PRIMARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8577, .hex);
pub const GL_PRIMARY_COLOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8577, .hex);
pub const GL_PRIMARY_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8577, .hex);
pub const GL_PREVIOUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8578, .hex);
pub const GL_PREVIOUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8578, .hex);
pub const GL_PREVIOUS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8578, .hex);
pub const GL_SOURCE0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SOURCE0_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SOURCE0_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SRC0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SOURCE1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SOURCE1_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SOURCE1_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SRC1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SOURCE2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SOURCE2_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SOURCE2_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SRC2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SOURCE3_RGB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8583, .hex);
pub const GL_SOURCE0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SOURCE0_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SOURCE0_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SRC0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SOURCE1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SOURCE1_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SOURCE1_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SRC1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SRC1_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SOURCE2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_SOURCE2_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_SOURCE2_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_SRC2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_SOURCE3_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858B, .hex);
pub const GL_OPERAND0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8590, .hex);
pub const GL_OPERAND0_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8590, .hex);
pub const GL_OPERAND0_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8590, .hex);
pub const GL_OPERAND1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8591, .hex);
pub const GL_OPERAND1_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8591, .hex);
pub const GL_OPERAND1_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8591, .hex);
pub const GL_OPERAND2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8592, .hex);
pub const GL_OPERAND2_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8592, .hex);
pub const GL_OPERAND2_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8592, .hex);
pub const GL_OPERAND3_RGB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8593, .hex);
pub const GL_OPERAND0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8598, .hex);
pub const GL_OPERAND0_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8598, .hex);
pub const GL_OPERAND0_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8598, .hex);
pub const GL_OPERAND1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8599, .hex);
pub const GL_OPERAND1_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8599, .hex);
pub const GL_OPERAND1_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8599, .hex);
pub const GL_OPERAND2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x859A, .hex);
pub const GL_OPERAND2_ALPHA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x859A, .hex);
pub const GL_OPERAND2_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x859A, .hex);
pub const GL_OPERAND3_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x859B, .hex);
pub const GL_PACK_SUBSAMPLE_RATE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85A0, .hex);
pub const GL_UNPACK_SUBSAMPLE_RATE_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85A1, .hex);
pub const GL_PIXEL_SUBSAMPLE_4444_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85A2, .hex);
pub const GL_PIXEL_SUBSAMPLE_2424_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85A3, .hex);
pub const GL_PIXEL_SUBSAMPLE_4242_SGIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85A4, .hex);
pub const GL_PERTURB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85AE, .hex);
pub const GL_TEXTURE_NORMAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85AF, .hex);
pub const GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B0, .hex);
pub const GL_TRANSFORM_HINT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B1, .hex);
pub const GL_UNPACK_CLIENT_STORAGE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B2, .hex);
pub const GL_BUFFER_OBJECT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B3, .hex);
pub const GL_STORAGE_CLIENT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B4, .hex);
pub const GL_VERTEX_ARRAY_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B5, .hex);
pub const GL_VERTEX_ARRAY_BINDING_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B5, .hex);
pub const GL_VERTEX_ARRAY_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B5, .hex);
pub const GL_TEXTURE_RANGE_LENGTH_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B7, .hex);
pub const GL_TEXTURE_RANGE_POINTER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B8, .hex);
pub const GL_YCBCR_422_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85B9, .hex);
pub const GL_UNSIGNED_SHORT_8_8_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BA, .hex);
pub const GL_UNSIGNED_SHORT_8_8_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BA, .hex);
pub const GL_UNSIGNED_SHORT_8_8_REV_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BB, .hex);
pub const GL_UNSIGNED_SHORT_8_8_REV_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BB, .hex);
pub const GL_TEXTURE_STORAGE_HINT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BC, .hex);
pub const GL_STORAGE_PRIVATE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BD, .hex);
pub const GL_STORAGE_CACHED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BE, .hex);
pub const GL_STORAGE_SHARED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85BF, .hex);
pub const GL_REPLACEMENT_CODE_ARRAY_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C0, .hex);
pub const GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C1, .hex);
pub const GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C2, .hex);
pub const GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C3, .hex);
pub const GL_R1UI_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C4, .hex);
pub const GL_R1UI_C4UB_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C5, .hex);
pub const GL_R1UI_C3F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C6, .hex);
pub const GL_R1UI_N3F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C7, .hex);
pub const GL_R1UI_C4F_N3F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C8, .hex);
pub const GL_R1UI_T2F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85C9, .hex);
pub const GL_R1UI_T2F_N3F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85CA, .hex);
pub const GL_R1UI_T2F_C4F_N3F_V3F_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85CB, .hex);
pub const GL_SLICE_ACCUM_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x85CC, .hex);
pub const GL_QUAD_MESH_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8614, .hex);
pub const GL_TRIANGLE_MESH_SUN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8615, .hex);
pub const GL_VERTEX_PROGRAM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8620, .hex);
pub const GL_VERTEX_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8620, .hex);
pub const GL_VERTEX_STATE_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8621, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_ENABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8622, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8622, .hex);
pub const GL_ATTRIB_ARRAY_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8623, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8623, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8623, .hex);
pub const GL_ATTRIB_ARRAY_STRIDE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8624, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8624, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8624, .hex);
pub const GL_ATTRIB_ARRAY_TYPE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8625, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8625, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8625, .hex);
pub const GL_CURRENT_ATTRIB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8626, .hex);
pub const GL_CURRENT_VERTEX_ATTRIB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8626, .hex);
pub const GL_CURRENT_VERTEX_ATTRIB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8626, .hex);
pub const GL_PROGRAM_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8627, .hex);
pub const GL_PROGRAM_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8627, .hex);
pub const GL_PROGRAM_STRING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8628, .hex);
pub const GL_PROGRAM_STRING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8628, .hex);
pub const GL_MODELVIEW_PROJECTION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8629, .hex);
pub const GL_IDENTITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862A, .hex);
pub const GL_INVERSE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862B, .hex);
pub const GL_TRANSPOSE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862C, .hex);
pub const GL_INVERSE_TRANSPOSE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862D, .hex);
pub const GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862E, .hex);
pub const GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862E, .hex);
pub const GL_MAX_PROGRAM_MATRICES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862F, .hex);
pub const GL_MAX_TRACK_MATRICES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x862F, .hex);
pub const GL_MATRIX0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8630, .hex);
pub const GL_MATRIX1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8631, .hex);
pub const GL_MATRIX2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8632, .hex);
pub const GL_MATRIX3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8633, .hex);
pub const GL_MATRIX4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8634, .hex);
pub const GL_MATRIX5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8635, .hex);
pub const GL_MATRIX6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8636, .hex);
pub const GL_MATRIX7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8637, .hex);
pub const GL_CURRENT_MATRIX_STACK_DEPTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8640, .hex);
pub const GL_CURRENT_MATRIX_STACK_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8640, .hex);
pub const GL_CURRENT_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8641, .hex);
pub const GL_CURRENT_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8641, .hex);
pub const GL_PROGRAM_POINT_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_PROGRAM_POINT_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_PROGRAM_POINT_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_VERTEX_PROGRAM_POINT_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_VERTEX_PROGRAM_POINT_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_VERTEX_PROGRAM_POINT_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_VERTEX_PROGRAM_TWO_SIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8643, .hex);
pub const GL_VERTEX_PROGRAM_TWO_SIDE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8643, .hex);
pub const GL_VERTEX_PROGRAM_TWO_SIDE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8643, .hex);
pub const GL_PROGRAM_PARAMETER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8644, .hex);
pub const GL_ATTRIB_ARRAY_POINTER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8645, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8645, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8645, .hex);
pub const GL_PROGRAM_TARGET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8646, .hex);
pub const GL_PROGRAM_RESIDENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8647, .hex);
pub const GL_TRACK_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8648, .hex);
pub const GL_TRACK_MATRIX_TRANSFORM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8649, .hex);
pub const GL_VERTEX_PROGRAM_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864A, .hex);
pub const GL_PROGRAM_ERROR_POSITION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864B, .hex);
pub const GL_PROGRAM_ERROR_POSITION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864B, .hex);
pub const GL_OFFSET_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864C, .hex);
pub const GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864D, .hex);
pub const GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864E, .hex);
pub const GL_DEPTH_CLAMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864F, .hex);
pub const GL_DEPTH_CLAMP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864F, .hex);
pub const GL_DEPTH_CLAMP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x864F, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8650, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8651, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8652, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8653, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8654, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8655, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8656, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8657, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8658, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY9_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8659, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY10_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865A, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY11_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865B, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY12_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865C, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY13_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865D, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY14_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865E, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY15_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x865F, .hex);
pub const GL_MAP1_VERTEX_ATTRIB0_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8660, .hex);
pub const GL_MAP1_VERTEX_ATTRIB1_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8661, .hex);
pub const GL_MAP1_VERTEX_ATTRIB2_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8662, .hex);
pub const GL_MAP1_VERTEX_ATTRIB3_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8663, .hex);
pub const GL_MAP1_VERTEX_ATTRIB4_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8664, .hex);
pub const GL_MAP1_VERTEX_ATTRIB5_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8665, .hex);
pub const GL_MAP1_VERTEX_ATTRIB6_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8666, .hex);
pub const GL_MAP1_VERTEX_ATTRIB7_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8667, .hex);
pub const GL_MAP1_VERTEX_ATTRIB8_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8668, .hex);
pub const GL_MAP1_VERTEX_ATTRIB9_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8669, .hex);
pub const GL_MAP1_VERTEX_ATTRIB10_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866A, .hex);
pub const GL_MAP1_VERTEX_ATTRIB11_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866B, .hex);
pub const GL_MAP1_VERTEX_ATTRIB12_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866C, .hex);
pub const GL_MAP1_VERTEX_ATTRIB13_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866D, .hex);
pub const GL_MAP1_VERTEX_ATTRIB14_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866E, .hex);
pub const GL_MAP1_VERTEX_ATTRIB15_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x866F, .hex);
pub const GL_MAP2_VERTEX_ATTRIB0_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8670, .hex);
pub const GL_MAP2_VERTEX_ATTRIB1_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8671, .hex);
pub const GL_MAP2_VERTEX_ATTRIB2_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8672, .hex);
pub const GL_MAP2_VERTEX_ATTRIB3_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8673, .hex);
pub const GL_MAP2_VERTEX_ATTRIB4_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8674, .hex);
pub const GL_MAP2_VERTEX_ATTRIB5_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8675, .hex);
pub const GL_MAP2_VERTEX_ATTRIB6_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8676, .hex);
pub const GL_MAP2_VERTEX_ATTRIB7_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8677, .hex);
pub const GL_PROGRAM_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8677, .hex);
pub const GL_MAP2_VERTEX_ATTRIB8_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8678, .hex);
pub const GL_MAP2_VERTEX_ATTRIB9_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8679, .hex);
pub const GL_MAP2_VERTEX_ATTRIB10_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867A, .hex);
pub const GL_MAP2_VERTEX_ATTRIB11_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867B, .hex);
pub const GL_MAP2_VERTEX_ATTRIB12_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867C, .hex);
pub const GL_MAP2_VERTEX_ATTRIB13_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867D, .hex);
pub const GL_MAP2_VERTEX_ATTRIB14_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867E, .hex);
pub const GL_MAP2_VERTEX_ATTRIB15_4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x867F, .hex);
pub const GL_TEXTURE_COMPRESSED_IMAGE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A0, .hex);
pub const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A0, .hex);
pub const GL_TEXTURE_COMPRESSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A1, .hex);
pub const GL_TEXTURE_COMPRESSED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A1, .hex);
pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A2, .hex);
pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A2, .hex);
pub const GL_COMPRESSED_TEXTURE_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A3, .hex);
pub const GL_COMPRESSED_TEXTURE_FORMATS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A3, .hex);
pub const GL_MAX_VERTEX_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A4, .hex);
pub const GL_MAX_VERTEX_UNITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A4, .hex);
pub const GL_ACTIVE_VERTEX_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A5, .hex);
pub const GL_WEIGHT_SUM_UNITY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A6, .hex);
pub const GL_VERTEX_BLEND_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A7, .hex);
pub const GL_CURRENT_WEIGHT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A8, .hex);
pub const GL_WEIGHT_ARRAY_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A9, .hex);
pub const GL_WEIGHT_ARRAY_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A9, .hex);
pub const GL_WEIGHT_ARRAY_STRIDE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AA, .hex);
pub const GL_WEIGHT_ARRAY_STRIDE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AA, .hex);
pub const GL_WEIGHT_ARRAY_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AB, .hex);
pub const GL_WEIGHT_ARRAY_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AB, .hex);
pub const GL_WEIGHT_ARRAY_POINTER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AC, .hex);
pub const GL_WEIGHT_ARRAY_POINTER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AC, .hex);
pub const GL_WEIGHT_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AD, .hex);
pub const GL_WEIGHT_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AD, .hex);
pub const GL_DOT3_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AE, .hex);
pub const GL_DOT3_RGB_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AE, .hex);
pub const GL_DOT3_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AF, .hex);
pub const GL_DOT3_RGBA_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AF, .hex);
pub const GL_DOT3_RGBA_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AF, .hex);
pub const GL_COMPRESSED_RGB_FXT1_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86B0, .hex);
pub const GL_COMPRESSED_RGBA_FXT1_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86B1, .hex);
pub const GL_MULTISAMPLE_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86B2, .hex);
pub const GL_SAMPLE_BUFFERS_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86B3, .hex);
pub const GL_SAMPLES_3DFX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86B4, .hex);
pub const GL_EVAL_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C0, .hex);
pub const GL_EVAL_TRIANGULAR_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C1, .hex);
pub const GL_MAP_TESSELLATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C2, .hex);
pub const GL_MAP_ATTRIB_U_ORDER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C3, .hex);
pub const GL_MAP_ATTRIB_V_ORDER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C4, .hex);
pub const GL_EVAL_FRACTIONAL_TESSELLATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C5, .hex);
pub const GL_EVAL_VERTEX_ATTRIB0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C6, .hex);
pub const GL_EVAL_VERTEX_ATTRIB1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C7, .hex);
pub const GL_EVAL_VERTEX_ATTRIB2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C8, .hex);
pub const GL_EVAL_VERTEX_ATTRIB3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86C9, .hex);
pub const GL_EVAL_VERTEX_ATTRIB4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CA, .hex);
pub const GL_EVAL_VERTEX_ATTRIB5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CB, .hex);
pub const GL_EVAL_VERTEX_ATTRIB6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CC, .hex);
pub const GL_EVAL_VERTEX_ATTRIB7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CD, .hex);
pub const GL_EVAL_VERTEX_ATTRIB8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CE, .hex);
pub const GL_EVAL_VERTEX_ATTRIB9_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86CF, .hex);
pub const GL_EVAL_VERTEX_ATTRIB10_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D0, .hex);
pub const GL_EVAL_VERTEX_ATTRIB11_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D1, .hex);
pub const GL_EVAL_VERTEX_ATTRIB12_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D2, .hex);
pub const GL_EVAL_VERTEX_ATTRIB13_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D3, .hex);
pub const GL_EVAL_VERTEX_ATTRIB14_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D4, .hex);
pub const GL_EVAL_VERTEX_ATTRIB15_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D5, .hex);
pub const GL_MAX_MAP_TESSELLATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D6, .hex);
pub const GL_MAX_RATIONAL_EVAL_ORDER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D7, .hex);
pub const GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D8, .hex);
pub const GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86D9, .hex);
pub const GL_UNSIGNED_INT_S8_S8_8_8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DA, .hex);
pub const GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DB, .hex);
pub const GL_DSDT_MAG_INTENSITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DC, .hex);
pub const GL_SHADER_CONSISTENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DD, .hex);
pub const GL_TEXTURE_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DE, .hex);
pub const GL_SHADER_OPERATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86DF, .hex);
pub const GL_CULL_MODES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E0, .hex);
pub const GL_OFFSET_TEXTURE_2D_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E1, .hex);
pub const GL_OFFSET_TEXTURE_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E1, .hex);
pub const GL_OFFSET_TEXTURE_2D_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E2, .hex);
pub const GL_OFFSET_TEXTURE_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E2, .hex);
pub const GL_OFFSET_TEXTURE_2D_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E3, .hex);
pub const GL_OFFSET_TEXTURE_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E3, .hex);
pub const GL_PREVIOUS_TEXTURE_INPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E4, .hex);
pub const GL_CONST_EYE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E5, .hex);
pub const GL_PASS_THROUGH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E6, .hex);
pub const GL_CULL_FRAGMENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E7, .hex);
pub const GL_OFFSET_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E8, .hex);
pub const GL_DEPENDENT_AR_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86E9, .hex);
pub const GL_DEPENDENT_GB_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86EA, .hex);
pub const GL_SURFACE_STATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86EB, .hex);
pub const GL_DOT_PRODUCT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86EC, .hex);
pub const GL_DOT_PRODUCT_DEPTH_REPLACE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86ED, .hex);
pub const GL_DOT_PRODUCT_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86EE, .hex);
pub const GL_DOT_PRODUCT_TEXTURE_3D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86EF, .hex);
pub const GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F0, .hex);
pub const GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F1, .hex);
pub const GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F2, .hex);
pub const GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F3, .hex);
pub const GL_HILO_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F4, .hex);
pub const GL_DSDT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F5, .hex);
pub const GL_DSDT_MAG_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F6, .hex);
pub const GL_DSDT_MAG_VIB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F7, .hex);
pub const GL_HILO16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F8, .hex);
pub const GL_SIGNED_HILO_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86F9, .hex);
pub const GL_SIGNED_HILO16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FA, .hex);
pub const GL_SIGNED_RGBA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FB, .hex);
pub const GL_SIGNED_RGBA8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FC, .hex);
pub const GL_SURFACE_REGISTERED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FD, .hex);
pub const GL_SIGNED_RGB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FE, .hex);
pub const GL_SIGNED_RGB8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86FF, .hex);
pub const GL_SURFACE_MAPPED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8700, .hex);
pub const GL_SIGNED_LUMINANCE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8701, .hex);
pub const GL_SIGNED_LUMINANCE8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8702, .hex);
pub const GL_SIGNED_LUMINANCE_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8703, .hex);
pub const GL_SIGNED_LUMINANCE8_ALPHA8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8704, .hex);
pub const GL_SIGNED_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8705, .hex);
pub const GL_SIGNED_ALPHA8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8706, .hex);
pub const GL_SIGNED_INTENSITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8707, .hex);
pub const GL_SIGNED_INTENSITY8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8708, .hex);
pub const GL_DSDT8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8709, .hex);
pub const GL_DSDT8_MAG8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870A, .hex);
pub const GL_DSDT8_MAG8_INTENSITY8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870B, .hex);
pub const GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870C, .hex);
pub const GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870D, .hex);
pub const GL_HI_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870E, .hex);
pub const GL_LO_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x870F, .hex);
pub const GL_DS_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8710, .hex);
pub const GL_DT_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8711, .hex);
pub const GL_MAGNITUDE_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8712, .hex);
pub const GL_VIBRANCE_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8713, .hex);
pub const GL_HI_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8714, .hex);
pub const GL_LO_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8715, .hex);
pub const GL_DS_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8716, .hex);
pub const GL_DT_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8717, .hex);
pub const GL_MAGNITUDE_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8718, .hex);
pub const GL_VIBRANCE_BIAS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8719, .hex);
pub const GL_TEXTURE_BORDER_VALUES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871A, .hex);
pub const GL_TEXTURE_HI_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871B, .hex);
pub const GL_TEXTURE_LO_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871C, .hex);
pub const GL_TEXTURE_DS_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871D, .hex);
pub const GL_TEXTURE_DT_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871E, .hex);
pub const GL_TEXTURE_MAG_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x871F, .hex);
pub const GL_MODELVIEW2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8722, .hex);
pub const GL_MODELVIEW3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8723, .hex);
pub const GL_MODELVIEW4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8724, .hex);
pub const GL_MODELVIEW5_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8725, .hex);
pub const GL_MODELVIEW6_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8726, .hex);
pub const GL_MODELVIEW7_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8727, .hex);
pub const GL_MODELVIEW8_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8728, .hex);
pub const GL_MODELVIEW9_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8729, .hex);
pub const GL_MODELVIEW10_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872A, .hex);
pub const GL_MODELVIEW11_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872B, .hex);
pub const GL_MODELVIEW12_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872C, .hex);
pub const GL_MODELVIEW13_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872D, .hex);
pub const GL_MODELVIEW14_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872E, .hex);
pub const GL_MODELVIEW15_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x872F, .hex);
pub const GL_MODELVIEW16_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8730, .hex);
pub const GL_MODELVIEW17_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8731, .hex);
pub const GL_MODELVIEW18_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8732, .hex);
pub const GL_MODELVIEW19_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8733, .hex);
pub const GL_MODELVIEW20_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8734, .hex);
pub const GL_MODELVIEW21_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8735, .hex);
pub const GL_MODELVIEW22_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8736, .hex);
pub const GL_MODELVIEW23_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8737, .hex);
pub const GL_MODELVIEW24_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8738, .hex);
pub const GL_MODELVIEW25_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8739, .hex);
pub const GL_MODELVIEW26_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873A, .hex);
pub const GL_MODELVIEW27_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873B, .hex);
pub const GL_MODELVIEW28_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873C, .hex);
pub const GL_MODELVIEW29_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873D, .hex);
pub const GL_MODELVIEW30_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873E, .hex);
pub const GL_MODELVIEW31_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x873F, .hex);
pub const GL_DOT3_RGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8740, .hex);
pub const GL_Z400_BINARY_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8740, .hex);
pub const GL_DOT3_RGBA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8741, .hex);
pub const GL_PROGRAM_BINARY_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8741, .hex);
pub const GL_PROGRAM_BINARY_LENGTH_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8741, .hex);
pub const GL_MIRROR_CLAMP_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8742, .hex);
pub const GL_MIRROR_CLAMP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8742, .hex);
pub const GL_MIRROR_CLAMP_TO_EDGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8743, .hex);
pub const GL_MIRROR_CLAMP_TO_EDGE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8743, .hex);
pub const GL_MIRROR_CLAMP_TO_EDGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8743, .hex);
pub const GL_MODULATE_ADD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8744, .hex);
pub const GL_MODULATE_SIGNED_ADD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8745, .hex);
pub const GL_MODULATE_SUBTRACT_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8746, .hex);
pub const GL_SET_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874A, .hex);
pub const GL_REPLACE_VALUE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874B, .hex);
pub const GL_STENCIL_OP_VALUE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874C, .hex);
pub const GL_STENCIL_BACK_OP_VALUE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874D, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_LONG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874E, .hex);
pub const GL_OCCLUSION_QUERY_EVENT_MASK_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x874F, .hex);
pub const GL_DEPTH_STENCIL_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8750, .hex);
pub const GL_UNSIGNED_INT_24_8_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8751, .hex);
pub const GL_UNSIGNED_INT_8_24_REV_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8752, .hex);
pub const GL_UNSIGNED_SHORT_15_1_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8753, .hex);
pub const GL_UNSIGNED_SHORT_1_15_REV_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8754, .hex);
pub const GL_TRACE_MASK_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8755, .hex);
pub const GL_TRACE_NAME_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8756, .hex);
pub const GL_YCBCR_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8757, .hex);
pub const GL_PACK_INVERT_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8758, .hex);
pub const GL_DEBUG_OBJECT_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8759, .hex);
pub const GL_TEXTURE_1D_STACK_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8759, .hex);
pub const GL_DEBUG_PRINT_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875A, .hex);
pub const GL_TEXTURE_2D_STACK_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875A, .hex);
pub const GL_DEBUG_ASSERT_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875B, .hex);
pub const GL_PROXY_TEXTURE_1D_STACK_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875B, .hex);
pub const GL_PROXY_TEXTURE_2D_STACK_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875C, .hex);
pub const GL_TEXTURE_1D_STACK_BINDING_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875D, .hex);
pub const GL_TEXTURE_2D_STACK_BINDING_MESAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875E, .hex);
pub const GL_PROGRAM_BINARY_FORMAT_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x875F, .hex);
pub const GL_STATIC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8760, .hex);
pub const GL_DYNAMIC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8761, .hex);
pub const GL_PRESERVE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8762, .hex);
pub const GL_DISCARD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8763, .hex);
pub const GL_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8764, .hex);
pub const GL_BUFFER_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8764, .hex);
pub const GL_OBJECT_BUFFER_SIZE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8764, .hex);
pub const GL_BUFFER_USAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8765, .hex);
pub const GL_BUFFER_USAGE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8765, .hex);
pub const GL_OBJECT_BUFFER_USAGE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8765, .hex);
pub const GL_ARRAY_OBJECT_BUFFER_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8766, .hex);
pub const GL_ARRAY_OBJECT_OFFSET_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8767, .hex);
pub const GL_ELEMENT_ARRAY_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8768, .hex);
pub const GL_ELEMENT_ARRAY_TYPE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8769, .hex);
pub const GL_ELEMENT_ARRAY_POINTER_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876A, .hex);
pub const GL_MAX_VERTEX_STREAMS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876B, .hex);
pub const GL_VERTEX_STREAM0_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876C, .hex);
pub const GL_VERTEX_STREAM1_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876D, .hex);
pub const GL_VERTEX_STREAM2_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876E, .hex);
pub const GL_VERTEX_STREAM3_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x876F, .hex);
pub const GL_VERTEX_STREAM4_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8770, .hex);
pub const GL_VERTEX_STREAM5_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8771, .hex);
pub const GL_VERTEX_STREAM6_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8772, .hex);
pub const GL_VERTEX_STREAM7_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8773, .hex);
pub const GL_VERTEX_SOURCE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8774, .hex);
pub const GL_BUMP_ROT_MATRIX_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8775, .hex);
pub const GL_BUMP_ROT_MATRIX_SIZE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8776, .hex);
pub const GL_BUMP_NUM_TEX_UNITS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8777, .hex);
pub const GL_BUMP_TEX_UNITS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8778, .hex);
pub const GL_DUDV_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8779, .hex);
pub const GL_DU8DV8_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x877A, .hex);
pub const GL_BUMP_ENVMAP_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x877B, .hex);
pub const GL_BUMP_TARGET_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x877C, .hex);
pub const GL_VERTEX_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8780, .hex);
pub const GL_VERTEX_SHADER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8781, .hex);
pub const GL_OP_INDEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8782, .hex);
pub const GL_OP_NEGATE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8783, .hex);
pub const GL_OP_DOT3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8784, .hex);
pub const GL_OP_DOT4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8785, .hex);
pub const GL_OP_MUL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8786, .hex);
pub const GL_OP_ADD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8787, .hex);
pub const GL_OP_MADD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8788, .hex);
pub const GL_OP_FRAC_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8789, .hex);
pub const GL_OP_MAX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878A, .hex);
pub const GL_OP_MIN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878B, .hex);
pub const GL_OP_SET_GE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878C, .hex);
pub const GL_OP_SET_LT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878D, .hex);
pub const GL_OP_CLAMP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878E, .hex);
pub const GL_OP_FLOOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x878F, .hex);
pub const GL_OP_ROUND_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8790, .hex);
pub const GL_OP_EXP_BASE_2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8791, .hex);
pub const GL_OP_LOG_BASE_2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8792, .hex);
pub const GL_OP_POWER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8793, .hex);
pub const GL_OP_RECIP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8794, .hex);
pub const GL_OP_RECIP_SQRT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8795, .hex);
pub const GL_OP_SUB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8796, .hex);
pub const GL_OP_CROSS_PRODUCT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8797, .hex);
pub const GL_OP_MULTIPLY_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8798, .hex);
pub const GL_OP_MOV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8799, .hex);
pub const GL_OUTPUT_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879A, .hex);
pub const GL_OUTPUT_COLOR0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879B, .hex);
pub const GL_OUTPUT_COLOR1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879C, .hex);
pub const GL_OUTPUT_TEXTURE_COORD0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879D, .hex);
pub const GL_OUTPUT_TEXTURE_COORD1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879E, .hex);
pub const GL_OUTPUT_TEXTURE_COORD2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x879F, .hex);
pub const GL_OUTPUT_TEXTURE_COORD3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A0, .hex);
pub const GL_OUTPUT_TEXTURE_COORD4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A1, .hex);
pub const GL_OUTPUT_TEXTURE_COORD5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A2, .hex);
pub const GL_OUTPUT_TEXTURE_COORD6_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A3, .hex);
pub const GL_OUTPUT_TEXTURE_COORD7_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A4, .hex);
pub const GL_OUTPUT_TEXTURE_COORD8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A5, .hex);
pub const GL_OUTPUT_TEXTURE_COORD9_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A6, .hex);
pub const GL_OUTPUT_TEXTURE_COORD10_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A7, .hex);
pub const GL_OUTPUT_TEXTURE_COORD11_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A8, .hex);
pub const GL_OUTPUT_TEXTURE_COORD12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87A9, .hex);
pub const GL_OUTPUT_TEXTURE_COORD13_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AA, .hex);
pub const GL_OUTPUT_TEXTURE_COORD14_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AB, .hex);
pub const GL_OUTPUT_TEXTURE_COORD15_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AC, .hex);
pub const GL_OUTPUT_TEXTURE_COORD16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AD, .hex);
pub const GL_OUTPUT_TEXTURE_COORD17_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AE, .hex);
pub const GL_OUTPUT_TEXTURE_COORD18_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87AF, .hex);
pub const GL_OUTPUT_TEXTURE_COORD19_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B0, .hex);
pub const GL_OUTPUT_TEXTURE_COORD20_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B1, .hex);
pub const GL_OUTPUT_TEXTURE_COORD21_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B2, .hex);
pub const GL_OUTPUT_TEXTURE_COORD22_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B3, .hex);
pub const GL_OUTPUT_TEXTURE_COORD23_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B4, .hex);
pub const GL_OUTPUT_TEXTURE_COORD24_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B5, .hex);
pub const GL_OUTPUT_TEXTURE_COORD25_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B6, .hex);
pub const GL_OUTPUT_TEXTURE_COORD26_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B7, .hex);
pub const GL_OUTPUT_TEXTURE_COORD27_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B8, .hex);
pub const GL_OUTPUT_TEXTURE_COORD28_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87B9, .hex);
pub const GL_OUTPUT_TEXTURE_COORD29_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BA, .hex);
pub const GL_OUTPUT_TEXTURE_COORD30_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BB, .hex);
pub const GL_OUTPUT_TEXTURE_COORD31_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BC, .hex);
pub const GL_OUTPUT_FOG_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BD, .hex);
pub const GL_SCALAR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BE, .hex);
pub const GL_VECTOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87BF, .hex);
pub const GL_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C0, .hex);
pub const GL_VARIANT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C1, .hex);
pub const GL_INVARIANT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C2, .hex);
pub const GL_LOCAL_CONSTANT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C3, .hex);
pub const GL_LOCAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C4, .hex);
pub const GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C5, .hex);
pub const GL_MAX_VERTEX_SHADER_VARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C6, .hex);
pub const GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C7, .hex);
pub const GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C8, .hex);
pub const GL_MAX_VERTEX_SHADER_LOCALS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87C9, .hex);
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CA, .hex);
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CB, .hex);
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CC, .hex);
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CD, .hex);
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CE, .hex);
pub const GL_VERTEX_SHADER_INSTRUCTIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87CF, .hex);
pub const GL_VERTEX_SHADER_VARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D0, .hex);
pub const GL_VERTEX_SHADER_INVARIANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D1, .hex);
pub const GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D2, .hex);
pub const GL_VERTEX_SHADER_LOCALS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D3, .hex);
pub const GL_VERTEX_SHADER_OPTIMIZED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D4, .hex);
pub const GL_X_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D5, .hex);
pub const GL_Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D6, .hex);
pub const GL_Z_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D7, .hex);
pub const GL_W_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D8, .hex);
pub const GL_NEGATIVE_X_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87D9, .hex);
pub const GL_NEGATIVE_Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DA, .hex);
pub const GL_NEGATIVE_Z_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DB, .hex);
pub const GL_NEGATIVE_W_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DC, .hex);
pub const GL_ZERO_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DD, .hex);
pub const GL_ONE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DE, .hex);
pub const GL_NEGATIVE_ONE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87DF, .hex);
pub const GL_NORMALIZED_RANGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E0, .hex);
pub const GL_FULL_RANGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E1, .hex);
pub const GL_CURRENT_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E2, .hex);
pub const GL_MVP_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E3, .hex);
pub const GL_VARIANT_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E4, .hex);
pub const GL_VARIANT_DATATYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E5, .hex);
pub const GL_VARIANT_ARRAY_STRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E6, .hex);
pub const GL_VARIANT_ARRAY_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E7, .hex);
pub const GL_VARIANT_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E8, .hex);
pub const GL_VARIANT_ARRAY_POINTER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87E9, .hex);
pub const GL_INVARIANT_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87EA, .hex);
pub const GL_INVARIANT_DATATYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87EB, .hex);
pub const GL_LOCAL_CONSTANT_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87EC, .hex);
pub const GL_LOCAL_CONSTANT_DATATYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87ED, .hex);
pub const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87EE, .hex);
pub const GL_PN_TRIANGLES_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F0, .hex);
pub const GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F1, .hex);
pub const GL_PN_TRIANGLES_POINT_MODE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F2, .hex);
pub const GL_PN_TRIANGLES_NORMAL_MODE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F3, .hex);
pub const GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F4, .hex);
pub const GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F5, .hex);
pub const GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F6, .hex);
pub const GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F7, .hex);
pub const GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F8, .hex);
pub const GL_3DC_X_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87F9, .hex);
pub const GL_3DC_XY_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FA, .hex);
pub const GL_VBO_FREE_MEMORY_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FB, .hex);
pub const GL_TEXTURE_FREE_MEMORY_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FC, .hex);
pub const GL_RENDERBUFFER_FREE_MEMORY_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FD, .hex);
pub const GL_NUM_PROGRAM_BINARY_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FE, .hex);
pub const GL_NUM_PROGRAM_BINARY_FORMATS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FE, .hex);
pub const GL_PROGRAM_BINARY_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FF, .hex);
pub const GL_PROGRAM_BINARY_FORMATS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x87FF, .hex);
pub const GL_STENCIL_BACK_FUNC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8800, .hex);
pub const GL_STENCIL_BACK_FUNC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8800, .hex);
pub const GL_STENCIL_BACK_FAIL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8801, .hex);
pub const GL_STENCIL_BACK_FAIL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8801, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_FAIL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8802, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8802, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_PASS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8803, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8803, .hex);
pub const GL_FRAGMENT_PROGRAM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8804, .hex);
pub const GL_PROGRAM_ALU_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8805, .hex);
pub const GL_PROGRAM_TEX_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8806, .hex);
pub const GL_PROGRAM_TEX_INDIRECTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8807, .hex);
pub const GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8808, .hex);
pub const GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8809, .hex);
pub const GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880A, .hex);
pub const GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880B, .hex);
pub const GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880C, .hex);
pub const GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880D, .hex);
pub const GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880E, .hex);
pub const GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x880F, .hex);
pub const GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8810, .hex);
pub const GL_RGBA32F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8814, .hex);
pub const GL_RGBA32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8814, .hex);
pub const GL_RGBA32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8814, .hex);
pub const GL_RGBA_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8814, .hex);
pub const GL_RGBA_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8814, .hex);
pub const GL_RGB32F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8815, .hex);
pub const GL_RGB32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8815, .hex);
pub const GL_RGB32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8815, .hex);
pub const GL_RGB_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8815, .hex);
pub const GL_RGB_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8815, .hex);
pub const GL_ALPHA32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8816, .hex);
pub const GL_ALPHA32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8816, .hex);
pub const GL_ALPHA_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8816, .hex);
pub const GL_ALPHA_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8816, .hex);
pub const GL_INTENSITY32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8817, .hex);
pub const GL_INTENSITY_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8817, .hex);
pub const GL_INTENSITY_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8817, .hex);
pub const GL_LUMINANCE32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8818, .hex);
pub const GL_LUMINANCE32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8818, .hex);
pub const GL_LUMINANCE_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8818, .hex);
pub const GL_LUMINANCE_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8818, .hex);
pub const GL_LUMINANCE_ALPHA32F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8819, .hex);
pub const GL_LUMINANCE_ALPHA32F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8819, .hex);
pub const GL_LUMINANCE_ALPHA_FLOAT32_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8819, .hex);
pub const GL_LUMINANCE_ALPHA_FLOAT32_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8819, .hex);
pub const GL_RGBA16F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881A, .hex);
pub const GL_RGBA16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881A, .hex);
pub const GL_RGBA16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881A, .hex);
pub const GL_RGBA_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881A, .hex);
pub const GL_RGBA_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881A, .hex);
pub const GL_RGB16F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881B, .hex);
pub const GL_RGB16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881B, .hex);
pub const GL_RGB16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881B, .hex);
pub const GL_RGB_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881B, .hex);
pub const GL_RGB_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881B, .hex);
pub const GL_ALPHA16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881C, .hex);
pub const GL_ALPHA16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881C, .hex);
pub const GL_ALPHA_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881C, .hex);
pub const GL_ALPHA_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881C, .hex);
pub const GL_INTENSITY16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881D, .hex);
pub const GL_INTENSITY_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881D, .hex);
pub const GL_INTENSITY_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881D, .hex);
pub const GL_LUMINANCE16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881E, .hex);
pub const GL_LUMINANCE16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881E, .hex);
pub const GL_LUMINANCE_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881E, .hex);
pub const GL_LUMINANCE_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881E, .hex);
pub const GL_LUMINANCE_ALPHA16F_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881F, .hex);
pub const GL_LUMINANCE_ALPHA16F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881F, .hex);
pub const GL_LUMINANCE_ALPHA_FLOAT16_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881F, .hex);
pub const GL_LUMINANCE_ALPHA_FLOAT16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x881F, .hex);
pub const GL_RGBA_FLOAT_MODE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8820, .hex);
pub const GL_RGBA_FLOAT_MODE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8820, .hex);
pub const GL_WRITEONLY_RENDERING_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8823, .hex);
pub const GL_MAX_DRAW_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_MAX_DRAW_BUFFERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_MAX_DRAW_BUFFERS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_MAX_DRAW_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_MAX_DRAW_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_DRAW_BUFFER0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER0_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER0_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER1_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER1_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER2_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER3_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER4_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER5_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER5_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER6_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER6_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER6_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER7_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER7_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER7_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER8_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER8_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER9_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER9_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER9_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER9_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER10_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER10_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER10_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER10_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER11_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER11_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER11_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER11_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER12_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER12_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER12_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER13_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER13_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER13_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER13_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER14_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER14_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER14_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER14_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_DRAW_BUFFER15_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_DRAW_BUFFER15_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_DRAW_BUFFER15_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_DRAW_BUFFER15_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8835, .hex);
pub const GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8837, .hex);
pub const GL_BLEND_EQUATION_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x883D, .hex);
pub const GL_BLEND_EQUATION_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x883D, .hex);
pub const GL_BLEND_EQUATION_ALPHA_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x883D, .hex);
pub const GL_SUBSAMPLE_DISTANCE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x883F, .hex);
pub const GL_MATRIX_PALETTE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8840, .hex);
pub const GL_MATRIX_PALETTE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8840, .hex);
pub const GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8841, .hex);
pub const GL_MAX_PALETTE_MATRICES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8842, .hex);
pub const GL_MAX_PALETTE_MATRICES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8842, .hex);
pub const GL_CURRENT_PALETTE_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8843, .hex);
pub const GL_CURRENT_PALETTE_MATRIX_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8843, .hex);
pub const GL_MATRIX_INDEX_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8844, .hex);
pub const GL_MATRIX_INDEX_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8844, .hex);
pub const GL_CURRENT_MATRIX_INDEX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8845, .hex);
pub const GL_MATRIX_INDEX_ARRAY_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8846, .hex);
pub const GL_MATRIX_INDEX_ARRAY_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8846, .hex);
pub const GL_MATRIX_INDEX_ARRAY_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8847, .hex);
pub const GL_MATRIX_INDEX_ARRAY_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8847, .hex);
pub const GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8848, .hex);
pub const GL_MATRIX_INDEX_ARRAY_STRIDE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8848, .hex);
pub const GL_MATRIX_INDEX_ARRAY_POINTER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8849, .hex);
pub const GL_MATRIX_INDEX_ARRAY_POINTER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8849, .hex);
pub const GL_TEXTURE_DEPTH_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884A, .hex);
pub const GL_TEXTURE_DEPTH_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884A, .hex);
pub const GL_DEPTH_TEXTURE_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884B, .hex);
pub const GL_DEPTH_TEXTURE_MODE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884B, .hex);
pub const GL_TEXTURE_COMPARE_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884C, .hex);
pub const GL_TEXTURE_COMPARE_MODE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884C, .hex);
pub const GL_TEXTURE_COMPARE_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884C, .hex);
pub const GL_TEXTURE_COMPARE_FUNC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884D, .hex);
pub const GL_TEXTURE_COMPARE_FUNC_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884D, .hex);
pub const GL_TEXTURE_COMPARE_FUNC_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884D, .hex);
pub const GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_COMPARE_REF_TO_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_COMPARE_REF_TO_TEXTURE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_COMPARE_R_TO_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_COMPARE_R_TO_TEXTURE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_TEXTURE_CUBE_MAP_SEAMLESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884F, .hex);
pub const GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8850, .hex);
pub const GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8851, .hex);
pub const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8852, .hex);
pub const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8853, .hex);
pub const GL_OFFSET_HILO_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8854, .hex);
pub const GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8855, .hex);
pub const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8856, .hex);
pub const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8857, .hex);
pub const GL_DEPENDENT_HILO_TEXTURE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8858, .hex);
pub const GL_DEPENDENT_RGB_TEXTURE_3D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8859, .hex);
pub const GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885A, .hex);
pub const GL_DOT_PRODUCT_PASS_THROUGH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885B, .hex);
pub const GL_DOT_PRODUCT_TEXTURE_1D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885C, .hex);
pub const GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885D, .hex);
pub const GL_HILO8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885E, .hex);
pub const GL_SIGNED_HILO8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x885F, .hex);
pub const GL_FORCE_BLUE_TO_ONE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8860, .hex);
pub const GL_POINT_SPRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8861, .hex);
pub const GL_POINT_SPRITE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8861, .hex);
pub const GL_POINT_SPRITE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8861, .hex);
pub const GL_POINT_SPRITE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8861, .hex);
pub const GL_COORD_REPLACE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8862, .hex);
pub const GL_COORD_REPLACE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8862, .hex);
pub const GL_COORD_REPLACE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8862, .hex);
pub const GL_COORD_REPLACE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8862, .hex);
pub const GL_POINT_SPRITE_R_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8863, .hex);
pub const GL_PIXEL_COUNTER_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8864, .hex);
pub const GL_QUERY_COUNTER_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8864, .hex);
pub const GL_QUERY_COUNTER_BITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8864, .hex);
pub const GL_QUERY_COUNTER_BITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8864, .hex);
pub const GL_CURRENT_OCCLUSION_QUERY_ID_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8865, .hex);
pub const GL_CURRENT_QUERY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8865, .hex);
pub const GL_CURRENT_QUERY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8865, .hex);
pub const GL_CURRENT_QUERY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8865, .hex);
pub const GL_PIXEL_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8866, .hex);
pub const GL_QUERY_RESULT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8866, .hex);
pub const GL_QUERY_RESULT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8866, .hex);
pub const GL_QUERY_RESULT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8866, .hex);
pub const GL_PIXEL_COUNT_AVAILABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8867, .hex);
pub const GL_QUERY_RESULT_AVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8867, .hex);
pub const GL_QUERY_RESULT_AVAILABLE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8867, .hex);
pub const GL_QUERY_RESULT_AVAILABLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8867, .hex);
pub const GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8868, .hex);
pub const GL_MAX_VERTEX_ATTRIBS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8869, .hex);
pub const GL_MAX_VERTEX_ATTRIBS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8869, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886A, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886A, .hex);
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886C, .hex);
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886C, .hex);
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886C, .hex);
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886D, .hex);
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886D, .hex);
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886D, .hex);
pub const GL_DEPTH_STENCIL_TO_RGBA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886E, .hex);
pub const GL_DEPTH_STENCIL_TO_BGRA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886F, .hex);
pub const GL_FRAGMENT_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8870, .hex);
pub const GL_MAX_TEXTURE_COORDS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8871, .hex);
pub const GL_MAX_TEXTURE_COORDS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8871, .hex);
pub const GL_MAX_TEXTURE_COORDS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8871, .hex);
pub const GL_MAX_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8872, .hex);
pub const GL_MAX_TEXTURE_IMAGE_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8872, .hex);
pub const GL_MAX_TEXTURE_IMAGE_UNITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8872, .hex);
pub const GL_FRAGMENT_PROGRAM_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8873, .hex);
pub const GL_PROGRAM_ERROR_STRING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8874, .hex);
pub const GL_PROGRAM_ERROR_STRING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8874, .hex);
pub const GL_PROGRAM_FORMAT_ASCII_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8875, .hex);
pub const GL_PROGRAM_FORMAT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8876, .hex);
pub const GL_WRITE_PIXEL_DATA_RANGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8878, .hex);
pub const GL_READ_PIXEL_DATA_RANGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8879, .hex);
pub const GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887A, .hex);
pub const GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887B, .hex);
pub const GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887C, .hex);
pub const GL_READ_PIXEL_DATA_RANGE_POINTER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887D, .hex);
pub const GL_GEOMETRY_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887F, .hex);
pub const GL_GEOMETRY_SHADER_INVOCATIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887F, .hex);
pub const GL_GEOMETRY_SHADER_INVOCATIONS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x887F, .hex);
pub const GL_FLOAT_R_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8880, .hex);
pub const GL_FLOAT_RG_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8881, .hex);
pub const GL_FLOAT_RGB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8882, .hex);
pub const GL_FLOAT_RGBA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8883, .hex);
pub const GL_FLOAT_R16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8884, .hex);
pub const GL_FLOAT_R32_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8885, .hex);
pub const GL_FLOAT_RG16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8886, .hex);
pub const GL_FLOAT_RG32_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8887, .hex);
pub const GL_FLOAT_RGB16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8888, .hex);
pub const GL_FLOAT_RGB32_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8889, .hex);
pub const GL_FLOAT_RGBA16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888A, .hex);
pub const GL_FLOAT_RGBA32_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888B, .hex);
pub const GL_TEXTURE_FLOAT_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888C, .hex);
pub const GL_FLOAT_CLEAR_COLOR_VALUE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888D, .hex);
pub const GL_FLOAT_RGBA_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888E, .hex);
pub const GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x888F, .hex);
pub const GL_DEPTH_BOUNDS_TEST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8890, .hex);
pub const GL_DEPTH_BOUNDS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8891, .hex);
pub const GL_ARRAY_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8892, .hex);
pub const GL_ARRAY_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8892, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8893, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8893, .hex);
pub const GL_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8894, .hex);
pub const GL_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8894, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8895, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8895, .hex);
pub const GL_VERTEX_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8896, .hex);
pub const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8896, .hex);
pub const GL_NORMAL_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8897, .hex);
pub const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8897, .hex);
pub const GL_COLOR_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8898, .hex);
pub const GL_COLOR_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8898, .hex);
pub const GL_INDEX_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8899, .hex);
pub const GL_INDEX_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8899, .hex);
pub const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889A, .hex);
pub const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889A, .hex);
pub const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889B, .hex);
pub const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889B, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889C, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889C, .hex);
pub const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889D, .hex);
pub const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889D, .hex);
pub const GL_FOG_COORD_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889D, .hex);
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889E, .hex);
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889E, .hex);
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889E, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889F, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889F, .hex);
pub const GL_PROGRAM_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A0, .hex);
pub const GL_MAX_PROGRAM_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A1, .hex);
pub const GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A2, .hex);
pub const GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A3, .hex);
pub const GL_PROGRAM_TEMPORARIES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A4, .hex);
pub const GL_MAX_PROGRAM_TEMPORARIES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A5, .hex);
pub const GL_PROGRAM_NATIVE_TEMPORARIES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A6, .hex);
pub const GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A7, .hex);
pub const GL_PROGRAM_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A8, .hex);
pub const GL_MAX_PROGRAM_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88A9, .hex);
pub const GL_PROGRAM_NATIVE_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AA, .hex);
pub const GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AB, .hex);
pub const GL_PROGRAM_ATTRIBS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AC, .hex);
pub const GL_MAX_PROGRAM_ATTRIBS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AD, .hex);
pub const GL_PROGRAM_NATIVE_ATTRIBS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AE, .hex);
pub const GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88AF, .hex);
pub const GL_PROGRAM_ADDRESS_REGISTERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B0, .hex);
pub const GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B1, .hex);
pub const GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B2, .hex);
pub const GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B3, .hex);
pub const GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B4, .hex);
pub const GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B5, .hex);
pub const GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B6, .hex);
pub const GL_TRANSPOSE_CURRENT_MATRIX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B7, .hex);
pub const GL_READ_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B8, .hex);
pub const GL_READ_ONLY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B8, .hex);
pub const GL_WRITE_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B9, .hex);
pub const GL_WRITE_ONLY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B9, .hex);
pub const GL_WRITE_ONLY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B9, .hex);
pub const GL_READ_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BA, .hex);
pub const GL_READ_WRITE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BA, .hex);
pub const GL_BUFFER_ACCESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BB, .hex);
pub const GL_BUFFER_ACCESS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BB, .hex);
pub const GL_BUFFER_ACCESS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BB, .hex);
pub const GL_BUFFER_MAPPED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BC, .hex);
pub const GL_BUFFER_MAPPED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BC, .hex);
pub const GL_BUFFER_MAPPED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BC, .hex);
pub const GL_BUFFER_MAP_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BD, .hex);
pub const GL_BUFFER_MAP_POINTER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BD, .hex);
pub const GL_BUFFER_MAP_POINTER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BD, .hex);
pub const GL_WRITE_DISCARD_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BE, .hex);
pub const GL_TIME_ELAPSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BF, .hex);
pub const GL_TIME_ELAPSED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BF, .hex);
pub const GL_MATRIX0_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C0, .hex);
pub const GL_MATRIX1_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C1, .hex);
pub const GL_MATRIX2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C2, .hex);
pub const GL_MATRIX3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C3, .hex);
pub const GL_MATRIX4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C4, .hex);
pub const GL_MATRIX5_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C5, .hex);
pub const GL_MATRIX6_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C6, .hex);
pub const GL_MATRIX7_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C7, .hex);
pub const GL_MATRIX8_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C8, .hex);
pub const GL_MATRIX9_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88C9, .hex);
pub const GL_MATRIX10_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CA, .hex);
pub const GL_MATRIX11_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CB, .hex);
pub const GL_MATRIX12_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CC, .hex);
pub const GL_MATRIX13_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CD, .hex);
pub const GL_MATRIX14_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CE, .hex);
pub const GL_MATRIX15_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88CF, .hex);
pub const GL_MATRIX16_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D0, .hex);
pub const GL_MATRIX17_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D1, .hex);
pub const GL_MATRIX18_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D2, .hex);
pub const GL_MATRIX19_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D3, .hex);
pub const GL_MATRIX20_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D4, .hex);
pub const GL_MATRIX21_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D5, .hex);
pub const GL_MATRIX22_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D6, .hex);
pub const GL_MATRIX23_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D7, .hex);
pub const GL_MATRIX24_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D8, .hex);
pub const GL_MATRIX25_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88D9, .hex);
pub const GL_MATRIX26_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DA, .hex);
pub const GL_MATRIX27_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DB, .hex);
pub const GL_MATRIX28_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DC, .hex);
pub const GL_MATRIX29_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DD, .hex);
pub const GL_MATRIX30_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DE, .hex);
pub const GL_MATRIX31_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88DF, .hex);
pub const GL_STREAM_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E0, .hex);
pub const GL_STREAM_DRAW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E0, .hex);
pub const GL_STREAM_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E1, .hex);
pub const GL_STREAM_READ_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E1, .hex);
pub const GL_STREAM_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E2, .hex);
pub const GL_STREAM_COPY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E2, .hex);
pub const GL_STATIC_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E4, .hex);
pub const GL_STATIC_DRAW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E4, .hex);
pub const GL_STATIC_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E5, .hex);
pub const GL_STATIC_READ_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E5, .hex);
pub const GL_STATIC_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E6, .hex);
pub const GL_STATIC_COPY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E6, .hex);
pub const GL_DYNAMIC_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E8, .hex);
pub const GL_DYNAMIC_DRAW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E8, .hex);
pub const GL_DYNAMIC_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E9, .hex);
pub const GL_DYNAMIC_READ_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E9, .hex);
pub const GL_DYNAMIC_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EA, .hex);
pub const GL_DYNAMIC_COPY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EA, .hex);
pub const GL_PIXEL_PACK_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EB, .hex);
pub const GL_PIXEL_PACK_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EB, .hex);
pub const GL_PIXEL_PACK_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EB, .hex);
pub const GL_PIXEL_PACK_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EB, .hex);
pub const GL_PIXEL_UNPACK_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EC, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EC, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EC, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EC, .hex);
pub const GL_PIXEL_PACK_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88ED, .hex);
pub const GL_PIXEL_PACK_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88ED, .hex);
pub const GL_PIXEL_PACK_BUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88ED, .hex);
pub const GL_PIXEL_PACK_BUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88ED, .hex);
pub const GL_ETC1_SRGB8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EE, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EF, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EF, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EF, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EF, .hex);
pub const GL_DEPTH24_STENCIL8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F0, .hex);
pub const GL_DEPTH24_STENCIL8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F0, .hex);
pub const GL_DEPTH24_STENCIL8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F0, .hex);
pub const GL_TEXTURE_STENCIL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F1, .hex);
pub const GL_TEXTURE_STENCIL_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F1, .hex);
pub const GL_STENCIL_TAG_BITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F2, .hex);
pub const GL_STENCIL_CLEAR_TAG_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F3, .hex);
pub const GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F4, .hex);
pub const GL_MAX_PROGRAM_CALL_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F5, .hex);
pub const GL_MAX_PROGRAM_IF_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F6, .hex);
pub const GL_MAX_PROGRAM_LOOP_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F7, .hex);
pub const GL_MAX_PROGRAM_LOOP_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F8, .hex);
pub const GL_SRC1_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F9, .hex);
pub const GL_SRC1_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88F9, .hex);
pub const GL_ONE_MINUS_SRC1_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FA, .hex);
pub const GL_ONE_MINUS_SRC1_COLOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FA, .hex);
pub const GL_ONE_MINUS_SRC1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FB, .hex);
pub const GL_ONE_MINUS_SRC1_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FB, .hex);
pub const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FC, .hex);
pub const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FC, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FD, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FD, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FD, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FE, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FE, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FE, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FE, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FE, .hex);
pub const GL_MAX_ARRAY_TEXTURE_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FF, .hex);
pub const GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88FF, .hex);
pub const GL_MIN_PROGRAM_TEXEL_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8904, .hex);
pub const GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8904, .hex);
pub const GL_MIN_PROGRAM_TEXEL_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8904, .hex);
pub const GL_MAX_PROGRAM_TEXEL_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8905, .hex);
pub const GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8905, .hex);
pub const GL_MAX_PROGRAM_TEXEL_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8905, .hex);
pub const GL_PROGRAM_ATTRIB_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8906, .hex);
pub const GL_PROGRAM_RESULT_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8907, .hex);
pub const GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8908, .hex);
pub const GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8909, .hex);
pub const GL_STENCIL_TEST_TWO_SIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8910, .hex);
pub const GL_ACTIVE_STENCIL_FACE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8911, .hex);
pub const GL_MIRROR_CLAMP_TO_BORDER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8912, .hex);
pub const GL_SAMPLES_PASSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8914, .hex);
pub const GL_SAMPLES_PASSED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8914, .hex);
pub const GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8916, .hex);
pub const GL_GEOMETRY_LINKED_VERTICES_OUT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8916, .hex);
pub const GL_GEOMETRY_VERTICES_OUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8916, .hex);
pub const GL_GEOMETRY_INPUT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8917, .hex);
pub const GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8917, .hex);
pub const GL_GEOMETRY_LINKED_INPUT_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8917, .hex);
pub const GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8918, .hex);
pub const GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8918, .hex);
pub const GL_GEOMETRY_OUTPUT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8918, .hex);
pub const GL_SAMPLER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8919, .hex);
pub const GL_CLAMP_VERTEX_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891A, .hex);
pub const GL_CLAMP_VERTEX_COLOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891A, .hex);
pub const GL_CLAMP_FRAGMENT_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891B, .hex);
pub const GL_CLAMP_FRAGMENT_COLOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891B, .hex);
pub const GL_CLAMP_READ_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891C, .hex);
pub const GL_CLAMP_READ_COLOR_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891C, .hex);
pub const GL_FIXED_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891D, .hex);
pub const GL_FIXED_ONLY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891D, .hex);
pub const GL_TESS_CONTROL_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891E, .hex);
pub const GL_TESS_EVALUATION_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x891F, .hex);
pub const GL_FRAGMENT_SHADER_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8920, .hex);
pub const GL_REG_0_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8921, .hex);
pub const GL_REG_1_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8922, .hex);
pub const GL_REG_2_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8923, .hex);
pub const GL_REG_3_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8924, .hex);
pub const GL_REG_4_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8925, .hex);
pub const GL_REG_5_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8926, .hex);
pub const GL_REG_6_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8927, .hex);
pub const GL_REG_7_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8928, .hex);
pub const GL_REG_8_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8929, .hex);
pub const GL_REG_9_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892A, .hex);
pub const GL_REG_10_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892B, .hex);
pub const GL_REG_11_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892C, .hex);
pub const GL_REG_12_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892D, .hex);
pub const GL_REG_13_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892E, .hex);
pub const GL_REG_14_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x892F, .hex);
pub const GL_REG_15_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8930, .hex);
pub const GL_REG_16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8931, .hex);
pub const GL_REG_17_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8932, .hex);
pub const GL_REG_18_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8933, .hex);
pub const GL_REG_19_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8934, .hex);
pub const GL_REG_20_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8935, .hex);
pub const GL_REG_21_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8936, .hex);
pub const GL_REG_22_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8937, .hex);
pub const GL_REG_23_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8938, .hex);
pub const GL_REG_24_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8939, .hex);
pub const GL_REG_25_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893A, .hex);
pub const GL_REG_26_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893B, .hex);
pub const GL_REG_27_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893C, .hex);
pub const GL_REG_28_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893D, .hex);
pub const GL_REG_29_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893E, .hex);
pub const GL_REG_30_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x893F, .hex);
pub const GL_REG_31_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8940, .hex);
pub const GL_CON_0_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8941, .hex);
pub const GL_CON_1_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8942, .hex);
pub const GL_CON_2_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8943, .hex);
pub const GL_CON_3_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8944, .hex);
pub const GL_CON_4_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8945, .hex);
pub const GL_CON_5_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8946, .hex);
pub const GL_CON_6_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8947, .hex);
pub const GL_CON_7_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8948, .hex);
pub const GL_CON_8_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8949, .hex);
pub const GL_CON_9_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894A, .hex);
pub const GL_CON_10_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894B, .hex);
pub const GL_CON_11_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894C, .hex);
pub const GL_CON_12_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894D, .hex);
pub const GL_CON_13_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894E, .hex);
pub const GL_CON_14_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x894F, .hex);
pub const GL_CON_15_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8950, .hex);
pub const GL_CON_16_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8951, .hex);
pub const GL_CON_17_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8952, .hex);
pub const GL_CON_18_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8953, .hex);
pub const GL_CON_19_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8954, .hex);
pub const GL_CON_20_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8955, .hex);
pub const GL_CON_21_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8956, .hex);
pub const GL_CON_22_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8957, .hex);
pub const GL_CON_23_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8958, .hex);
pub const GL_CON_24_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8959, .hex);
pub const GL_CON_25_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895A, .hex);
pub const GL_CON_26_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895B, .hex);
pub const GL_CON_27_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895C, .hex);
pub const GL_CON_28_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895D, .hex);
pub const GL_CON_29_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895E, .hex);
pub const GL_CON_30_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x895F, .hex);
pub const GL_CON_31_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8960, .hex);
pub const GL_MOV_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8961, .hex);
pub const GL_ADD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8963, .hex);
pub const GL_MUL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8964, .hex);
pub const GL_SUB_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8965, .hex);
pub const GL_DOT3_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8966, .hex);
pub const GL_DOT4_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8967, .hex);
pub const GL_MAD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8968, .hex);
pub const GL_LERP_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8969, .hex);
pub const GL_CND_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896A, .hex);
pub const GL_CND0_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896B, .hex);
pub const GL_DOT2_ADD_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896C, .hex);
pub const GL_SECONDARY_INTERPOLATOR_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896D, .hex);
pub const GL_NUM_FRAGMENT_REGISTERS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896E, .hex);
pub const GL_NUM_FRAGMENT_CONSTANTS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x896F, .hex);
pub const GL_NUM_PASSES_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8970, .hex);
pub const GL_NUM_INSTRUCTIONS_PER_PASS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8971, .hex);
pub const GL_NUM_INSTRUCTIONS_TOTAL_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8972, .hex);
pub const GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8973, .hex);
pub const GL_NUM_LOOPBACK_COMPONENTS_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8974, .hex);
pub const GL_COLOR_ALPHA_PAIRING_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8975, .hex);
pub const GL_SWIZZLE_STR_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8976, .hex);
pub const GL_SWIZZLE_STQ_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8977, .hex);
pub const GL_SWIZZLE_STR_DR_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8978, .hex);
pub const GL_SWIZZLE_STQ_DQ_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8979, .hex);
pub const GL_SWIZZLE_STRQ_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x897A, .hex);
pub const GL_SWIZZLE_STRQ_DQ_ATI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x897B, .hex);
pub const GL_INTERLACE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8980, .hex);
pub const GL_INTERLACE_READ_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8981, .hex);
pub const GL_FORMAT_SUBSAMPLE_24_24_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8982, .hex);
pub const GL_FORMAT_SUBSAMPLE_244_244_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8983, .hex);
pub const GL_PACK_RESAMPLE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8984, .hex);
pub const GL_UNPACK_RESAMPLE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8985, .hex);
pub const GL_RESAMPLE_REPLICATE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8986, .hex);
pub const GL_RESAMPLE_ZERO_FILL_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8987, .hex);
pub const GL_RESAMPLE_AVERAGE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8988, .hex);
pub const GL_RESAMPLE_DECIMATE_OML = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8989, .hex);
pub const GL_POINT_SIZE_ARRAY_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898A, .hex);
pub const GL_POINT_SIZE_ARRAY_STRIDE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898B, .hex);
pub const GL_POINT_SIZE_ARRAY_POINTER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898C, .hex);
pub const GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898D, .hex);
pub const GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898E, .hex);
pub const GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x898F, .hex);
pub const GL_VERTEX_ATTRIB_MAP1_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A00, .hex);
pub const GL_VERTEX_ATTRIB_MAP2_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A01, .hex);
pub const GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A02, .hex);
pub const GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A03, .hex);
pub const GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A04, .hex);
pub const GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A05, .hex);
pub const GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A06, .hex);
pub const GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A07, .hex);
pub const GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A08, .hex);
pub const GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A09, .hex);
pub const GL_DRAW_PIXELS_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0A, .hex);
pub const GL_FENCE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0B, .hex);
pub const GL_ELEMENT_ARRAY_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0C, .hex);
pub const GL_ELEMENT_ARRAY_TYPE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0D, .hex);
pub const GL_ELEMENT_ARRAY_POINTER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0E, .hex);
pub const GL_COLOR_FLOAT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A0F, .hex);
pub const GL_UNIFORM_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A11, .hex);
pub const GL_BUFFER_SERIALIZED_MODIFY_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A12, .hex);
pub const GL_BUFFER_FLUSHING_UNMAP_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A13, .hex);
pub const GL_AUX_DEPTH_STENCIL_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A14, .hex);
pub const GL_PACK_ROW_BYTES_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A15, .hex);
pub const GL_UNPACK_ROW_BYTES_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A16, .hex);
pub const GL_RELEASED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A19, .hex);
pub const GL_VOLATILE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A1A, .hex);
pub const GL_RETAINED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A1B, .hex);
pub const GL_UNDEFINED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A1C, .hex);
pub const GL_PURGEABLE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A1D, .hex);
pub const GL_RGB_422_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A1F, .hex);
pub const GL_UNIFORM_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A28, .hex);
pub const GL_UNIFORM_BUFFER_START = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A29, .hex);
pub const GL_UNIFORM_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2A, .hex);
pub const GL_MAX_VERTEX_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2B, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2C, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2C, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2C, .hex);
pub const GL_MAX_FRAGMENT_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2D, .hex);
pub const GL_MAX_COMBINED_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2E, .hex);
pub const GL_MAX_UNIFORM_BUFFER_BINDINGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A2F, .hex);
pub const GL_MAX_UNIFORM_BLOCK_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A30, .hex);
pub const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A31, .hex);
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A32, .hex);
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A32, .hex);
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A32, .hex);
pub const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A33, .hex);
pub const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A34, .hex);
pub const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A35, .hex);
pub const GL_ACTIVE_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A36, .hex);
pub const GL_UNIFORM_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A37, .hex);
pub const GL_UNIFORM_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A38, .hex);
pub const GL_UNIFORM_NAME_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A39, .hex);
pub const GL_UNIFORM_BLOCK_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3A, .hex);
pub const GL_UNIFORM_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3B, .hex);
pub const GL_UNIFORM_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3C, .hex);
pub const GL_UNIFORM_MATRIX_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3D, .hex);
pub const GL_UNIFORM_IS_ROW_MAJOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3E, .hex);
pub const GL_UNIFORM_BLOCK_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A3F, .hex);
pub const GL_UNIFORM_BLOCK_DATA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A40, .hex);
pub const GL_UNIFORM_BLOCK_NAME_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A41, .hex);
pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A42, .hex);
pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A43, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A44, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A45, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A46, .hex);
pub const GL_TEXTURE_SRGB_DECODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A48, .hex);
pub const GL_DECODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A49, .hex);
pub const GL_SKIP_DECODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A4A, .hex);
pub const GL_PROGRAM_PIPELINE_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A4F, .hex);
pub const GL_RGB_RAW_422_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A51, .hex);
pub const GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A52, .hex);
pub const GL_SYNC_OBJECT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A53, .hex);
pub const GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A54, .hex);
pub const GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A55, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A56, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8A57, .hex);
pub const GL_FRAGMENT_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B30, .hex);
pub const GL_FRAGMENT_SHADER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B30, .hex);
pub const GL_VERTEX_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B31, .hex);
pub const GL_VERTEX_SHADER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B31, .hex);
pub const GL_PROGRAM_OBJECT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B40, .hex);
pub const GL_PROGRAM_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B40, .hex);
pub const GL_SHADER_OBJECT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B48, .hex);
pub const GL_SHADER_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B48, .hex);
pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B49, .hex);
pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B49, .hex);
pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4A, .hex);
pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4A, .hex);
pub const GL_MAX_VARYING_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4B, .hex);
pub const GL_MAX_VARYING_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4B, .hex);
pub const GL_MAX_VARYING_FLOATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4B, .hex);
pub const GL_MAX_VARYING_FLOATS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4B, .hex);
pub const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4C, .hex);
pub const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4C, .hex);
pub const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4D, .hex);
pub const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4D, .hex);
pub const GL_OBJECT_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4E, .hex);
pub const GL_OBJECT_SUBTYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4F, .hex);
pub const GL_SHADER_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4F, .hex);
pub const GL_FLOAT_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B50, .hex);
pub const GL_FLOAT_VEC2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B50, .hex);
pub const GL_FLOAT_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B51, .hex);
pub const GL_FLOAT_VEC3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B51, .hex);
pub const GL_FLOAT_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B52, .hex);
pub const GL_FLOAT_VEC4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B52, .hex);
pub const GL_INT_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B53, .hex);
pub const GL_INT_VEC2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B53, .hex);
pub const GL_INT_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B54, .hex);
pub const GL_INT_VEC3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B54, .hex);
pub const GL_INT_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B55, .hex);
pub const GL_INT_VEC4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B55, .hex);
pub const GL_BOOL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B56, .hex);
pub const GL_BOOL_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B56, .hex);
pub const GL_BOOL_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B57, .hex);
pub const GL_BOOL_VEC2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B57, .hex);
pub const GL_BOOL_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B58, .hex);
pub const GL_BOOL_VEC3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B58, .hex);
pub const GL_BOOL_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B59, .hex);
pub const GL_BOOL_VEC4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B59, .hex);
pub const GL_FLOAT_MAT2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5A, .hex);
pub const GL_FLOAT_MAT2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5A, .hex);
pub const GL_FLOAT_MAT3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5B, .hex);
pub const GL_FLOAT_MAT3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5B, .hex);
pub const GL_FLOAT_MAT4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5C, .hex);
pub const GL_FLOAT_MAT4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5C, .hex);
pub const GL_SAMPLER_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5D, .hex);
pub const GL_SAMPLER_1D_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5D, .hex);
pub const GL_SAMPLER_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5E, .hex);
pub const GL_SAMPLER_2D_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5E, .hex);
pub const GL_SAMPLER_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5F, .hex);
pub const GL_SAMPLER_3D_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5F, .hex);
pub const GL_SAMPLER_3D_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5F, .hex);
pub const GL_SAMPLER_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B60, .hex);
pub const GL_SAMPLER_CUBE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B60, .hex);
pub const GL_SAMPLER_1D_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B61, .hex);
pub const GL_SAMPLER_1D_SHADOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B61, .hex);
pub const GL_SAMPLER_2D_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B62, .hex);
pub const GL_SAMPLER_2D_SHADOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B62, .hex);
pub const GL_SAMPLER_2D_SHADOW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B62, .hex);
pub const GL_SAMPLER_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B63, .hex);
pub const GL_SAMPLER_2D_RECT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B63, .hex);
pub const GL_SAMPLER_2D_RECT_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B64, .hex);
pub const GL_SAMPLER_2D_RECT_SHADOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B64, .hex);
pub const GL_FLOAT_MAT2x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B65, .hex);
pub const GL_FLOAT_MAT2x3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B65, .hex);
pub const GL_FLOAT_MAT2x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B66, .hex);
pub const GL_FLOAT_MAT2x4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B66, .hex);
pub const GL_FLOAT_MAT3x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B67, .hex);
pub const GL_FLOAT_MAT3x2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B67, .hex);
pub const GL_FLOAT_MAT3x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B68, .hex);
pub const GL_FLOAT_MAT3x4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B68, .hex);
pub const GL_FLOAT_MAT4x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B69, .hex);
pub const GL_FLOAT_MAT4x2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B69, .hex);
pub const GL_FLOAT_MAT4x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B6A, .hex);
pub const GL_FLOAT_MAT4x3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B6A, .hex);
pub const GL_DELETE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B80, .hex);
pub const GL_OBJECT_DELETE_STATUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B80, .hex);
pub const GL_COMPILE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B81, .hex);
pub const GL_OBJECT_COMPILE_STATUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B81, .hex);
pub const GL_LINK_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B82, .hex);
pub const GL_OBJECT_LINK_STATUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B82, .hex);
pub const GL_OBJECT_VALIDATE_STATUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B83, .hex);
pub const GL_VALIDATE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B83, .hex);
pub const GL_INFO_LOG_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B84, .hex);
pub const GL_OBJECT_INFO_LOG_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B84, .hex);
pub const GL_ATTACHED_SHADERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B85, .hex);
pub const GL_OBJECT_ATTACHED_OBJECTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B85, .hex);
pub const GL_ACTIVE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B86, .hex);
pub const GL_OBJECT_ACTIVE_UNIFORMS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B86, .hex);
pub const GL_ACTIVE_UNIFORM_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B87, .hex);
pub const GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B87, .hex);
pub const GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B88, .hex);
pub const GL_SHADER_SOURCE_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B88, .hex);
pub const GL_ACTIVE_ATTRIBUTES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B89, .hex);
pub const GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B89, .hex);
pub const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8A, .hex);
pub const GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8A, .hex);
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8B, .hex);
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8B, .hex);
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8B, .hex);
pub const GL_SHADING_LANGUAGE_VERSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8C, .hex);
pub const GL_SHADING_LANGUAGE_VERSION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8C, .hex);
pub const GL_ACTIVE_PROGRAM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8D, .hex);
pub const GL_CURRENT_PROGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8D, .hex);
pub const GL_PALETTE4_RGB8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B90, .hex);
pub const GL_PALETTE4_RGBA8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B91, .hex);
pub const GL_PALETTE4_R5_G6_B5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B92, .hex);
pub const GL_PALETTE4_RGBA4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B93, .hex);
pub const GL_PALETTE4_RGB5_A1_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B94, .hex);
pub const GL_PALETTE8_RGB8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B95, .hex);
pub const GL_PALETTE8_RGBA8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B96, .hex);
pub const GL_PALETTE8_R5_G6_B5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B97, .hex);
pub const GL_PALETTE8_RGBA4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B98, .hex);
pub const GL_PALETTE8_RGB5_A1_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B99, .hex);
pub const GL_IMPLEMENTATION_COLOR_READ_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9A, .hex);
pub const GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9A, .hex);
pub const GL_IMPLEMENTATION_COLOR_READ_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9B, .hex);
pub const GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9B, .hex);
pub const GL_POINT_SIZE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9C, .hex);
pub const GL_TEXTURE_CROP_RECT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9D, .hex);
pub const GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9E, .hex);
pub const GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B9F, .hex);
pub const GL_FRAGMENT_PROGRAM_POSITION_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB0, .hex);
pub const GL_FRAGMENT_PROGRAM_CALLBACK_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB1, .hex);
pub const GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB2, .hex);
pub const GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB3, .hex);
pub const GL_VERTEX_PROGRAM_POSITION_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB4, .hex);
pub const GL_VERTEX_PROGRAM_CALLBACK_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB5, .hex);
pub const GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB6, .hex);
pub const GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB7, .hex);
pub const GL_TILE_RASTER_ORDER_FIXED_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB8, .hex);
pub const GL_TILE_RASTER_ORDER_INCREASING_X_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BB9, .hex);
pub const GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BBA, .hex);
pub const GL_FRAMEBUFFER_FLIP_Y_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BBB, .hex);
pub const GL_COUNTER_TYPE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC0, .hex);
pub const GL_COUNTER_RANGE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC1, .hex);
pub const GL_UNSIGNED_INT64_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC2, .hex);
pub const GL_PERCENTAGE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC3, .hex);
pub const GL_PERFMON_RESULT_AVAILABLE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC4, .hex);
pub const GL_PERFMON_RESULT_SIZE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC5, .hex);
pub const GL_PERFMON_RESULT_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BC6, .hex);
pub const GL_TEXTURE_WIDTH_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD2, .hex);
pub const GL_TEXTURE_HEIGHT_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD3, .hex);
pub const GL_TEXTURE_DEPTH_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD4, .hex);
pub const GL_TEXTURE_INTERNAL_FORMAT_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD5, .hex);
pub const GL_TEXTURE_FORMAT_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD6, .hex);
pub const GL_TEXTURE_TYPE_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD7, .hex);
pub const GL_TEXTURE_IMAGE_VALID_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD8, .hex);
pub const GL_TEXTURE_NUM_LEVELS_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BD9, .hex);
pub const GL_TEXTURE_TARGET_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BDA, .hex);
pub const GL_TEXTURE_OBJECT_VALID_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BDB, .hex);
pub const GL_STATE_RESTORE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BDC, .hex);
pub const GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BE7, .hex);
pub const GL_TEXTURE_PROTECTED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFA, .hex);
pub const GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFB, .hex);
pub const GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFC, .hex);
pub const GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFD, .hex);
pub const GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFE, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8BFF, .hex);
pub const GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C00, .hex);
pub const GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C01, .hex);
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C02, .hex);
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C03, .hex);
pub const GL_MODULATE_COLOR_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C04, .hex);
pub const GL_RECIP_ADD_SIGNED_ALPHA_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C05, .hex);
pub const GL_TEXTURE_ALPHA_MODULATE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C06, .hex);
pub const GL_FACTOR_ALPHA_MODULATE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C07, .hex);
pub const GL_FRAGMENT_ALPHA_MODULATE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C08, .hex);
pub const GL_ADD_BLEND_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C09, .hex);
pub const GL_SGX_BINARY_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C0A, .hex);
pub const GL_TEXTURE_RED_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C10, .hex);
pub const GL_TEXTURE_RED_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C10, .hex);
pub const GL_TEXTURE_GREEN_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C11, .hex);
pub const GL_TEXTURE_GREEN_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C11, .hex);
pub const GL_TEXTURE_BLUE_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C12, .hex);
pub const GL_TEXTURE_BLUE_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C12, .hex);
pub const GL_TEXTURE_ALPHA_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C13, .hex);
pub const GL_TEXTURE_ALPHA_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C13, .hex);
pub const GL_TEXTURE_LUMINANCE_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C14, .hex);
pub const GL_TEXTURE_LUMINANCE_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C14, .hex);
pub const GL_TEXTURE_INTENSITY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C15, .hex);
pub const GL_TEXTURE_INTENSITY_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C15, .hex);
pub const GL_TEXTURE_DEPTH_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C16, .hex);
pub const GL_TEXTURE_DEPTH_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C16, .hex);
pub const GL_UNSIGNED_NORMALIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C17, .hex);
pub const GL_UNSIGNED_NORMALIZED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C17, .hex);
pub const GL_UNSIGNED_NORMALIZED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C17, .hex);
pub const GL_TEXTURE_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C18, .hex);
pub const GL_TEXTURE_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C18, .hex);
pub const GL_PROXY_TEXTURE_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C19, .hex);
pub const GL_PROXY_TEXTURE_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C19, .hex);
pub const GL_TEXTURE_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1A, .hex);
pub const GL_TEXTURE_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1A, .hex);
pub const GL_PROXY_TEXTURE_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1B, .hex);
pub const GL_PROXY_TEXTURE_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1B, .hex);
pub const GL_TEXTURE_BINDING_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1C, .hex);
pub const GL_TEXTURE_BINDING_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1C, .hex);
pub const GL_TEXTURE_BINDING_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1D, .hex);
pub const GL_TEXTURE_BINDING_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C1D, .hex);
pub const GL_GEOMETRY_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C26, .hex);
pub const GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C27, .hex);
pub const GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C28, .hex);
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C29, .hex);
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C29, .hex);
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C29, .hex);
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C29, .hex);
pub const GL_TEXTURE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_TEXTURE_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2A, .hex);
pub const GL_MAX_TEXTURE_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2B, .hex);
pub const GL_MAX_TEXTURE_BUFFER_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2B, .hex);
pub const GL_MAX_TEXTURE_BUFFER_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2B, .hex);
pub const GL_MAX_TEXTURE_BUFFER_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2B, .hex);
pub const GL_TEXTURE_BINDING_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2C, .hex);
pub const GL_TEXTURE_BINDING_BUFFER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2C, .hex);
pub const GL_TEXTURE_BINDING_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2C, .hex);
pub const GL_TEXTURE_BINDING_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2C, .hex);
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2D, .hex);
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2D, .hex);
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2D, .hex);
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2D, .hex);
pub const GL_TEXTURE_BUFFER_FORMAT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2E, .hex);
pub const GL_TEXTURE_BUFFER_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2E, .hex);
pub const GL_ANY_SAMPLES_PASSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2F, .hex);
pub const GL_ANY_SAMPLES_PASSED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C2F, .hex);
pub const GL_SAMPLE_SHADING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C36, .hex);
pub const GL_SAMPLE_SHADING_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C36, .hex);
pub const GL_SAMPLE_SHADING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C36, .hex);
pub const GL_MIN_SAMPLE_SHADING_VALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C37, .hex);
pub const GL_MIN_SAMPLE_SHADING_VALUE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C37, .hex);
pub const GL_MIN_SAMPLE_SHADING_VALUE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C37, .hex);
pub const GL_R11F_G11F_B10F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3A, .hex);
pub const GL_R11F_G11F_B10F_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3A, .hex);
pub const GL_R11F_G11F_B10F_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3A, .hex);
pub const GL_UNSIGNED_INT_10F_11F_11F_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3B, .hex);
pub const GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3B, .hex);
pub const GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3B, .hex);
pub const GL_RGBA_SIGNED_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3C, .hex);
pub const GL_RGB9_E5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3D, .hex);
pub const GL_RGB9_E5_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3D, .hex);
pub const GL_RGB9_E5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3D, .hex);
pub const GL_UNSIGNED_INT_5_9_9_9_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3E, .hex);
pub const GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3E, .hex);
pub const GL_UNSIGNED_INT_5_9_9_9_REV_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3E, .hex);
pub const GL_TEXTURE_SHARED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3F, .hex);
pub const GL_TEXTURE_SHARED_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C3F, .hex);
pub const GL_SRGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C40, .hex);
pub const GL_SRGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C40, .hex);
pub const GL_SRGB8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C41, .hex);
pub const GL_SRGB8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C41, .hex);
pub const GL_SRGB8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C41, .hex);
pub const GL_SRGB_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C42, .hex);
pub const GL_SRGB_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C42, .hex);
pub const GL_SRGB8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C43, .hex);
pub const GL_SRGB8_ALPHA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C43, .hex);
pub const GL_SLUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C44, .hex);
pub const GL_SLUMINANCE_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C44, .hex);
pub const GL_SLUMINANCE_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C44, .hex);
pub const GL_SLUMINANCE8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C45, .hex);
pub const GL_SLUMINANCE8_ALPHA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C45, .hex);
pub const GL_SLUMINANCE8_ALPHA8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C45, .hex);
pub const GL_SLUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C46, .hex);
pub const GL_SLUMINANCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C46, .hex);
pub const GL_SLUMINANCE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C46, .hex);
pub const GL_SLUMINANCE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C47, .hex);
pub const GL_SLUMINANCE8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C47, .hex);
pub const GL_SLUMINANCE8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C47, .hex);
pub const GL_COMPRESSED_SRGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C48, .hex);
pub const GL_COMPRESSED_SRGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C48, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C49, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C49, .hex);
pub const GL_COMPRESSED_SLUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4A, .hex);
pub const GL_COMPRESSED_SLUMINANCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4A, .hex);
pub const GL_COMPRESSED_SLUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4B, .hex);
pub const GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4B, .hex);
pub const GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4C, .hex);
pub const GL_COMPRESSED_SRGB_S3TC_DXT1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4C, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4D, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4D, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4E, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4E, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4F, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4F, .hex);
pub const GL_COMPRESSED_LUMINANCE_LATC1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C70, .hex);
pub const GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C71, .hex);
pub const GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C72, .hex);
pub const GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C73, .hex);
pub const GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C74, .hex);
pub const GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C75, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C76, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C76, .hex);
pub const GL_BACK_PRIMARY_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C77, .hex);
pub const GL_BACK_SECONDARY_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C78, .hex);
pub const GL_TEXTURE_COORD_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C79, .hex);
pub const GL_CLIP_DISTANCE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7A, .hex);
pub const GL_VERTEX_ID_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7B, .hex);
pub const GL_PRIMITIVE_ID_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7C, .hex);
pub const GL_GENERIC_ATTRIB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7D, .hex);
pub const GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7E, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7F, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7F, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C7F, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C80, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C80, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C80, .hex);
pub const GL_ACTIVE_VARYINGS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C81, .hex);
pub const GL_ACTIVE_VARYING_MAX_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C82, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYINGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C83, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C83, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYINGS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C83, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C84, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C84, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C84, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C85, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C85, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C85, .hex);
pub const GL_TRANSFORM_FEEDBACK_RECORD_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C86, .hex);
pub const GL_PRIMITIVES_GENERATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C87, .hex);
pub const GL_PRIMITIVES_GENERATED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C87, .hex);
pub const GL_PRIMITIVES_GENERATED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C87, .hex);
pub const GL_PRIMITIVES_GENERATED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C87, .hex);
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C88, .hex);
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C88, .hex);
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C88, .hex);
pub const GL_RASTERIZER_DISCARD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C89, .hex);
pub const GL_RASTERIZER_DISCARD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C89, .hex);
pub const GL_RASTERIZER_DISCARD_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C89, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8A, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8A, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8A, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8B, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8B, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8B, .hex);
pub const GL_INTERLEAVED_ATTRIBS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8C, .hex);
pub const GL_INTERLEAVED_ATTRIBS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8C, .hex);
pub const GL_INTERLEAVED_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8C, .hex);
pub const GL_SEPARATE_ATTRIBS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8D, .hex);
pub const GL_SEPARATE_ATTRIBS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8D, .hex);
pub const GL_SEPARATE_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8D, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8E, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8E, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8E, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8F, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8F, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C8F, .hex);
pub const GL_ATC_RGB_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C92, .hex);
pub const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C93, .hex);
pub const GL_POINT_SPRITE_COORD_ORIGIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA0, .hex);
pub const GL_LOWER_LEFT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA1, .hex);
pub const GL_LOWER_LEFT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA1, .hex);
pub const GL_UPPER_LEFT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA2, .hex);
pub const GL_UPPER_LEFT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA2, .hex);
pub const GL_STENCIL_BACK_REF = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA3, .hex);
pub const GL_STENCIL_BACK_VALUE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA4, .hex);
pub const GL_STENCIL_BACK_WRITEMASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA5, .hex);
pub const GL_DRAW_FRAMEBUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_DRAW_FRAMEBUFFER_BINDING_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_DRAW_FRAMEBUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_DRAW_FRAMEBUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_FRAMEBUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_FRAMEBUFFER_BINDING_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_FRAMEBUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_FRAMEBUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA6, .hex);
pub const GL_RENDERBUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA7, .hex);
pub const GL_RENDERBUFFER_BINDING_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA7, .hex);
pub const GL_RENDERBUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA7, .hex);
pub const GL_RENDERBUFFER_BINDING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA7, .hex);
pub const GL_READ_FRAMEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA8, .hex);
pub const GL_READ_FRAMEBUFFER_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA8, .hex);
pub const GL_READ_FRAMEBUFFER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA8, .hex);
pub const GL_READ_FRAMEBUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA8, .hex);
pub const GL_READ_FRAMEBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA8, .hex);
pub const GL_DRAW_FRAMEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA9, .hex);
pub const GL_DRAW_FRAMEBUFFER_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA9, .hex);
pub const GL_DRAW_FRAMEBUFFER_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA9, .hex);
pub const GL_DRAW_FRAMEBUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA9, .hex);
pub const GL_DRAW_FRAMEBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA9, .hex);
pub const GL_READ_FRAMEBUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAA, .hex);
pub const GL_READ_FRAMEBUFFER_BINDING_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAA, .hex);
pub const GL_READ_FRAMEBUFFER_BINDING_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAA, .hex);
pub const GL_READ_FRAMEBUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAA, .hex);
pub const GL_READ_FRAMEBUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAA, .hex);
pub const GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_RENDERBUFFER_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_RENDERBUFFER_SAMPLES_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_RENDERBUFFER_SAMPLES_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_RENDERBUFFER_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_RENDERBUFFER_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAB, .hex);
pub const GL_DEPTH_COMPONENT32F = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAC, .hex);
pub const GL_DEPTH32F_STENCIL8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CAD, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD0, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD0, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD0, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD1, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD1, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD1, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD2, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD2, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD2, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD3, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD3, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD3, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD4, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD4, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD4, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD4, .hex);
pub const GL_FRAMEBUFFER_COMPLETE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD5, .hex);
pub const GL_FRAMEBUFFER_COMPLETE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD5, .hex);
pub const GL_FRAMEBUFFER_COMPLETE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD5, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD6, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD6, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD6, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD7, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD7, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD7, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD9, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD9, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CD9, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDA, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDA, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDB, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDB, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDB, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDC, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDC, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDC, .hex);
pub const GL_FRAMEBUFFER_UNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDD, .hex);
pub const GL_FRAMEBUFFER_UNSUPPORTED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDD, .hex);
pub const GL_FRAMEBUFFER_UNSUPPORTED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDD, .hex);
pub const GL_MAX_COLOR_ATTACHMENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDF, .hex);
pub const GL_MAX_COLOR_ATTACHMENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDF, .hex);
pub const GL_MAX_COLOR_ATTACHMENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CDF, .hex);
pub const GL_COLOR_ATTACHMENT0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE0, .hex);
pub const GL_COLOR_ATTACHMENT0_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE0, .hex);
pub const GL_COLOR_ATTACHMENT0_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE0, .hex);
pub const GL_COLOR_ATTACHMENT0_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE0, .hex);
pub const GL_COLOR_ATTACHMENT1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE1, .hex);
pub const GL_COLOR_ATTACHMENT1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE1, .hex);
pub const GL_COLOR_ATTACHMENT1_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE1, .hex);
pub const GL_COLOR_ATTACHMENT2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE2, .hex);
pub const GL_COLOR_ATTACHMENT2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE2, .hex);
pub const GL_COLOR_ATTACHMENT2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE2, .hex);
pub const GL_COLOR_ATTACHMENT3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE3, .hex);
pub const GL_COLOR_ATTACHMENT3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE3, .hex);
pub const GL_COLOR_ATTACHMENT3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE3, .hex);
pub const GL_COLOR_ATTACHMENT4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE4, .hex);
pub const GL_COLOR_ATTACHMENT4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE4, .hex);
pub const GL_COLOR_ATTACHMENT4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE4, .hex);
pub const GL_COLOR_ATTACHMENT5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE5, .hex);
pub const GL_COLOR_ATTACHMENT5_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE5, .hex);
pub const GL_COLOR_ATTACHMENT5_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE5, .hex);
pub const GL_COLOR_ATTACHMENT6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE6, .hex);
pub const GL_COLOR_ATTACHMENT6_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE6, .hex);
pub const GL_COLOR_ATTACHMENT6_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE6, .hex);
pub const GL_COLOR_ATTACHMENT7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE7, .hex);
pub const GL_COLOR_ATTACHMENT7_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE7, .hex);
pub const GL_COLOR_ATTACHMENT7_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE7, .hex);
pub const GL_COLOR_ATTACHMENT8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE8, .hex);
pub const GL_COLOR_ATTACHMENT8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE8, .hex);
pub const GL_COLOR_ATTACHMENT8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE8, .hex);
pub const GL_COLOR_ATTACHMENT9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE9, .hex);
pub const GL_COLOR_ATTACHMENT9_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE9, .hex);
pub const GL_COLOR_ATTACHMENT9_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CE9, .hex);
pub const GL_COLOR_ATTACHMENT10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEA, .hex);
pub const GL_COLOR_ATTACHMENT10_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEA, .hex);
pub const GL_COLOR_ATTACHMENT10_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEA, .hex);
pub const GL_COLOR_ATTACHMENT11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEB, .hex);
pub const GL_COLOR_ATTACHMENT11_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEB, .hex);
pub const GL_COLOR_ATTACHMENT11_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEB, .hex);
pub const GL_COLOR_ATTACHMENT12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEC, .hex);
pub const GL_COLOR_ATTACHMENT12_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEC, .hex);
pub const GL_COLOR_ATTACHMENT12_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEC, .hex);
pub const GL_COLOR_ATTACHMENT13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CED, .hex);
pub const GL_COLOR_ATTACHMENT13_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CED, .hex);
pub const GL_COLOR_ATTACHMENT13_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CED, .hex);
pub const GL_COLOR_ATTACHMENT14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEE, .hex);
pub const GL_COLOR_ATTACHMENT14_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEE, .hex);
pub const GL_COLOR_ATTACHMENT14_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEE, .hex);
pub const GL_COLOR_ATTACHMENT15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEF, .hex);
pub const GL_COLOR_ATTACHMENT15_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEF, .hex);
pub const GL_COLOR_ATTACHMENT15_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CEF, .hex);
pub const GL_COLOR_ATTACHMENT16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF0, .hex);
pub const GL_COLOR_ATTACHMENT17 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF1, .hex);
pub const GL_COLOR_ATTACHMENT18 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF2, .hex);
pub const GL_COLOR_ATTACHMENT19 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF3, .hex);
pub const GL_COLOR_ATTACHMENT20 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF4, .hex);
pub const GL_COLOR_ATTACHMENT21 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF5, .hex);
pub const GL_COLOR_ATTACHMENT22 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF6, .hex);
pub const GL_COLOR_ATTACHMENT23 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF7, .hex);
pub const GL_COLOR_ATTACHMENT24 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF8, .hex);
pub const GL_COLOR_ATTACHMENT25 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CF9, .hex);
pub const GL_COLOR_ATTACHMENT26 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFA, .hex);
pub const GL_COLOR_ATTACHMENT27 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFB, .hex);
pub const GL_COLOR_ATTACHMENT28 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFC, .hex);
pub const GL_COLOR_ATTACHMENT29 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFD, .hex);
pub const GL_COLOR_ATTACHMENT30 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFE, .hex);
pub const GL_COLOR_ATTACHMENT31 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CFF, .hex);
pub const GL_DEPTH_ATTACHMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D00, .hex);
pub const GL_DEPTH_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D00, .hex);
pub const GL_DEPTH_ATTACHMENT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D00, .hex);
pub const GL_STENCIL_ATTACHMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D20, .hex);
pub const GL_STENCIL_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D20, .hex);
pub const GL_STENCIL_ATTACHMENT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D20, .hex);
pub const GL_FRAMEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D40, .hex);
pub const GL_FRAMEBUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D40, .hex);
pub const GL_FRAMEBUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D40, .hex);
pub const GL_RENDERBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D41, .hex);
pub const GL_RENDERBUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D41, .hex);
pub const GL_RENDERBUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D41, .hex);
pub const GL_RENDERBUFFER_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D42, .hex);
pub const GL_RENDERBUFFER_WIDTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D42, .hex);
pub const GL_RENDERBUFFER_WIDTH_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D42, .hex);
pub const GL_RENDERBUFFER_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D43, .hex);
pub const GL_RENDERBUFFER_HEIGHT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D43, .hex);
pub const GL_RENDERBUFFER_HEIGHT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D43, .hex);
pub const GL_RENDERBUFFER_INTERNAL_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D44, .hex);
pub const GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D44, .hex);
pub const GL_RENDERBUFFER_INTERNAL_FORMAT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D44, .hex);
pub const GL_STENCIL_INDEX1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D46, .hex);
pub const GL_STENCIL_INDEX1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D46, .hex);
pub const GL_STENCIL_INDEX1_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D46, .hex);
pub const GL_STENCIL_INDEX4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D47, .hex);
pub const GL_STENCIL_INDEX4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D47, .hex);
pub const GL_STENCIL_INDEX4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D47, .hex);
pub const GL_STENCIL_INDEX8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D48, .hex);
pub const GL_STENCIL_INDEX8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D48, .hex);
pub const GL_STENCIL_INDEX8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D48, .hex);
pub const GL_STENCIL_INDEX16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D49, .hex);
pub const GL_STENCIL_INDEX16_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D49, .hex);
pub const GL_RENDERBUFFER_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D50, .hex);
pub const GL_RENDERBUFFER_RED_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D50, .hex);
pub const GL_RENDERBUFFER_RED_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D50, .hex);
pub const GL_RENDERBUFFER_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D51, .hex);
pub const GL_RENDERBUFFER_GREEN_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D51, .hex);
pub const GL_RENDERBUFFER_GREEN_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D51, .hex);
pub const GL_RENDERBUFFER_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D52, .hex);
pub const GL_RENDERBUFFER_BLUE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D52, .hex);
pub const GL_RENDERBUFFER_BLUE_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D52, .hex);
pub const GL_RENDERBUFFER_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D53, .hex);
pub const GL_RENDERBUFFER_ALPHA_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D53, .hex);
pub const GL_RENDERBUFFER_ALPHA_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D53, .hex);
pub const GL_RENDERBUFFER_DEPTH_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D54, .hex);
pub const GL_RENDERBUFFER_DEPTH_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D54, .hex);
pub const GL_RENDERBUFFER_DEPTH_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D54, .hex);
pub const GL_RENDERBUFFER_STENCIL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D55, .hex);
pub const GL_RENDERBUFFER_STENCIL_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D55, .hex);
pub const GL_RENDERBUFFER_STENCIL_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D55, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D56, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D56, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D56, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D56, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D56, .hex);
pub const GL_MAX_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D57, .hex);
pub const GL_MAX_SAMPLES_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D57, .hex);
pub const GL_MAX_SAMPLES_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D57, .hex);
pub const GL_MAX_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D57, .hex);
pub const GL_MAX_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D57, .hex);
pub const GL_TEXTURE_GEN_STR_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D60, .hex);
pub const GL_HALF_FLOAT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D61, .hex);
pub const GL_RGB565 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D62, .hex);
pub const GL_RGB565_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D62, .hex);
pub const GL_ETC1_RGB8_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D64, .hex);
pub const GL_TEXTURE_EXTERNAL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D65, .hex);
pub const GL_SAMPLER_EXTERNAL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D66, .hex);
pub const GL_TEXTURE_BINDING_EXTERNAL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D67, .hex);
pub const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D68, .hex);
pub const GL_PRIMITIVE_RESTART_FIXED_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D69, .hex);
pub const GL_ANY_SAMPLES_PASSED_CONSERVATIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D6A, .hex);
pub const GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D6A, .hex);
pub const GL_MAX_ELEMENT_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D6B, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D6C, .hex);
pub const GL_RGBA32UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D70, .hex);
pub const GL_RGBA32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D70, .hex);
pub const GL_RGB32UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D71, .hex);
pub const GL_RGB32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D71, .hex);
pub const GL_ALPHA32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D72, .hex);
pub const GL_INTENSITY32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D73, .hex);
pub const GL_LUMINANCE32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D74, .hex);
pub const GL_LUMINANCE_ALPHA32UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D75, .hex);
pub const GL_RGBA16UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D76, .hex);
pub const GL_RGBA16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D76, .hex);
pub const GL_RGB16UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D77, .hex);
pub const GL_RGB16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D77, .hex);
pub const GL_ALPHA16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D78, .hex);
pub const GL_INTENSITY16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D79, .hex);
pub const GL_LUMINANCE16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7A, .hex);
pub const GL_LUMINANCE_ALPHA16UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7B, .hex);
pub const GL_RGBA8UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7C, .hex);
pub const GL_RGBA8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7C, .hex);
pub const GL_RGB8UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7D, .hex);
pub const GL_RGB8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7D, .hex);
pub const GL_ALPHA8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7E, .hex);
pub const GL_INTENSITY8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D7F, .hex);
pub const GL_LUMINANCE8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D80, .hex);
pub const GL_LUMINANCE_ALPHA8UI_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D81, .hex);
pub const GL_RGBA32I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D82, .hex);
pub const GL_RGBA32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D82, .hex);
pub const GL_RGB32I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D83, .hex);
pub const GL_RGB32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D83, .hex);
pub const GL_ALPHA32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D84, .hex);
pub const GL_INTENSITY32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D85, .hex);
pub const GL_LUMINANCE32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D86, .hex);
pub const GL_LUMINANCE_ALPHA32I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D87, .hex);
pub const GL_RGBA16I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D88, .hex);
pub const GL_RGBA16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D88, .hex);
pub const GL_RGB16I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D89, .hex);
pub const GL_RGB16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D89, .hex);
pub const GL_ALPHA16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8A, .hex);
pub const GL_INTENSITY16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8B, .hex);
pub const GL_LUMINANCE16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8C, .hex);
pub const GL_LUMINANCE_ALPHA16I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8D, .hex);
pub const GL_RGBA8I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8E, .hex);
pub const GL_RGBA8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8E, .hex);
pub const GL_RGB8I = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8F, .hex);
pub const GL_RGB8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D8F, .hex);
pub const GL_ALPHA8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D90, .hex);
pub const GL_INTENSITY8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D91, .hex);
pub const GL_LUMINANCE8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D92, .hex);
pub const GL_LUMINANCE_ALPHA8I_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D93, .hex);
pub const GL_RED_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D94, .hex);
pub const GL_RED_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D94, .hex);
pub const GL_GREEN_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D95, .hex);
pub const GL_GREEN_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D95, .hex);
pub const GL_BLUE_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D96, .hex);
pub const GL_BLUE_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D96, .hex);
pub const GL_ALPHA_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D97, .hex);
pub const GL_ALPHA_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D97, .hex);
pub const GL_RGB_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D98, .hex);
pub const GL_RGB_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D98, .hex);
pub const GL_RGBA_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D99, .hex);
pub const GL_RGBA_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D99, .hex);
pub const GL_BGR_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9A, .hex);
pub const GL_BGR_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9A, .hex);
pub const GL_BGRA_INTEGER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9B, .hex);
pub const GL_BGRA_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9B, .hex);
pub const GL_LUMINANCE_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9C, .hex);
pub const GL_LUMINANCE_ALPHA_INTEGER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9D, .hex);
pub const GL_RGBA_INTEGER_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9E, .hex);
pub const GL_INT_2_10_10_10_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8D9F, .hex);
pub const GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA0, .hex);
pub const GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA1, .hex);
pub const GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA2, .hex);
pub const GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA3, .hex);
pub const GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA4, .hex);
pub const GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA5, .hex);
pub const GL_MAX_PROGRAM_GENERIC_RESULTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA6, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA7, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA7, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA7, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA7, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA8, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA8, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA8, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA8, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA9, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DA9, .hex);
pub const GL_LAYER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAA, .hex);
pub const GL_DEPTH_COMPONENT32F_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAB, .hex);
pub const GL_DEPTH32F_STENCIL8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAC, .hex);
pub const GL_FLOAT_32_UNSIGNED_INT_24_8_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAD, .hex);
pub const GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAD, .hex);
pub const GL_SHADER_INCLUDE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAE, .hex);
pub const GL_DEPTH_BUFFER_FLOAT_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DAF, .hex);
pub const GL_FRAMEBUFFER_SRGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DB9, .hex);
pub const GL_FRAMEBUFFER_SRGB_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DB9, .hex);
pub const GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBA, .hex);
pub const GL_COMPRESSED_RED_RGTC1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBB, .hex);
pub const GL_COMPRESSED_RED_RGTC1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBB, .hex);
pub const GL_COMPRESSED_SIGNED_RED_RGTC1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBC, .hex);
pub const GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBC, .hex);
pub const GL_COMPRESSED_RED_GREEN_RGTC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBD, .hex);
pub const GL_COMPRESSED_RG_RGTC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBD, .hex);
pub const GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBE, .hex);
pub const GL_COMPRESSED_SIGNED_RG_RGTC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DBE, .hex);
pub const GL_SAMPLER_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC0, .hex);
pub const GL_SAMPLER_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC0, .hex);
pub const GL_SAMPLER_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC1, .hex);
pub const GL_SAMPLER_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC1, .hex);
pub const GL_SAMPLER_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC2, .hex);
pub const GL_SAMPLER_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC2, .hex);
pub const GL_SAMPLER_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC2, .hex);
pub const GL_SAMPLER_1D_ARRAY_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC3, .hex);
pub const GL_SAMPLER_1D_ARRAY_SHADOW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC3, .hex);
pub const GL_SAMPLER_2D_ARRAY_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC4, .hex);
pub const GL_SAMPLER_2D_ARRAY_SHADOW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC4, .hex);
pub const GL_SAMPLER_2D_ARRAY_SHADOW_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC4, .hex);
pub const GL_SAMPLER_CUBE_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC5, .hex);
pub const GL_SAMPLER_CUBE_SHADOW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC5, .hex);
pub const GL_SAMPLER_CUBE_SHADOW_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC5, .hex);
pub const GL_UNSIGNED_INT_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC6, .hex);
pub const GL_UNSIGNED_INT_VEC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC6, .hex);
pub const GL_UNSIGNED_INT_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC7, .hex);
pub const GL_UNSIGNED_INT_VEC3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC7, .hex);
pub const GL_UNSIGNED_INT_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC8, .hex);
pub const GL_UNSIGNED_INT_VEC4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC8, .hex);
pub const GL_INT_SAMPLER_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC9, .hex);
pub const GL_INT_SAMPLER_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DC9, .hex);
pub const GL_INT_SAMPLER_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCA, .hex);
pub const GL_INT_SAMPLER_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCA, .hex);
pub const GL_INT_SAMPLER_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCB, .hex);
pub const GL_INT_SAMPLER_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCB, .hex);
pub const GL_INT_SAMPLER_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCC, .hex);
pub const GL_INT_SAMPLER_CUBE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCC, .hex);
pub const GL_INT_SAMPLER_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCD, .hex);
pub const GL_INT_SAMPLER_2D_RECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCD, .hex);
pub const GL_INT_SAMPLER_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCE, .hex);
pub const GL_INT_SAMPLER_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCE, .hex);
pub const GL_INT_SAMPLER_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCF, .hex);
pub const GL_INT_SAMPLER_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DCF, .hex);
pub const GL_INT_SAMPLER_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD0, .hex);
pub const GL_INT_SAMPLER_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD0, .hex);
pub const GL_INT_SAMPLER_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD0, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD1, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD1, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD2, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD2, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD3, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD3, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD4, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD4, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD5, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD5, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD6, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD6, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD7, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD7, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD8, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD8, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD8, .hex);
pub const GL_GEOMETRY_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD9, .hex);
pub const GL_GEOMETRY_SHADER_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD9, .hex);
pub const GL_GEOMETRY_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD9, .hex);
pub const GL_GEOMETRY_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DD9, .hex);
pub const GL_GEOMETRY_VERTICES_OUT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDA, .hex);
pub const GL_GEOMETRY_VERTICES_OUT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDA, .hex);
pub const GL_GEOMETRY_INPUT_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDB, .hex);
pub const GL_GEOMETRY_INPUT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDB, .hex);
pub const GL_GEOMETRY_OUTPUT_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDC, .hex);
pub const GL_GEOMETRY_OUTPUT_TYPE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDC, .hex);
pub const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDD, .hex);
pub const GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDD, .hex);
pub const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDE, .hex);
pub const GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDE, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDF, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDF, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDF, .hex);
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DDF, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE0, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE0, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE0, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE0, .hex);
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE1, .hex);
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE1, .hex);
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE1, .hex);
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE1, .hex);
pub const GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE2, .hex);
pub const GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE3, .hex);
pub const GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE4, .hex);
pub const GL_ACTIVE_SUBROUTINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE5, .hex);
pub const GL_ACTIVE_SUBROUTINE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE6, .hex);
pub const GL_MAX_SUBROUTINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE7, .hex);
pub const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE8, .hex);
pub const GL_NAMED_STRING_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DE9, .hex);
pub const GL_NAMED_STRING_TYPE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DEA, .hex);
pub const GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DED, .hex);
pub const GL_UNIFORM_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DEE, .hex);
pub const GL_UNIFORM_BUFFER_BINDING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DEF, .hex);
pub const GL_LOW_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF0, .hex);
pub const GL_MEDIUM_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF1, .hex);
pub const GL_HIGH_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF2, .hex);
pub const GL_LOW_INT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF3, .hex);
pub const GL_MEDIUM_INT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF4, .hex);
pub const GL_HIGH_INT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF5, .hex);
pub const GL_UNSIGNED_INT_10_10_10_2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF6, .hex);
pub const GL_INT_10_10_10_2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF7, .hex);
pub const GL_SHADER_BINARY_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF8, .hex);
pub const GL_NUM_SHADER_BINARY_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DF9, .hex);
pub const GL_SHADER_COMPILER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DFA, .hex);
pub const GL_MAX_VERTEX_UNIFORM_VECTORS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DFB, .hex);
pub const GL_MAX_VARYING_VECTORS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DFC, .hex);
pub const GL_MAX_FRAGMENT_UNIFORM_VECTORS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8DFD, .hex);
pub const GL_RENDERBUFFER_COLOR_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E10, .hex);
pub const GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E11, .hex);
pub const GL_MULTISAMPLE_COVERAGE_MODES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E12, .hex);
pub const GL_QUERY_WAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E13, .hex);
pub const GL_QUERY_WAIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E13, .hex);
pub const GL_QUERY_NO_WAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E14, .hex);
pub const GL_QUERY_NO_WAIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E14, .hex);
pub const GL_QUERY_BY_REGION_WAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E15, .hex);
pub const GL_QUERY_BY_REGION_WAIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E15, .hex);
pub const GL_QUERY_BY_REGION_NO_WAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E16, .hex);
pub const GL_QUERY_BY_REGION_NO_WAIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E16, .hex);
pub const GL_QUERY_WAIT_INVERTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E17, .hex);
pub const GL_QUERY_NO_WAIT_INVERTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E18, .hex);
pub const GL_QUERY_BY_REGION_WAIT_INVERTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E19, .hex);
pub const GL_QUERY_BY_REGION_NO_WAIT_INVERTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1A, .hex);
pub const GL_POLYGON_OFFSET_CLAMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1B, .hex);
pub const GL_POLYGON_OFFSET_CLAMP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1B, .hex);
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1E, .hex);
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1E, .hex);
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1E, .hex);
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1F, .hex);
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1F, .hex);
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E1F, .hex);
pub const GL_COLOR_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E20, .hex);
pub const GL_TRANSFORM_FEEDBACK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E22, .hex);
pub const GL_TRANSFORM_FEEDBACK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E22, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E23, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E23, .hex);
pub const GL_TRANSFORM_FEEDBACK_PAUSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E23, .hex);
pub const GL_TRANSFORM_FEEDBACK_ACTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E24, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E24, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E24, .hex);
pub const GL_TRANSFORM_FEEDBACK_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E25, .hex);
pub const GL_TRANSFORM_FEEDBACK_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E25, .hex);
pub const GL_FRAME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E26, .hex);
pub const GL_FIELDS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E27, .hex);
pub const GL_CURRENT_TIME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E28, .hex);
pub const GL_TIMESTAMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E28, .hex);
pub const GL_TIMESTAMP_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E28, .hex);
pub const GL_NUM_FILL_STREAMS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E29, .hex);
pub const GL_PRESENT_TIME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2A, .hex);
pub const GL_PRESENT_DURATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2B, .hex);
pub const GL_DEPTH_COMPONENT16_NONLINEAR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2C, .hex);
pub const GL_PROGRAM_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2D, .hex);
pub const GL_TRANSPOSE_PROGRAM_MATRIX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2E, .hex);
pub const GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E2F, .hex);
pub const GL_TEXTURE_SWIZZLE_R = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E42, .hex);
pub const GL_TEXTURE_SWIZZLE_R_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E42, .hex);
pub const GL_TEXTURE_SWIZZLE_G = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E43, .hex);
pub const GL_TEXTURE_SWIZZLE_G_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E43, .hex);
pub const GL_TEXTURE_SWIZZLE_B = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E44, .hex);
pub const GL_TEXTURE_SWIZZLE_B_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E44, .hex);
pub const GL_TEXTURE_SWIZZLE_A = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E45, .hex);
pub const GL_TEXTURE_SWIZZLE_A_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E45, .hex);
pub const GL_TEXTURE_SWIZZLE_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E46, .hex);
pub const GL_TEXTURE_SWIZZLE_RGBA_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E46, .hex);
pub const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E47, .hex);
pub const GL_ACTIVE_SUBROUTINE_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E48, .hex);
pub const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E49, .hex);
pub const GL_NUM_COMPATIBLE_SUBROUTINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4A, .hex);
pub const GL_COMPATIBLE_SUBROUTINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4B, .hex);
pub const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4C, .hex);
pub const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4C, .hex);
pub const GL_FIRST_VERTEX_CONVENTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4D, .hex);
pub const GL_FIRST_VERTEX_CONVENTION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4D, .hex);
pub const GL_FIRST_VERTEX_CONVENTION_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4D, .hex);
pub const GL_LAST_VERTEX_CONVENTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4E, .hex);
pub const GL_LAST_VERTEX_CONVENTION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4E, .hex);
pub const GL_LAST_VERTEX_CONVENTION_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4E, .hex);
pub const GL_PROVOKING_VERTEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4F, .hex);
pub const GL_PROVOKING_VERTEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E4F, .hex);
pub const GL_SAMPLE_LOCATION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E50, .hex);
pub const GL_SAMPLE_LOCATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E50, .hex);
pub const GL_SAMPLE_POSITION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E50, .hex);
pub const GL_SAMPLE_POSITION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E50, .hex);
pub const GL_SAMPLE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E51, .hex);
pub const GL_SAMPLE_MASK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E51, .hex);
pub const GL_SAMPLE_MASK_VALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E52, .hex);
pub const GL_SAMPLE_MASK_VALUE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E52, .hex);
pub const GL_TEXTURE_BINDING_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E53, .hex);
pub const GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E54, .hex);
pub const GL_TEXTURE_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E55, .hex);
pub const GL_SAMPLER_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E56, .hex);
pub const GL_INT_SAMPLER_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E57, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E58, .hex);
pub const GL_MAX_SAMPLE_MASK_WORDS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E59, .hex);
pub const GL_MAX_SAMPLE_MASK_WORDS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E59, .hex);
pub const GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5A, .hex);
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5A, .hex);
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5A, .hex);
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5A, .hex);
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5B, .hex);
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5B, .hex);
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5B, .hex);
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5C, .hex);
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5C, .hex);
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5C, .hex);
pub const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5D, .hex);
pub const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5D, .hex);
pub const GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5D, .hex);
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5E, .hex);
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5E, .hex);
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5E, .hex);
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5F, .hex);
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5F, .hex);
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E5F, .hex);
pub const GL_MAX_MESH_UNIFORM_BLOCKS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E60, .hex);
pub const GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E61, .hex);
pub const GL_MAX_MESH_IMAGE_UNIFORMS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E62, .hex);
pub const GL_MAX_MESH_UNIFORM_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E63, .hex);
pub const GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E64, .hex);
pub const GL_MAX_MESH_ATOMIC_COUNTERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E65, .hex);
pub const GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E66, .hex);
pub const GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E67, .hex);
pub const GL_MAX_TASK_UNIFORM_BLOCKS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E68, .hex);
pub const GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E69, .hex);
pub const GL_MAX_TASK_IMAGE_UNIFORMS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6A, .hex);
pub const GL_MAX_TASK_UNIFORM_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6B, .hex);
pub const GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6C, .hex);
pub const GL_MAX_TASK_ATOMIC_COUNTERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6D, .hex);
pub const GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6E, .hex);
pub const GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E6F, .hex);
pub const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E70, .hex);
pub const GL_MAX_VERTEX_STREAMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E71, .hex);
pub const GL_PATCH_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E72, .hex);
pub const GL_PATCH_VERTICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E72, .hex);
pub const GL_PATCH_VERTICES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E72, .hex);
pub const GL_PATCH_DEFAULT_INNER_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E73, .hex);
pub const GL_PATCH_DEFAULT_INNER_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E73, .hex);
pub const GL_PATCH_DEFAULT_OUTER_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E74, .hex);
pub const GL_PATCH_DEFAULT_OUTER_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E74, .hex);
pub const GL_TESS_CONTROL_OUTPUT_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E75, .hex);
pub const GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E75, .hex);
pub const GL_TESS_CONTROL_OUTPUT_VERTICES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E75, .hex);
pub const GL_TESS_GEN_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E76, .hex);
pub const GL_TESS_GEN_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E76, .hex);
pub const GL_TESS_GEN_MODE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E76, .hex);
pub const GL_TESS_GEN_SPACING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E77, .hex);
pub const GL_TESS_GEN_SPACING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E77, .hex);
pub const GL_TESS_GEN_SPACING_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E77, .hex);
pub const GL_TESS_GEN_VERTEX_ORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E78, .hex);
pub const GL_TESS_GEN_VERTEX_ORDER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E78, .hex);
pub const GL_TESS_GEN_VERTEX_ORDER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E78, .hex);
pub const GL_TESS_GEN_POINT_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E79, .hex);
pub const GL_TESS_GEN_POINT_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E79, .hex);
pub const GL_TESS_GEN_POINT_MODE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E79, .hex);
pub const GL_ISOLINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7A, .hex);
pub const GL_ISOLINES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7A, .hex);
pub const GL_ISOLINES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7A, .hex);
pub const GL_FRACTIONAL_ODD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7B, .hex);
pub const GL_FRACTIONAL_ODD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7B, .hex);
pub const GL_FRACTIONAL_ODD_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7B, .hex);
pub const GL_FRACTIONAL_EVEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7C, .hex);
pub const GL_FRACTIONAL_EVEN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7C, .hex);
pub const GL_FRACTIONAL_EVEN_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7C, .hex);
pub const GL_MAX_PATCH_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7D, .hex);
pub const GL_MAX_PATCH_VERTICES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7D, .hex);
pub const GL_MAX_PATCH_VERTICES_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7D, .hex);
pub const GL_MAX_TESS_GEN_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7E, .hex);
pub const GL_MAX_TESS_GEN_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7E, .hex);
pub const GL_MAX_TESS_GEN_LEVEL_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7E, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7F, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7F, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E7F, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E80, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E80, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E80, .hex);
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E81, .hex);
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E81, .hex);
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E81, .hex);
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E82, .hex);
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E82, .hex);
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E82, .hex);
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E83, .hex);
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E83, .hex);
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E83, .hex);
pub const GL_MAX_TESS_PATCH_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E84, .hex);
pub const GL_MAX_TESS_PATCH_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E84, .hex);
pub const GL_MAX_TESS_PATCH_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E84, .hex);
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E85, .hex);
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E85, .hex);
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E85, .hex);
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E86, .hex);
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E86, .hex);
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E86, .hex);
pub const GL_TESS_EVALUATION_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E87, .hex);
pub const GL_TESS_EVALUATION_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E87, .hex);
pub const GL_TESS_EVALUATION_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E87, .hex);
pub const GL_TESS_CONTROL_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E88, .hex);
pub const GL_TESS_CONTROL_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E88, .hex);
pub const GL_TESS_CONTROL_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E88, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E89, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E89, .hex);
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E89, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8A, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8A, .hex);
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8A, .hex);
pub const GL_COMPRESSED_RGBA_BPTC_UNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8C, .hex);
pub const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8C, .hex);
pub const GL_COMPRESSED_RGBA_BPTC_UNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8C, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8D, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8D, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8D, .hex);
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8E, .hex);
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8E, .hex);
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8E, .hex);
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8F, .hex);
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8F, .hex);
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8E8F, .hex);
pub const GL_COVERAGE_COMPONENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED0, .hex);
pub const GL_COVERAGE_COMPONENT4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED1, .hex);
pub const GL_COVERAGE_ATTACHMENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED2, .hex);
pub const GL_COVERAGE_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED3, .hex);
pub const GL_COVERAGE_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED4, .hex);
pub const GL_COVERAGE_ALL_FRAGMENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED5, .hex);
pub const GL_COVERAGE_EDGE_FRAGMENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED6, .hex);
pub const GL_COVERAGE_AUTOMATIC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ED7, .hex);
pub const GL_INCLUSIVE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F10, .hex);
pub const GL_EXCLUSIVE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F11, .hex);
pub const GL_WINDOW_RECTANGLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F12, .hex);
pub const GL_WINDOW_RECTANGLE_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F13, .hex);
pub const GL_MAX_WINDOW_RECTANGLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F14, .hex);
pub const GL_NUM_WINDOW_RECTANGLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F15, .hex);
pub const GL_BUFFER_GPU_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F1D, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F1E, .hex);
pub const GL_ELEMENT_ARRAY_UNIFIED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F1F, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F20, .hex);
pub const GL_VERTEX_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F21, .hex);
pub const GL_NORMAL_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F22, .hex);
pub const GL_COLOR_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F23, .hex);
pub const GL_INDEX_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F24, .hex);
pub const GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F25, .hex);
pub const GL_EDGE_FLAG_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F26, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F27, .hex);
pub const GL_FOG_COORD_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F28, .hex);
pub const GL_ELEMENT_ARRAY_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F29, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2A, .hex);
pub const GL_VERTEX_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2B, .hex);
pub const GL_NORMAL_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2C, .hex);
pub const GL_COLOR_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2D, .hex);
pub const GL_INDEX_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2E, .hex);
pub const GL_TEXTURE_COORD_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F2F, .hex);
pub const GL_EDGE_FLAG_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F30, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F31, .hex);
pub const GL_FOG_COORD_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F32, .hex);
pub const GL_ELEMENT_ARRAY_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F33, .hex);
pub const GL_GPU_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F34, .hex);
pub const GL_MAX_SHADER_BUFFER_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F35, .hex);
pub const GL_COPY_READ_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F36, .hex);
pub const GL_COPY_READ_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F36, .hex);
pub const GL_COPY_READ_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F36, .hex);
pub const GL_COPY_WRITE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F37, .hex);
pub const GL_COPY_WRITE_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F37, .hex);
pub const GL_COPY_WRITE_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F37, .hex);
pub const GL_MAX_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F38, .hex);
pub const GL_MAX_IMAGE_UNITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F38, .hex);
pub const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F39, .hex);
pub const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F39, .hex);
pub const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F39, .hex);
pub const GL_IMAGE_BINDING_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3A, .hex);
pub const GL_IMAGE_BINDING_NAME_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3A, .hex);
pub const GL_IMAGE_BINDING_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3B, .hex);
pub const GL_IMAGE_BINDING_LEVEL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3B, .hex);
pub const GL_IMAGE_BINDING_LAYERED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3C, .hex);
pub const GL_IMAGE_BINDING_LAYERED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3C, .hex);
pub const GL_IMAGE_BINDING_LAYER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3D, .hex);
pub const GL_IMAGE_BINDING_LAYER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3D, .hex);
pub const GL_IMAGE_BINDING_ACCESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3E, .hex);
pub const GL_IMAGE_BINDING_ACCESS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3E, .hex);
pub const GL_DRAW_INDIRECT_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F3F, .hex);
pub const GL_DRAW_INDIRECT_UNIFIED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F40, .hex);
pub const GL_DRAW_INDIRECT_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F41, .hex);
pub const GL_DRAW_INDIRECT_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F42, .hex);
pub const GL_DRAW_INDIRECT_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F43, .hex);
pub const GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F44, .hex);
pub const GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F45, .hex);
pub const GL_DOUBLE_MAT2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F46, .hex);
pub const GL_DOUBLE_MAT2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F46, .hex);
pub const GL_DOUBLE_MAT3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F47, .hex);
pub const GL_DOUBLE_MAT3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F47, .hex);
pub const GL_DOUBLE_MAT4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F48, .hex);
pub const GL_DOUBLE_MAT4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F48, .hex);
pub const GL_DOUBLE_MAT2x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F49, .hex);
pub const GL_DOUBLE_MAT2x3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F49, .hex);
pub const GL_DOUBLE_MAT2x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4A, .hex);
pub const GL_DOUBLE_MAT2x4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4A, .hex);
pub const GL_DOUBLE_MAT3x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4B, .hex);
pub const GL_DOUBLE_MAT3x2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4B, .hex);
pub const GL_DOUBLE_MAT3x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4C, .hex);
pub const GL_DOUBLE_MAT3x4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4C, .hex);
pub const GL_DOUBLE_MAT4x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4D, .hex);
pub const GL_DOUBLE_MAT4x2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4D, .hex);
pub const GL_DOUBLE_MAT4x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4E, .hex);
pub const GL_DOUBLE_MAT4x3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4E, .hex);
pub const GL_VERTEX_BINDING_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F4F, .hex);
pub const GL_MALI_SHADER_BINARY_ARM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F60, .hex);
pub const GL_MALI_PROGRAM_BINARY_ARM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F61, .hex);
pub const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F63, .hex);
pub const GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F64, .hex);
pub const GL_FETCH_PER_SAMPLE_ARM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F65, .hex);
pub const GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F66, .hex);
pub const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F67, .hex);
pub const GL_TEXTURE_ASTC_DECODE_PRECISION_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F69, .hex);
pub const GL_RED_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F90, .hex);
pub const GL_RG_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F91, .hex);
pub const GL_RGB_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F92, .hex);
pub const GL_RGBA_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F93, .hex);
pub const GL_R8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F94, .hex);
pub const GL_RG8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F95, .hex);
pub const GL_RGB8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F96, .hex);
pub const GL_RGBA8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F97, .hex);
pub const GL_R16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F98, .hex);
pub const GL_R16_SNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F98, .hex);
pub const GL_RG16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F99, .hex);
pub const GL_RG16_SNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F99, .hex);
pub const GL_RGB16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9A, .hex);
pub const GL_RGB16_SNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9A, .hex);
pub const GL_RGBA16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9B, .hex);
pub const GL_RGBA16_SNORM_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9B, .hex);
pub const GL_SIGNED_NORMALIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9C, .hex);
pub const GL_PRIMITIVE_RESTART = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9D, .hex);
pub const GL_PRIMITIVE_RESTART_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9E, .hex);
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8F9F, .hex);
pub const GL_PERFMON_GLOBAL_MODE_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FA0, .hex);
pub const GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FA1, .hex);
pub const GL_BINNING_CONTROL_HINT_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FB0, .hex);
pub const GL_CPU_OPTIMIZED_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FB1, .hex);
pub const GL_GPU_OPTIMIZED_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FB2, .hex);
pub const GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FB3, .hex);
pub const GL_GPU_DISJOINT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FBB, .hex);
pub const GL_SR8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FBD, .hex);
pub const GL_SRG8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FBE, .hex);
pub const GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FBF, .hex);
pub const GL_SHADER_BINARY_VIV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FC4, .hex);
pub const GL_INT8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE0, .hex);
pub const GL_INT8_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE1, .hex);
pub const GL_INT8_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE2, .hex);
pub const GL_INT8_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE3, .hex);
pub const GL_INT16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE4, .hex);
pub const GL_INT16_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE5, .hex);
pub const GL_INT16_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE6, .hex);
pub const GL_INT16_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE7, .hex);
pub const GL_INT64_VEC2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE9, .hex);
pub const GL_INT64_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FE9, .hex);
pub const GL_INT64_VEC3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEA, .hex);
pub const GL_INT64_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEA, .hex);
pub const GL_INT64_VEC4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEB, .hex);
pub const GL_INT64_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEB, .hex);
pub const GL_UNSIGNED_INT8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEC, .hex);
pub const GL_UNSIGNED_INT8_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FED, .hex);
pub const GL_UNSIGNED_INT8_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEE, .hex);
pub const GL_UNSIGNED_INT8_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FEF, .hex);
pub const GL_UNSIGNED_INT16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF0, .hex);
pub const GL_UNSIGNED_INT16_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF1, .hex);
pub const GL_UNSIGNED_INT16_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF2, .hex);
pub const GL_UNSIGNED_INT16_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF3, .hex);
pub const GL_UNSIGNED_INT64_VEC2_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF5, .hex);
pub const GL_UNSIGNED_INT64_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF5, .hex);
pub const GL_UNSIGNED_INT64_VEC3_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF6, .hex);
pub const GL_UNSIGNED_INT64_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF6, .hex);
pub const GL_UNSIGNED_INT64_VEC4_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF7, .hex);
pub const GL_UNSIGNED_INT64_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF7, .hex);
pub const GL_FLOAT16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF8, .hex);
pub const GL_FLOAT16_VEC2_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FF9, .hex);
pub const GL_FLOAT16_VEC3_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFA, .hex);
pub const GL_FLOAT16_VEC4_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFB, .hex);
pub const GL_DOUBLE_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFC, .hex);
pub const GL_DOUBLE_VEC2_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFC, .hex);
pub const GL_DOUBLE_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFD, .hex);
pub const GL_DOUBLE_VEC3_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFD, .hex);
pub const GL_DOUBLE_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFE, .hex);
pub const GL_DOUBLE_VEC4_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8FFE, .hex);
pub const GL_SAMPLER_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9001, .hex);
pub const GL_INT_SAMPLER_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9002, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9003, .hex);
pub const GL_TESSELLATION_MODE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9004, .hex);
pub const GL_TESSELLATION_FACTOR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9005, .hex);
pub const GL_DISCRETE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9006, .hex);
pub const GL_CONTINUOUS_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9007, .hex);
pub const GL_TEXTURE_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9009, .hex);
pub const GL_TEXTURE_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9009, .hex);
pub const GL_TEXTURE_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9009, .hex);
pub const GL_TEXTURE_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9009, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900A, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900A, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900A, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900A, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900B, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900B, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900C, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900C, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900C, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900C, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900D, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900D, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900D, .hex);
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900D, .hex);
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900E, .hex);
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900E, .hex);
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900E, .hex);
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900E, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900F, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900F, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900F, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x900F, .hex);
pub const GL_ALPHA_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9010, .hex);
pub const GL_LUMINANCE_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9011, .hex);
pub const GL_LUMINANCE_ALPHA_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9012, .hex);
pub const GL_INTENSITY_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9013, .hex);
pub const GL_ALPHA8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9014, .hex);
pub const GL_LUMINANCE8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9015, .hex);
pub const GL_LUMINANCE8_ALPHA8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9016, .hex);
pub const GL_INTENSITY8_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9017, .hex);
pub const GL_ALPHA16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9018, .hex);
pub const GL_LUMINANCE16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9019, .hex);
pub const GL_LUMINANCE16_ALPHA16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901A, .hex);
pub const GL_INTENSITY16_SNORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901B, .hex);
pub const GL_FACTOR_MIN_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901C, .hex);
pub const GL_FACTOR_MAX_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901D, .hex);
pub const GL_DEPTH_CLAMP_NEAR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901E, .hex);
pub const GL_DEPTH_CLAMP_FAR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x901F, .hex);
pub const GL_VIDEO_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9020, .hex);
pub const GL_VIDEO_BUFFER_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9021, .hex);
pub const GL_FIELD_UPPER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9022, .hex);
pub const GL_FIELD_LOWER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9023, .hex);
pub const GL_NUM_VIDEO_CAPTURE_STREAMS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9024, .hex);
pub const GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9025, .hex);
pub const GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9026, .hex);
pub const GL_LAST_VIDEO_CAPTURE_STATUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9027, .hex);
pub const GL_VIDEO_BUFFER_PITCH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9028, .hex);
pub const GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9029, .hex);
pub const GL_VIDEO_COLOR_CONVERSION_MAX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902A, .hex);
pub const GL_VIDEO_COLOR_CONVERSION_MIN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902B, .hex);
pub const GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902C, .hex);
pub const GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902D, .hex);
pub const GL_PARTIAL_SUCCESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902E, .hex);
pub const GL_SUCCESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x902F, .hex);
pub const GL_FAILURE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9030, .hex);
pub const GL_YCBYCR8_422_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9031, .hex);
pub const GL_YCBAYCR8A_4224_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9032, .hex);
pub const GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9033, .hex);
pub const GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9034, .hex);
pub const GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9035, .hex);
pub const GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9036, .hex);
pub const GL_Z4Y12Z4CB12Z4CR12_444_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9037, .hex);
pub const GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9038, .hex);
pub const GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9039, .hex);
pub const GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x903A, .hex);
pub const GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x903B, .hex);
pub const GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x903C, .hex);
pub const GL_TEXTURE_COVERAGE_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9045, .hex);
pub const GL_TEXTURE_COLOR_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9046, .hex);
pub const GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9047, .hex);
pub const GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9048, .hex);
pub const GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9049, .hex);
pub const GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904A, .hex);
pub const GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904B, .hex);
pub const GL_IMAGE_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904C, .hex);
pub const GL_IMAGE_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904C, .hex);
pub const GL_IMAGE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904D, .hex);
pub const GL_IMAGE_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904D, .hex);
pub const GL_IMAGE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904E, .hex);
pub const GL_IMAGE_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904E, .hex);
pub const GL_IMAGE_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904F, .hex);
pub const GL_IMAGE_2D_RECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x904F, .hex);
pub const GL_IMAGE_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9050, .hex);
pub const GL_IMAGE_CUBE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9050, .hex);
pub const GL_IMAGE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9051, .hex);
pub const GL_IMAGE_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9051, .hex);
pub const GL_IMAGE_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9051, .hex);
pub const GL_IMAGE_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9052, .hex);
pub const GL_IMAGE_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9052, .hex);
pub const GL_IMAGE_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9053, .hex);
pub const GL_IMAGE_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9053, .hex);
pub const GL_IMAGE_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9054, .hex);
pub const GL_IMAGE_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9054, .hex);
pub const GL_IMAGE_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9054, .hex);
pub const GL_IMAGE_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9055, .hex);
pub const GL_IMAGE_2D_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9055, .hex);
pub const GL_IMAGE_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9056, .hex);
pub const GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9056, .hex);
pub const GL_INT_IMAGE_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9057, .hex);
pub const GL_INT_IMAGE_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9057, .hex);
pub const GL_INT_IMAGE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9058, .hex);
pub const GL_INT_IMAGE_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9058, .hex);
pub const GL_INT_IMAGE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9059, .hex);
pub const GL_INT_IMAGE_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9059, .hex);
pub const GL_INT_IMAGE_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905A, .hex);
pub const GL_INT_IMAGE_2D_RECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905A, .hex);
pub const GL_INT_IMAGE_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905B, .hex);
pub const GL_INT_IMAGE_CUBE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905B, .hex);
pub const GL_INT_IMAGE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905C, .hex);
pub const GL_INT_IMAGE_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905C, .hex);
pub const GL_INT_IMAGE_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905C, .hex);
pub const GL_INT_IMAGE_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905D, .hex);
pub const GL_INT_IMAGE_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905D, .hex);
pub const GL_INT_IMAGE_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905E, .hex);
pub const GL_INT_IMAGE_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905E, .hex);
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905F, .hex);
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905F, .hex);
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x905F, .hex);
pub const GL_INT_IMAGE_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9060, .hex);
pub const GL_INT_IMAGE_2D_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9060, .hex);
pub const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9061, .hex);
pub const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9061, .hex);
pub const GL_UNSIGNED_INT_IMAGE_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9062, .hex);
pub const GL_UNSIGNED_INT_IMAGE_1D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9062, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9063, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9063, .hex);
pub const GL_UNSIGNED_INT_IMAGE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9064, .hex);
pub const GL_UNSIGNED_INT_IMAGE_3D_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9064, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_RECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9065, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9065, .hex);
pub const GL_UNSIGNED_INT_IMAGE_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9066, .hex);
pub const GL_UNSIGNED_INT_IMAGE_CUBE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9066, .hex);
pub const GL_UNSIGNED_INT_IMAGE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9067, .hex);
pub const GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9067, .hex);
pub const GL_UNSIGNED_INT_IMAGE_BUFFER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9067, .hex);
pub const GL_UNSIGNED_INT_IMAGE_1D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9068, .hex);
pub const GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9068, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9069, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9069, .hex);
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906A, .hex);
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906A, .hex);
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906A, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906B, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906B, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906C, .hex);
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906C, .hex);
pub const GL_MAX_IMAGE_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906D, .hex);
pub const GL_MAX_IMAGE_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906D, .hex);
pub const GL_IMAGE_BINDING_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906E, .hex);
pub const GL_IMAGE_BINDING_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906E, .hex);
pub const GL_RGB10_A2UI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x906F, .hex);
pub const GL_PATH_FORMAT_SVG_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9070, .hex);
pub const GL_PATH_FORMAT_PS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9071, .hex);
pub const GL_STANDARD_FONT_NAME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9072, .hex);
pub const GL_SYSTEM_FONT_NAME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9073, .hex);
pub const GL_FILE_NAME_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9074, .hex);
pub const GL_PATH_STROKE_WIDTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9075, .hex);
pub const GL_PATH_END_CAPS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9076, .hex);
pub const GL_PATH_INITIAL_END_CAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9077, .hex);
pub const GL_PATH_TERMINAL_END_CAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9078, .hex);
pub const GL_PATH_JOIN_STYLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9079, .hex);
pub const GL_PATH_MITER_LIMIT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907A, .hex);
pub const GL_PATH_DASH_CAPS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907B, .hex);
pub const GL_PATH_INITIAL_DASH_CAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907C, .hex);
pub const GL_PATH_TERMINAL_DASH_CAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907D, .hex);
pub const GL_PATH_DASH_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907E, .hex);
pub const GL_PATH_CLIENT_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x907F, .hex);
pub const GL_PATH_FILL_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9080, .hex);
pub const GL_PATH_FILL_MASK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9081, .hex);
pub const GL_PATH_FILL_COVER_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9082, .hex);
pub const GL_PATH_STROKE_COVER_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9083, .hex);
pub const GL_PATH_STROKE_MASK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9084, .hex);
pub const GL_COUNT_UP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9088, .hex);
pub const GL_COUNT_DOWN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9089, .hex);
pub const GL_PATH_OBJECT_BOUNDING_BOX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x908A, .hex);
pub const GL_CONVEX_HULL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x908B, .hex);
pub const GL_BOUNDING_BOX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x908D, .hex);
pub const GL_TRANSLATE_X_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x908E, .hex);
pub const GL_TRANSLATE_Y_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x908F, .hex);
pub const GL_TRANSLATE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9090, .hex);
pub const GL_TRANSLATE_3D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9091, .hex);
pub const GL_AFFINE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9092, .hex);
pub const GL_AFFINE_3D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9094, .hex);
pub const GL_TRANSPOSE_AFFINE_2D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9096, .hex);
pub const GL_TRANSPOSE_AFFINE_3D_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9098, .hex);
pub const GL_UTF8_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909A, .hex);
pub const GL_UTF16_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909B, .hex);
pub const GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909C, .hex);
pub const GL_PATH_COMMAND_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909D, .hex);
pub const GL_PATH_COORD_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909E, .hex);
pub const GL_PATH_DASH_ARRAY_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x909F, .hex);
pub const GL_PATH_COMPUTED_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A0, .hex);
pub const GL_PATH_FILL_BOUNDING_BOX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A1, .hex);
pub const GL_PATH_STROKE_BOUNDING_BOX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A2, .hex);
pub const GL_SQUARE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A3, .hex);
pub const GL_ROUND_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A4, .hex);
pub const GL_TRIANGULAR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A5, .hex);
pub const GL_BEVEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A6, .hex);
pub const GL_MITER_REVERT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A7, .hex);
pub const GL_MITER_TRUNCATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A8, .hex);
pub const GL_SKIP_MISSING_GLYPH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90A9, .hex);
pub const GL_USE_MISSING_GLYPH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AA, .hex);
pub const GL_PATH_ERROR_POSITION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AB, .hex);
pub const GL_PATH_FOG_GEN_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AC, .hex);
pub const GL_ACCUM_ADJACENT_PAIRS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AD, .hex);
pub const GL_ADJACENT_PAIRS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AE, .hex);
pub const GL_FIRST_TO_REST_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90AF, .hex);
pub const GL_PATH_GEN_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B0, .hex);
pub const GL_PATH_GEN_COEFF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B1, .hex);
pub const GL_PATH_GEN_COLOR_FORMAT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B2, .hex);
pub const GL_PATH_GEN_COMPONENTS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B3, .hex);
pub const GL_PATH_DASH_OFFSET_RESET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B4, .hex);
pub const GL_MOVE_TO_RESETS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B5, .hex);
pub const GL_MOVE_TO_CONTINUES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B6, .hex);
pub const GL_PATH_STENCIL_FUNC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B7, .hex);
pub const GL_PATH_STENCIL_REF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B8, .hex);
pub const GL_PATH_STENCIL_VALUE_MASK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90B9, .hex);
pub const GL_SCALED_RESOLVE_FASTEST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BA, .hex);
pub const GL_SCALED_RESOLVE_NICEST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BB, .hex);
pub const GL_MIN_MAP_BUFFER_ALIGNMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BC, .hex);
pub const GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BD, .hex);
pub const GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BE, .hex);
pub const GL_PATH_COVER_DEPTH_FUNC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90BF, .hex);
pub const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90C7, .hex);
pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90C8, .hex);
pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90C9, .hex);
pub const GL_MAX_VERTEX_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CA, .hex);
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CB, .hex);
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CB, .hex);
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CB, .hex);
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CC, .hex);
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CC, .hex);
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CC, .hex);
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CD, .hex);
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CD, .hex);
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CD, .hex);
pub const GL_MAX_FRAGMENT_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CE, .hex);
pub const GL_MAX_COMBINED_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90CF, .hex);
pub const GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D0, .hex);
pub const GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D1, .hex);
pub const GL_SHADER_STORAGE_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D2, .hex);
pub const GL_SHADER_STORAGE_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D3, .hex);
pub const GL_SHADER_STORAGE_BUFFER_START = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D4, .hex);
pub const GL_SHADER_STORAGE_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D5, .hex);
pub const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D6, .hex);
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D7, .hex);
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D7, .hex);
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D7, .hex);
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D8, .hex);
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D8, .hex);
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D8, .hex);
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D9, .hex);
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D9, .hex);
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90D9, .hex);
pub const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DA, .hex);
pub const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DB, .hex);
pub const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DC, .hex);
pub const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DD, .hex);
pub const GL_MAX_SHADER_STORAGE_BLOCK_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DE, .hex);
pub const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90DF, .hex);
pub const GL_SYNC_X11_FENCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90E1, .hex);
pub const GL_DEPTH_STENCIL_TEXTURE_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EA, .hex);
pub const GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EB, .hex);
pub const GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EB, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EC, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90ED, .hex);
pub const GL_DISPATCH_INDIRECT_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EE, .hex);
pub const GL_DISPATCH_INDIRECT_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90EF, .hex);
pub const GL_COLOR_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F0, .hex);
pub const GL_MULTIVIEW_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F1, .hex);
pub const GL_MAX_MULTIVIEW_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F2, .hex);
pub const GL_CONTEXT_ROBUST_ACCESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F3, .hex);
pub const GL_CONTEXT_ROBUST_ACCESS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F3, .hex);
pub const GL_CONTEXT_ROBUST_ACCESS_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90F3, .hex);
pub const GL_COMPUTE_PROGRAM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90FB, .hex);
pub const GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x90FC, .hex);
pub const GL_TEXTURE_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9100, .hex);
pub const GL_PROXY_TEXTURE_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9101, .hex);
pub const GL_TEXTURE_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9102, .hex);
pub const GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9102, .hex);
pub const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9103, .hex);
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9104, .hex);
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9105, .hex);
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9105, .hex);
pub const GL_TEXTURE_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9106, .hex);
pub const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9107, .hex);
pub const GL_SAMPLER_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9108, .hex);
pub const GL_INT_SAMPLER_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9109, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910A, .hex);
pub const GL_SAMPLER_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910B, .hex);
pub const GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910B, .hex);
pub const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910C, .hex);
pub const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910C, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910D, .hex);
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910D, .hex);
pub const GL_MAX_COLOR_TEXTURE_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910E, .hex);
pub const GL_MAX_DEPTH_TEXTURE_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x910F, .hex);
pub const GL_MAX_INTEGER_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9110, .hex);
pub const GL_MAX_SERVER_WAIT_TIMEOUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9111, .hex);
pub const GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9111, .hex);
pub const GL_OBJECT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9112, .hex);
pub const GL_OBJECT_TYPE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9112, .hex);
pub const GL_SYNC_CONDITION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9113, .hex);
pub const GL_SYNC_CONDITION_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9113, .hex);
pub const GL_SYNC_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9114, .hex);
pub const GL_SYNC_STATUS_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9114, .hex);
pub const GL_SYNC_FLAGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9115, .hex);
pub const GL_SYNC_FLAGS_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9115, .hex);
pub const GL_SYNC_FENCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9116, .hex);
pub const GL_SYNC_FENCE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9116, .hex);
pub const GL_SYNC_GPU_COMMANDS_COMPLETE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9117, .hex);
pub const GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9117, .hex);
pub const GL_UNSIGNALED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9118, .hex);
pub const GL_UNSIGNALED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9118, .hex);
pub const GL_SIGNALED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9119, .hex);
pub const GL_SIGNALED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9119, .hex);
pub const GL_ALREADY_SIGNALED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911A, .hex);
pub const GL_ALREADY_SIGNALED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911A, .hex);
pub const GL_TIMEOUT_EXPIRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911B, .hex);
pub const GL_TIMEOUT_EXPIRED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911B, .hex);
pub const GL_CONDITION_SATISFIED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911C, .hex);
pub const GL_CONDITION_SATISFIED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911C, .hex);
pub const GL_WAIT_FAILED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911D, .hex);
pub const GL_WAIT_FAILED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911D, .hex);
pub const GL_BUFFER_ACCESS_FLAGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x911F, .hex);
pub const GL_BUFFER_MAP_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9120, .hex);
pub const GL_BUFFER_MAP_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9121, .hex);
pub const GL_MAX_VERTEX_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9122, .hex);
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9123, .hex);
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9123, .hex);
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9123, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9124, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9124, .hex);
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9124, .hex);
pub const GL_MAX_FRAGMENT_INPUT_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9125, .hex);
pub const GL_CONTEXT_PROFILE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9126, .hex);
pub const GL_UNPACK_COMPRESSED_BLOCK_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9127, .hex);
pub const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9128, .hex);
pub const GL_UNPACK_COMPRESSED_BLOCK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9129, .hex);
pub const GL_UNPACK_COMPRESSED_BLOCK_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912A, .hex);
pub const GL_PACK_COMPRESSED_BLOCK_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912B, .hex);
pub const GL_PACK_COMPRESSED_BLOCK_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912C, .hex);
pub const GL_PACK_COMPRESSED_BLOCK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912D, .hex);
pub const GL_PACK_COMPRESSED_BLOCK_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912E, .hex);
pub const GL_TEXTURE_IMMUTABLE_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912F, .hex);
pub const GL_TEXTURE_IMMUTABLE_FORMAT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x912F, .hex);
pub const GL_SGX_PROGRAM_BINARY_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9130, .hex);
pub const GL_RENDERBUFFER_SAMPLES_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9133, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9134, .hex);
pub const GL_MAX_SAMPLES_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9135, .hex);
pub const GL_TEXTURE_SAMPLES_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9136, .hex);
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9137, .hex);
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9138, .hex);
pub const GL_CUBIC_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9139, .hex);
pub const GL_CUBIC_MIPMAP_NEAREST_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913A, .hex);
pub const GL_CUBIC_MIPMAP_LINEAR_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913B, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913C, .hex);
pub const GL_NUM_DOWNSAMPLE_SCALES_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913D, .hex);
pub const GL_DOWNSAMPLE_SCALES_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913E, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x913F, .hex);
pub const GL_MAX_DEBUG_MESSAGE_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9143, .hex);
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9143, .hex);
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9143, .hex);
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9143, .hex);
pub const GL_MAX_DEBUG_LOGGED_MESSAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9144, .hex);
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9144, .hex);
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9144, .hex);
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9144, .hex);
pub const GL_DEBUG_LOGGED_MESSAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9145, .hex);
pub const GL_DEBUG_LOGGED_MESSAGES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9145, .hex);
pub const GL_DEBUG_LOGGED_MESSAGES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9145, .hex);
pub const GL_DEBUG_LOGGED_MESSAGES_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9145, .hex);
pub const GL_DEBUG_SEVERITY_HIGH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9146, .hex);
pub const GL_DEBUG_SEVERITY_HIGH_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9146, .hex);
pub const GL_DEBUG_SEVERITY_HIGH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9146, .hex);
pub const GL_DEBUG_SEVERITY_HIGH_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9146, .hex);
pub const GL_DEBUG_SEVERITY_MEDIUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9147, .hex);
pub const GL_DEBUG_SEVERITY_MEDIUM_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9147, .hex);
pub const GL_DEBUG_SEVERITY_MEDIUM_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9147, .hex);
pub const GL_DEBUG_SEVERITY_MEDIUM_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9147, .hex);
pub const GL_DEBUG_SEVERITY_LOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9148, .hex);
pub const GL_DEBUG_SEVERITY_LOW_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9148, .hex);
pub const GL_DEBUG_SEVERITY_LOW_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9148, .hex);
pub const GL_DEBUG_SEVERITY_LOW_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9148, .hex);
pub const GL_DEBUG_CATEGORY_API_ERROR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9149, .hex);
pub const GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914A, .hex);
pub const GL_DEBUG_CATEGORY_DEPRECATION_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914B, .hex);
pub const GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914C, .hex);
pub const GL_DEBUG_CATEGORY_PERFORMANCE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914D, .hex);
pub const GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914E, .hex);
pub const GL_DEBUG_CATEGORY_APPLICATION_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x914F, .hex);
pub const GL_DEBUG_CATEGORY_OTHER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9150, .hex);
pub const GL_BUFFER_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9151, .hex);
pub const GL_DATA_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9151, .hex);
pub const GL_PERFORMANCE_MONITOR_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9152, .hex);
pub const GL_QUERY_OBJECT_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9153, .hex);
pub const GL_QUERY_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9153, .hex);
pub const GL_VERTEX_ARRAY_OBJECT_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9154, .hex);
pub const GL_VERTEX_ARRAY_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9154, .hex);
pub const GL_SAMPLER_OBJECT_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9155, .hex);
pub const GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9160, .hex);
pub const GL_QUERY_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9192, .hex);
pub const GL_QUERY_BUFFER_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9192, .hex);
pub const GL_QUERY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9193, .hex);
pub const GL_QUERY_BUFFER_BINDING_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9193, .hex);
pub const GL_QUERY_RESULT_NO_WAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9194, .hex);
pub const GL_QUERY_RESULT_NO_WAIT_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9194, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_X_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9195, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_X_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9195, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_X_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9195, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Y_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9196, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Y_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9196, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Y_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9196, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Z_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9197, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Z_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9197, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_Z_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9197, .hex);
pub const GL_MAX_SPARSE_TEXTURE_SIZE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9198, .hex);
pub const GL_MAX_SPARSE_TEXTURE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9198, .hex);
pub const GL_MAX_SPARSE_TEXTURE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9198, .hex);
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9199, .hex);
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9199, .hex);
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9199, .hex);
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919A, .hex);
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919A, .hex);
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919A, .hex);
pub const GL_MIN_SPARSE_LEVEL_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919B, .hex);
pub const GL_MIN_LOD_WARNING_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919C, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919D, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919D, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919D, .hex);
pub const GL_TEXTURE_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919E, .hex);
pub const GL_TEXTURE_BUFFER_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919E, .hex);
pub const GL_TEXTURE_BUFFER_SIZE_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919E, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919F, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919F, .hex);
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x919F, .hex);
pub const GL_STREAM_RASTERIZATION_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A0, .hex);
pub const GL_VERTEX_ELEMENT_SWIZZLE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A4, .hex);
pub const GL_VERTEX_ID_SWIZZLE_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A5, .hex);
pub const GL_TEXTURE_SPARSE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A6, .hex);
pub const GL_TEXTURE_SPARSE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A6, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A7, .hex);
pub const GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A7, .hex);
pub const GL_NUM_VIRTUAL_PAGE_SIZES_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A8, .hex);
pub const GL_NUM_VIRTUAL_PAGE_SIZES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A8, .hex);
pub const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A9, .hex);
pub const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91A9, .hex);
pub const GL_NUM_SPARSE_LEVELS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91AA, .hex);
pub const GL_NUM_SPARSE_LEVELS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91AA, .hex);
pub const GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91AE, .hex);
pub const GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91AF, .hex);
pub const GL_MAX_SHADER_COMPILER_THREADS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B0, .hex);
pub const GL_MAX_SHADER_COMPILER_THREADS_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B0, .hex);
pub const GL_COMPLETION_STATUS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B1, .hex);
pub const GL_COMPLETION_STATUS_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B1, .hex);
pub const GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B2, .hex);
pub const GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B3, .hex);
pub const GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B4, .hex);
pub const GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B5, .hex);
pub const GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B6, .hex);
pub const GL_SUPPORTED_MULTISAMPLE_MODES_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B7, .hex);
pub const GL_COMPUTE_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91B9, .hex);
pub const GL_MAX_COMPUTE_UNIFORM_BLOCKS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BB, .hex);
pub const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BC, .hex);
pub const GL_MAX_COMPUTE_IMAGE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BD, .hex);
pub const GL_MAX_COMPUTE_WORK_GROUP_COUNT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BE, .hex);
pub const GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BF, .hex);
pub const GL_MAX_COMPUTE_WORK_GROUP_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91BF, .hex);
pub const GL_FLOAT16_MAT2_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91C5, .hex);
pub const GL_FLOAT16_MAT3_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91C6, .hex);
pub const GL_FLOAT16_MAT4_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91C7, .hex);
pub const GL_FLOAT16_MAT2x3_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91C8, .hex);
pub const GL_FLOAT16_MAT2x4_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91C9, .hex);
pub const GL_FLOAT16_MAT3x2_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91CA, .hex);
pub const GL_FLOAT16_MAT3x4_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91CB, .hex);
pub const GL_FLOAT16_MAT4x2_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91CC, .hex);
pub const GL_FLOAT16_MAT4x3_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x91CD, .hex);
pub const GL_UNPACK_FLIP_Y_WEBGL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9240, .hex);
pub const GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9241, .hex);
pub const GL_CONTEXT_LOST_WEBGL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9242, .hex);
pub const GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9243, .hex);
pub const GL_BROWSER_DEFAULT_WEBGL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9244, .hex);
pub const GL_SHADER_BINARY_DMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9250, .hex);
pub const GL_SMAPHS30_PROGRAM_BINARY_DMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9251, .hex);
pub const GL_SMAPHS_PROGRAM_BINARY_DMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9252, .hex);
pub const GL_DMP_PROGRAM_BINARY_DMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9253, .hex);
pub const GL_GCCSO_SHADER_BINARY_FJ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9260, .hex);
pub const GL_COMPRESSED_R11_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9270, .hex);
pub const GL_COMPRESSED_R11_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9270, .hex);
pub const GL_COMPRESSED_SIGNED_R11_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9271, .hex);
pub const GL_COMPRESSED_SIGNED_R11_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9271, .hex);
pub const GL_COMPRESSED_RG11_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9272, .hex);
pub const GL_COMPRESSED_RG11_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9272, .hex);
pub const GL_COMPRESSED_SIGNED_RG11_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9273, .hex);
pub const GL_COMPRESSED_SIGNED_RG11_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9273, .hex);
pub const GL_COMPRESSED_RGB8_ETC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9274, .hex);
pub const GL_COMPRESSED_RGB8_ETC2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9274, .hex);
pub const GL_COMPRESSED_SRGB8_ETC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9275, .hex);
pub const GL_COMPRESSED_SRGB8_ETC2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9275, .hex);
pub const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9276, .hex);
pub const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9276, .hex);
pub const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9277, .hex);
pub const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9277, .hex);
pub const GL_COMPRESSED_RGBA8_ETC2_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9278, .hex);
pub const GL_COMPRESSED_RGBA8_ETC2_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9278, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9279, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9279, .hex);
pub const GL_BLEND_PREMULTIPLIED_SRC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9280, .hex);
pub const GL_BLEND_OVERLAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9281, .hex);
pub const GL_UNCORRELATED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9282, .hex);
pub const GL_DISJOINT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9283, .hex);
pub const GL_CONJOINT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9284, .hex);
pub const GL_BLEND_ADVANCED_COHERENT_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9285, .hex);
pub const GL_BLEND_ADVANCED_COHERENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9285, .hex);
pub const GL_SRC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9286, .hex);
pub const GL_DST_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9287, .hex);
pub const GL_SRC_OVER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9288, .hex);
pub const GL_DST_OVER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9289, .hex);
pub const GL_SRC_IN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928A, .hex);
pub const GL_DST_IN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928B, .hex);
pub const GL_SRC_OUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928C, .hex);
pub const GL_DST_OUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928D, .hex);
pub const GL_SRC_ATOP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928E, .hex);
pub const GL_DST_ATOP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x928F, .hex);
pub const GL_PLUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9291, .hex);
pub const GL_PLUS_DARKER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9292, .hex);
pub const GL_MULTIPLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9294, .hex);
pub const GL_MULTIPLY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9294, .hex);
pub const GL_MULTIPLY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9294, .hex);
pub const GL_SCREEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9295, .hex);
pub const GL_SCREEN_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9295, .hex);
pub const GL_SCREEN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9295, .hex);
pub const GL_OVERLAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9296, .hex);
pub const GL_OVERLAY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9296, .hex);
pub const GL_OVERLAY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9296, .hex);
pub const GL_DARKEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9297, .hex);
pub const GL_DARKEN_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9297, .hex);
pub const GL_DARKEN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9297, .hex);
pub const GL_LIGHTEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9298, .hex);
pub const GL_LIGHTEN_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9298, .hex);
pub const GL_LIGHTEN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9298, .hex);
pub const GL_COLORDODGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9299, .hex);
pub const GL_COLORDODGE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9299, .hex);
pub const GL_COLORDODGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9299, .hex);
pub const GL_COLORBURN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929A, .hex);
pub const GL_COLORBURN_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929A, .hex);
pub const GL_COLORBURN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929A, .hex);
pub const GL_HARDLIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929B, .hex);
pub const GL_HARDLIGHT_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929B, .hex);
pub const GL_HARDLIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929B, .hex);
pub const GL_SOFTLIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929C, .hex);
pub const GL_SOFTLIGHT_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929C, .hex);
pub const GL_SOFTLIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929C, .hex);
pub const GL_DIFFERENCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929E, .hex);
pub const GL_DIFFERENCE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929E, .hex);
pub const GL_DIFFERENCE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929E, .hex);
pub const GL_MINUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x929F, .hex);
pub const GL_EXCLUSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A0, .hex);
pub const GL_EXCLUSION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A0, .hex);
pub const GL_EXCLUSION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A0, .hex);
pub const GL_CONTRAST_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A1, .hex);
pub const GL_INVERT_RGB_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A3, .hex);
pub const GL_LINEARDODGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A4, .hex);
pub const GL_LINEARBURN_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A5, .hex);
pub const GL_VIVIDLIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A6, .hex);
pub const GL_LINEARLIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A7, .hex);
pub const GL_PINLIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A8, .hex);
pub const GL_HARDMIX_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92A9, .hex);
pub const GL_HSL_HUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AD, .hex);
pub const GL_HSL_HUE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AD, .hex);
pub const GL_HSL_HUE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AD, .hex);
pub const GL_HSL_SATURATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AE, .hex);
pub const GL_HSL_SATURATION_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AE, .hex);
pub const GL_HSL_SATURATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AE, .hex);
pub const GL_HSL_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AF, .hex);
pub const GL_HSL_COLOR_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AF, .hex);
pub const GL_HSL_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92AF, .hex);
pub const GL_HSL_LUMINOSITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B0, .hex);
pub const GL_HSL_LUMINOSITY_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B0, .hex);
pub const GL_HSL_LUMINOSITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B0, .hex);
pub const GL_PLUS_CLAMPED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B1, .hex);
pub const GL_PLUS_CLAMPED_ALPHA_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B2, .hex);
pub const GL_MINUS_CLAMPED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B3, .hex);
pub const GL_INVERT_OVG_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92B4, .hex);
pub const GL_MAX_LGPU_GPUS_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BA, .hex);
pub const GL_MULTICAST_GPUS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BA, .hex);
pub const GL_PURGED_CONTEXT_RESET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BB, .hex);
pub const GL_PRIMITIVE_BOUNDING_BOX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BE, .hex);
pub const GL_PRIMITIVE_BOUNDING_BOX_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BE, .hex);
pub const GL_PRIMITIVE_BOUNDING_BOX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BE, .hex);
pub const GL_PRIMITIVE_BOUNDING_BOX_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BE, .hex);
pub const GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92BF, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C0, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C1, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_START = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C2, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C3, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C4, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C5, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C6, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C7, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C8, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92C9, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CA, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CB, .hex);
pub const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CC, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CD, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CD, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CD, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CE, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CE, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CE, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CF, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CF, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92CF, .hex);
pub const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D0, .hex);
pub const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D1, .hex);
pub const GL_MAX_VERTEX_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D2, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D3, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D3, .hex);
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D3, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D4, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D4, .hex);
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D4, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D5, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D5, .hex);
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D5, .hex);
pub const GL_MAX_FRAGMENT_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D6, .hex);
pub const GL_MAX_COMBINED_ATOMIC_COUNTERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D7, .hex);
pub const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D8, .hex);
pub const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92D9, .hex);
pub const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DA, .hex);
pub const GL_UNSIGNED_INT_ATOMIC_COUNTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DB, .hex);
pub const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DC, .hex);
pub const GL_FRAGMENT_COVERAGE_TO_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DD, .hex);
pub const GL_FRAGMENT_COVERAGE_COLOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DE, .hex);
pub const GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92DF, .hex);
pub const GL_DEBUG_OUTPUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E0, .hex);
pub const GL_DEBUG_OUTPUT_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E0, .hex);
pub const GL_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E1, .hex);
pub const GL_UNIFORM_BLOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E2, .hex);
pub const GL_PROGRAM_INPUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E3, .hex);
pub const GL_PROGRAM_OUTPUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E4, .hex);
pub const GL_BUFFER_VARIABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E5, .hex);
pub const GL_SHADER_STORAGE_BLOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E6, .hex);
pub const GL_IS_PER_PATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E7, .hex);
pub const GL_IS_PER_PATCH_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E7, .hex);
pub const GL_IS_PER_PATCH_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E7, .hex);
pub const GL_VERTEX_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E8, .hex);
pub const GL_TESS_CONTROL_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92E9, .hex);
pub const GL_TESS_EVALUATION_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92EA, .hex);
pub const GL_GEOMETRY_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92EB, .hex);
pub const GL_FRAGMENT_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92EC, .hex);
pub const GL_COMPUTE_SUBROUTINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92ED, .hex);
pub const GL_VERTEX_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92EE, .hex);
pub const GL_TESS_CONTROL_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92EF, .hex);
pub const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F0, .hex);
pub const GL_GEOMETRY_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F1, .hex);
pub const GL_FRAGMENT_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F2, .hex);
pub const GL_COMPUTE_SUBROUTINE_UNIFORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F3, .hex);
pub const GL_TRANSFORM_FEEDBACK_VARYING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F4, .hex);
pub const GL_ACTIVE_RESOURCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F5, .hex);
pub const GL_MAX_NAME_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F6, .hex);
pub const GL_MAX_NUM_ACTIVE_VARIABLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F7, .hex);
pub const GL_MAX_NUM_COMPATIBLE_SUBROUTINES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F8, .hex);
pub const GL_NAME_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92F9, .hex);
pub const GL_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FA, .hex);
pub const GL_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FB, .hex);
pub const GL_OFFSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FC, .hex);
pub const GL_BLOCK_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FD, .hex);
pub const GL_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FE, .hex);
pub const GL_MATRIX_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92FF, .hex);
pub const GL_IS_ROW_MAJOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9300, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9301, .hex);
pub const GL_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9302, .hex);
pub const GL_BUFFER_DATA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9303, .hex);
pub const GL_NUM_ACTIVE_VARIABLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9304, .hex);
pub const GL_ACTIVE_VARIABLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9305, .hex);
pub const GL_REFERENCED_BY_VERTEX_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9306, .hex);
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9307, .hex);
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9307, .hex);
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9307, .hex);
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9308, .hex);
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9308, .hex);
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9308, .hex);
pub const GL_REFERENCED_BY_GEOMETRY_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9309, .hex);
pub const GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9309, .hex);
pub const GL_REFERENCED_BY_GEOMETRY_SHADER_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9309, .hex);
pub const GL_REFERENCED_BY_FRAGMENT_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930A, .hex);
pub const GL_REFERENCED_BY_COMPUTE_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930B, .hex);
pub const GL_TOP_LEVEL_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930C, .hex);
pub const GL_TOP_LEVEL_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930D, .hex);
pub const GL_LOCATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930E, .hex);
pub const GL_LOCATION_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930F, .hex);
pub const GL_LOCATION_INDEX_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x930F, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9310, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9311, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9312, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9312, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9312, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9313, .hex);
pub const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9314, .hex);
pub const GL_MAX_FRAMEBUFFER_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9315, .hex);
pub const GL_MAX_FRAMEBUFFER_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9316, .hex);
pub const GL_MAX_FRAMEBUFFER_LAYERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9317, .hex);
pub const GL_MAX_FRAMEBUFFER_LAYERS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9317, .hex);
pub const GL_MAX_FRAMEBUFFER_LAYERS_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9317, .hex);
pub const GL_MAX_FRAMEBUFFER_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9318, .hex);
pub const GL_RASTER_MULTISAMPLE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9327, .hex);
pub const GL_RASTER_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9328, .hex);
pub const GL_MAX_RASTER_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9329, .hex);
pub const GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932A, .hex);
pub const GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932B, .hex);
pub const GL_EFFECTIVE_RASTER_SAMPLES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932C, .hex);
pub const GL_DEPTH_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932D, .hex);
pub const GL_STENCIL_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932E, .hex);
pub const GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x932F, .hex);
pub const GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9330, .hex);
pub const GL_COVERAGE_MODULATION_TABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9331, .hex);
pub const GL_COVERAGE_MODULATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9332, .hex);
pub const GL_COVERAGE_MODULATION_TABLE_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9333, .hex);
pub const GL_WARP_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9339, .hex);
pub const GL_WARPS_PER_SM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933A, .hex);
pub const GL_SM_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933B, .hex);
pub const GL_FILL_RECTANGLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933C, .hex);
pub const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933D, .hex);
pub const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933D, .hex);
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933E, .hex);
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933E, .hex);
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933F, .hex);
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x933F, .hex);
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9340, .hex);
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9340, .hex);
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9341, .hex);
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9341, .hex);
pub const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9342, .hex);
pub const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9342, .hex);
pub const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9343, .hex);
pub const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9343, .hex);
pub const GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9344, .hex);
pub const GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9345, .hex);
pub const GL_CONSERVATIVE_RASTERIZATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9346, .hex);
pub const GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9347, .hex);
pub const GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9348, .hex);
pub const GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9349, .hex);
pub const GL_LOCATION_COMPONENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934A, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934B, .hex);
pub const GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934C, .hex);
pub const GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934D, .hex);
pub const GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934E, .hex);
pub const GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x934F, .hex);
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9350, .hex);
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9351, .hex);
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9352, .hex);
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9353, .hex);
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9354, .hex);
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9355, .hex);
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9356, .hex);
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9357, .hex);
pub const GL_VIEWPORT_SWIZZLE_X_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9358, .hex);
pub const GL_VIEWPORT_SWIZZLE_Y_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9359, .hex);
pub const GL_VIEWPORT_SWIZZLE_Z_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935A, .hex);
pub const GL_VIEWPORT_SWIZZLE_W_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935B, .hex);
pub const GL_CLIP_ORIGIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935C, .hex);
pub const GL_CLIP_ORIGIN_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935C, .hex);
pub const GL_CLIP_DEPTH_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935D, .hex);
pub const GL_CLIP_DEPTH_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935D, .hex);
pub const GL_NEGATIVE_ONE_TO_ONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935E, .hex);
pub const GL_NEGATIVE_ONE_TO_ONE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935E, .hex);
pub const GL_ZERO_TO_ONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935F, .hex);
pub const GL_ZERO_TO_ONE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x935F, .hex);
pub const GL_CLEAR_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9365, .hex);
pub const GL_TEXTURE_REDUCTION_MODE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9366, .hex);
pub const GL_TEXTURE_REDUCTION_MODE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9366, .hex);
pub const GL_WEIGHTED_AVERAGE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9367, .hex);
pub const GL_WEIGHTED_AVERAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9367, .hex);
pub const GL_FONT_GLYPHS_AVAILABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9368, .hex);
pub const GL_FONT_TARGET_UNAVAILABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9369, .hex);
pub const GL_FONT_UNAVAILABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936A, .hex);
pub const GL_FONT_UNINTELLIGIBLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936B, .hex);
pub const GL_STANDARD_FONT_FORMAT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936C, .hex);
pub const GL_FRAGMENT_INPUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936D, .hex);
pub const GL_UNIFORM_BUFFER_UNIFIED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936E, .hex);
pub const GL_UNIFORM_BUFFER_ADDRESS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x936F, .hex);
pub const GL_UNIFORM_BUFFER_LENGTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9370, .hex);
pub const GL_MULTISAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9371, .hex);
pub const GL_SUPERSAMPLE_SCALE_X_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9372, .hex);
pub const GL_SUPERSAMPLE_SCALE_Y_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9373, .hex);
pub const GL_CONFORMANT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9374, .hex);
pub const GL_CONSERVATIVE_RASTER_DILATE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9379, .hex);
pub const GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937A, .hex);
pub const GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937B, .hex);
pub const GL_VIEWPORT_POSITION_W_SCALE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937C, .hex);
pub const GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937D, .hex);
pub const GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937E, .hex);
pub const GL_REPRESENTATIVE_FRAGMENT_TEST_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x937F, .hex);
pub const GL_NUM_SAMPLE_COUNTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9380, .hex);
pub const GL_MULTISAMPLE_LINE_WIDTH_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9381, .hex);
pub const GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9381, .hex);
pub const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9382, .hex);
pub const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9382, .hex);
pub const GL_VIEW_CLASS_EAC_R11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9383, .hex);
pub const GL_VIEW_CLASS_EAC_RG11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9384, .hex);
pub const GL_VIEW_CLASS_ETC2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9385, .hex);
pub const GL_VIEW_CLASS_ETC2_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9386, .hex);
pub const GL_VIEW_CLASS_ETC2_EAC_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9387, .hex);
pub const GL_VIEW_CLASS_ASTC_4x4_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9388, .hex);
pub const GL_VIEW_CLASS_ASTC_5x4_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9389, .hex);
pub const GL_VIEW_CLASS_ASTC_5x5_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938A, .hex);
pub const GL_VIEW_CLASS_ASTC_6x5_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938B, .hex);
pub const GL_VIEW_CLASS_ASTC_6x6_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938C, .hex);
pub const GL_VIEW_CLASS_ASTC_8x5_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938D, .hex);
pub const GL_VIEW_CLASS_ASTC_8x6_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938E, .hex);
pub const GL_VIEW_CLASS_ASTC_8x8_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x938F, .hex);
pub const GL_VIEW_CLASS_ASTC_10x5_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9390, .hex);
pub const GL_VIEW_CLASS_ASTC_10x6_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9391, .hex);
pub const GL_VIEW_CLASS_ASTC_10x8_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9392, .hex);
pub const GL_VIEW_CLASS_ASTC_10x10_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9393, .hex);
pub const GL_VIEW_CLASS_ASTC_12x10_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9394, .hex);
pub const GL_VIEW_CLASS_ASTC_12x12_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9395, .hex);
pub const GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A0, .hex);
pub const GL_BGRA8_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A1, .hex);
pub const GL_TEXTURE_USAGE_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A2, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A3, .hex);
pub const GL_PACK_REVERSE_ROW_ORDER_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A4, .hex);
pub const GL_PROGRAM_BINARY_ANGLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93A6, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_4x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B0, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_4x4_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B0, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B1, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x4_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B1, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B2, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B2, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B3, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B3, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B4, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B4, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B5, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B5, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B6, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B6, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B7, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_8x8_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B7, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B8, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B8, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B9, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93B9, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BA, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x8_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BA, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BB, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_10x10_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BB, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_12x10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BC, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_12x10_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BC, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_12x12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BD, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_12x12_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93BD, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_3x3x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C0, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_4x3x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C1, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_4x4x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C2, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_4x4x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C3, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x4x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C4, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x5x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C5, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_5x5x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C6, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x5x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C7, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x6x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C8, .hex);
pub const GL_COMPRESSED_RGBA_ASTC_6x6x6_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93C9, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D0, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D0, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D1, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D1, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D2, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D2, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D3, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D3, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D4, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D4, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D5, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D5, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D6, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D6, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D7, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D7, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D8, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D8, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D9, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93D9, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DA, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DA, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DB, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DB, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DC, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DC, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DD, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93DD, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E0, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E1, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E2, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E3, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E4, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E5, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E6, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E7, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E8, .hex);
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93E9, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93F0, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x93F1, .hex);
pub const GL_PERFQUERY_COUNTER_EVENT_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F0, .hex);
pub const GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F1, .hex);
pub const GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F2, .hex);
pub const GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F3, .hex);
pub const GL_PERFQUERY_COUNTER_RAW_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F4, .hex);
pub const GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F5, .hex);
pub const GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F8, .hex);
pub const GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94F9, .hex);
pub const GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FA, .hex);
pub const GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FB, .hex);
pub const GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FC, .hex);
pub const GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FD, .hex);
pub const GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FE, .hex);
pub const GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x94FF, .hex);
pub const GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9500, .hex);
pub const GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9530, .hex);
pub const GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9531, .hex);
pub const GL_SUBGROUP_SIZE_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9532, .hex);
pub const GL_SUBGROUP_SUPPORTED_STAGES_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9533, .hex);
pub const GL_SUBGROUP_SUPPORTED_FEATURES_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9534, .hex);
pub const GL_SUBGROUP_QUAD_ALL_STAGES_KHR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9535, .hex);
pub const GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9536, .hex);
pub const GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9537, .hex);
pub const GL_MAX_MESH_OUTPUT_VERTICES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9538, .hex);
pub const GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9539, .hex);
pub const GL_MAX_TASK_OUTPUT_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953A, .hex);
pub const GL_MAX_MESH_WORK_GROUP_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953B, .hex);
pub const GL_MAX_TASK_WORK_GROUP_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953C, .hex);
pub const GL_MAX_DRAW_MESH_TASKS_COUNT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953D, .hex);
pub const GL_MESH_WORK_GROUP_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953E, .hex);
pub const GL_TASK_WORK_GROUP_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x953F, .hex);
pub const GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9540, .hex);
pub const GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9542, .hex);
pub const GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9543, .hex);
pub const GL_QUERY_RESOURCE_SYS_RESERVED_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9544, .hex);
pub const GL_QUERY_RESOURCE_TEXTURE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9545, .hex);
pub const GL_QUERY_RESOURCE_RENDERBUFFER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9546, .hex);
pub const GL_QUERY_RESOURCE_BUFFEROBJECT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9547, .hex);
pub const GL_PER_GPU_STORAGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9548, .hex);
pub const GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9549, .hex);
pub const GL_UPLOAD_GPU_MASK_NVX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x954A, .hex);
pub const GL_CONSERVATIVE_RASTER_MODE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x954D, .hex);
pub const GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x954E, .hex);
pub const GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x954F, .hex);
pub const GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9550, .hex);
pub const GL_SHADER_BINARY_FORMAT_SPIR_V = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9551, .hex);
pub const GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9551, .hex);
pub const GL_SPIR_V_BINARY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9552, .hex);
pub const GL_SPIR_V_BINARY_ARB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9552, .hex);
pub const GL_SPIR_V_EXTENSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9553, .hex);
pub const GL_NUM_SPIR_V_EXTENSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9554, .hex);
pub const GL_SCISSOR_TEST_EXCLUSIVE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9555, .hex);
pub const GL_SCISSOR_BOX_EXCLUSIVE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9556, .hex);
pub const GL_MAX_MESH_VIEWS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9557, .hex);
pub const GL_RENDER_GPU_MASK_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9558, .hex);
pub const GL_MESH_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9559, .hex);
pub const GL_TASK_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955A, .hex);
pub const GL_SHADING_RATE_IMAGE_BINDING_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955B, .hex);
pub const GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955C, .hex);
pub const GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955D, .hex);
pub const GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955E, .hex);
pub const GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x955F, .hex);
pub const GL_SHADING_RATE_IMAGE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9563, .hex);
pub const GL_SHADING_RATE_NO_INVOCATIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9564, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9565, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9566, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9567, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9568, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9569, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956A, .hex);
pub const GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956B, .hex);
pub const GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956C, .hex);
pub const GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956D, .hex);
pub const GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956E, .hex);
pub const GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x956F, .hex);
pub const GL_MESH_VERTICES_OUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9579, .hex);
pub const GL_MESH_PRIMITIVES_OUT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957A, .hex);
pub const GL_MESH_OUTPUT_TYPE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957B, .hex);
pub const GL_MESH_SUBROUTINE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957C, .hex);
pub const GL_TASK_SUBROUTINE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957D, .hex);
pub const GL_MESH_SUBROUTINE_UNIFORM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957E, .hex);
pub const GL_TASK_SUBROUTINE_UNIFORM_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x957F, .hex);
pub const GL_TEXTURE_TILING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9580, .hex);
pub const GL_DEDICATED_MEMORY_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9581, .hex);
pub const GL_NUM_TILING_TYPES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9582, .hex);
pub const GL_TILING_TYPES_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9583, .hex);
pub const GL_OPTIMAL_TILING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9584, .hex);
pub const GL_LINEAR_TILING_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9585, .hex);
pub const GL_HANDLE_TYPE_OPAQUE_FD_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9586, .hex);
pub const GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9587, .hex);
pub const GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9588, .hex);
pub const GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9589, .hex);
pub const GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958A, .hex);
pub const GL_HANDLE_TYPE_D3D11_IMAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958B, .hex);
pub const GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958C, .hex);
pub const GL_LAYOUT_GENERAL_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958D, .hex);
pub const GL_LAYOUT_COLOR_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958E, .hex);
pub const GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x958F, .hex);
pub const GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9590, .hex);
pub const GL_LAYOUT_SHADER_READ_ONLY_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9591, .hex);
pub const GL_LAYOUT_TRANSFER_SRC_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9592, .hex);
pub const GL_LAYOUT_TRANSFER_DST_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9593, .hex);
pub const GL_HANDLE_TYPE_D3D12_FENCE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9594, .hex);
pub const GL_D3D12_FENCE_VALUE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9595, .hex);
pub const GL_NUM_DEVICE_UUIDS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9596, .hex);
pub const GL_DEVICE_UUID_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9597, .hex);
pub const GL_DRIVER_UUID_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9598, .hex);
pub const GL_DEVICE_LUID_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9599, .hex);
pub const GL_DEVICE_NODE_MASK_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959A, .hex);
pub const GL_PROTECTED_MEMORY_OBJECT_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959B, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959C, .hex);
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959D, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959E, .hex);
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x959F, .hex);
pub const GL_REFERENCED_BY_MESH_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A0, .hex);
pub const GL_REFERENCED_BY_TASK_SHADER_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A1, .hex);
pub const GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A2, .hex);
pub const GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A3, .hex);
pub const GL_ATTACHED_MEMORY_OBJECT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A4, .hex);
pub const GL_ATTACHED_MEMORY_OFFSET_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A5, .hex);
pub const GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A6, .hex);
pub const GL_MEMORY_ATTACHABLE_SIZE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A7, .hex);
pub const GL_MEMORY_ATTACHABLE_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A8, .hex);
pub const GL_DETACHED_MEMORY_INCARNATION_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95A9, .hex);
pub const GL_DETACHED_TEXTURES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AA, .hex);
pub const GL_DETACHED_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AB, .hex);
pub const GL_MAX_DETACHED_TEXTURES_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AC, .hex);
pub const GL_MAX_DETACHED_BUFFERS_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AD, .hex);
pub const GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AE, .hex);
pub const GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95AF, .hex);
pub const GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x95B0, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9630, .hex);
pub const GL_MAX_VIEWS_OVR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9631, .hex);
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9632, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9633, .hex);
pub const GL_GS_SHADER_BINARY_MTK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9640, .hex);
pub const GL_GS_PROGRAM_BINARY_MTK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9641, .hex);
pub const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9650, .hex);
pub const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9651, .hex);
pub const GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9652, .hex);
pub const GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x96A2, .hex);
pub const GL_VALIDATE_SHADER_BINARY_QCOM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x96A3, .hex);
pub const GL_SHARED_EDGE_NV = @as(c_int, 0xC0);
pub const GL_ROUNDED_RECT_NV = @as(c_int, 0xE8);
pub const GL_RELATIVE_ROUNDED_RECT_NV = @as(c_int, 0xE9);
pub const GL_ROUNDED_RECT2_NV = @as(c_int, 0xEA);
pub const GL_RELATIVE_ROUNDED_RECT2_NV = @as(c_int, 0xEB);
pub const GL_ROUNDED_RECT4_NV = @as(c_int, 0xEC);
pub const GL_RELATIVE_ROUNDED_RECT4_NV = @as(c_int, 0xED);
pub const GL_ROUNDED_RECT8_NV = @as(c_int, 0xEE);
pub const GL_RELATIVE_ROUNDED_RECT8_NV = @as(c_int, 0xEF);
pub const GL_RESTART_PATH_NV = @as(c_int, 0xF0);
pub const GL_DUP_FIRST_CUBIC_CURVE_TO_NV = @as(c_int, 0xF2);
pub const GL_DUP_LAST_CUBIC_CURVE_TO_NV = @as(c_int, 0xF4);
pub const GL_RECT_NV = @as(c_int, 0xF6);
pub const GL_RELATIVE_RECT_NV = @as(c_int, 0xF7);
pub const GL_CIRCULAR_CCW_ARC_TO_NV = @as(c_int, 0xF8);
pub const GL_CIRCULAR_CW_ARC_TO_NV = @as(c_int, 0xFA);
pub const GL_CIRCULAR_TANGENT_ARC_TO_NV = @as(c_int, 0xFC);
pub const GL_ARC_TO_NV = @as(c_int, 0xFE);
pub const GL_RELATIVE_ARC_TO_NV = @as(c_int, 0xFF);
pub const GL_TRACE_ALL_BITS_MESA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF, .hex);
pub const GL_ALL_ATTRIB_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_ALL_BARRIER_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_ALL_BARRIER_BITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_ALL_PIXELS_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_ALL_SHADER_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_ALL_SHADER_BITS_EXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_CLIENT_ALL_ATTRIB_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_INVALID_INDEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_QUERY_ALL_EVENT_BITS_AMD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFF, .hex);
pub const GL_TIMEOUT_IGNORED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFFFFFFFFFF, .hex);
pub const GL_TIMEOUT_IGNORED_APPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFFFFFFFFFFFFFF, .hex);
pub const GL_LAYOUT_LINEAR_INTEL = @as(c_int, 1);
pub const GL_ONE = @as(c_int, 1);
pub const GL_TRUE = @as(c_int, 1);
pub const GL_VERSION_ES_CL_1_0 = @as(c_int, 1);
pub const GL_VERSION_ES_CL_1_1 = @as(c_int, 1);
pub const GL_VERSION_ES_CM_1_1 = @as(c_int, 1);
pub const GL_CULL_VERTEX_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103050, .decimal);
pub const GL_ALL_STATIC_DATA_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103060, .decimal);
pub const GL_STATIC_VERTEX_ARRAY_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103061, .decimal);
pub const GL_VERTEX_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103070, .decimal);
pub const GL_NORMAL_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103071, .decimal);
pub const GL_COLOR_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103072, .decimal);
pub const GL_INDEX_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103073, .decimal);
pub const GL_TEXTURE_COORD_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103074, .decimal);
pub const GL_EDGE_FLAG_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103075, .decimal);
pub const GL_FOG_COORDINATE_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103076, .decimal);
pub const GL_SECONDARY_COLOR_ARRAY_LIST_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103077, .decimal);
pub const GL_VERTEX_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103080, .decimal);
pub const GL_NORMAL_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103081, .decimal);
pub const GL_COLOR_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103082, .decimal);
pub const GL_INDEX_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103083, .decimal);
pub const GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103084, .decimal);
pub const GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103085, .decimal);
pub const GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103086, .decimal);
pub const GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 103087, .decimal);
pub const GL_UUID_SIZE_EXT = @as(c_int, 16);
pub const GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = @as(c_int, 2);
pub const GL_LUID_SIZE_EXT = @as(c_int, 8);
pub inline fn glAccum(arg_14: GLenum, arg_15: GLfloat) void {
    return epoxy_glAccum.?(arg_14, arg_15);
}
pub inline fn glAccumxOES(arg_16: GLenum, arg_17: GLfixed) void {
    return epoxy_glAccumxOES.?(arg_16, arg_17);
}
pub inline fn glAcquireKeyedMutexWin32EXT(arg_18: GLuint, arg_19: GLuint64, arg_20: GLuint) GLboolean {
    return epoxy_glAcquireKeyedMutexWin32EXT.?(arg_18, arg_19, arg_20);
}
pub inline fn glActiveProgramEXT(arg_21: GLuint) void {
    return epoxy_glActiveProgramEXT.?(arg_21);
}
pub inline fn glActiveShaderProgram(arg_22: GLuint, arg_23: GLuint) void {
    return epoxy_glActiveShaderProgram.?(arg_22, arg_23);
}
pub inline fn glActiveShaderProgramEXT(arg_24: GLuint, arg_25: GLuint) void {
    return epoxy_glActiveShaderProgramEXT.?(arg_24, arg_25);
}
pub inline fn glActiveStencilFaceEXT(arg_26: GLenum) void {
    return epoxy_glActiveStencilFaceEXT.?(arg_26);
}
pub inline fn glActiveTexture(arg_27: GLenum) void {
    return epoxy_glActiveTexture.?(arg_27);
}
pub inline fn glActiveTextureARB(arg_28: GLenum) void {
    return epoxy_glActiveTextureARB.?(arg_28);
}
pub inline fn glActiveVaryingNV(arg_29: GLuint, arg_30: [*c]const GLchar) void {
    return epoxy_glActiveVaryingNV.?(arg_29, arg_30);
}
pub inline fn glAlphaFragmentOp1ATI(arg_31: GLenum, arg_32: GLuint, arg_33: GLuint, arg_34: GLuint, arg_35: GLuint, arg_36: GLuint) void {
    return epoxy_glAlphaFragmentOp1ATI.?(arg_31, arg_32, arg_33, arg_34, arg_35, arg_36);
}
pub inline fn glAlphaFragmentOp2ATI(arg_37: GLenum, arg_38: GLuint, arg_39: GLuint, arg_40: GLuint, arg_41: GLuint, arg_42: GLuint, arg_43: GLuint, arg_44: GLuint, arg_45: GLuint) void {
    return epoxy_glAlphaFragmentOp2ATI.?(arg_37, arg_38, arg_39, arg_40, arg_41, arg_42, arg_43, arg_44, arg_45);
}
pub inline fn glAlphaFragmentOp3ATI(arg_46: GLenum, arg_47: GLuint, arg_48: GLuint, arg_49: GLuint, arg_50: GLuint, arg_51: GLuint, arg_52: GLuint, arg_53: GLuint, arg_54: GLuint, arg_55: GLuint, arg_56: GLuint, arg_57: GLuint) void {
    return epoxy_glAlphaFragmentOp3ATI.?(arg_46, arg_47, arg_48, arg_49, arg_50, arg_51, arg_52, arg_53, arg_54, arg_55, arg_56, arg_57);
}
pub inline fn glAlphaFunc(arg_58: GLenum, arg_59: GLfloat) void {
    return epoxy_glAlphaFunc.?(arg_58, arg_59);
}
pub inline fn glAlphaFuncQCOM(arg_60: GLenum, arg_61: GLclampf) void {
    return epoxy_glAlphaFuncQCOM.?(arg_60, arg_61);
}
pub inline fn glAlphaFuncx(arg_62: GLenum, arg_63: GLfixed) void {
    return epoxy_glAlphaFuncx.?(arg_62, arg_63);
}
pub inline fn glAlphaFuncxOES(arg_64: GLenum, arg_65: GLfixed) void {
    return epoxy_glAlphaFuncxOES.?(arg_64, arg_65);
}
pub inline fn glAlphaToCoverageDitherControlNV(arg_66: GLenum) void {
    return epoxy_glAlphaToCoverageDitherControlNV.?(arg_66);
}
pub inline fn glApplyFramebufferAttachmentCMAAINTEL() void {
    return epoxy_glApplyFramebufferAttachmentCMAAINTEL.?();
}
pub inline fn glApplyTextureEXT(arg_67: GLenum) void {
    return epoxy_glApplyTextureEXT.?(arg_67);
}
pub inline fn glAreProgramsResidentNV(arg_68: GLsizei, arg_69: [*c]const GLuint, arg_70: [*c]GLboolean) GLboolean {
    return epoxy_glAreProgramsResidentNV.?(arg_68, arg_69, arg_70);
}
pub inline fn glAreTexturesResident(arg_71: GLsizei, arg_72: [*c]const GLuint, arg_73: [*c]GLboolean) GLboolean {
    return epoxy_glAreTexturesResident.?(arg_71, arg_72, arg_73);
}
pub inline fn glAreTexturesResidentEXT(arg_74: GLsizei, arg_75: [*c]const GLuint, arg_76: [*c]GLboolean) GLboolean {
    return epoxy_glAreTexturesResidentEXT.?(arg_74, arg_75, arg_76);
}
pub inline fn glArrayElement(arg_77: GLint) void {
    return epoxy_glArrayElement.?(arg_77);
}
pub inline fn glArrayElementEXT(arg_78: GLint) void {
    return epoxy_glArrayElementEXT.?(arg_78);
}
pub inline fn glArrayObjectATI(arg_79: GLenum, arg_80: GLint, arg_81: GLenum, arg_82: GLsizei, arg_83: GLuint, arg_84: GLuint) void {
    return epoxy_glArrayObjectATI.?(arg_79, arg_80, arg_81, arg_82, arg_83, arg_84);
}
pub inline fn glAsyncCopyBufferSubDataNVX(arg_85: GLsizei, arg_86: [*c]const GLuint, arg_87: [*c]const GLuint64, arg_88: GLuint, arg_89: GLbitfield, arg_90: GLuint, arg_91: GLuint, arg_92: GLintptr, arg_93: GLintptr, arg_94: GLsizeiptr, arg_95: GLsizei, arg_96: [*c]const GLuint, arg_97: [*c]const GLuint64) GLuint {
    return epoxy_glAsyncCopyBufferSubDataNVX.?(arg_85, arg_86, arg_87, arg_88, arg_89, arg_90, arg_91, arg_92, arg_93, arg_94, arg_95, arg_96, arg_97);
}
pub inline fn glAsyncCopyImageSubDataNVX(arg_98: GLsizei, arg_99: [*c]const GLuint, arg_100: [*c]const GLuint64, arg_101: GLuint, arg_102: GLbitfield, arg_103: GLuint, arg_104: GLenum, arg_105: GLint, arg_106: GLint, arg_107: GLint, arg_108: GLint, arg_109: GLuint, arg_110: GLenum, arg_111: GLint, arg_112: GLint, arg_113: GLint, arg_114: GLint, arg_115: GLsizei, arg_116: GLsizei, arg_117: GLsizei, arg_118: GLsizei, arg_119: [*c]const GLuint, arg_120: [*c]const GLuint64) GLuint {
    return epoxy_glAsyncCopyImageSubDataNVX.?(arg_98, arg_99, arg_100, arg_101, arg_102, arg_103, arg_104, arg_105, arg_106, arg_107, arg_108, arg_109, arg_110, arg_111, arg_112, arg_113, arg_114, arg_115, arg_116, arg_117, arg_118, arg_119, arg_120);
}
pub inline fn glAsyncMarkerSGIX(arg_121: GLuint) void {
    return epoxy_glAsyncMarkerSGIX.?(arg_121);
}
pub inline fn glAttachObjectARB(arg_122: GLhandleARB, arg_123: GLhandleARB) void {
    return epoxy_glAttachObjectARB.?(arg_122, arg_123);
}
pub inline fn glAttachShader(arg_124: GLuint, arg_125: GLuint) void {
    return epoxy_glAttachShader.?(arg_124, arg_125);
}
pub inline fn glBegin(arg_126: GLenum) void {
    return epoxy_glBegin.?(arg_126);
}
pub inline fn glBeginConditionalRender(arg_127: GLuint, arg_128: GLenum) void {
    return epoxy_glBeginConditionalRender.?(arg_127, arg_128);
}
pub inline fn glBeginConditionalRenderNV(arg_129: GLuint, arg_130: GLenum) void {
    return epoxy_glBeginConditionalRenderNV.?(arg_129, arg_130);
}
pub inline fn glBeginConditionalRenderNVX(arg_131: GLuint) void {
    return epoxy_glBeginConditionalRenderNVX.?(arg_131);
}
pub inline fn glBeginFragmentShaderATI() void {
    return epoxy_glBeginFragmentShaderATI.?();
}
pub inline fn glBeginOcclusionQueryNV(arg_132: GLuint) void {
    return epoxy_glBeginOcclusionQueryNV.?(arg_132);
}
pub inline fn glBeginPerfMonitorAMD(arg_133: GLuint) void {
    return epoxy_glBeginPerfMonitorAMD.?(arg_133);
}
pub inline fn glBeginPerfQueryINTEL(arg_134: GLuint) void {
    return epoxy_glBeginPerfQueryINTEL.?(arg_134);
}
pub inline fn glBeginQuery(arg_135: GLenum, arg_136: GLuint) void {
    return epoxy_glBeginQuery.?(arg_135, arg_136);
}
pub inline fn glBeginQueryARB(arg_137: GLenum, arg_138: GLuint) void {
    return epoxy_glBeginQueryARB.?(arg_137, arg_138);
}
pub inline fn glBeginQueryEXT(arg_139: GLenum, arg_140: GLuint) void {
    return epoxy_glBeginQueryEXT.?(arg_139, arg_140);
}
pub inline fn glBeginQueryIndexed(arg_141: GLenum, arg_142: GLuint, arg_143: GLuint) void {
    return epoxy_glBeginQueryIndexed.?(arg_141, arg_142, arg_143);
}
pub inline fn glBeginTransformFeedback(arg_144: GLenum) void {
    return epoxy_glBeginTransformFeedback.?(arg_144);
}
pub inline fn glBeginTransformFeedbackEXT(arg_145: GLenum) void {
    return epoxy_glBeginTransformFeedbackEXT.?(arg_145);
}
pub inline fn glBeginTransformFeedbackNV(arg_146: GLenum) void {
    return epoxy_glBeginTransformFeedbackNV.?(arg_146);
}
pub inline fn glBeginVertexShaderEXT() void {
    return epoxy_glBeginVertexShaderEXT.?();
}
pub inline fn glBeginVideoCaptureNV(arg_147: GLuint) void {
    return epoxy_glBeginVideoCaptureNV.?(arg_147);
}
pub inline fn glBindAttribLocation(arg_148: GLuint, arg_149: GLuint, arg_150: [*c]const GLchar) void {
    return epoxy_glBindAttribLocation.?(arg_148, arg_149, arg_150);
}
pub inline fn glBindAttribLocationARB(arg_151: GLhandleARB, arg_152: GLuint, arg_153: [*c]const GLcharARB) void {
    return epoxy_glBindAttribLocationARB.?(arg_151, arg_152, arg_153);
}
pub inline fn glBindBuffer(arg_154: GLenum, arg_155: GLuint) void {
    return epoxy_glBindBuffer.?(arg_154, arg_155);
}
pub inline fn glBindBufferARB(arg_156: GLenum, arg_157: GLuint) void {
    return epoxy_glBindBufferARB.?(arg_156, arg_157);
}
pub inline fn glBindBufferBase(arg_158: GLenum, arg_159: GLuint, arg_160: GLuint) void {
    return epoxy_glBindBufferBase.?(arg_158, arg_159, arg_160);
}
pub inline fn glBindBufferBaseEXT(arg_161: GLenum, arg_162: GLuint, arg_163: GLuint) void {
    return epoxy_glBindBufferBaseEXT.?(arg_161, arg_162, arg_163);
}
pub inline fn glBindBufferBaseNV(arg_164: GLenum, arg_165: GLuint, arg_166: GLuint) void {
    return epoxy_glBindBufferBaseNV.?(arg_164, arg_165, arg_166);
}
pub inline fn glBindBufferOffsetEXT(arg_167: GLenum, arg_168: GLuint, arg_169: GLuint, arg_170: GLintptr) void {
    return epoxy_glBindBufferOffsetEXT.?(arg_167, arg_168, arg_169, arg_170);
}
pub inline fn glBindBufferOffsetNV(arg_171: GLenum, arg_172: GLuint, arg_173: GLuint, arg_174: GLintptr) void {
    return epoxy_glBindBufferOffsetNV.?(arg_171, arg_172, arg_173, arg_174);
}
pub inline fn glBindBufferRange(arg_175: GLenum, arg_176: GLuint, arg_177: GLuint, arg_178: GLintptr, arg_179: GLsizeiptr) void {
    return epoxy_glBindBufferRange.?(arg_175, arg_176, arg_177, arg_178, arg_179);
}
pub inline fn glBindBufferRangeEXT(arg_180: GLenum, arg_181: GLuint, arg_182: GLuint, arg_183: GLintptr, arg_184: GLsizeiptr) void {
    return epoxy_glBindBufferRangeEXT.?(arg_180, arg_181, arg_182, arg_183, arg_184);
}
pub inline fn glBindBufferRangeNV(arg_185: GLenum, arg_186: GLuint, arg_187: GLuint, arg_188: GLintptr, arg_189: GLsizeiptr) void {
    return epoxy_glBindBufferRangeNV.?(arg_185, arg_186, arg_187, arg_188, arg_189);
}
pub inline fn glBindBuffersBase(arg_190: GLenum, arg_191: GLuint, arg_192: GLsizei, arg_193: [*c]const GLuint) void {
    return epoxy_glBindBuffersBase.?(arg_190, arg_191, arg_192, arg_193);
}
pub inline fn glBindBuffersRange(arg_194: GLenum, arg_195: GLuint, arg_196: GLsizei, arg_197: [*c]const GLuint, arg_198: [*c]const GLintptr, arg_199: [*c]const GLsizeiptr) void {
    return epoxy_glBindBuffersRange.?(arg_194, arg_195, arg_196, arg_197, arg_198, arg_199);
}
pub inline fn glBindFragDataLocation(arg_200: GLuint, arg_201: GLuint, arg_202: [*c]const GLchar) void {
    return epoxy_glBindFragDataLocation.?(arg_200, arg_201, arg_202);
}
pub inline fn glBindFragDataLocationEXT(arg_203: GLuint, arg_204: GLuint, arg_205: [*c]const GLchar) void {
    return epoxy_glBindFragDataLocationEXT.?(arg_203, arg_204, arg_205);
}
pub inline fn glBindFragDataLocationIndexed(arg_206: GLuint, arg_207: GLuint, arg_208: GLuint, arg_209: [*c]const GLchar) void {
    return epoxy_glBindFragDataLocationIndexed.?(arg_206, arg_207, arg_208, arg_209);
}
pub inline fn glBindFragDataLocationIndexedEXT(arg_210: GLuint, arg_211: GLuint, arg_212: GLuint, arg_213: [*c]const GLchar) void {
    return epoxy_glBindFragDataLocationIndexedEXT.?(arg_210, arg_211, arg_212, arg_213);
}
pub inline fn glBindFragmentShaderATI(arg_214: GLuint) void {
    return epoxy_glBindFragmentShaderATI.?(arg_214);
}
pub inline fn glBindFramebuffer(arg_215: GLenum, arg_216: GLuint) void {
    return epoxy_glBindFramebuffer.?(arg_215, arg_216);
}
pub inline fn glBindFramebufferEXT(arg_217: GLenum, arg_218: GLuint) void {
    return epoxy_glBindFramebufferEXT.?(arg_217, arg_218);
}
pub inline fn glBindFramebufferOES(arg_219: GLenum, arg_220: GLuint) void {
    return epoxy_glBindFramebufferOES.?(arg_219, arg_220);
}
pub inline fn glBindImageTexture(arg_221: GLuint, arg_222: GLuint, arg_223: GLint, arg_224: GLboolean, arg_225: GLint, arg_226: GLenum, arg_227: GLenum) void {
    return epoxy_glBindImageTexture.?(arg_221, arg_222, arg_223, arg_224, arg_225, arg_226, arg_227);
}
pub inline fn glBindImageTextureEXT(arg_228: GLuint, arg_229: GLuint, arg_230: GLint, arg_231: GLboolean, arg_232: GLint, arg_233: GLenum, arg_234: GLint) void {
    return epoxy_glBindImageTextureEXT.?(arg_228, arg_229, arg_230, arg_231, arg_232, arg_233, arg_234);
}
pub inline fn glBindImageTextures(arg_235: GLuint, arg_236: GLsizei, arg_237: [*c]const GLuint) void {
    return epoxy_glBindImageTextures.?(arg_235, arg_236, arg_237);
}
pub inline fn glBindLightParameterEXT(arg_238: GLenum, arg_239: GLenum) GLuint {
    return epoxy_glBindLightParameterEXT.?(arg_238, arg_239);
}
pub inline fn glBindMaterialParameterEXT(arg_240: GLenum, arg_241: GLenum) GLuint {
    return epoxy_glBindMaterialParameterEXT.?(arg_240, arg_241);
}
pub inline fn glBindMultiTextureEXT(arg_242: GLenum, arg_243: GLenum, arg_244: GLuint) void {
    return epoxy_glBindMultiTextureEXT.?(arg_242, arg_243, arg_244);
}
pub inline fn glBindParameterEXT(arg_245: GLenum) GLuint {
    return epoxy_glBindParameterEXT.?(arg_245);
}
pub inline fn glBindProgramARB(arg_246: GLenum, arg_247: GLuint) void {
    return epoxy_glBindProgramARB.?(arg_246, arg_247);
}
pub inline fn glBindProgramNV(arg_248: GLenum, arg_249: GLuint) void {
    return epoxy_glBindProgramNV.?(arg_248, arg_249);
}
pub inline fn glBindProgramPipeline(arg_250: GLuint) void {
    return epoxy_glBindProgramPipeline.?(arg_250);
}
pub inline fn glBindProgramPipelineEXT(arg_251: GLuint) void {
    return epoxy_glBindProgramPipelineEXT.?(arg_251);
}
pub inline fn glBindRenderbuffer(arg_252: GLenum, arg_253: GLuint) void {
    return epoxy_glBindRenderbuffer.?(arg_252, arg_253);
}
pub inline fn glBindRenderbufferEXT(arg_254: GLenum, arg_255: GLuint) void {
    return epoxy_glBindRenderbufferEXT.?(arg_254, arg_255);
}
pub inline fn glBindRenderbufferOES(arg_256: GLenum, arg_257: GLuint) void {
    return epoxy_glBindRenderbufferOES.?(arg_256, arg_257);
}
pub inline fn glBindSampler(arg_258: GLuint, arg_259: GLuint) void {
    return epoxy_glBindSampler.?(arg_258, arg_259);
}
pub inline fn glBindSamplers(arg_260: GLuint, arg_261: GLsizei, arg_262: [*c]const GLuint) void {
    return epoxy_glBindSamplers.?(arg_260, arg_261, arg_262);
}
pub inline fn glBindShadingRateImageNV(arg_263: GLuint) void {
    return epoxy_glBindShadingRateImageNV.?(arg_263);
}
pub inline fn glBindTexGenParameterEXT(arg_264: GLenum, arg_265: GLenum, arg_266: GLenum) GLuint {
    return epoxy_glBindTexGenParameterEXT.?(arg_264, arg_265, arg_266);
}
pub inline fn glBindTexture(arg_267: GLenum, arg_268: GLuint) void {
    return epoxy_glBindTexture.?(arg_267, arg_268);
}
pub inline fn glBindTextureEXT(arg_269: GLenum, arg_270: GLuint) void {
    return epoxy_glBindTextureEXT.?(arg_269, arg_270);
}
pub inline fn glBindTextureUnit(arg_271: GLuint, arg_272: GLuint) void {
    return epoxy_glBindTextureUnit.?(arg_271, arg_272);
}
pub inline fn glBindTextureUnitParameterEXT(arg_273: GLenum, arg_274: GLenum) GLuint {
    return epoxy_glBindTextureUnitParameterEXT.?(arg_273, arg_274);
}
pub inline fn glBindTextures(arg_275: GLuint, arg_276: GLsizei, arg_277: [*c]const GLuint) void {
    return epoxy_glBindTextures.?(arg_275, arg_276, arg_277);
}
pub inline fn glBindTransformFeedback(arg_278: GLenum, arg_279: GLuint) void {
    return epoxy_glBindTransformFeedback.?(arg_278, arg_279);
}
pub inline fn glBindTransformFeedbackNV(arg_280: GLenum, arg_281: GLuint) void {
    return epoxy_glBindTransformFeedbackNV.?(arg_280, arg_281);
}
pub inline fn glBindVertexArray(arg_282: GLuint) void {
    return epoxy_glBindVertexArray.?(arg_282);
}
pub inline fn glBindVertexArrayAPPLE(arg_283: GLuint) void {
    return epoxy_glBindVertexArrayAPPLE.?(arg_283);
}
pub inline fn glBindVertexArrayOES(arg_284: GLuint) void {
    return epoxy_glBindVertexArrayOES.?(arg_284);
}
pub inline fn glBindVertexBuffer(arg_285: GLuint, arg_286: GLuint, arg_287: GLintptr, arg_288: GLsizei) void {
    return epoxy_glBindVertexBuffer.?(arg_285, arg_286, arg_287, arg_288);
}
pub inline fn glBindVertexBuffers(arg_289: GLuint, arg_290: GLsizei, arg_291: [*c]const GLuint, arg_292: [*c]const GLintptr, arg_293: [*c]const GLsizei) void {
    return epoxy_glBindVertexBuffers.?(arg_289, arg_290, arg_291, arg_292, arg_293);
}
pub inline fn glBindVertexShaderEXT(arg_294: GLuint) void {
    return epoxy_glBindVertexShaderEXT.?(arg_294);
}
pub inline fn glBindVideoCaptureStreamBufferNV(arg_295: GLuint, arg_296: GLuint, arg_297: GLenum, arg_298: GLintptrARB) void {
    return epoxy_glBindVideoCaptureStreamBufferNV.?(arg_295, arg_296, arg_297, arg_298);
}
pub inline fn glBindVideoCaptureStreamTextureNV(arg_299: GLuint, arg_300: GLuint, arg_301: GLenum, arg_302: GLenum, arg_303: GLuint) void {
    return epoxy_glBindVideoCaptureStreamTextureNV.?(arg_299, arg_300, arg_301, arg_302, arg_303);
}
pub inline fn glBinormal3bEXT(arg_304: GLbyte, arg_305: GLbyte, arg_306: GLbyte) void {
    return epoxy_glBinormal3bEXT.?(arg_304, arg_305, arg_306);
}
pub inline fn glBinormal3bvEXT(arg_307: [*c]const GLbyte) void {
    return epoxy_glBinormal3bvEXT.?(arg_307);
}
pub inline fn glBinormal3dEXT(arg_308: GLdouble, arg_309: GLdouble, arg_310: GLdouble) void {
    return epoxy_glBinormal3dEXT.?(arg_308, arg_309, arg_310);
}
pub inline fn glBinormal3dvEXT(arg_311: [*c]const GLdouble) void {
    return epoxy_glBinormal3dvEXT.?(arg_311);
}
pub inline fn glBinormal3fEXT(arg_312: GLfloat, arg_313: GLfloat, arg_314: GLfloat) void {
    return epoxy_glBinormal3fEXT.?(arg_312, arg_313, arg_314);
}
pub inline fn glBinormal3fvEXT(arg_315: [*c]const GLfloat) void {
    return epoxy_glBinormal3fvEXT.?(arg_315);
}
pub inline fn glBinormal3iEXT(arg_316: GLint, arg_317: GLint, arg_318: GLint) void {
    return epoxy_glBinormal3iEXT.?(arg_316, arg_317, arg_318);
}
pub inline fn glBinormal3ivEXT(arg_319: [*c]const GLint) void {
    return epoxy_glBinormal3ivEXT.?(arg_319);
}
pub inline fn glBinormal3sEXT(arg_320: GLshort, arg_321: GLshort, arg_322: GLshort) void {
    return epoxy_glBinormal3sEXT.?(arg_320, arg_321, arg_322);
}
pub inline fn glBinormal3svEXT(arg_323: [*c]const GLshort) void {
    return epoxy_glBinormal3svEXT.?(arg_323);
}
pub inline fn glBinormalPointerEXT(arg_324: GLenum, arg_325: GLsizei, arg_326: ?*const anyopaque) void {
    return epoxy_glBinormalPointerEXT.?(arg_324, arg_325, arg_326);
}
pub inline fn glBitmap(arg_327: GLsizei, arg_328: GLsizei, arg_329: GLfloat, arg_330: GLfloat, arg_331: GLfloat, arg_332: GLfloat, arg_333: [*c]const GLubyte) void {
    return epoxy_glBitmap.?(arg_327, arg_328, arg_329, arg_330, arg_331, arg_332, arg_333);
}
pub inline fn glBitmapxOES(arg_334: GLsizei, arg_335: GLsizei, arg_336: GLfixed, arg_337: GLfixed, arg_338: GLfixed, arg_339: GLfixed, arg_340: [*c]const GLubyte) void {
    return epoxy_glBitmapxOES.?(arg_334, arg_335, arg_336, arg_337, arg_338, arg_339, arg_340);
}
pub inline fn glBlendBarrier() void {
    return epoxy_glBlendBarrier.?();
}
pub inline fn glBlendBarrierKHR() void {
    return epoxy_glBlendBarrierKHR.?();
}
pub inline fn glBlendBarrierNV() void {
    return epoxy_glBlendBarrierNV.?();
}
pub inline fn glBlendColor(arg_341: GLfloat, arg_342: GLfloat, arg_343: GLfloat, arg_344: GLfloat) void {
    return epoxy_glBlendColor.?(arg_341, arg_342, arg_343, arg_344);
}
pub inline fn glBlendColorEXT(arg_345: GLfloat, arg_346: GLfloat, arg_347: GLfloat, arg_348: GLfloat) void {
    return epoxy_glBlendColorEXT.?(arg_345, arg_346, arg_347, arg_348);
}
pub inline fn glBlendColorxOES(arg_349: GLfixed, arg_350: GLfixed, arg_351: GLfixed, arg_352: GLfixed) void {
    return epoxy_glBlendColorxOES.?(arg_349, arg_350, arg_351, arg_352);
}
pub inline fn glBlendEquation(arg_353: GLenum) void {
    return epoxy_glBlendEquation.?(arg_353);
}
pub inline fn glBlendEquationEXT(arg_354: GLenum) void {
    return epoxy_glBlendEquationEXT.?(arg_354);
}
pub inline fn glBlendEquationIndexedAMD(arg_355: GLuint, arg_356: GLenum) void {
    return epoxy_glBlendEquationIndexedAMD.?(arg_355, arg_356);
}
pub inline fn glBlendEquationOES(arg_357: GLenum) void {
    return epoxy_glBlendEquationOES.?(arg_357);
}
pub inline fn glBlendEquationSeparate(arg_358: GLenum, arg_359: GLenum) void {
    return epoxy_glBlendEquationSeparate.?(arg_358, arg_359);
}
pub inline fn glBlendEquationSeparateEXT(arg_360: GLenum, arg_361: GLenum) void {
    return epoxy_glBlendEquationSeparateEXT.?(arg_360, arg_361);
}
pub inline fn glBlendEquationSeparateIndexedAMD(arg_362: GLuint, arg_363: GLenum, arg_364: GLenum) void {
    return epoxy_glBlendEquationSeparateIndexedAMD.?(arg_362, arg_363, arg_364);
}
pub inline fn glBlendEquationSeparateOES(arg_365: GLenum, arg_366: GLenum) void {
    return epoxy_glBlendEquationSeparateOES.?(arg_365, arg_366);
}
pub inline fn glBlendEquationSeparatei(arg_367: GLuint, arg_368: GLenum, arg_369: GLenum) void {
    return epoxy_glBlendEquationSeparatei.?(arg_367, arg_368, arg_369);
}
pub inline fn glBlendEquationSeparateiARB(arg_370: GLuint, arg_371: GLenum, arg_372: GLenum) void {
    return epoxy_glBlendEquationSeparateiARB.?(arg_370, arg_371, arg_372);
}
pub inline fn glBlendEquationSeparateiEXT(arg_373: GLuint, arg_374: GLenum, arg_375: GLenum) void {
    return epoxy_glBlendEquationSeparateiEXT.?(arg_373, arg_374, arg_375);
}
pub inline fn glBlendEquationSeparateiOES(arg_376: GLuint, arg_377: GLenum, arg_378: GLenum) void {
    return epoxy_glBlendEquationSeparateiOES.?(arg_376, arg_377, arg_378);
}
pub inline fn glBlendEquationi(arg_379: GLuint, arg_380: GLenum) void {
    return epoxy_glBlendEquationi.?(arg_379, arg_380);
}
pub inline fn glBlendEquationiARB(arg_381: GLuint, arg_382: GLenum) void {
    return epoxy_glBlendEquationiARB.?(arg_381, arg_382);
}
pub inline fn glBlendEquationiEXT(arg_383: GLuint, arg_384: GLenum) void {
    return epoxy_glBlendEquationiEXT.?(arg_383, arg_384);
}
pub inline fn glBlendEquationiOES(arg_385: GLuint, arg_386: GLenum) void {
    return epoxy_glBlendEquationiOES.?(arg_385, arg_386);
}
pub inline fn glBlendFunc(arg_387: GLenum, arg_388: GLenum) void {
    return epoxy_glBlendFunc.?(arg_387, arg_388);
}
pub inline fn glBlendFuncIndexedAMD(arg_389: GLuint, arg_390: GLenum, arg_391: GLenum) void {
    return epoxy_glBlendFuncIndexedAMD.?(arg_389, arg_390, arg_391);
}
pub inline fn glBlendFuncSeparate(arg_392: GLenum, arg_393: GLenum, arg_394: GLenum, arg_395: GLenum) void {
    return epoxy_glBlendFuncSeparate.?(arg_392, arg_393, arg_394, arg_395);
}
pub inline fn glBlendFuncSeparateEXT(arg_396: GLenum, arg_397: GLenum, arg_398: GLenum, arg_399: GLenum) void {
    return epoxy_glBlendFuncSeparateEXT.?(arg_396, arg_397, arg_398, arg_399);
}
pub inline fn glBlendFuncSeparateINGR(arg_400: GLenum, arg_401: GLenum, arg_402: GLenum, arg_403: GLenum) void {
    return epoxy_glBlendFuncSeparateINGR.?(arg_400, arg_401, arg_402, arg_403);
}
pub inline fn glBlendFuncSeparateIndexedAMD(arg_404: GLuint, arg_405: GLenum, arg_406: GLenum, arg_407: GLenum, arg_408: GLenum) void {
    return epoxy_glBlendFuncSeparateIndexedAMD.?(arg_404, arg_405, arg_406, arg_407, arg_408);
}
pub inline fn glBlendFuncSeparateOES(arg_409: GLenum, arg_410: GLenum, arg_411: GLenum, arg_412: GLenum) void {
    return epoxy_glBlendFuncSeparateOES.?(arg_409, arg_410, arg_411, arg_412);
}
pub inline fn glBlendFuncSeparatei(arg_413: GLuint, arg_414: GLenum, arg_415: GLenum, arg_416: GLenum, arg_417: GLenum) void {
    return epoxy_glBlendFuncSeparatei.?(arg_413, arg_414, arg_415, arg_416, arg_417);
}
pub inline fn glBlendFuncSeparateiARB(arg_418: GLuint, arg_419: GLenum, arg_420: GLenum, arg_421: GLenum, arg_422: GLenum) void {
    return epoxy_glBlendFuncSeparateiARB.?(arg_418, arg_419, arg_420, arg_421, arg_422);
}
pub inline fn glBlendFuncSeparateiEXT(arg_423: GLuint, arg_424: GLenum, arg_425: GLenum, arg_426: GLenum, arg_427: GLenum) void {
    return epoxy_glBlendFuncSeparateiEXT.?(arg_423, arg_424, arg_425, arg_426, arg_427);
}
pub inline fn glBlendFuncSeparateiOES(arg_428: GLuint, arg_429: GLenum, arg_430: GLenum, arg_431: GLenum, arg_432: GLenum) void {
    return epoxy_glBlendFuncSeparateiOES.?(arg_428, arg_429, arg_430, arg_431, arg_432);
}
pub inline fn glBlendFunci(arg_433: GLuint, arg_434: GLenum, arg_435: GLenum) void {
    return epoxy_glBlendFunci.?(arg_433, arg_434, arg_435);
}
pub inline fn glBlendFunciARB(arg_436: GLuint, arg_437: GLenum, arg_438: GLenum) void {
    return epoxy_glBlendFunciARB.?(arg_436, arg_437, arg_438);
}
pub inline fn glBlendFunciEXT(arg_439: GLuint, arg_440: GLenum, arg_441: GLenum) void {
    return epoxy_glBlendFunciEXT.?(arg_439, arg_440, arg_441);
}
pub inline fn glBlendFunciOES(arg_442: GLuint, arg_443: GLenum, arg_444: GLenum) void {
    return epoxy_glBlendFunciOES.?(arg_442, arg_443, arg_444);
}
pub inline fn glBlendParameteriNV(arg_445: GLenum, arg_446: GLint) void {
    return epoxy_glBlendParameteriNV.?(arg_445, arg_446);
}
pub inline fn glBlitFramebuffer(arg_447: GLint, arg_448: GLint, arg_449: GLint, arg_450: GLint, arg_451: GLint, arg_452: GLint, arg_453: GLint, arg_454: GLint, arg_455: GLbitfield, arg_456: GLenum) void {
    return epoxy_glBlitFramebuffer.?(arg_447, arg_448, arg_449, arg_450, arg_451, arg_452, arg_453, arg_454, arg_455, arg_456);
}
pub inline fn glBlitFramebufferANGLE(arg_457: GLint, arg_458: GLint, arg_459: GLint, arg_460: GLint, arg_461: GLint, arg_462: GLint, arg_463: GLint, arg_464: GLint, arg_465: GLbitfield, arg_466: GLenum) void {
    return epoxy_glBlitFramebufferANGLE.?(arg_457, arg_458, arg_459, arg_460, arg_461, arg_462, arg_463, arg_464, arg_465, arg_466);
}
pub inline fn glBlitFramebufferEXT(arg_467: GLint, arg_468: GLint, arg_469: GLint, arg_470: GLint, arg_471: GLint, arg_472: GLint, arg_473: GLint, arg_474: GLint, arg_475: GLbitfield, arg_476: GLenum) void {
    return epoxy_glBlitFramebufferEXT.?(arg_467, arg_468, arg_469, arg_470, arg_471, arg_472, arg_473, arg_474, arg_475, arg_476);
}
pub inline fn glBlitFramebufferNV(arg_477: GLint, arg_478: GLint, arg_479: GLint, arg_480: GLint, arg_481: GLint, arg_482: GLint, arg_483: GLint, arg_484: GLint, arg_485: GLbitfield, arg_486: GLenum) void {
    return epoxy_glBlitFramebufferNV.?(arg_477, arg_478, arg_479, arg_480, arg_481, arg_482, arg_483, arg_484, arg_485, arg_486);
}
pub inline fn glBlitNamedFramebuffer(arg_487: GLuint, arg_488: GLuint, arg_489: GLint, arg_490: GLint, arg_491: GLint, arg_492: GLint, arg_493: GLint, arg_494: GLint, arg_495: GLint, arg_496: GLint, arg_497: GLbitfield, arg_498: GLenum) void {
    return epoxy_glBlitNamedFramebuffer.?(arg_487, arg_488, arg_489, arg_490, arg_491, arg_492, arg_493, arg_494, arg_495, arg_496, arg_497, arg_498);
}
pub inline fn glBufferAddressRangeNV(arg_499: GLenum, arg_500: GLuint, arg_501: GLuint64EXT, arg_502: GLsizeiptr) void {
    return epoxy_glBufferAddressRangeNV.?(arg_499, arg_500, arg_501, arg_502);
}
pub inline fn glBufferAttachMemoryNV(arg_503: GLenum, arg_504: GLuint, arg_505: GLuint64) void {
    return epoxy_glBufferAttachMemoryNV.?(arg_503, arg_504, arg_505);
}
pub inline fn glBufferData(arg_506: GLenum, arg_507: GLsizeiptr, arg_508: ?*const anyopaque, arg_509: GLenum) void {
    return epoxy_glBufferData.?(arg_506, arg_507, arg_508, arg_509);
}
pub inline fn glBufferDataARB(arg_510: GLenum, arg_511: GLsizeiptrARB, arg_512: ?*const anyopaque, arg_513: GLenum) void {
    return epoxy_glBufferDataARB.?(arg_510, arg_511, arg_512, arg_513);
}
pub inline fn glBufferPageCommitmentARB(arg_514: GLenum, arg_515: GLintptr, arg_516: GLsizeiptr, arg_517: GLboolean) void {
    return epoxy_glBufferPageCommitmentARB.?(arg_514, arg_515, arg_516, arg_517);
}
pub inline fn glBufferParameteriAPPLE(arg_518: GLenum, arg_519: GLenum, arg_520: GLint) void {
    return epoxy_glBufferParameteriAPPLE.?(arg_518, arg_519, arg_520);
}
pub inline fn glBufferStorage(arg_521: GLenum, arg_522: GLsizeiptr, arg_523: ?*const anyopaque, arg_524: GLbitfield) void {
    return epoxy_glBufferStorage.?(arg_521, arg_522, arg_523, arg_524);
}
pub inline fn glBufferStorageEXT(arg_525: GLenum, arg_526: GLsizeiptr, arg_527: ?*const anyopaque, arg_528: GLbitfield) void {
    return epoxy_glBufferStorageEXT.?(arg_525, arg_526, arg_527, arg_528);
}
pub inline fn glBufferStorageExternalEXT(arg_529: GLenum, arg_530: GLintptr, arg_531: GLsizeiptr, arg_532: GLeglClientBufferEXT, arg_533: GLbitfield) void {
    return epoxy_glBufferStorageExternalEXT.?(arg_529, arg_530, arg_531, arg_532, arg_533);
}
pub inline fn glBufferStorageMemEXT(arg_534: GLenum, arg_535: GLsizeiptr, arg_536: GLuint, arg_537: GLuint64) void {
    return epoxy_glBufferStorageMemEXT.?(arg_534, arg_535, arg_536, arg_537);
}
pub inline fn glBufferSubData(arg_538: GLenum, arg_539: GLintptr, arg_540: GLsizeiptr, arg_541: ?*const anyopaque) void {
    return epoxy_glBufferSubData.?(arg_538, arg_539, arg_540, arg_541);
}
pub inline fn glBufferSubDataARB(arg_542: GLenum, arg_543: GLintptrARB, arg_544: GLsizeiptrARB, arg_545: ?*const anyopaque) void {
    return epoxy_glBufferSubDataARB.?(arg_542, arg_543, arg_544, arg_545);
}
pub inline fn glCallCommandListNV(arg_546: GLuint) void {
    return epoxy_glCallCommandListNV.?(arg_546);
}
pub inline fn glCallList(arg_547: GLuint) void {
    return epoxy_glCallList.?(arg_547);
}
pub inline fn glCallLists(arg_548: GLsizei, arg_549: GLenum, arg_550: ?*const anyopaque) void {
    return epoxy_glCallLists.?(arg_548, arg_549, arg_550);
}
pub inline fn glCheckFramebufferStatus(arg_551: GLenum) GLenum {
    return epoxy_glCheckFramebufferStatus.?(arg_551);
}
pub inline fn glCheckFramebufferStatusEXT(arg_552: GLenum) GLenum {
    return epoxy_glCheckFramebufferStatusEXT.?(arg_552);
}
pub inline fn glCheckFramebufferStatusOES(arg_553: GLenum) GLenum {
    return epoxy_glCheckFramebufferStatusOES.?(arg_553);
}
pub inline fn glCheckNamedFramebufferStatus(arg_554: GLuint, arg_555: GLenum) GLenum {
    return epoxy_glCheckNamedFramebufferStatus.?(arg_554, arg_555);
}
pub inline fn glCheckNamedFramebufferStatusEXT(arg_556: GLuint, arg_557: GLenum) GLenum {
    return epoxy_glCheckNamedFramebufferStatusEXT.?(arg_556, arg_557);
}
pub inline fn glClampColor(arg_558: GLenum, arg_559: GLenum) void {
    return epoxy_glClampColor.?(arg_558, arg_559);
}
pub inline fn glClampColorARB(arg_560: GLenum, arg_561: GLenum) void {
    return epoxy_glClampColorARB.?(arg_560, arg_561);
}
pub inline fn glClear(arg_562: GLbitfield) void {
    return epoxy_glClear.?(arg_562);
}
pub inline fn glClearAccum(arg_563: GLfloat, arg_564: GLfloat, arg_565: GLfloat, arg_566: GLfloat) void {
    return epoxy_glClearAccum.?(arg_563, arg_564, arg_565, arg_566);
}
pub inline fn glClearAccumxOES(arg_567: GLfixed, arg_568: GLfixed, arg_569: GLfixed, arg_570: GLfixed) void {
    return epoxy_glClearAccumxOES.?(arg_567, arg_568, arg_569, arg_570);
}
pub inline fn glClearBufferData(arg_571: GLenum, arg_572: GLenum, arg_573: GLenum, arg_574: GLenum, arg_575: ?*const anyopaque) void {
    return epoxy_glClearBufferData.?(arg_571, arg_572, arg_573, arg_574, arg_575);
}
pub inline fn glClearBufferSubData(arg_576: GLenum, arg_577: GLenum, arg_578: GLintptr, arg_579: GLsizeiptr, arg_580: GLenum, arg_581: GLenum, arg_582: ?*const anyopaque) void {
    return epoxy_glClearBufferSubData.?(arg_576, arg_577, arg_578, arg_579, arg_580, arg_581, arg_582);
}
pub inline fn glClearBufferfi(arg_583: GLenum, arg_584: GLint, arg_585: GLfloat, arg_586: GLint) void {
    return epoxy_glClearBufferfi.?(arg_583, arg_584, arg_585, arg_586);
}
pub inline fn glClearBufferfv(arg_587: GLenum, arg_588: GLint, arg_589: [*c]const GLfloat) void {
    return epoxy_glClearBufferfv.?(arg_587, arg_588, arg_589);
}
pub inline fn glClearBufferiv(arg_590: GLenum, arg_591: GLint, arg_592: [*c]const GLint) void {
    return epoxy_glClearBufferiv.?(arg_590, arg_591, arg_592);
}
pub inline fn glClearBufferuiv(arg_593: GLenum, arg_594: GLint, arg_595: [*c]const GLuint) void {
    return epoxy_glClearBufferuiv.?(arg_593, arg_594, arg_595);
}
pub inline fn glClearColor(arg_596: GLfloat, arg_597: GLfloat, arg_598: GLfloat, arg_599: GLfloat) void {
    return epoxy_glClearColor.?(arg_596, arg_597, arg_598, arg_599);
}
pub inline fn glClearColorIiEXT(arg_600: GLint, arg_601: GLint, arg_602: GLint, arg_603: GLint) void {
    return epoxy_glClearColorIiEXT.?(arg_600, arg_601, arg_602, arg_603);
}
pub inline fn glClearColorIuiEXT(arg_604: GLuint, arg_605: GLuint, arg_606: GLuint, arg_607: GLuint) void {
    return epoxy_glClearColorIuiEXT.?(arg_604, arg_605, arg_606, arg_607);
}
pub inline fn glClearColorx(arg_608: GLfixed, arg_609: GLfixed, arg_610: GLfixed, arg_611: GLfixed) void {
    return epoxy_glClearColorx.?(arg_608, arg_609, arg_610, arg_611);
}
pub inline fn glClearColorxOES(arg_612: GLfixed, arg_613: GLfixed, arg_614: GLfixed, arg_615: GLfixed) void {
    return epoxy_glClearColorxOES.?(arg_612, arg_613, arg_614, arg_615);
}
pub inline fn glClearDepth(arg_616: GLdouble) void {
    return epoxy_glClearDepth.?(arg_616);
}
pub inline fn glClearDepthdNV(arg_617: GLdouble) void {
    return epoxy_glClearDepthdNV.?(arg_617);
}
pub inline fn glClearDepthf(arg_618: GLfloat) void {
    return epoxy_glClearDepthf.?(arg_618);
}
pub inline fn glClearDepthfOES(arg_619: GLclampf) void {
    return epoxy_glClearDepthfOES.?(arg_619);
}
pub inline fn glClearDepthx(arg_620: GLfixed) void {
    return epoxy_glClearDepthx.?(arg_620);
}
pub inline fn glClearDepthxOES(arg_621: GLfixed) void {
    return epoxy_glClearDepthxOES.?(arg_621);
}
pub inline fn glClearIndex(arg_622: GLfloat) void {
    return epoxy_glClearIndex.?(arg_622);
}
pub inline fn glClearNamedBufferData(arg_623: GLuint, arg_624: GLenum, arg_625: GLenum, arg_626: GLenum, arg_627: ?*const anyopaque) void {
    return epoxy_glClearNamedBufferData.?(arg_623, arg_624, arg_625, arg_626, arg_627);
}
pub inline fn glClearNamedBufferDataEXT(arg_628: GLuint, arg_629: GLenum, arg_630: GLenum, arg_631: GLenum, arg_632: ?*const anyopaque) void {
    return epoxy_glClearNamedBufferDataEXT.?(arg_628, arg_629, arg_630, arg_631, arg_632);
}
pub inline fn glClearNamedBufferSubData(arg_633: GLuint, arg_634: GLenum, arg_635: GLintptr, arg_636: GLsizeiptr, arg_637: GLenum, arg_638: GLenum, arg_639: ?*const anyopaque) void {
    return epoxy_glClearNamedBufferSubData.?(arg_633, arg_634, arg_635, arg_636, arg_637, arg_638, arg_639);
}
pub inline fn glClearNamedBufferSubDataEXT(arg_640: GLuint, arg_641: GLenum, arg_642: GLsizeiptr, arg_643: GLsizeiptr, arg_644: GLenum, arg_645: GLenum, arg_646: ?*const anyopaque) void {
    return epoxy_glClearNamedBufferSubDataEXT.?(arg_640, arg_641, arg_642, arg_643, arg_644, arg_645, arg_646);
}
pub inline fn glClearNamedFramebufferfi(arg_647: GLuint, arg_648: GLenum, arg_649: GLint, arg_650: GLfloat, arg_651: GLint) void {
    return epoxy_glClearNamedFramebufferfi.?(arg_647, arg_648, arg_649, arg_650, arg_651);
}
pub inline fn glClearNamedFramebufferfv(arg_652: GLuint, arg_653: GLenum, arg_654: GLint, arg_655: [*c]const GLfloat) void {
    return epoxy_glClearNamedFramebufferfv.?(arg_652, arg_653, arg_654, arg_655);
}
pub inline fn glClearNamedFramebufferiv(arg_656: GLuint, arg_657: GLenum, arg_658: GLint, arg_659: [*c]const GLint) void {
    return epoxy_glClearNamedFramebufferiv.?(arg_656, arg_657, arg_658, arg_659);
}
pub inline fn glClearNamedFramebufferuiv(arg_660: GLuint, arg_661: GLenum, arg_662: GLint, arg_663: [*c]const GLuint) void {
    return epoxy_glClearNamedFramebufferuiv.?(arg_660, arg_661, arg_662, arg_663);
}
pub inline fn glClearPixelLocalStorageuiEXT(arg_664: GLsizei, arg_665: GLsizei, arg_666: [*c]const GLuint) void {
    return epoxy_glClearPixelLocalStorageuiEXT.?(arg_664, arg_665, arg_666);
}
pub inline fn glClearStencil(arg_667: GLint) void {
    return epoxy_glClearStencil.?(arg_667);
}
pub inline fn glClearTexImage(arg_668: GLuint, arg_669: GLint, arg_670: GLenum, arg_671: GLenum, arg_672: ?*const anyopaque) void {
    return epoxy_glClearTexImage.?(arg_668, arg_669, arg_670, arg_671, arg_672);
}
pub inline fn glClearTexImageEXT(arg_673: GLuint, arg_674: GLint, arg_675: GLenum, arg_676: GLenum, arg_677: ?*const anyopaque) void {
    return epoxy_glClearTexImageEXT.?(arg_673, arg_674, arg_675, arg_676, arg_677);
}
pub inline fn glClearTexSubImage(arg_678: GLuint, arg_679: GLint, arg_680: GLint, arg_681: GLint, arg_682: GLint, arg_683: GLsizei, arg_684: GLsizei, arg_685: GLsizei, arg_686: GLenum, arg_687: GLenum, arg_688: ?*const anyopaque) void {
    return epoxy_glClearTexSubImage.?(arg_678, arg_679, arg_680, arg_681, arg_682, arg_683, arg_684, arg_685, arg_686, arg_687, arg_688);
}
pub inline fn glClearTexSubImageEXT(arg_689: GLuint, arg_690: GLint, arg_691: GLint, arg_692: GLint, arg_693: GLint, arg_694: GLsizei, arg_695: GLsizei, arg_696: GLsizei, arg_697: GLenum, arg_698: GLenum, arg_699: ?*const anyopaque) void {
    return epoxy_glClearTexSubImageEXT.?(arg_689, arg_690, arg_691, arg_692, arg_693, arg_694, arg_695, arg_696, arg_697, arg_698, arg_699);
}
pub inline fn glClientActiveTexture(arg_700: GLenum) void {
    return epoxy_glClientActiveTexture.?(arg_700);
}
pub inline fn glClientActiveTextureARB(arg_701: GLenum) void {
    return epoxy_glClientActiveTextureARB.?(arg_701);
}
pub inline fn glClientActiveVertexStreamATI(arg_702: GLenum) void {
    return epoxy_glClientActiveVertexStreamATI.?(arg_702);
}
pub inline fn glClientAttribDefaultEXT(arg_703: GLbitfield) void {
    return epoxy_glClientAttribDefaultEXT.?(arg_703);
}
pub inline fn glClientWaitSemaphoreui64NVX(arg_704: GLsizei, arg_705: [*c]const GLuint, arg_706: [*c]const GLuint64) void {
    return epoxy_glClientWaitSemaphoreui64NVX.?(arg_704, arg_705, arg_706);
}
pub inline fn glClientWaitSync(arg_707: GLsync, arg_708: GLbitfield, arg_709: GLuint64) GLenum {
    return epoxy_glClientWaitSync.?(arg_707, arg_708, arg_709);
}
pub inline fn glClientWaitSyncAPPLE(arg_710: GLsync, arg_711: GLbitfield, arg_712: GLuint64) GLenum {
    return epoxy_glClientWaitSyncAPPLE.?(arg_710, arg_711, arg_712);
}
pub inline fn glClipControl(arg_713: GLenum, arg_714: GLenum) void {
    return epoxy_glClipControl.?(arg_713, arg_714);
}
pub inline fn glClipControlEXT(arg_715: GLenum, arg_716: GLenum) void {
    return epoxy_glClipControlEXT.?(arg_715, arg_716);
}
pub inline fn glClipPlane(arg_717: GLenum, arg_718: [*c]const GLdouble) void {
    return epoxy_glClipPlane.?(arg_717, arg_718);
}
pub inline fn glClipPlanef(arg_719: GLenum, arg_720: [*c]const GLfloat) void {
    return epoxy_glClipPlanef.?(arg_719, arg_720);
}
pub inline fn glClipPlanefIMG(arg_721: GLenum, arg_722: [*c]const GLfloat) void {
    return epoxy_glClipPlanefIMG.?(arg_721, arg_722);
}
pub inline fn glClipPlanefOES(arg_723: GLenum, arg_724: [*c]const GLfloat) void {
    return epoxy_glClipPlanefOES.?(arg_723, arg_724);
}
pub inline fn glClipPlanex(arg_725: GLenum, arg_726: [*c]const GLfixed) void {
    return epoxy_glClipPlanex.?(arg_725, arg_726);
}
pub inline fn glClipPlanexIMG(arg_727: GLenum, arg_728: [*c]const GLfixed) void {
    return epoxy_glClipPlanexIMG.?(arg_727, arg_728);
}
pub inline fn glClipPlanexOES(arg_729: GLenum, arg_730: [*c]const GLfixed) void {
    return epoxy_glClipPlanexOES.?(arg_729, arg_730);
}
pub inline fn glColor3b(arg_731: GLbyte, arg_732: GLbyte, arg_733: GLbyte) void {
    return epoxy_glColor3b.?(arg_731, arg_732, arg_733);
}
pub inline fn glColor3bv(arg_734: [*c]const GLbyte) void {
    return epoxy_glColor3bv.?(arg_734);
}
pub inline fn glColor3d(arg_735: GLdouble, arg_736: GLdouble, arg_737: GLdouble) void {
    return epoxy_glColor3d.?(arg_735, arg_736, arg_737);
}
pub inline fn glColor3dv(arg_738: [*c]const GLdouble) void {
    return epoxy_glColor3dv.?(arg_738);
}
pub inline fn glColor3f(arg_739: GLfloat, arg_740: GLfloat, arg_741: GLfloat) void {
    return epoxy_glColor3f.?(arg_739, arg_740, arg_741);
}
pub inline fn glColor3fVertex3fSUN(arg_742: GLfloat, arg_743: GLfloat, arg_744: GLfloat, arg_745: GLfloat, arg_746: GLfloat, arg_747: GLfloat) void {
    return epoxy_glColor3fVertex3fSUN.?(arg_742, arg_743, arg_744, arg_745, arg_746, arg_747);
}
pub inline fn glColor3fVertex3fvSUN(arg_748: [*c]const GLfloat, arg_749: [*c]const GLfloat) void {
    return epoxy_glColor3fVertex3fvSUN.?(arg_748, arg_749);
}
pub inline fn glColor3fv(arg_750: [*c]const GLfloat) void {
    return epoxy_glColor3fv.?(arg_750);
}
pub inline fn glColor3hNV(arg_751: GLhalfNV, arg_752: GLhalfNV, arg_753: GLhalfNV) void {
    return epoxy_glColor3hNV.?(arg_751, arg_752, arg_753);
}
pub inline fn glColor3hvNV(arg_754: [*c]const GLhalfNV) void {
    return epoxy_glColor3hvNV.?(arg_754);
}
pub inline fn glColor3i(arg_755: GLint, arg_756: GLint, arg_757: GLint) void {
    return epoxy_glColor3i.?(arg_755, arg_756, arg_757);
}
pub inline fn glColor3iv(arg_758: [*c]const GLint) void {
    return epoxy_glColor3iv.?(arg_758);
}
pub inline fn glColor3s(arg_759: GLshort, arg_760: GLshort, arg_761: GLshort) void {
    return epoxy_glColor3s.?(arg_759, arg_760, arg_761);
}
pub inline fn glColor3sv(arg_762: [*c]const GLshort) void {
    return epoxy_glColor3sv.?(arg_762);
}
pub inline fn glColor3ub(arg_763: GLubyte, arg_764: GLubyte, arg_765: GLubyte) void {
    return epoxy_glColor3ub.?(arg_763, arg_764, arg_765);
}
pub inline fn glColor3ubv(arg_766: [*c]const GLubyte) void {
    return epoxy_glColor3ubv.?(arg_766);
}
pub inline fn glColor3ui(arg_767: GLuint, arg_768: GLuint, arg_769: GLuint) void {
    return epoxy_glColor3ui.?(arg_767, arg_768, arg_769);
}
pub inline fn glColor3uiv(arg_770: [*c]const GLuint) void {
    return epoxy_glColor3uiv.?(arg_770);
}
pub inline fn glColor3us(arg_771: GLushort, arg_772: GLushort, arg_773: GLushort) void {
    return epoxy_glColor3us.?(arg_771, arg_772, arg_773);
}
pub inline fn glColor3usv(arg_774: [*c]const GLushort) void {
    return epoxy_glColor3usv.?(arg_774);
}
pub inline fn glColor3xOES(arg_775: GLfixed, arg_776: GLfixed, arg_777: GLfixed) void {
    return epoxy_glColor3xOES.?(arg_775, arg_776, arg_777);
}
pub inline fn glColor3xvOES(arg_778: [*c]const GLfixed) void {
    return epoxy_glColor3xvOES.?(arg_778);
}
pub inline fn glColor4b(arg_779: GLbyte, arg_780: GLbyte, arg_781: GLbyte, arg_782: GLbyte) void {
    return epoxy_glColor4b.?(arg_779, arg_780, arg_781, arg_782);
}
pub inline fn glColor4bv(arg_783: [*c]const GLbyte) void {
    return epoxy_glColor4bv.?(arg_783);
}
pub inline fn glColor4d(arg_784: GLdouble, arg_785: GLdouble, arg_786: GLdouble, arg_787: GLdouble) void {
    return epoxy_glColor4d.?(arg_784, arg_785, arg_786, arg_787);
}
pub inline fn glColor4dv(arg_788: [*c]const GLdouble) void {
    return epoxy_glColor4dv.?(arg_788);
}
pub inline fn glColor4f(arg_789: GLfloat, arg_790: GLfloat, arg_791: GLfloat, arg_792: GLfloat) void {
    return epoxy_glColor4f.?(arg_789, arg_790, arg_791, arg_792);
}
pub inline fn glColor4fNormal3fVertex3fSUN(arg_793: GLfloat, arg_794: GLfloat, arg_795: GLfloat, arg_796: GLfloat, arg_797: GLfloat, arg_798: GLfloat, arg_799: GLfloat, arg_800: GLfloat, arg_801: GLfloat, arg_802: GLfloat) void {
    return epoxy_glColor4fNormal3fVertex3fSUN.?(arg_793, arg_794, arg_795, arg_796, arg_797, arg_798, arg_799, arg_800, arg_801, arg_802);
}
pub inline fn glColor4fNormal3fVertex3fvSUN(arg_803: [*c]const GLfloat, arg_804: [*c]const GLfloat, arg_805: [*c]const GLfloat) void {
    return epoxy_glColor4fNormal3fVertex3fvSUN.?(arg_803, arg_804, arg_805);
}
pub inline fn glColor4fv(arg_806: [*c]const GLfloat) void {
    return epoxy_glColor4fv.?(arg_806);
}
pub inline fn glColor4hNV(arg_807: GLhalfNV, arg_808: GLhalfNV, arg_809: GLhalfNV, arg_810: GLhalfNV) void {
    return epoxy_glColor4hNV.?(arg_807, arg_808, arg_809, arg_810);
}
pub inline fn glColor4hvNV(arg_811: [*c]const GLhalfNV) void {
    return epoxy_glColor4hvNV.?(arg_811);
}
pub inline fn glColor4i(arg_812: GLint, arg_813: GLint, arg_814: GLint, arg_815: GLint) void {
    return epoxy_glColor4i.?(arg_812, arg_813, arg_814, arg_815);
}
pub inline fn glColor4iv(arg_816: [*c]const GLint) void {
    return epoxy_glColor4iv.?(arg_816);
}
pub inline fn glColor4s(arg_817: GLshort, arg_818: GLshort, arg_819: GLshort, arg_820: GLshort) void {
    return epoxy_glColor4s.?(arg_817, arg_818, arg_819, arg_820);
}
pub inline fn glColor4sv(arg_821: [*c]const GLshort) void {
    return epoxy_glColor4sv.?(arg_821);
}
pub inline fn glColor4ub(arg_822: GLubyte, arg_823: GLubyte, arg_824: GLubyte, arg_825: GLubyte) void {
    return epoxy_glColor4ub.?(arg_822, arg_823, arg_824, arg_825);
}
pub inline fn glColor4ubVertex2fSUN(arg_826: GLubyte, arg_827: GLubyte, arg_828: GLubyte, arg_829: GLubyte, arg_830: GLfloat, arg_831: GLfloat) void {
    return epoxy_glColor4ubVertex2fSUN.?(arg_826, arg_827, arg_828, arg_829, arg_830, arg_831);
}
pub inline fn glColor4ubVertex2fvSUN(arg_832: [*c]const GLubyte, arg_833: [*c]const GLfloat) void {
    return epoxy_glColor4ubVertex2fvSUN.?(arg_832, arg_833);
}
pub inline fn glColor4ubVertex3fSUN(arg_834: GLubyte, arg_835: GLubyte, arg_836: GLubyte, arg_837: GLubyte, arg_838: GLfloat, arg_839: GLfloat, arg_840: GLfloat) void {
    return epoxy_glColor4ubVertex3fSUN.?(arg_834, arg_835, arg_836, arg_837, arg_838, arg_839, arg_840);
}
pub inline fn glColor4ubVertex3fvSUN(arg_841: [*c]const GLubyte, arg_842: [*c]const GLfloat) void {
    return epoxy_glColor4ubVertex3fvSUN.?(arg_841, arg_842);
}
pub inline fn glColor4ubv(arg_843: [*c]const GLubyte) void {
    return epoxy_glColor4ubv.?(arg_843);
}
pub inline fn glColor4ui(arg_844: GLuint, arg_845: GLuint, arg_846: GLuint, arg_847: GLuint) void {
    return epoxy_glColor4ui.?(arg_844, arg_845, arg_846, arg_847);
}
pub inline fn glColor4uiv(arg_848: [*c]const GLuint) void {
    return epoxy_glColor4uiv.?(arg_848);
}
pub inline fn glColor4us(arg_849: GLushort, arg_850: GLushort, arg_851: GLushort, arg_852: GLushort) void {
    return epoxy_glColor4us.?(arg_849, arg_850, arg_851, arg_852);
}
pub inline fn glColor4usv(arg_853: [*c]const GLushort) void {
    return epoxy_glColor4usv.?(arg_853);
}
pub inline fn glColor4x(arg_854: GLfixed, arg_855: GLfixed, arg_856: GLfixed, arg_857: GLfixed) void {
    return epoxy_glColor4x.?(arg_854, arg_855, arg_856, arg_857);
}
pub inline fn glColor4xOES(arg_858: GLfixed, arg_859: GLfixed, arg_860: GLfixed, arg_861: GLfixed) void {
    return epoxy_glColor4xOES.?(arg_858, arg_859, arg_860, arg_861);
}
pub inline fn glColor4xvOES(arg_862: [*c]const GLfixed) void {
    return epoxy_glColor4xvOES.?(arg_862);
}
pub inline fn glColorFormatNV(arg_863: GLint, arg_864: GLenum, arg_865: GLsizei) void {
    return epoxy_glColorFormatNV.?(arg_863, arg_864, arg_865);
}
pub inline fn glColorFragmentOp1ATI(arg_866: GLenum, arg_867: GLuint, arg_868: GLuint, arg_869: GLuint, arg_870: GLuint, arg_871: GLuint, arg_872: GLuint) void {
    return epoxy_glColorFragmentOp1ATI.?(arg_866, arg_867, arg_868, arg_869, arg_870, arg_871, arg_872);
}
pub inline fn glColorFragmentOp2ATI(arg_873: GLenum, arg_874: GLuint, arg_875: GLuint, arg_876: GLuint, arg_877: GLuint, arg_878: GLuint, arg_879: GLuint, arg_880: GLuint, arg_881: GLuint, arg_882: GLuint) void {
    return epoxy_glColorFragmentOp2ATI.?(arg_873, arg_874, arg_875, arg_876, arg_877, arg_878, arg_879, arg_880, arg_881, arg_882);
}
pub inline fn glColorFragmentOp3ATI(arg_883: GLenum, arg_884: GLuint, arg_885: GLuint, arg_886: GLuint, arg_887: GLuint, arg_888: GLuint, arg_889: GLuint, arg_890: GLuint, arg_891: GLuint, arg_892: GLuint, arg_893: GLuint, arg_894: GLuint, arg_895: GLuint) void {
    return epoxy_glColorFragmentOp3ATI.?(arg_883, arg_884, arg_885, arg_886, arg_887, arg_888, arg_889, arg_890, arg_891, arg_892, arg_893, arg_894, arg_895);
}
pub inline fn glColorMask(arg_896: GLboolean, arg_897: GLboolean, arg_898: GLboolean, arg_899: GLboolean) void {
    return epoxy_glColorMask.?(arg_896, arg_897, arg_898, arg_899);
}
pub inline fn glColorMaskIndexedEXT(arg_900: GLuint, arg_901: GLboolean, arg_902: GLboolean, arg_903: GLboolean, arg_904: GLboolean) void {
    return epoxy_glColorMaskIndexedEXT.?(arg_900, arg_901, arg_902, arg_903, arg_904);
}
pub inline fn glColorMaski(arg_905: GLuint, arg_906: GLboolean, arg_907: GLboolean, arg_908: GLboolean, arg_909: GLboolean) void {
    return epoxy_glColorMaski.?(arg_905, arg_906, arg_907, arg_908, arg_909);
}
pub inline fn glColorMaskiEXT(arg_910: GLuint, arg_911: GLboolean, arg_912: GLboolean, arg_913: GLboolean, arg_914: GLboolean) void {
    return epoxy_glColorMaskiEXT.?(arg_910, arg_911, arg_912, arg_913, arg_914);
}
pub inline fn glColorMaskiOES(arg_915: GLuint, arg_916: GLboolean, arg_917: GLboolean, arg_918: GLboolean, arg_919: GLboolean) void {
    return epoxy_glColorMaskiOES.?(arg_915, arg_916, arg_917, arg_918, arg_919);
}
pub inline fn glColorMaterial(arg_920: GLenum, arg_921: GLenum) void {
    return epoxy_glColorMaterial.?(arg_920, arg_921);
}
pub inline fn glColorP3ui(arg_922: GLenum, arg_923: GLuint) void {
    return epoxy_glColorP3ui.?(arg_922, arg_923);
}
pub inline fn glColorP3uiv(arg_924: GLenum, arg_925: [*c]const GLuint) void {
    return epoxy_glColorP3uiv.?(arg_924, arg_925);
}
pub inline fn glColorP4ui(arg_926: GLenum, arg_927: GLuint) void {
    return epoxy_glColorP4ui.?(arg_926, arg_927);
}
pub inline fn glColorP4uiv(arg_928: GLenum, arg_929: [*c]const GLuint) void {
    return epoxy_glColorP4uiv.?(arg_928, arg_929);
}
pub inline fn glColorPointer(arg_930: GLint, arg_931: GLenum, arg_932: GLsizei, arg_933: ?*const anyopaque) void {
    return epoxy_glColorPointer.?(arg_930, arg_931, arg_932, arg_933);
}
pub inline fn glColorPointerEXT(arg_934: GLint, arg_935: GLenum, arg_936: GLsizei, arg_937: GLsizei, arg_938: ?*const anyopaque) void {
    return epoxy_glColorPointerEXT.?(arg_934, arg_935, arg_936, arg_937, arg_938);
}
pub inline fn glColorPointerListIBM(arg_939: GLint, arg_940: GLenum, arg_941: GLint, arg_942: [*c]?*const anyopaque, arg_943: GLint) void {
    return epoxy_glColorPointerListIBM.?(arg_939, arg_940, arg_941, arg_942, arg_943);
}
pub inline fn glColorPointervINTEL(arg_944: GLint, arg_945: GLenum, arg_946: [*c]?*const anyopaque) void {
    return epoxy_glColorPointervINTEL.?(arg_944, arg_945, arg_946);
}
pub inline fn glColorSubTable(arg_947: GLenum, arg_948: GLsizei, arg_949: GLsizei, arg_950: GLenum, arg_951: GLenum, arg_952: ?*const anyopaque) void {
    return epoxy_glColorSubTable.?(arg_947, arg_948, arg_949, arg_950, arg_951, arg_952);
}
pub inline fn glColorSubTableEXT(arg_953: GLenum, arg_954: GLsizei, arg_955: GLsizei, arg_956: GLenum, arg_957: GLenum, arg_958: ?*const anyopaque) void {
    return epoxy_glColorSubTableEXT.?(arg_953, arg_954, arg_955, arg_956, arg_957, arg_958);
}
pub inline fn glColorTable(arg_959: GLenum, arg_960: GLenum, arg_961: GLsizei, arg_962: GLenum, arg_963: GLenum, arg_964: ?*const anyopaque) void {
    return epoxy_glColorTable.?(arg_959, arg_960, arg_961, arg_962, arg_963, arg_964);
}
pub inline fn glColorTableEXT(arg_965: GLenum, arg_966: GLenum, arg_967: GLsizei, arg_968: GLenum, arg_969: GLenum, arg_970: ?*const anyopaque) void {
    return epoxy_glColorTableEXT.?(arg_965, arg_966, arg_967, arg_968, arg_969, arg_970);
}
pub inline fn glColorTableParameterfv(arg_971: GLenum, arg_972: GLenum, arg_973: [*c]const GLfloat) void {
    return epoxy_glColorTableParameterfv.?(arg_971, arg_972, arg_973);
}
pub inline fn glColorTableParameterfvSGI(arg_974: GLenum, arg_975: GLenum, arg_976: [*c]const GLfloat) void {
    return epoxy_glColorTableParameterfvSGI.?(arg_974, arg_975, arg_976);
}
pub inline fn glColorTableParameteriv(arg_977: GLenum, arg_978: GLenum, arg_979: [*c]const GLint) void {
    return epoxy_glColorTableParameteriv.?(arg_977, arg_978, arg_979);
}
pub inline fn glColorTableParameterivSGI(arg_980: GLenum, arg_981: GLenum, arg_982: [*c]const GLint) void {
    return epoxy_glColorTableParameterivSGI.?(arg_980, arg_981, arg_982);
}
pub inline fn glColorTableSGI(arg_983: GLenum, arg_984: GLenum, arg_985: GLsizei, arg_986: GLenum, arg_987: GLenum, arg_988: ?*const anyopaque) void {
    return epoxy_glColorTableSGI.?(arg_983, arg_984, arg_985, arg_986, arg_987, arg_988);
}
pub inline fn glCombinerInputNV(arg_989: GLenum, arg_990: GLenum, arg_991: GLenum, arg_992: GLenum, arg_993: GLenum, arg_994: GLenum) void {
    return epoxy_glCombinerInputNV.?(arg_989, arg_990, arg_991, arg_992, arg_993, arg_994);
}
pub inline fn glCombinerOutputNV(arg_995: GLenum, arg_996: GLenum, arg_997: GLenum, arg_998: GLenum, arg_999: GLenum, arg_1000: GLenum, arg_1001: GLenum, arg_1002: GLboolean, arg_1003: GLboolean, arg_1004: GLboolean) void {
    return epoxy_glCombinerOutputNV.?(arg_995, arg_996, arg_997, arg_998, arg_999, arg_1000, arg_1001, arg_1002, arg_1003, arg_1004);
}
pub inline fn glCombinerParameterfNV(arg_1005: GLenum, arg_1006: GLfloat) void {
    return epoxy_glCombinerParameterfNV.?(arg_1005, arg_1006);
}
pub inline fn glCombinerParameterfvNV(arg_1007: GLenum, arg_1008: [*c]const GLfloat) void {
    return epoxy_glCombinerParameterfvNV.?(arg_1007, arg_1008);
}
pub inline fn glCombinerParameteriNV(arg_1009: GLenum, arg_1010: GLint) void {
    return epoxy_glCombinerParameteriNV.?(arg_1009, arg_1010);
}
pub inline fn glCombinerParameterivNV(arg_1011: GLenum, arg_1012: [*c]const GLint) void {
    return epoxy_glCombinerParameterivNV.?(arg_1011, arg_1012);
}
pub inline fn glCombinerStageParameterfvNV(arg_1013: GLenum, arg_1014: GLenum, arg_1015: [*c]const GLfloat) void {
    return epoxy_glCombinerStageParameterfvNV.?(arg_1013, arg_1014, arg_1015);
}
pub inline fn glCommandListSegmentsNV(arg_1016: GLuint, arg_1017: GLuint) void {
    return epoxy_glCommandListSegmentsNV.?(arg_1016, arg_1017);
}
pub inline fn glCompileCommandListNV(arg_1018: GLuint) void {
    return epoxy_glCompileCommandListNV.?(arg_1018);
}
pub inline fn glCompileShader(arg_1019: GLuint) void {
    return epoxy_glCompileShader.?(arg_1019);
}
pub inline fn glCompileShaderARB(arg_1020: GLhandleARB) void {
    return epoxy_glCompileShaderARB.?(arg_1020);
}
pub inline fn glCompileShaderIncludeARB(arg_1021: GLuint, arg_1022: GLsizei, arg_1023: [*c]const [*c]const GLchar, arg_1024: [*c]const GLint) void {
    return epoxy_glCompileShaderIncludeARB.?(arg_1021, arg_1022, arg_1023, arg_1024);
}
pub inline fn glCompressedMultiTexImage1DEXT(arg_1025: GLenum, arg_1026: GLenum, arg_1027: GLint, arg_1028: GLenum, arg_1029: GLsizei, arg_1030: GLint, arg_1031: GLsizei, arg_1032: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexImage1DEXT.?(arg_1025, arg_1026, arg_1027, arg_1028, arg_1029, arg_1030, arg_1031, arg_1032);
}
pub inline fn glCompressedMultiTexImage2DEXT(arg_1033: GLenum, arg_1034: GLenum, arg_1035: GLint, arg_1036: GLenum, arg_1037: GLsizei, arg_1038: GLsizei, arg_1039: GLint, arg_1040: GLsizei, arg_1041: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexImage2DEXT.?(arg_1033, arg_1034, arg_1035, arg_1036, arg_1037, arg_1038, arg_1039, arg_1040, arg_1041);
}
pub inline fn glCompressedMultiTexImage3DEXT(arg_1042: GLenum, arg_1043: GLenum, arg_1044: GLint, arg_1045: GLenum, arg_1046: GLsizei, arg_1047: GLsizei, arg_1048: GLsizei, arg_1049: GLint, arg_1050: GLsizei, arg_1051: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexImage3DEXT.?(arg_1042, arg_1043, arg_1044, arg_1045, arg_1046, arg_1047, arg_1048, arg_1049, arg_1050, arg_1051);
}
pub inline fn glCompressedMultiTexSubImage1DEXT(arg_1052: GLenum, arg_1053: GLenum, arg_1054: GLint, arg_1055: GLint, arg_1056: GLsizei, arg_1057: GLenum, arg_1058: GLsizei, arg_1059: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexSubImage1DEXT.?(arg_1052, arg_1053, arg_1054, arg_1055, arg_1056, arg_1057, arg_1058, arg_1059);
}
pub inline fn glCompressedMultiTexSubImage2DEXT(arg_1060: GLenum, arg_1061: GLenum, arg_1062: GLint, arg_1063: GLint, arg_1064: GLint, arg_1065: GLsizei, arg_1066: GLsizei, arg_1067: GLenum, arg_1068: GLsizei, arg_1069: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexSubImage2DEXT.?(arg_1060, arg_1061, arg_1062, arg_1063, arg_1064, arg_1065, arg_1066, arg_1067, arg_1068, arg_1069);
}
pub inline fn glCompressedMultiTexSubImage3DEXT(arg_1070: GLenum, arg_1071: GLenum, arg_1072: GLint, arg_1073: GLint, arg_1074: GLint, arg_1075: GLint, arg_1076: GLsizei, arg_1077: GLsizei, arg_1078: GLsizei, arg_1079: GLenum, arg_1080: GLsizei, arg_1081: ?*const anyopaque) void {
    return epoxy_glCompressedMultiTexSubImage3DEXT.?(arg_1070, arg_1071, arg_1072, arg_1073, arg_1074, arg_1075, arg_1076, arg_1077, arg_1078, arg_1079, arg_1080, arg_1081);
}
pub inline fn glCompressedTexImage1D(arg_1082: GLenum, arg_1083: GLint, arg_1084: GLenum, arg_1085: GLsizei, arg_1086: GLint, arg_1087: GLsizei, arg_1088: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage1D.?(arg_1082, arg_1083, arg_1084, arg_1085, arg_1086, arg_1087, arg_1088);
}
pub inline fn glCompressedTexImage1DARB(arg_1089: GLenum, arg_1090: GLint, arg_1091: GLenum, arg_1092: GLsizei, arg_1093: GLint, arg_1094: GLsizei, arg_1095: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage1DARB.?(arg_1089, arg_1090, arg_1091, arg_1092, arg_1093, arg_1094, arg_1095);
}
pub inline fn glCompressedTexImage2D(arg_1096: GLenum, arg_1097: GLint, arg_1098: GLenum, arg_1099: GLsizei, arg_1100: GLsizei, arg_1101: GLint, arg_1102: GLsizei, arg_1103: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage2D.?(arg_1096, arg_1097, arg_1098, arg_1099, arg_1100, arg_1101, arg_1102, arg_1103);
}
pub inline fn glCompressedTexImage2DARB(arg_1104: GLenum, arg_1105: GLint, arg_1106: GLenum, arg_1107: GLsizei, arg_1108: GLsizei, arg_1109: GLint, arg_1110: GLsizei, arg_1111: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage2DARB.?(arg_1104, arg_1105, arg_1106, arg_1107, arg_1108, arg_1109, arg_1110, arg_1111);
}
pub inline fn glCompressedTexImage3D(arg_1112: GLenum, arg_1113: GLint, arg_1114: GLenum, arg_1115: GLsizei, arg_1116: GLsizei, arg_1117: GLsizei, arg_1118: GLint, arg_1119: GLsizei, arg_1120: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage3D.?(arg_1112, arg_1113, arg_1114, arg_1115, arg_1116, arg_1117, arg_1118, arg_1119, arg_1120);
}
pub inline fn glCompressedTexImage3DARB(arg_1121: GLenum, arg_1122: GLint, arg_1123: GLenum, arg_1124: GLsizei, arg_1125: GLsizei, arg_1126: GLsizei, arg_1127: GLint, arg_1128: GLsizei, arg_1129: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage3DARB.?(arg_1121, arg_1122, arg_1123, arg_1124, arg_1125, arg_1126, arg_1127, arg_1128, arg_1129);
}
pub inline fn glCompressedTexImage3DOES(arg_1130: GLenum, arg_1131: GLint, arg_1132: GLenum, arg_1133: GLsizei, arg_1134: GLsizei, arg_1135: GLsizei, arg_1136: GLint, arg_1137: GLsizei, arg_1138: ?*const anyopaque) void {
    return epoxy_glCompressedTexImage3DOES.?(arg_1130, arg_1131, arg_1132, arg_1133, arg_1134, arg_1135, arg_1136, arg_1137, arg_1138);
}
pub inline fn glCompressedTexSubImage1D(arg_1139: GLenum, arg_1140: GLint, arg_1141: GLint, arg_1142: GLsizei, arg_1143: GLenum, arg_1144: GLsizei, arg_1145: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage1D.?(arg_1139, arg_1140, arg_1141, arg_1142, arg_1143, arg_1144, arg_1145);
}
pub inline fn glCompressedTexSubImage1DARB(arg_1146: GLenum, arg_1147: GLint, arg_1148: GLint, arg_1149: GLsizei, arg_1150: GLenum, arg_1151: GLsizei, arg_1152: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage1DARB.?(arg_1146, arg_1147, arg_1148, arg_1149, arg_1150, arg_1151, arg_1152);
}
pub inline fn glCompressedTexSubImage2D(arg_1153: GLenum, arg_1154: GLint, arg_1155: GLint, arg_1156: GLint, arg_1157: GLsizei, arg_1158: GLsizei, arg_1159: GLenum, arg_1160: GLsizei, arg_1161: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage2D.?(arg_1153, arg_1154, arg_1155, arg_1156, arg_1157, arg_1158, arg_1159, arg_1160, arg_1161);
}
pub inline fn glCompressedTexSubImage2DARB(arg_1162: GLenum, arg_1163: GLint, arg_1164: GLint, arg_1165: GLint, arg_1166: GLsizei, arg_1167: GLsizei, arg_1168: GLenum, arg_1169: GLsizei, arg_1170: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage2DARB.?(arg_1162, arg_1163, arg_1164, arg_1165, arg_1166, arg_1167, arg_1168, arg_1169, arg_1170);
}
pub inline fn glCompressedTexSubImage3D(arg_1171: GLenum, arg_1172: GLint, arg_1173: GLint, arg_1174: GLint, arg_1175: GLint, arg_1176: GLsizei, arg_1177: GLsizei, arg_1178: GLsizei, arg_1179: GLenum, arg_1180: GLsizei, arg_1181: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage3D.?(arg_1171, arg_1172, arg_1173, arg_1174, arg_1175, arg_1176, arg_1177, arg_1178, arg_1179, arg_1180, arg_1181);
}
pub inline fn glCompressedTexSubImage3DARB(arg_1182: GLenum, arg_1183: GLint, arg_1184: GLint, arg_1185: GLint, arg_1186: GLint, arg_1187: GLsizei, arg_1188: GLsizei, arg_1189: GLsizei, arg_1190: GLenum, arg_1191: GLsizei, arg_1192: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage3DARB.?(arg_1182, arg_1183, arg_1184, arg_1185, arg_1186, arg_1187, arg_1188, arg_1189, arg_1190, arg_1191, arg_1192);
}
pub inline fn glCompressedTexSubImage3DOES(arg_1193: GLenum, arg_1194: GLint, arg_1195: GLint, arg_1196: GLint, arg_1197: GLint, arg_1198: GLsizei, arg_1199: GLsizei, arg_1200: GLsizei, arg_1201: GLenum, arg_1202: GLsizei, arg_1203: ?*const anyopaque) void {
    return epoxy_glCompressedTexSubImage3DOES.?(arg_1193, arg_1194, arg_1195, arg_1196, arg_1197, arg_1198, arg_1199, arg_1200, arg_1201, arg_1202, arg_1203);
}
pub inline fn glCompressedTextureImage1DEXT(arg_1204: GLuint, arg_1205: GLenum, arg_1206: GLint, arg_1207: GLenum, arg_1208: GLsizei, arg_1209: GLint, arg_1210: GLsizei, arg_1211: ?*const anyopaque) void {
    return epoxy_glCompressedTextureImage1DEXT.?(arg_1204, arg_1205, arg_1206, arg_1207, arg_1208, arg_1209, arg_1210, arg_1211);
}
pub inline fn glCompressedTextureImage2DEXT(arg_1212: GLuint, arg_1213: GLenum, arg_1214: GLint, arg_1215: GLenum, arg_1216: GLsizei, arg_1217: GLsizei, arg_1218: GLint, arg_1219: GLsizei, arg_1220: ?*const anyopaque) void {
    return epoxy_glCompressedTextureImage2DEXT.?(arg_1212, arg_1213, arg_1214, arg_1215, arg_1216, arg_1217, arg_1218, arg_1219, arg_1220);
}
pub inline fn glCompressedTextureImage3DEXT(arg_1221: GLuint, arg_1222: GLenum, arg_1223: GLint, arg_1224: GLenum, arg_1225: GLsizei, arg_1226: GLsizei, arg_1227: GLsizei, arg_1228: GLint, arg_1229: GLsizei, arg_1230: ?*const anyopaque) void {
    return epoxy_glCompressedTextureImage3DEXT.?(arg_1221, arg_1222, arg_1223, arg_1224, arg_1225, arg_1226, arg_1227, arg_1228, arg_1229, arg_1230);
}
pub inline fn glCompressedTextureSubImage1D(arg_1231: GLuint, arg_1232: GLint, arg_1233: GLint, arg_1234: GLsizei, arg_1235: GLenum, arg_1236: GLsizei, arg_1237: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage1D.?(arg_1231, arg_1232, arg_1233, arg_1234, arg_1235, arg_1236, arg_1237);
}
pub inline fn glCompressedTextureSubImage1DEXT(arg_1238: GLuint, arg_1239: GLenum, arg_1240: GLint, arg_1241: GLint, arg_1242: GLsizei, arg_1243: GLenum, arg_1244: GLsizei, arg_1245: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage1DEXT.?(arg_1238, arg_1239, arg_1240, arg_1241, arg_1242, arg_1243, arg_1244, arg_1245);
}
pub inline fn glCompressedTextureSubImage2D(arg_1246: GLuint, arg_1247: GLint, arg_1248: GLint, arg_1249: GLint, arg_1250: GLsizei, arg_1251: GLsizei, arg_1252: GLenum, arg_1253: GLsizei, arg_1254: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage2D.?(arg_1246, arg_1247, arg_1248, arg_1249, arg_1250, arg_1251, arg_1252, arg_1253, arg_1254);
}
pub inline fn glCompressedTextureSubImage2DEXT(arg_1255: GLuint, arg_1256: GLenum, arg_1257: GLint, arg_1258: GLint, arg_1259: GLint, arg_1260: GLsizei, arg_1261: GLsizei, arg_1262: GLenum, arg_1263: GLsizei, arg_1264: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage2DEXT.?(arg_1255, arg_1256, arg_1257, arg_1258, arg_1259, arg_1260, arg_1261, arg_1262, arg_1263, arg_1264);
}
pub inline fn glCompressedTextureSubImage3D(arg_1265: GLuint, arg_1266: GLint, arg_1267: GLint, arg_1268: GLint, arg_1269: GLint, arg_1270: GLsizei, arg_1271: GLsizei, arg_1272: GLsizei, arg_1273: GLenum, arg_1274: GLsizei, arg_1275: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage3D.?(arg_1265, arg_1266, arg_1267, arg_1268, arg_1269, arg_1270, arg_1271, arg_1272, arg_1273, arg_1274, arg_1275);
}
pub inline fn glCompressedTextureSubImage3DEXT(arg_1276: GLuint, arg_1277: GLenum, arg_1278: GLint, arg_1279: GLint, arg_1280: GLint, arg_1281: GLint, arg_1282: GLsizei, arg_1283: GLsizei, arg_1284: GLsizei, arg_1285: GLenum, arg_1286: GLsizei, arg_1287: ?*const anyopaque) void {
    return epoxy_glCompressedTextureSubImage3DEXT.?(arg_1276, arg_1277, arg_1278, arg_1279, arg_1280, arg_1281, arg_1282, arg_1283, arg_1284, arg_1285, arg_1286, arg_1287);
}
pub inline fn glConservativeRasterParameterfNV(arg_1288: GLenum, arg_1289: GLfloat) void {
    return epoxy_glConservativeRasterParameterfNV.?(arg_1288, arg_1289);
}
pub inline fn glConservativeRasterParameteriNV(arg_1290: GLenum, arg_1291: GLint) void {
    return epoxy_glConservativeRasterParameteriNV.?(arg_1290, arg_1291);
}
pub inline fn glConvolutionFilter1D(arg_1292: GLenum, arg_1293: GLenum, arg_1294: GLsizei, arg_1295: GLenum, arg_1296: GLenum, arg_1297: ?*const anyopaque) void {
    return epoxy_glConvolutionFilter1D.?(arg_1292, arg_1293, arg_1294, arg_1295, arg_1296, arg_1297);
}
pub inline fn glConvolutionFilter1DEXT(arg_1298: GLenum, arg_1299: GLenum, arg_1300: GLsizei, arg_1301: GLenum, arg_1302: GLenum, arg_1303: ?*const anyopaque) void {
    return epoxy_glConvolutionFilter1DEXT.?(arg_1298, arg_1299, arg_1300, arg_1301, arg_1302, arg_1303);
}
pub inline fn glConvolutionFilter2D(arg_1304: GLenum, arg_1305: GLenum, arg_1306: GLsizei, arg_1307: GLsizei, arg_1308: GLenum, arg_1309: GLenum, arg_1310: ?*const anyopaque) void {
    return epoxy_glConvolutionFilter2D.?(arg_1304, arg_1305, arg_1306, arg_1307, arg_1308, arg_1309, arg_1310);
}
pub inline fn glConvolutionFilter2DEXT(arg_1311: GLenum, arg_1312: GLenum, arg_1313: GLsizei, arg_1314: GLsizei, arg_1315: GLenum, arg_1316: GLenum, arg_1317: ?*const anyopaque) void {
    return epoxy_glConvolutionFilter2DEXT.?(arg_1311, arg_1312, arg_1313, arg_1314, arg_1315, arg_1316, arg_1317);
}
pub inline fn glConvolutionParameterf(arg_1318: GLenum, arg_1319: GLenum, arg_1320: GLfloat) void {
    return epoxy_glConvolutionParameterf.?(arg_1318, arg_1319, arg_1320);
}
pub inline fn glConvolutionParameterfEXT(arg_1321: GLenum, arg_1322: GLenum, arg_1323: GLfloat) void {
    return epoxy_glConvolutionParameterfEXT.?(arg_1321, arg_1322, arg_1323);
}
pub inline fn glConvolutionParameterfv(arg_1324: GLenum, arg_1325: GLenum, arg_1326: [*c]const GLfloat) void {
    return epoxy_glConvolutionParameterfv.?(arg_1324, arg_1325, arg_1326);
}
pub inline fn glConvolutionParameterfvEXT(arg_1327: GLenum, arg_1328: GLenum, arg_1329: [*c]const GLfloat) void {
    return epoxy_glConvolutionParameterfvEXT.?(arg_1327, arg_1328, arg_1329);
}
pub inline fn glConvolutionParameteri(arg_1330: GLenum, arg_1331: GLenum, arg_1332: GLint) void {
    return epoxy_glConvolutionParameteri.?(arg_1330, arg_1331, arg_1332);
}
pub inline fn glConvolutionParameteriEXT(arg_1333: GLenum, arg_1334: GLenum, arg_1335: GLint) void {
    return epoxy_glConvolutionParameteriEXT.?(arg_1333, arg_1334, arg_1335);
}
pub inline fn glConvolutionParameteriv(arg_1336: GLenum, arg_1337: GLenum, arg_1338: [*c]const GLint) void {
    return epoxy_glConvolutionParameteriv.?(arg_1336, arg_1337, arg_1338);
}
pub inline fn glConvolutionParameterivEXT(arg_1339: GLenum, arg_1340: GLenum, arg_1341: [*c]const GLint) void {
    return epoxy_glConvolutionParameterivEXT.?(arg_1339, arg_1340, arg_1341);
}
pub inline fn glConvolutionParameterxOES(arg_1342: GLenum, arg_1343: GLenum, arg_1344: GLfixed) void {
    return epoxy_glConvolutionParameterxOES.?(arg_1342, arg_1343, arg_1344);
}
pub inline fn glConvolutionParameterxvOES(arg_1345: GLenum, arg_1346: GLenum, arg_1347: [*c]const GLfixed) void {
    return epoxy_glConvolutionParameterxvOES.?(arg_1345, arg_1346, arg_1347);
}
pub inline fn glCopyBufferSubData(arg_1348: GLenum, arg_1349: GLenum, arg_1350: GLintptr, arg_1351: GLintptr, arg_1352: GLsizeiptr) void {
    return epoxy_glCopyBufferSubData.?(arg_1348, arg_1349, arg_1350, arg_1351, arg_1352);
}
pub inline fn glCopyBufferSubDataNV(arg_1353: GLenum, arg_1354: GLenum, arg_1355: GLintptr, arg_1356: GLintptr, arg_1357: GLsizeiptr) void {
    return epoxy_glCopyBufferSubDataNV.?(arg_1353, arg_1354, arg_1355, arg_1356, arg_1357);
}
pub inline fn glCopyColorSubTable(arg_1358: GLenum, arg_1359: GLsizei, arg_1360: GLint, arg_1361: GLint, arg_1362: GLsizei) void {
    return epoxy_glCopyColorSubTable.?(arg_1358, arg_1359, arg_1360, arg_1361, arg_1362);
}
pub inline fn glCopyColorSubTableEXT(arg_1363: GLenum, arg_1364: GLsizei, arg_1365: GLint, arg_1366: GLint, arg_1367: GLsizei) void {
    return epoxy_glCopyColorSubTableEXT.?(arg_1363, arg_1364, arg_1365, arg_1366, arg_1367);
}
pub inline fn glCopyColorTable(arg_1368: GLenum, arg_1369: GLenum, arg_1370: GLint, arg_1371: GLint, arg_1372: GLsizei) void {
    return epoxy_glCopyColorTable.?(arg_1368, arg_1369, arg_1370, arg_1371, arg_1372);
}
pub inline fn glCopyColorTableSGI(arg_1373: GLenum, arg_1374: GLenum, arg_1375: GLint, arg_1376: GLint, arg_1377: GLsizei) void {
    return epoxy_glCopyColorTableSGI.?(arg_1373, arg_1374, arg_1375, arg_1376, arg_1377);
}
pub inline fn glCopyConvolutionFilter1D(arg_1378: GLenum, arg_1379: GLenum, arg_1380: GLint, arg_1381: GLint, arg_1382: GLsizei) void {
    return epoxy_glCopyConvolutionFilter1D.?(arg_1378, arg_1379, arg_1380, arg_1381, arg_1382);
}
pub inline fn glCopyConvolutionFilter1DEXT(arg_1383: GLenum, arg_1384: GLenum, arg_1385: GLint, arg_1386: GLint, arg_1387: GLsizei) void {
    return epoxy_glCopyConvolutionFilter1DEXT.?(arg_1383, arg_1384, arg_1385, arg_1386, arg_1387);
}
pub inline fn glCopyConvolutionFilter2D(arg_1388: GLenum, arg_1389: GLenum, arg_1390: GLint, arg_1391: GLint, arg_1392: GLsizei, arg_1393: GLsizei) void {
    return epoxy_glCopyConvolutionFilter2D.?(arg_1388, arg_1389, arg_1390, arg_1391, arg_1392, arg_1393);
}
pub inline fn glCopyConvolutionFilter2DEXT(arg_1394: GLenum, arg_1395: GLenum, arg_1396: GLint, arg_1397: GLint, arg_1398: GLsizei, arg_1399: GLsizei) void {
    return epoxy_glCopyConvolutionFilter2DEXT.?(arg_1394, arg_1395, arg_1396, arg_1397, arg_1398, arg_1399);
}
pub inline fn glCopyImageSubData(arg_1400: GLuint, arg_1401: GLenum, arg_1402: GLint, arg_1403: GLint, arg_1404: GLint, arg_1405: GLint, arg_1406: GLuint, arg_1407: GLenum, arg_1408: GLint, arg_1409: GLint, arg_1410: GLint, arg_1411: GLint, arg_1412: GLsizei, arg_1413: GLsizei, arg_1414: GLsizei) void {
    return epoxy_glCopyImageSubData.?(arg_1400, arg_1401, arg_1402, arg_1403, arg_1404, arg_1405, arg_1406, arg_1407, arg_1408, arg_1409, arg_1410, arg_1411, arg_1412, arg_1413, arg_1414);
}
pub inline fn glCopyImageSubDataEXT(arg_1415: GLuint, arg_1416: GLenum, arg_1417: GLint, arg_1418: GLint, arg_1419: GLint, arg_1420: GLint, arg_1421: GLuint, arg_1422: GLenum, arg_1423: GLint, arg_1424: GLint, arg_1425: GLint, arg_1426: GLint, arg_1427: GLsizei, arg_1428: GLsizei, arg_1429: GLsizei) void {
    return epoxy_glCopyImageSubDataEXT.?(arg_1415, arg_1416, arg_1417, arg_1418, arg_1419, arg_1420, arg_1421, arg_1422, arg_1423, arg_1424, arg_1425, arg_1426, arg_1427, arg_1428, arg_1429);
}
pub inline fn glCopyImageSubDataNV(arg_1430: GLuint, arg_1431: GLenum, arg_1432: GLint, arg_1433: GLint, arg_1434: GLint, arg_1435: GLint, arg_1436: GLuint, arg_1437: GLenum, arg_1438: GLint, arg_1439: GLint, arg_1440: GLint, arg_1441: GLint, arg_1442: GLsizei, arg_1443: GLsizei, arg_1444: GLsizei) void {
    return epoxy_glCopyImageSubDataNV.?(arg_1430, arg_1431, arg_1432, arg_1433, arg_1434, arg_1435, arg_1436, arg_1437, arg_1438, arg_1439, arg_1440, arg_1441, arg_1442, arg_1443, arg_1444);
}
pub inline fn glCopyImageSubDataOES(arg_1445: GLuint, arg_1446: GLenum, arg_1447: GLint, arg_1448: GLint, arg_1449: GLint, arg_1450: GLint, arg_1451: GLuint, arg_1452: GLenum, arg_1453: GLint, arg_1454: GLint, arg_1455: GLint, arg_1456: GLint, arg_1457: GLsizei, arg_1458: GLsizei, arg_1459: GLsizei) void {
    return epoxy_glCopyImageSubDataOES.?(arg_1445, arg_1446, arg_1447, arg_1448, arg_1449, arg_1450, arg_1451, arg_1452, arg_1453, arg_1454, arg_1455, arg_1456, arg_1457, arg_1458, arg_1459);
}
pub inline fn glCopyMultiTexImage1DEXT(arg_1460: GLenum, arg_1461: GLenum, arg_1462: GLint, arg_1463: GLenum, arg_1464: GLint, arg_1465: GLint, arg_1466: GLsizei, arg_1467: GLint) void {
    return epoxy_glCopyMultiTexImage1DEXT.?(arg_1460, arg_1461, arg_1462, arg_1463, arg_1464, arg_1465, arg_1466, arg_1467);
}
pub inline fn glCopyMultiTexImage2DEXT(arg_1468: GLenum, arg_1469: GLenum, arg_1470: GLint, arg_1471: GLenum, arg_1472: GLint, arg_1473: GLint, arg_1474: GLsizei, arg_1475: GLsizei, arg_1476: GLint) void {
    return epoxy_glCopyMultiTexImage2DEXT.?(arg_1468, arg_1469, arg_1470, arg_1471, arg_1472, arg_1473, arg_1474, arg_1475, arg_1476);
}
pub inline fn glCopyMultiTexSubImage1DEXT(arg_1477: GLenum, arg_1478: GLenum, arg_1479: GLint, arg_1480: GLint, arg_1481: GLint, arg_1482: GLint, arg_1483: GLsizei) void {
    return epoxy_glCopyMultiTexSubImage1DEXT.?(arg_1477, arg_1478, arg_1479, arg_1480, arg_1481, arg_1482, arg_1483);
}
pub inline fn glCopyMultiTexSubImage2DEXT(arg_1484: GLenum, arg_1485: GLenum, arg_1486: GLint, arg_1487: GLint, arg_1488: GLint, arg_1489: GLint, arg_1490: GLint, arg_1491: GLsizei, arg_1492: GLsizei) void {
    return epoxy_glCopyMultiTexSubImage2DEXT.?(arg_1484, arg_1485, arg_1486, arg_1487, arg_1488, arg_1489, arg_1490, arg_1491, arg_1492);
}
pub inline fn glCopyMultiTexSubImage3DEXT(arg_1493: GLenum, arg_1494: GLenum, arg_1495: GLint, arg_1496: GLint, arg_1497: GLint, arg_1498: GLint, arg_1499: GLint, arg_1500: GLint, arg_1501: GLsizei, arg_1502: GLsizei) void {
    return epoxy_glCopyMultiTexSubImage3DEXT.?(arg_1493, arg_1494, arg_1495, arg_1496, arg_1497, arg_1498, arg_1499, arg_1500, arg_1501, arg_1502);
}
pub inline fn glCopyNamedBufferSubData(arg_1503: GLuint, arg_1504: GLuint, arg_1505: GLintptr, arg_1506: GLintptr, arg_1507: GLsizeiptr) void {
    return epoxy_glCopyNamedBufferSubData.?(arg_1503, arg_1504, arg_1505, arg_1506, arg_1507);
}
pub inline fn glCopyPathNV(arg_1508: GLuint, arg_1509: GLuint) void {
    return epoxy_glCopyPathNV.?(arg_1508, arg_1509);
}
pub inline fn glCopyPixels(arg_1510: GLint, arg_1511: GLint, arg_1512: GLsizei, arg_1513: GLsizei, arg_1514: GLenum) void {
    return epoxy_glCopyPixels.?(arg_1510, arg_1511, arg_1512, arg_1513, arg_1514);
}
pub inline fn glCopyTexImage1D(arg_1515: GLenum, arg_1516: GLint, arg_1517: GLenum, arg_1518: GLint, arg_1519: GLint, arg_1520: GLsizei, arg_1521: GLint) void {
    return epoxy_glCopyTexImage1D.?(arg_1515, arg_1516, arg_1517, arg_1518, arg_1519, arg_1520, arg_1521);
}
pub inline fn glCopyTexImage1DEXT(arg_1522: GLenum, arg_1523: GLint, arg_1524: GLenum, arg_1525: GLint, arg_1526: GLint, arg_1527: GLsizei, arg_1528: GLint) void {
    return epoxy_glCopyTexImage1DEXT.?(arg_1522, arg_1523, arg_1524, arg_1525, arg_1526, arg_1527, arg_1528);
}
pub inline fn glCopyTexImage2D(arg_1529: GLenum, arg_1530: GLint, arg_1531: GLenum, arg_1532: GLint, arg_1533: GLint, arg_1534: GLsizei, arg_1535: GLsizei, arg_1536: GLint) void {
    return epoxy_glCopyTexImage2D.?(arg_1529, arg_1530, arg_1531, arg_1532, arg_1533, arg_1534, arg_1535, arg_1536);
}
pub inline fn glCopyTexImage2DEXT(arg_1537: GLenum, arg_1538: GLint, arg_1539: GLenum, arg_1540: GLint, arg_1541: GLint, arg_1542: GLsizei, arg_1543: GLsizei, arg_1544: GLint) void {
    return epoxy_glCopyTexImage2DEXT.?(arg_1537, arg_1538, arg_1539, arg_1540, arg_1541, arg_1542, arg_1543, arg_1544);
}
pub inline fn glCopyTexSubImage1D(arg_1545: GLenum, arg_1546: GLint, arg_1547: GLint, arg_1548: GLint, arg_1549: GLint, arg_1550: GLsizei) void {
    return epoxy_glCopyTexSubImage1D.?(arg_1545, arg_1546, arg_1547, arg_1548, arg_1549, arg_1550);
}
pub inline fn glCopyTexSubImage1DEXT(arg_1551: GLenum, arg_1552: GLint, arg_1553: GLint, arg_1554: GLint, arg_1555: GLint, arg_1556: GLsizei) void {
    return epoxy_glCopyTexSubImage1DEXT.?(arg_1551, arg_1552, arg_1553, arg_1554, arg_1555, arg_1556);
}
pub inline fn glCopyTexSubImage2D(arg_1557: GLenum, arg_1558: GLint, arg_1559: GLint, arg_1560: GLint, arg_1561: GLint, arg_1562: GLint, arg_1563: GLsizei, arg_1564: GLsizei) void {
    return epoxy_glCopyTexSubImage2D.?(arg_1557, arg_1558, arg_1559, arg_1560, arg_1561, arg_1562, arg_1563, arg_1564);
}
pub inline fn glCopyTexSubImage2DEXT(arg_1565: GLenum, arg_1566: GLint, arg_1567: GLint, arg_1568: GLint, arg_1569: GLint, arg_1570: GLint, arg_1571: GLsizei, arg_1572: GLsizei) void {
    return epoxy_glCopyTexSubImage2DEXT.?(arg_1565, arg_1566, arg_1567, arg_1568, arg_1569, arg_1570, arg_1571, arg_1572);
}
pub inline fn glCopyTexSubImage3D(arg_1573: GLenum, arg_1574: GLint, arg_1575: GLint, arg_1576: GLint, arg_1577: GLint, arg_1578: GLint, arg_1579: GLint, arg_1580: GLsizei, arg_1581: GLsizei) void {
    return epoxy_glCopyTexSubImage3D.?(arg_1573, arg_1574, arg_1575, arg_1576, arg_1577, arg_1578, arg_1579, arg_1580, arg_1581);
}
pub inline fn glCopyTexSubImage3DEXT(arg_1582: GLenum, arg_1583: GLint, arg_1584: GLint, arg_1585: GLint, arg_1586: GLint, arg_1587: GLint, arg_1588: GLint, arg_1589: GLsizei, arg_1590: GLsizei) void {
    return epoxy_glCopyTexSubImage3DEXT.?(arg_1582, arg_1583, arg_1584, arg_1585, arg_1586, arg_1587, arg_1588, arg_1589, arg_1590);
}
pub inline fn glCopyTexSubImage3DOES(arg_1591: GLenum, arg_1592: GLint, arg_1593: GLint, arg_1594: GLint, arg_1595: GLint, arg_1596: GLint, arg_1597: GLint, arg_1598: GLsizei, arg_1599: GLsizei) void {
    return epoxy_glCopyTexSubImage3DOES.?(arg_1591, arg_1592, arg_1593, arg_1594, arg_1595, arg_1596, arg_1597, arg_1598, arg_1599);
}
pub inline fn glCopyTextureImage1DEXT(arg_1600: GLuint, arg_1601: GLenum, arg_1602: GLint, arg_1603: GLenum, arg_1604: GLint, arg_1605: GLint, arg_1606: GLsizei, arg_1607: GLint) void {
    return epoxy_glCopyTextureImage1DEXT.?(arg_1600, arg_1601, arg_1602, arg_1603, arg_1604, arg_1605, arg_1606, arg_1607);
}
pub inline fn glCopyTextureImage2DEXT(arg_1608: GLuint, arg_1609: GLenum, arg_1610: GLint, arg_1611: GLenum, arg_1612: GLint, arg_1613: GLint, arg_1614: GLsizei, arg_1615: GLsizei, arg_1616: GLint) void {
    return epoxy_glCopyTextureImage2DEXT.?(arg_1608, arg_1609, arg_1610, arg_1611, arg_1612, arg_1613, arg_1614, arg_1615, arg_1616);
}
pub inline fn glCopyTextureLevelsAPPLE(arg_1617: GLuint, arg_1618: GLuint, arg_1619: GLint, arg_1620: GLsizei) void {
    return epoxy_glCopyTextureLevelsAPPLE.?(arg_1617, arg_1618, arg_1619, arg_1620);
}
pub inline fn glCopyTextureSubImage1D(arg_1621: GLuint, arg_1622: GLint, arg_1623: GLint, arg_1624: GLint, arg_1625: GLint, arg_1626: GLsizei) void {
    return epoxy_glCopyTextureSubImage1D.?(arg_1621, arg_1622, arg_1623, arg_1624, arg_1625, arg_1626);
}
pub inline fn glCopyTextureSubImage1DEXT(arg_1627: GLuint, arg_1628: GLenum, arg_1629: GLint, arg_1630: GLint, arg_1631: GLint, arg_1632: GLint, arg_1633: GLsizei) void {
    return epoxy_glCopyTextureSubImage1DEXT.?(arg_1627, arg_1628, arg_1629, arg_1630, arg_1631, arg_1632, arg_1633);
}
pub inline fn glCopyTextureSubImage2D(arg_1634: GLuint, arg_1635: GLint, arg_1636: GLint, arg_1637: GLint, arg_1638: GLint, arg_1639: GLint, arg_1640: GLsizei, arg_1641: GLsizei) void {
    return epoxy_glCopyTextureSubImage2D.?(arg_1634, arg_1635, arg_1636, arg_1637, arg_1638, arg_1639, arg_1640, arg_1641);
}
pub inline fn glCopyTextureSubImage2DEXT(arg_1642: GLuint, arg_1643: GLenum, arg_1644: GLint, arg_1645: GLint, arg_1646: GLint, arg_1647: GLint, arg_1648: GLint, arg_1649: GLsizei, arg_1650: GLsizei) void {
    return epoxy_glCopyTextureSubImage2DEXT.?(arg_1642, arg_1643, arg_1644, arg_1645, arg_1646, arg_1647, arg_1648, arg_1649, arg_1650);
}
pub inline fn glCopyTextureSubImage3D(arg_1651: GLuint, arg_1652: GLint, arg_1653: GLint, arg_1654: GLint, arg_1655: GLint, arg_1656: GLint, arg_1657: GLint, arg_1658: GLsizei, arg_1659: GLsizei) void {
    return epoxy_glCopyTextureSubImage3D.?(arg_1651, arg_1652, arg_1653, arg_1654, arg_1655, arg_1656, arg_1657, arg_1658, arg_1659);
}
pub inline fn glCopyTextureSubImage3DEXT(arg_1660: GLuint, arg_1661: GLenum, arg_1662: GLint, arg_1663: GLint, arg_1664: GLint, arg_1665: GLint, arg_1666: GLint, arg_1667: GLint, arg_1668: GLsizei, arg_1669: GLsizei) void {
    return epoxy_glCopyTextureSubImage3DEXT.?(arg_1660, arg_1661, arg_1662, arg_1663, arg_1664, arg_1665, arg_1666, arg_1667, arg_1668, arg_1669);
}
pub inline fn glCoverFillPathInstancedNV(arg_1670: GLsizei, arg_1671: GLenum, arg_1672: ?*const anyopaque, arg_1673: GLuint, arg_1674: GLenum, arg_1675: GLenum, arg_1676: [*c]const GLfloat) void {
    return epoxy_glCoverFillPathInstancedNV.?(arg_1670, arg_1671, arg_1672, arg_1673, arg_1674, arg_1675, arg_1676);
}
pub inline fn glCoverFillPathNV(arg_1677: GLuint, arg_1678: GLenum) void {
    return epoxy_glCoverFillPathNV.?(arg_1677, arg_1678);
}
pub inline fn glCoverStrokePathInstancedNV(arg_1679: GLsizei, arg_1680: GLenum, arg_1681: ?*const anyopaque, arg_1682: GLuint, arg_1683: GLenum, arg_1684: GLenum, arg_1685: [*c]const GLfloat) void {
    return epoxy_glCoverStrokePathInstancedNV.?(arg_1679, arg_1680, arg_1681, arg_1682, arg_1683, arg_1684, arg_1685);
}
pub inline fn glCoverStrokePathNV(arg_1686: GLuint, arg_1687: GLenum) void {
    return epoxy_glCoverStrokePathNV.?(arg_1686, arg_1687);
}
pub inline fn glCoverageMaskNV(arg_1688: GLboolean) void {
    return epoxy_glCoverageMaskNV.?(arg_1688);
}
pub inline fn glCoverageModulationNV(arg_1689: GLenum) void {
    return epoxy_glCoverageModulationNV.?(arg_1689);
}
pub inline fn glCoverageModulationTableNV(arg_1690: GLsizei, arg_1691: [*c]const GLfloat) void {
    return epoxy_glCoverageModulationTableNV.?(arg_1690, arg_1691);
}
pub inline fn glCoverageOperationNV(arg_1692: GLenum) void {
    return epoxy_glCoverageOperationNV.?(arg_1692);
}
pub inline fn glCreateBuffers(arg_1693: GLsizei, arg_1694: [*c]GLuint) void {
    return epoxy_glCreateBuffers.?(arg_1693, arg_1694);
}
pub inline fn glCreateCommandListsNV(arg_1695: GLsizei, arg_1696: [*c]GLuint) void {
    return epoxy_glCreateCommandListsNV.?(arg_1695, arg_1696);
}
pub inline fn glCreateFramebuffers(arg_1697: GLsizei, arg_1698: [*c]GLuint) void {
    return epoxy_glCreateFramebuffers.?(arg_1697, arg_1698);
}
pub inline fn glCreateMemoryObjectsEXT(arg_1699: GLsizei, arg_1700: [*c]GLuint) void {
    return epoxy_glCreateMemoryObjectsEXT.?(arg_1699, arg_1700);
}
pub inline fn glCreatePerfQueryINTEL(arg_1701: GLuint, arg_1702: [*c]GLuint) void {
    return epoxy_glCreatePerfQueryINTEL.?(arg_1701, arg_1702);
}
pub inline fn glCreateProgram() GLuint {
    return epoxy_glCreateProgram.?();
}
pub inline fn glCreateProgramObjectARB() GLhandleARB {
    return epoxy_glCreateProgramObjectARB.?();
}
pub inline fn glCreateProgramPipelines(arg_1703: GLsizei, arg_1704: [*c]GLuint) void {
    return epoxy_glCreateProgramPipelines.?(arg_1703, arg_1704);
}
pub inline fn glCreateProgressFenceNVX() GLuint {
    return epoxy_glCreateProgressFenceNVX.?();
}
pub inline fn glCreateQueries(arg_1705: GLenum, arg_1706: GLsizei, arg_1707: [*c]GLuint) void {
    return epoxy_glCreateQueries.?(arg_1705, arg_1706, arg_1707);
}
pub inline fn glCreateRenderbuffers(arg_1708: GLsizei, arg_1709: [*c]GLuint) void {
    return epoxy_glCreateRenderbuffers.?(arg_1708, arg_1709);
}
pub inline fn glCreateSamplers(arg_1710: GLsizei, arg_1711: [*c]GLuint) void {
    return epoxy_glCreateSamplers.?(arg_1710, arg_1711);
}
pub inline fn glCreateShader(arg_1712: GLenum) GLuint {
    return epoxy_glCreateShader.?(arg_1712);
}
pub inline fn glCreateShaderObjectARB(arg_1713: GLenum) GLhandleARB {
    return epoxy_glCreateShaderObjectARB.?(arg_1713);
}
pub inline fn glCreateShaderProgramEXT(arg_1714: GLenum, arg_1715: [*c]const GLchar) GLuint {
    return epoxy_glCreateShaderProgramEXT.?(arg_1714, arg_1715);
}
pub inline fn glCreateShaderProgramv(arg_1716: GLenum, arg_1717: GLsizei, arg_1718: [*c]const [*c]const GLchar) GLuint {
    return epoxy_glCreateShaderProgramv.?(arg_1716, arg_1717, arg_1718);
}
pub inline fn glCreateShaderProgramvEXT(arg_1719: GLenum, arg_1720: GLsizei, arg_1721: [*c][*c]const GLchar) GLuint {
    return epoxy_glCreateShaderProgramvEXT.?(arg_1719, arg_1720, arg_1721);
}
pub inline fn glCreateStatesNV(arg_1722: GLsizei, arg_1723: [*c]GLuint) void {
    return epoxy_glCreateStatesNV.?(arg_1722, arg_1723);
}
pub inline fn glCreateSyncFromCLeventARB(arg_1724: ?*struct__cl_context, arg_1725: ?*struct__cl_event, arg_1726: GLbitfield) GLsync {
    return epoxy_glCreateSyncFromCLeventARB.?(arg_1724, arg_1725, arg_1726);
}
pub inline fn glCreateTextures(arg_1727: GLenum, arg_1728: GLsizei, arg_1729: [*c]GLuint) void {
    return epoxy_glCreateTextures.?(arg_1727, arg_1728, arg_1729);
}
pub inline fn glCreateTransformFeedbacks(arg_1730: GLsizei, arg_1731: [*c]GLuint) void {
    return epoxy_glCreateTransformFeedbacks.?(arg_1730, arg_1731);
}
pub inline fn glCreateVertexArrays(arg_1732: GLsizei, arg_1733: [*c]GLuint) void {
    return epoxy_glCreateVertexArrays.?(arg_1732, arg_1733);
}
pub inline fn glCullFace(arg_1734: GLenum) void {
    return epoxy_glCullFace.?(arg_1734);
}
pub inline fn glCullParameterdvEXT(arg_1735: GLenum, arg_1736: [*c]GLdouble) void {
    return epoxy_glCullParameterdvEXT.?(arg_1735, arg_1736);
}
pub inline fn glCullParameterfvEXT(arg_1737: GLenum, arg_1738: [*c]GLfloat) void {
    return epoxy_glCullParameterfvEXT.?(arg_1737, arg_1738);
}
pub inline fn glCurrentPaletteMatrixARB(arg_1739: GLint) void {
    return epoxy_glCurrentPaletteMatrixARB.?(arg_1739);
}
pub inline fn glCurrentPaletteMatrixOES(arg_1740: GLuint) void {
    return epoxy_glCurrentPaletteMatrixOES.?(arg_1740);
}
pub inline fn glDebugMessageCallback(arg_1741: GLDEBUGPROC, arg_1742: ?*const anyopaque) void {
    return epoxy_glDebugMessageCallback.?(arg_1741, arg_1742);
}
pub inline fn glDebugMessageCallbackAMD(arg_1743: GLDEBUGPROCAMD, arg_1744: ?*anyopaque) void {
    return epoxy_glDebugMessageCallbackAMD.?(arg_1743, arg_1744);
}
pub inline fn glDebugMessageCallbackARB(arg_1745: GLDEBUGPROCARB, arg_1746: ?*const anyopaque) void {
    return epoxy_glDebugMessageCallbackARB.?(arg_1745, arg_1746);
}
pub inline fn glDebugMessageCallbackKHR(arg_1747: GLDEBUGPROCKHR, arg_1748: ?*const anyopaque) void {
    return epoxy_glDebugMessageCallbackKHR.?(arg_1747, arg_1748);
}
pub inline fn glDebugMessageControl(arg_1749: GLenum, arg_1750: GLenum, arg_1751: GLenum, arg_1752: GLsizei, arg_1753: [*c]const GLuint, arg_1754: GLboolean) void {
    return epoxy_glDebugMessageControl.?(arg_1749, arg_1750, arg_1751, arg_1752, arg_1753, arg_1754);
}
pub inline fn glDebugMessageControlARB(arg_1755: GLenum, arg_1756: GLenum, arg_1757: GLenum, arg_1758: GLsizei, arg_1759: [*c]const GLuint, arg_1760: GLboolean) void {
    return epoxy_glDebugMessageControlARB.?(arg_1755, arg_1756, arg_1757, arg_1758, arg_1759, arg_1760);
}
pub inline fn glDebugMessageControlKHR(arg_1761: GLenum, arg_1762: GLenum, arg_1763: GLenum, arg_1764: GLsizei, arg_1765: [*c]const GLuint, arg_1766: GLboolean) void {
    return epoxy_glDebugMessageControlKHR.?(arg_1761, arg_1762, arg_1763, arg_1764, arg_1765, arg_1766);
}
pub inline fn glDebugMessageEnableAMD(arg_1767: GLenum, arg_1768: GLenum, arg_1769: GLsizei, arg_1770: [*c]const GLuint, arg_1771: GLboolean) void {
    return epoxy_glDebugMessageEnableAMD.?(arg_1767, arg_1768, arg_1769, arg_1770, arg_1771);
}
pub inline fn glDebugMessageInsert(arg_1772: GLenum, arg_1773: GLenum, arg_1774: GLuint, arg_1775: GLenum, arg_1776: GLsizei, arg_1777: [*c]const GLchar) void {
    return epoxy_glDebugMessageInsert.?(arg_1772, arg_1773, arg_1774, arg_1775, arg_1776, arg_1777);
}
pub inline fn glDebugMessageInsertAMD(arg_1778: GLenum, arg_1779: GLenum, arg_1780: GLuint, arg_1781: GLsizei, arg_1782: [*c]const GLchar) void {
    return epoxy_glDebugMessageInsertAMD.?(arg_1778, arg_1779, arg_1780, arg_1781, arg_1782);
}
pub inline fn glDebugMessageInsertARB(arg_1783: GLenum, arg_1784: GLenum, arg_1785: GLuint, arg_1786: GLenum, arg_1787: GLsizei, arg_1788: [*c]const GLchar) void {
    return epoxy_glDebugMessageInsertARB.?(arg_1783, arg_1784, arg_1785, arg_1786, arg_1787, arg_1788);
}
pub inline fn glDebugMessageInsertKHR(arg_1789: GLenum, arg_1790: GLenum, arg_1791: GLuint, arg_1792: GLenum, arg_1793: GLsizei, arg_1794: [*c]const GLchar) void {
    return epoxy_glDebugMessageInsertKHR.?(arg_1789, arg_1790, arg_1791, arg_1792, arg_1793, arg_1794);
}
pub inline fn glDeformSGIX(arg_1795: GLbitfield) void {
    return epoxy_glDeformSGIX.?(arg_1795);
}
pub inline fn glDeformationMap3dSGIX(arg_1796: GLenum, arg_1797: GLdouble, arg_1798: GLdouble, arg_1799: GLint, arg_1800: GLint, arg_1801: GLdouble, arg_1802: GLdouble, arg_1803: GLint, arg_1804: GLint, arg_1805: GLdouble, arg_1806: GLdouble, arg_1807: GLint, arg_1808: GLint, arg_1809: [*c]const GLdouble) void {
    return epoxy_glDeformationMap3dSGIX.?(arg_1796, arg_1797, arg_1798, arg_1799, arg_1800, arg_1801, arg_1802, arg_1803, arg_1804, arg_1805, arg_1806, arg_1807, arg_1808, arg_1809);
}
pub inline fn glDeformationMap3fSGIX(arg_1810: GLenum, arg_1811: GLfloat, arg_1812: GLfloat, arg_1813: GLint, arg_1814: GLint, arg_1815: GLfloat, arg_1816: GLfloat, arg_1817: GLint, arg_1818: GLint, arg_1819: GLfloat, arg_1820: GLfloat, arg_1821: GLint, arg_1822: GLint, arg_1823: [*c]const GLfloat) void {
    return epoxy_glDeformationMap3fSGIX.?(arg_1810, arg_1811, arg_1812, arg_1813, arg_1814, arg_1815, arg_1816, arg_1817, arg_1818, arg_1819, arg_1820, arg_1821, arg_1822, arg_1823);
}
pub inline fn glDeleteAsyncMarkersSGIX(arg_1824: GLuint, arg_1825: GLsizei) void {
    return epoxy_glDeleteAsyncMarkersSGIX.?(arg_1824, arg_1825);
}
pub inline fn glDeleteBuffers(arg_1826: GLsizei, arg_1827: [*c]const GLuint) void {
    return epoxy_glDeleteBuffers.?(arg_1826, arg_1827);
}
pub inline fn glDeleteBuffersARB(arg_1828: GLsizei, arg_1829: [*c]const GLuint) void {
    return epoxy_glDeleteBuffersARB.?(arg_1828, arg_1829);
}
pub inline fn glDeleteCommandListsNV(arg_1830: GLsizei, arg_1831: [*c]const GLuint) void {
    return epoxy_glDeleteCommandListsNV.?(arg_1830, arg_1831);
}
pub inline fn glDeleteFencesAPPLE(arg_1832: GLsizei, arg_1833: [*c]const GLuint) void {
    return epoxy_glDeleteFencesAPPLE.?(arg_1832, arg_1833);
}
pub inline fn glDeleteFencesNV(arg_1834: GLsizei, arg_1835: [*c]const GLuint) void {
    return epoxy_glDeleteFencesNV.?(arg_1834, arg_1835);
}
pub inline fn glDeleteFragmentShaderATI(arg_1836: GLuint) void {
    return epoxy_glDeleteFragmentShaderATI.?(arg_1836);
}
pub inline fn glDeleteFramebuffers(arg_1837: GLsizei, arg_1838: [*c]const GLuint) void {
    return epoxy_glDeleteFramebuffers.?(arg_1837, arg_1838);
}
pub inline fn glDeleteFramebuffersEXT(arg_1839: GLsizei, arg_1840: [*c]const GLuint) void {
    return epoxy_glDeleteFramebuffersEXT.?(arg_1839, arg_1840);
}
pub inline fn glDeleteFramebuffersOES(arg_1841: GLsizei, arg_1842: [*c]const GLuint) void {
    return epoxy_glDeleteFramebuffersOES.?(arg_1841, arg_1842);
}
pub inline fn glDeleteLists(arg_1843: GLuint, arg_1844: GLsizei) void {
    return epoxy_glDeleteLists.?(arg_1843, arg_1844);
}
pub inline fn glDeleteMemoryObjectsEXT(arg_1845: GLsizei, arg_1846: [*c]const GLuint) void {
    return epoxy_glDeleteMemoryObjectsEXT.?(arg_1845, arg_1846);
}
pub inline fn glDeleteNamedStringARB(arg_1847: GLint, arg_1848: [*c]const GLchar) void {
    return epoxy_glDeleteNamedStringARB.?(arg_1847, arg_1848);
}
pub inline fn glDeleteNamesAMD(arg_1849: GLenum, arg_1850: GLuint, arg_1851: [*c]const GLuint) void {
    return epoxy_glDeleteNamesAMD.?(arg_1849, arg_1850, arg_1851);
}
pub inline fn glDeleteObjectARB(arg_1852: GLhandleARB) void {
    return epoxy_glDeleteObjectARB.?(arg_1852);
}
pub inline fn glDeleteOcclusionQueriesNV(arg_1853: GLsizei, arg_1854: [*c]const GLuint) void {
    return epoxy_glDeleteOcclusionQueriesNV.?(arg_1853, arg_1854);
}
pub inline fn glDeletePathsNV(arg_1855: GLuint, arg_1856: GLsizei) void {
    return epoxy_glDeletePathsNV.?(arg_1855, arg_1856);
}
pub inline fn glDeletePerfMonitorsAMD(arg_1857: GLsizei, arg_1858: [*c]GLuint) void {
    return epoxy_glDeletePerfMonitorsAMD.?(arg_1857, arg_1858);
}
pub inline fn glDeletePerfQueryINTEL(arg_1859: GLuint) void {
    return epoxy_glDeletePerfQueryINTEL.?(arg_1859);
}
pub inline fn glDeleteProgram(arg_1860: GLuint) void {
    return epoxy_glDeleteProgram.?(arg_1860);
}
pub inline fn glDeleteProgramPipelines(arg_1861: GLsizei, arg_1862: [*c]const GLuint) void {
    return epoxy_glDeleteProgramPipelines.?(arg_1861, arg_1862);
}
pub inline fn glDeleteProgramPipelinesEXT(arg_1863: GLsizei, arg_1864: [*c]const GLuint) void {
    return epoxy_glDeleteProgramPipelinesEXT.?(arg_1863, arg_1864);
}
pub inline fn glDeleteProgramsARB(arg_1865: GLsizei, arg_1866: [*c]const GLuint) void {
    return epoxy_glDeleteProgramsARB.?(arg_1865, arg_1866);
}
pub inline fn glDeleteProgramsNV(arg_1867: GLsizei, arg_1868: [*c]const GLuint) void {
    return epoxy_glDeleteProgramsNV.?(arg_1867, arg_1868);
}
pub inline fn glDeleteQueries(arg_1869: GLsizei, arg_1870: [*c]const GLuint) void {
    return epoxy_glDeleteQueries.?(arg_1869, arg_1870);
}
pub inline fn glDeleteQueriesARB(arg_1871: GLsizei, arg_1872: [*c]const GLuint) void {
    return epoxy_glDeleteQueriesARB.?(arg_1871, arg_1872);
}
pub inline fn glDeleteQueriesEXT(arg_1873: GLsizei, arg_1874: [*c]const GLuint) void {
    return epoxy_glDeleteQueriesEXT.?(arg_1873, arg_1874);
}
pub inline fn glDeleteQueryResourceTagNV(arg_1875: GLsizei, arg_1876: [*c]const GLint) void {
    return epoxy_glDeleteQueryResourceTagNV.?(arg_1875, arg_1876);
}
pub inline fn glDeleteRenderbuffers(arg_1877: GLsizei, arg_1878: [*c]const GLuint) void {
    return epoxy_glDeleteRenderbuffers.?(arg_1877, arg_1878);
}
pub inline fn glDeleteRenderbuffersEXT(arg_1879: GLsizei, arg_1880: [*c]const GLuint) void {
    return epoxy_glDeleteRenderbuffersEXT.?(arg_1879, arg_1880);
}
pub inline fn glDeleteRenderbuffersOES(arg_1881: GLsizei, arg_1882: [*c]const GLuint) void {
    return epoxy_glDeleteRenderbuffersOES.?(arg_1881, arg_1882);
}
pub inline fn glDeleteSamplers(arg_1883: GLsizei, arg_1884: [*c]const GLuint) void {
    return epoxy_glDeleteSamplers.?(arg_1883, arg_1884);
}
pub inline fn glDeleteSemaphoresEXT(arg_1885: GLsizei, arg_1886: [*c]const GLuint) void {
    return epoxy_glDeleteSemaphoresEXT.?(arg_1885, arg_1886);
}
pub inline fn glDeleteShader(arg_1887: GLuint) void {
    return epoxy_glDeleteShader.?(arg_1887);
}
pub inline fn glDeleteStatesNV(arg_1888: GLsizei, arg_1889: [*c]const GLuint) void {
    return epoxy_glDeleteStatesNV.?(arg_1888, arg_1889);
}
pub inline fn glDeleteSync(arg_1890: GLsync) void {
    return epoxy_glDeleteSync.?(arg_1890);
}
pub inline fn glDeleteSyncAPPLE(arg_1891: GLsync) void {
    return epoxy_glDeleteSyncAPPLE.?(arg_1891);
}
pub inline fn glDeleteTextures(arg_1892: GLsizei, arg_1893: [*c]const GLuint) void {
    return epoxy_glDeleteTextures.?(arg_1892, arg_1893);
}
pub inline fn glDeleteTexturesEXT(arg_1894: GLsizei, arg_1895: [*c]const GLuint) void {
    return epoxy_glDeleteTexturesEXT.?(arg_1894, arg_1895);
}
pub inline fn glDeleteTransformFeedbacks(arg_1896: GLsizei, arg_1897: [*c]const GLuint) void {
    return epoxy_glDeleteTransformFeedbacks.?(arg_1896, arg_1897);
}
pub inline fn glDeleteTransformFeedbacksNV(arg_1898: GLsizei, arg_1899: [*c]const GLuint) void {
    return epoxy_glDeleteTransformFeedbacksNV.?(arg_1898, arg_1899);
}
pub inline fn glDeleteVertexArrays(arg_1900: GLsizei, arg_1901: [*c]const GLuint) void {
    return epoxy_glDeleteVertexArrays.?(arg_1900, arg_1901);
}
pub inline fn glDeleteVertexArraysAPPLE(arg_1902: GLsizei, arg_1903: [*c]const GLuint) void {
    return epoxy_glDeleteVertexArraysAPPLE.?(arg_1902, arg_1903);
}
pub inline fn glDeleteVertexArraysOES(arg_1904: GLsizei, arg_1905: [*c]const GLuint) void {
    return epoxy_glDeleteVertexArraysOES.?(arg_1904, arg_1905);
}
pub inline fn glDeleteVertexShaderEXT(arg_1906: GLuint) void {
    return epoxy_glDeleteVertexShaderEXT.?(arg_1906);
}
pub inline fn glDepthBoundsEXT(arg_1907: GLclampd, arg_1908: GLclampd) void {
    return epoxy_glDepthBoundsEXT.?(arg_1907, arg_1908);
}
pub inline fn glDepthBoundsdNV(arg_1909: GLdouble, arg_1910: GLdouble) void {
    return epoxy_glDepthBoundsdNV.?(arg_1909, arg_1910);
}
pub inline fn glDepthFunc(arg_1911: GLenum) void {
    return epoxy_glDepthFunc.?(arg_1911);
}
pub inline fn glDepthMask(arg_1912: GLboolean) void {
    return epoxy_glDepthMask.?(arg_1912);
}
pub inline fn glDepthRange(arg_1913: GLdouble, arg_1914: GLdouble) void {
    return epoxy_glDepthRange.?(arg_1913, arg_1914);
}
pub inline fn glDepthRangeArrayfvNV(arg_1915: GLuint, arg_1916: GLsizei, arg_1917: [*c]const GLfloat) void {
    return epoxy_glDepthRangeArrayfvNV.?(arg_1915, arg_1916, arg_1917);
}
pub inline fn glDepthRangeArrayfvOES(arg_1918: GLuint, arg_1919: GLsizei, arg_1920: [*c]const GLfloat) void {
    return epoxy_glDepthRangeArrayfvOES.?(arg_1918, arg_1919, arg_1920);
}
pub inline fn glDepthRangeArrayv(arg_1921: GLuint, arg_1922: GLsizei, arg_1923: [*c]const GLdouble) void {
    return epoxy_glDepthRangeArrayv.?(arg_1921, arg_1922, arg_1923);
}
pub inline fn glDepthRangeIndexed(arg_1924: GLuint, arg_1925: GLdouble, arg_1926: GLdouble) void {
    return epoxy_glDepthRangeIndexed.?(arg_1924, arg_1925, arg_1926);
}
pub inline fn glDepthRangeIndexedfNV(arg_1927: GLuint, arg_1928: GLfloat, arg_1929: GLfloat) void {
    return epoxy_glDepthRangeIndexedfNV.?(arg_1927, arg_1928, arg_1929);
}
pub inline fn glDepthRangeIndexedfOES(arg_1930: GLuint, arg_1931: GLfloat, arg_1932: GLfloat) void {
    return epoxy_glDepthRangeIndexedfOES.?(arg_1930, arg_1931, arg_1932);
}
pub inline fn glDepthRangedNV(arg_1933: GLdouble, arg_1934: GLdouble) void {
    return epoxy_glDepthRangedNV.?(arg_1933, arg_1934);
}
pub inline fn glDepthRangef(arg_1935: GLfloat, arg_1936: GLfloat) void {
    return epoxy_glDepthRangef.?(arg_1935, arg_1936);
}
pub inline fn glDepthRangefOES(arg_1937: GLclampf, arg_1938: GLclampf) void {
    return epoxy_glDepthRangefOES.?(arg_1937, arg_1938);
}
pub inline fn glDepthRangex(arg_1939: GLfixed, arg_1940: GLfixed) void {
    return epoxy_glDepthRangex.?(arg_1939, arg_1940);
}
pub inline fn glDepthRangexOES(arg_1941: GLfixed, arg_1942: GLfixed) void {
    return epoxy_glDepthRangexOES.?(arg_1941, arg_1942);
}
pub inline fn glDetachObjectARB(arg_1943: GLhandleARB, arg_1944: GLhandleARB) void {
    return epoxy_glDetachObjectARB.?(arg_1943, arg_1944);
}
pub inline fn glDetachShader(arg_1945: GLuint, arg_1946: GLuint) void {
    return epoxy_glDetachShader.?(arg_1945, arg_1946);
}
pub inline fn glDetailTexFuncSGIS(arg_1947: GLenum, arg_1948: GLsizei, arg_1949: [*c]const GLfloat) void {
    return epoxy_glDetailTexFuncSGIS.?(arg_1947, arg_1948, arg_1949);
}
pub inline fn glDisable(arg_1950: GLenum) void {
    return epoxy_glDisable.?(arg_1950);
}
pub inline fn glDisableClientState(arg_1951: GLenum) void {
    return epoxy_glDisableClientState.?(arg_1951);
}
pub inline fn glDisableClientStateIndexedEXT(arg_1952: GLenum, arg_1953: GLuint) void {
    return epoxy_glDisableClientStateIndexedEXT.?(arg_1952, arg_1953);
}
pub inline fn glDisableClientStateiEXT(arg_1954: GLenum, arg_1955: GLuint) void {
    return epoxy_glDisableClientStateiEXT.?(arg_1954, arg_1955);
}
pub inline fn glDisableDriverControlQCOM(arg_1956: GLuint) void {
    return epoxy_glDisableDriverControlQCOM.?(arg_1956);
}
pub inline fn glDisableIndexedEXT(arg_1957: GLenum, arg_1958: GLuint) void {
    return epoxy_glDisableIndexedEXT.?(arg_1957, arg_1958);
}
pub inline fn glDisableVariantClientStateEXT(arg_1959: GLuint) void {
    return epoxy_glDisableVariantClientStateEXT.?(arg_1959);
}
pub inline fn glDisableVertexArrayAttrib(arg_1960: GLuint, arg_1961: GLuint) void {
    return epoxy_glDisableVertexArrayAttrib.?(arg_1960, arg_1961);
}
pub inline fn glDisableVertexArrayAttribEXT(arg_1962: GLuint, arg_1963: GLuint) void {
    return epoxy_glDisableVertexArrayAttribEXT.?(arg_1962, arg_1963);
}
pub inline fn glDisableVertexArrayEXT(arg_1964: GLuint, arg_1965: GLenum) void {
    return epoxy_glDisableVertexArrayEXT.?(arg_1964, arg_1965);
}
pub inline fn glDisableVertexAttribAPPLE(arg_1966: GLuint, arg_1967: GLenum) void {
    return epoxy_glDisableVertexAttribAPPLE.?(arg_1966, arg_1967);
}
pub inline fn glDisableVertexAttribArray(arg_1968: GLuint) void {
    return epoxy_glDisableVertexAttribArray.?(arg_1968);
}
pub inline fn glDisableVertexAttribArrayARB(arg_1969: GLuint) void {
    return epoxy_glDisableVertexAttribArrayARB.?(arg_1969);
}
pub inline fn glDisablei(arg_1970: GLenum, arg_1971: GLuint) void {
    return epoxy_glDisablei.?(arg_1970, arg_1971);
}
pub inline fn glDisableiEXT(arg_1972: GLenum, arg_1973: GLuint) void {
    return epoxy_glDisableiEXT.?(arg_1972, arg_1973);
}
pub inline fn glDisableiNV(arg_1974: GLenum, arg_1975: GLuint) void {
    return epoxy_glDisableiNV.?(arg_1974, arg_1975);
}
pub inline fn glDisableiOES(arg_1976: GLenum, arg_1977: GLuint) void {
    return epoxy_glDisableiOES.?(arg_1976, arg_1977);
}
pub inline fn glDiscardFramebufferEXT(arg_1978: GLenum, arg_1979: GLsizei, arg_1980: [*c]const GLenum) void {
    return epoxy_glDiscardFramebufferEXT.?(arg_1978, arg_1979, arg_1980);
}
pub inline fn glDispatchCompute(arg_1981: GLuint, arg_1982: GLuint, arg_1983: GLuint) void {
    return epoxy_glDispatchCompute.?(arg_1981, arg_1982, arg_1983);
}
pub inline fn glDispatchComputeGroupSizeARB(arg_1984: GLuint, arg_1985: GLuint, arg_1986: GLuint, arg_1987: GLuint, arg_1988: GLuint, arg_1989: GLuint) void {
    return epoxy_glDispatchComputeGroupSizeARB.?(arg_1984, arg_1985, arg_1986, arg_1987, arg_1988, arg_1989);
}
pub inline fn glDispatchComputeIndirect(arg_1990: GLintptr) void {
    return epoxy_glDispatchComputeIndirect.?(arg_1990);
}
pub inline fn glDrawArrays(arg_1991: GLenum, arg_1992: GLint, arg_1993: GLsizei) void {
    return epoxy_glDrawArrays.?(arg_1991, arg_1992, arg_1993);
}
pub inline fn glDrawArraysEXT(arg_1994: GLenum, arg_1995: GLint, arg_1996: GLsizei) void {
    return epoxy_glDrawArraysEXT.?(arg_1994, arg_1995, arg_1996);
}
pub inline fn glDrawArraysIndirect(arg_1997: GLenum, arg_1998: ?*const anyopaque) void {
    return epoxy_glDrawArraysIndirect.?(arg_1997, arg_1998);
}
pub inline fn glDrawArraysInstanced(arg_1999: GLenum, arg_2000: GLint, arg_2001: GLsizei, arg_2002: GLsizei) void {
    return epoxy_glDrawArraysInstanced.?(arg_1999, arg_2000, arg_2001, arg_2002);
}
pub inline fn glDrawArraysInstancedANGLE(arg_2003: GLenum, arg_2004: GLint, arg_2005: GLsizei, arg_2006: GLsizei) void {
    return epoxy_glDrawArraysInstancedANGLE.?(arg_2003, arg_2004, arg_2005, arg_2006);
}
pub inline fn glDrawArraysInstancedARB(arg_2007: GLenum, arg_2008: GLint, arg_2009: GLsizei, arg_2010: GLsizei) void {
    return epoxy_glDrawArraysInstancedARB.?(arg_2007, arg_2008, arg_2009, arg_2010);
}
pub inline fn glDrawArraysInstancedBaseInstance(arg_2011: GLenum, arg_2012: GLint, arg_2013: GLsizei, arg_2014: GLsizei, arg_2015: GLuint) void {
    return epoxy_glDrawArraysInstancedBaseInstance.?(arg_2011, arg_2012, arg_2013, arg_2014, arg_2015);
}
pub inline fn glDrawArraysInstancedBaseInstanceEXT(arg_2016: GLenum, arg_2017: GLint, arg_2018: GLsizei, arg_2019: GLsizei, arg_2020: GLuint) void {
    return epoxy_glDrawArraysInstancedBaseInstanceEXT.?(arg_2016, arg_2017, arg_2018, arg_2019, arg_2020);
}
pub inline fn glDrawArraysInstancedEXT(arg_2021: GLenum, arg_2022: GLint, arg_2023: GLsizei, arg_2024: GLsizei) void {
    return epoxy_glDrawArraysInstancedEXT.?(arg_2021, arg_2022, arg_2023, arg_2024);
}
pub inline fn glDrawArraysInstancedNV(arg_2025: GLenum, arg_2026: GLint, arg_2027: GLsizei, arg_2028: GLsizei) void {
    return epoxy_glDrawArraysInstancedNV.?(arg_2025, arg_2026, arg_2027, arg_2028);
}
pub inline fn glDrawBuffer(arg_2029: GLenum) void {
    return epoxy_glDrawBuffer.?(arg_2029);
}
pub inline fn glDrawBuffers(arg_2030: GLsizei, arg_2031: [*c]const GLenum) void {
    return epoxy_glDrawBuffers.?(arg_2030, arg_2031);
}
pub inline fn glDrawBuffersARB(arg_2032: GLsizei, arg_2033: [*c]const GLenum) void {
    return epoxy_glDrawBuffersARB.?(arg_2032, arg_2033);
}
pub inline fn glDrawBuffersATI(arg_2034: GLsizei, arg_2035: [*c]const GLenum) void {
    return epoxy_glDrawBuffersATI.?(arg_2034, arg_2035);
}
pub inline fn glDrawBuffersEXT(arg_2036: GLsizei, arg_2037: [*c]const GLenum) void {
    return epoxy_glDrawBuffersEXT.?(arg_2036, arg_2037);
}
pub inline fn glDrawBuffersIndexedEXT(arg_2038: GLint, arg_2039: [*c]const GLenum, arg_2040: [*c]const GLint) void {
    return epoxy_glDrawBuffersIndexedEXT.?(arg_2038, arg_2039, arg_2040);
}
pub inline fn glDrawBuffersNV(arg_2041: GLsizei, arg_2042: [*c]const GLenum) void {
    return epoxy_glDrawBuffersNV.?(arg_2041, arg_2042);
}
pub inline fn glDrawCommandsAddressNV(arg_2043: GLenum, arg_2044: [*c]const GLuint64, arg_2045: [*c]const GLsizei, arg_2046: GLuint) void {
    return epoxy_glDrawCommandsAddressNV.?(arg_2043, arg_2044, arg_2045, arg_2046);
}
pub inline fn glDrawCommandsNV(arg_2047: GLenum, arg_2048: GLuint, arg_2049: [*c]const GLintptr, arg_2050: [*c]const GLsizei, arg_2051: GLuint) void {
    return epoxy_glDrawCommandsNV.?(arg_2047, arg_2048, arg_2049, arg_2050, arg_2051);
}
pub inline fn glDrawCommandsStatesAddressNV(arg_2052: [*c]const GLuint64, arg_2053: [*c]const GLsizei, arg_2054: [*c]const GLuint, arg_2055: [*c]const GLuint, arg_2056: GLuint) void {
    return epoxy_glDrawCommandsStatesAddressNV.?(arg_2052, arg_2053, arg_2054, arg_2055, arg_2056);
}
pub inline fn glDrawCommandsStatesNV(arg_2057: GLuint, arg_2058: [*c]const GLintptr, arg_2059: [*c]const GLsizei, arg_2060: [*c]const GLuint, arg_2061: [*c]const GLuint, arg_2062: GLuint) void {
    return epoxy_glDrawCommandsStatesNV.?(arg_2057, arg_2058, arg_2059, arg_2060, arg_2061, arg_2062);
}
pub inline fn glDrawElementArrayAPPLE(arg_2063: GLenum, arg_2064: GLint, arg_2065: GLsizei) void {
    return epoxy_glDrawElementArrayAPPLE.?(arg_2063, arg_2064, arg_2065);
}
pub inline fn glDrawElementArrayATI(arg_2066: GLenum, arg_2067: GLsizei) void {
    return epoxy_glDrawElementArrayATI.?(arg_2066, arg_2067);
}
pub inline fn glDrawElements(arg_2068: GLenum, arg_2069: GLsizei, arg_2070: GLenum, arg_2071: ?*const anyopaque) void {
    return epoxy_glDrawElements.?(arg_2068, arg_2069, arg_2070, arg_2071);
}
pub inline fn glDrawElementsBaseVertex(arg_2072: GLenum, arg_2073: GLsizei, arg_2074: GLenum, arg_2075: ?*const anyopaque, arg_2076: GLint) void {
    return epoxy_glDrawElementsBaseVertex.?(arg_2072, arg_2073, arg_2074, arg_2075, arg_2076);
}
pub inline fn glDrawElementsBaseVertexEXT(arg_2077: GLenum, arg_2078: GLsizei, arg_2079: GLenum, arg_2080: ?*const anyopaque, arg_2081: GLint) void {
    return epoxy_glDrawElementsBaseVertexEXT.?(arg_2077, arg_2078, arg_2079, arg_2080, arg_2081);
}
pub inline fn glDrawElementsBaseVertexOES(arg_2082: GLenum, arg_2083: GLsizei, arg_2084: GLenum, arg_2085: ?*const anyopaque, arg_2086: GLint) void {
    return epoxy_glDrawElementsBaseVertexOES.?(arg_2082, arg_2083, arg_2084, arg_2085, arg_2086);
}
pub inline fn glDrawElementsIndirect(arg_2087: GLenum, arg_2088: GLenum, arg_2089: ?*const anyopaque) void {
    return epoxy_glDrawElementsIndirect.?(arg_2087, arg_2088, arg_2089);
}
pub inline fn glDrawElementsInstanced(arg_2090: GLenum, arg_2091: GLsizei, arg_2092: GLenum, arg_2093: ?*const anyopaque, arg_2094: GLsizei) void {
    return epoxy_glDrawElementsInstanced.?(arg_2090, arg_2091, arg_2092, arg_2093, arg_2094);
}
pub inline fn glDrawElementsInstancedANGLE(arg_2095: GLenum, arg_2096: GLsizei, arg_2097: GLenum, arg_2098: ?*const anyopaque, arg_2099: GLsizei) void {
    return epoxy_glDrawElementsInstancedANGLE.?(arg_2095, arg_2096, arg_2097, arg_2098, arg_2099);
}
pub inline fn glDrawElementsInstancedARB(arg_2100: GLenum, arg_2101: GLsizei, arg_2102: GLenum, arg_2103: ?*const anyopaque, arg_2104: GLsizei) void {
    return epoxy_glDrawElementsInstancedARB.?(arg_2100, arg_2101, arg_2102, arg_2103, arg_2104);
}
pub inline fn glDrawElementsInstancedBaseInstance(arg_2105: GLenum, arg_2106: GLsizei, arg_2107: GLenum, arg_2108: ?*const anyopaque, arg_2109: GLsizei, arg_2110: GLuint) void {
    return epoxy_glDrawElementsInstancedBaseInstance.?(arg_2105, arg_2106, arg_2107, arg_2108, arg_2109, arg_2110);
}
pub inline fn glDrawElementsInstancedBaseInstanceEXT(arg_2111: GLenum, arg_2112: GLsizei, arg_2113: GLenum, arg_2114: ?*const anyopaque, arg_2115: GLsizei, arg_2116: GLuint) void {
    return epoxy_glDrawElementsInstancedBaseInstanceEXT.?(arg_2111, arg_2112, arg_2113, arg_2114, arg_2115, arg_2116);
}
pub inline fn glDrawElementsInstancedBaseVertex(arg_2117: GLenum, arg_2118: GLsizei, arg_2119: GLenum, arg_2120: ?*const anyopaque, arg_2121: GLsizei, arg_2122: GLint) void {
    return epoxy_glDrawElementsInstancedBaseVertex.?(arg_2117, arg_2118, arg_2119, arg_2120, arg_2121, arg_2122);
}
pub inline fn glDrawElementsInstancedBaseVertexBaseInstance(arg_2123: GLenum, arg_2124: GLsizei, arg_2125: GLenum, arg_2126: ?*const anyopaque, arg_2127: GLsizei, arg_2128: GLint, arg_2129: GLuint) void {
    return epoxy_glDrawElementsInstancedBaseVertexBaseInstance.?(arg_2123, arg_2124, arg_2125, arg_2126, arg_2127, arg_2128, arg_2129);
}
pub inline fn glDrawElementsInstancedBaseVertexBaseInstanceEXT(arg_2130: GLenum, arg_2131: GLsizei, arg_2132: GLenum, arg_2133: ?*const anyopaque, arg_2134: GLsizei, arg_2135: GLint, arg_2136: GLuint) void {
    return epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT.?(arg_2130, arg_2131, arg_2132, arg_2133, arg_2134, arg_2135, arg_2136);
}
pub inline fn glDrawElementsInstancedBaseVertexEXT(arg_2137: GLenum, arg_2138: GLsizei, arg_2139: GLenum, arg_2140: ?*const anyopaque, arg_2141: GLsizei, arg_2142: GLint) void {
    return epoxy_glDrawElementsInstancedBaseVertexEXT.?(arg_2137, arg_2138, arg_2139, arg_2140, arg_2141, arg_2142);
}
pub inline fn glDrawElementsInstancedBaseVertexOES(arg_2143: GLenum, arg_2144: GLsizei, arg_2145: GLenum, arg_2146: ?*const anyopaque, arg_2147: GLsizei, arg_2148: GLint) void {
    return epoxy_glDrawElementsInstancedBaseVertexOES.?(arg_2143, arg_2144, arg_2145, arg_2146, arg_2147, arg_2148);
}
pub inline fn glDrawElementsInstancedEXT(arg_2149: GLenum, arg_2150: GLsizei, arg_2151: GLenum, arg_2152: ?*const anyopaque, arg_2153: GLsizei) void {
    return epoxy_glDrawElementsInstancedEXT.?(arg_2149, arg_2150, arg_2151, arg_2152, arg_2153);
}
pub inline fn glDrawElementsInstancedNV(arg_2154: GLenum, arg_2155: GLsizei, arg_2156: GLenum, arg_2157: ?*const anyopaque, arg_2158: GLsizei) void {
    return epoxy_glDrawElementsInstancedNV.?(arg_2154, arg_2155, arg_2156, arg_2157, arg_2158);
}
pub inline fn glDrawMeshArraysSUN(arg_2159: GLenum, arg_2160: GLint, arg_2161: GLsizei, arg_2162: GLsizei) void {
    return epoxy_glDrawMeshArraysSUN.?(arg_2159, arg_2160, arg_2161, arg_2162);
}
pub inline fn glDrawMeshTasksIndirectNV(arg_2163: GLintptr) void {
    return epoxy_glDrawMeshTasksIndirectNV.?(arg_2163);
}
pub inline fn glDrawMeshTasksNV(arg_2164: GLuint, arg_2165: GLuint) void {
    return epoxy_glDrawMeshTasksNV.?(arg_2164, arg_2165);
}
pub inline fn glDrawPixels(arg_2166: GLsizei, arg_2167: GLsizei, arg_2168: GLenum, arg_2169: GLenum, arg_2170: ?*const anyopaque) void {
    return epoxy_glDrawPixels.?(arg_2166, arg_2167, arg_2168, arg_2169, arg_2170);
}
pub inline fn glDrawRangeElementArrayAPPLE(arg_2171: GLenum, arg_2172: GLuint, arg_2173: GLuint, arg_2174: GLint, arg_2175: GLsizei) void {
    return epoxy_glDrawRangeElementArrayAPPLE.?(arg_2171, arg_2172, arg_2173, arg_2174, arg_2175);
}
pub inline fn glDrawRangeElementArrayATI(arg_2176: GLenum, arg_2177: GLuint, arg_2178: GLuint, arg_2179: GLsizei) void {
    return epoxy_glDrawRangeElementArrayATI.?(arg_2176, arg_2177, arg_2178, arg_2179);
}
pub inline fn glDrawRangeElements(arg_2180: GLenum, arg_2181: GLuint, arg_2182: GLuint, arg_2183: GLsizei, arg_2184: GLenum, arg_2185: ?*const anyopaque) void {
    return epoxy_glDrawRangeElements.?(arg_2180, arg_2181, arg_2182, arg_2183, arg_2184, arg_2185);
}
pub inline fn glDrawRangeElementsBaseVertex(arg_2186: GLenum, arg_2187: GLuint, arg_2188: GLuint, arg_2189: GLsizei, arg_2190: GLenum, arg_2191: ?*const anyopaque, arg_2192: GLint) void {
    return epoxy_glDrawRangeElementsBaseVertex.?(arg_2186, arg_2187, arg_2188, arg_2189, arg_2190, arg_2191, arg_2192);
}
pub inline fn glDrawRangeElementsBaseVertexEXT(arg_2193: GLenum, arg_2194: GLuint, arg_2195: GLuint, arg_2196: GLsizei, arg_2197: GLenum, arg_2198: ?*const anyopaque, arg_2199: GLint) void {
    return epoxy_glDrawRangeElementsBaseVertexEXT.?(arg_2193, arg_2194, arg_2195, arg_2196, arg_2197, arg_2198, arg_2199);
}
pub inline fn glDrawRangeElementsBaseVertexOES(arg_2200: GLenum, arg_2201: GLuint, arg_2202: GLuint, arg_2203: GLsizei, arg_2204: GLenum, arg_2205: ?*const anyopaque, arg_2206: GLint) void {
    return epoxy_glDrawRangeElementsBaseVertexOES.?(arg_2200, arg_2201, arg_2202, arg_2203, arg_2204, arg_2205, arg_2206);
}
pub inline fn glDrawRangeElementsEXT(arg_2207: GLenum, arg_2208: GLuint, arg_2209: GLuint, arg_2210: GLsizei, arg_2211: GLenum, arg_2212: ?*const anyopaque) void {
    return epoxy_glDrawRangeElementsEXT.?(arg_2207, arg_2208, arg_2209, arg_2210, arg_2211, arg_2212);
}
pub inline fn glDrawTexfOES(arg_2213: GLfloat, arg_2214: GLfloat, arg_2215: GLfloat, arg_2216: GLfloat, arg_2217: GLfloat) void {
    return epoxy_glDrawTexfOES.?(arg_2213, arg_2214, arg_2215, arg_2216, arg_2217);
}
pub inline fn glDrawTexfvOES(arg_2218: [*c]const GLfloat) void {
    return epoxy_glDrawTexfvOES.?(arg_2218);
}
pub inline fn glDrawTexiOES(arg_2219: GLint, arg_2220: GLint, arg_2221: GLint, arg_2222: GLint, arg_2223: GLint) void {
    return epoxy_glDrawTexiOES.?(arg_2219, arg_2220, arg_2221, arg_2222, arg_2223);
}
pub inline fn glDrawTexivOES(arg_2224: [*c]const GLint) void {
    return epoxy_glDrawTexivOES.?(arg_2224);
}
pub inline fn glDrawTexsOES(arg_2225: GLshort, arg_2226: GLshort, arg_2227: GLshort, arg_2228: GLshort, arg_2229: GLshort) void {
    return epoxy_glDrawTexsOES.?(arg_2225, arg_2226, arg_2227, arg_2228, arg_2229);
}
pub inline fn glDrawTexsvOES(arg_2230: [*c]const GLshort) void {
    return epoxy_glDrawTexsvOES.?(arg_2230);
}
pub inline fn glDrawTextureNV(arg_2231: GLuint, arg_2232: GLuint, arg_2233: GLfloat, arg_2234: GLfloat, arg_2235: GLfloat, arg_2236: GLfloat, arg_2237: GLfloat, arg_2238: GLfloat, arg_2239: GLfloat, arg_2240: GLfloat, arg_2241: GLfloat) void {
    return epoxy_glDrawTextureNV.?(arg_2231, arg_2232, arg_2233, arg_2234, arg_2235, arg_2236, arg_2237, arg_2238, arg_2239, arg_2240, arg_2241);
}
pub inline fn glDrawTexxOES(arg_2242: GLfixed, arg_2243: GLfixed, arg_2244: GLfixed, arg_2245: GLfixed, arg_2246: GLfixed) void {
    return epoxy_glDrawTexxOES.?(arg_2242, arg_2243, arg_2244, arg_2245, arg_2246);
}
pub inline fn glDrawTexxvOES(arg_2247: [*c]const GLfixed) void {
    return epoxy_glDrawTexxvOES.?(arg_2247);
}
pub inline fn glDrawTransformFeedback(arg_2248: GLenum, arg_2249: GLuint) void {
    return epoxy_glDrawTransformFeedback.?(arg_2248, arg_2249);
}
pub inline fn glDrawTransformFeedbackEXT(arg_2250: GLenum, arg_2251: GLuint) void {
    return epoxy_glDrawTransformFeedbackEXT.?(arg_2250, arg_2251);
}
pub inline fn glDrawTransformFeedbackInstanced(arg_2252: GLenum, arg_2253: GLuint, arg_2254: GLsizei) void {
    return epoxy_glDrawTransformFeedbackInstanced.?(arg_2252, arg_2253, arg_2254);
}
pub inline fn glDrawTransformFeedbackInstancedEXT(arg_2255: GLenum, arg_2256: GLuint, arg_2257: GLsizei) void {
    return epoxy_glDrawTransformFeedbackInstancedEXT.?(arg_2255, arg_2256, arg_2257);
}
pub inline fn glDrawTransformFeedbackNV(arg_2258: GLenum, arg_2259: GLuint) void {
    return epoxy_glDrawTransformFeedbackNV.?(arg_2258, arg_2259);
}
pub inline fn glDrawTransformFeedbackStream(arg_2260: GLenum, arg_2261: GLuint, arg_2262: GLuint) void {
    return epoxy_glDrawTransformFeedbackStream.?(arg_2260, arg_2261, arg_2262);
}
pub inline fn glDrawTransformFeedbackStreamInstanced(arg_2263: GLenum, arg_2264: GLuint, arg_2265: GLuint, arg_2266: GLsizei) void {
    return epoxy_glDrawTransformFeedbackStreamInstanced.?(arg_2263, arg_2264, arg_2265, arg_2266);
}
pub inline fn glDrawVkImageNV(arg_2267: GLuint64, arg_2268: GLuint, arg_2269: GLfloat, arg_2270: GLfloat, arg_2271: GLfloat, arg_2272: GLfloat, arg_2273: GLfloat, arg_2274: GLfloat, arg_2275: GLfloat, arg_2276: GLfloat, arg_2277: GLfloat) void {
    return epoxy_glDrawVkImageNV.?(arg_2267, arg_2268, arg_2269, arg_2270, arg_2271, arg_2272, arg_2273, arg_2274, arg_2275, arg_2276, arg_2277);
}
pub inline fn glEGLImageTargetRenderbufferStorageOES(arg_2278: GLenum, arg_2279: GLeglImageOES) void {
    return epoxy_glEGLImageTargetRenderbufferStorageOES.?(arg_2278, arg_2279);
}
pub inline fn glEGLImageTargetTexStorageEXT(arg_2280: GLenum, arg_2281: GLeglImageOES, arg_2282: [*c]const GLint) void {
    return epoxy_glEGLImageTargetTexStorageEXT.?(arg_2280, arg_2281, arg_2282);
}
pub inline fn glEGLImageTargetTexture2DOES(arg_2283: GLenum, arg_2284: GLeglImageOES) void {
    return epoxy_glEGLImageTargetTexture2DOES.?(arg_2283, arg_2284);
}
pub inline fn glEGLImageTargetTextureStorageEXT(arg_2285: GLuint, arg_2286: GLeglImageOES, arg_2287: [*c]const GLint) void {
    return epoxy_glEGLImageTargetTextureStorageEXT.?(arg_2285, arg_2286, arg_2287);
}
pub inline fn glEdgeFlag(arg_2288: GLboolean) void {
    return epoxy_glEdgeFlag.?(arg_2288);
}
pub inline fn glEdgeFlagFormatNV(arg_2289: GLsizei) void {
    return epoxy_glEdgeFlagFormatNV.?(arg_2289);
}
pub inline fn glEdgeFlagPointer(arg_2290: GLsizei, arg_2291: ?*const anyopaque) void {
    return epoxy_glEdgeFlagPointer.?(arg_2290, arg_2291);
}
pub inline fn glEdgeFlagPointerEXT(arg_2292: GLsizei, arg_2293: GLsizei, arg_2294: [*c]const GLboolean) void {
    return epoxy_glEdgeFlagPointerEXT.?(arg_2292, arg_2293, arg_2294);
}
pub inline fn glEdgeFlagPointerListIBM(arg_2295: GLint, arg_2296: [*c][*c]const GLboolean, arg_2297: GLint) void {
    return epoxy_glEdgeFlagPointerListIBM.?(arg_2295, arg_2296, arg_2297);
}
pub inline fn glEdgeFlagv(arg_2298: [*c]const GLboolean) void {
    return epoxy_glEdgeFlagv.?(arg_2298);
}
pub inline fn glElementPointerAPPLE(arg_2299: GLenum, arg_2300: ?*const anyopaque) void {
    return epoxy_glElementPointerAPPLE.?(arg_2299, arg_2300);
}
pub inline fn glElementPointerATI(arg_2301: GLenum, arg_2302: ?*const anyopaque) void {
    return epoxy_glElementPointerATI.?(arg_2301, arg_2302);
}
pub inline fn glEnable(arg_2303: GLenum) void {
    return epoxy_glEnable.?(arg_2303);
}
pub inline fn glEnableClientState(arg_2304: GLenum) void {
    return epoxy_glEnableClientState.?(arg_2304);
}
pub inline fn glEnableClientStateIndexedEXT(arg_2305: GLenum, arg_2306: GLuint) void {
    return epoxy_glEnableClientStateIndexedEXT.?(arg_2305, arg_2306);
}
pub inline fn glEnableClientStateiEXT(arg_2307: GLenum, arg_2308: GLuint) void {
    return epoxy_glEnableClientStateiEXT.?(arg_2307, arg_2308);
}
pub inline fn glEnableDriverControlQCOM(arg_2309: GLuint) void {
    return epoxy_glEnableDriverControlQCOM.?(arg_2309);
}
pub inline fn glEnableIndexedEXT(arg_2310: GLenum, arg_2311: GLuint) void {
    return epoxy_glEnableIndexedEXT.?(arg_2310, arg_2311);
}
pub inline fn glEnableVariantClientStateEXT(arg_2312: GLuint) void {
    return epoxy_glEnableVariantClientStateEXT.?(arg_2312);
}
pub inline fn glEnableVertexArrayAttrib(arg_2313: GLuint, arg_2314: GLuint) void {
    return epoxy_glEnableVertexArrayAttrib.?(arg_2313, arg_2314);
}
pub inline fn glEnableVertexArrayAttribEXT(arg_2315: GLuint, arg_2316: GLuint) void {
    return epoxy_glEnableVertexArrayAttribEXT.?(arg_2315, arg_2316);
}
pub inline fn glEnableVertexArrayEXT(arg_2317: GLuint, arg_2318: GLenum) void {
    return epoxy_glEnableVertexArrayEXT.?(arg_2317, arg_2318);
}
pub inline fn glEnableVertexAttribAPPLE(arg_2319: GLuint, arg_2320: GLenum) void {
    return epoxy_glEnableVertexAttribAPPLE.?(arg_2319, arg_2320);
}
pub inline fn glEnableVertexAttribArray(arg_2321: GLuint) void {
    return epoxy_glEnableVertexAttribArray.?(arg_2321);
}
pub inline fn glEnableVertexAttribArrayARB(arg_2322: GLuint) void {
    return epoxy_glEnableVertexAttribArrayARB.?(arg_2322);
}
pub inline fn glEnablei(arg_2323: GLenum, arg_2324: GLuint) void {
    return epoxy_glEnablei.?(arg_2323, arg_2324);
}
pub inline fn glEnableiEXT(arg_2325: GLenum, arg_2326: GLuint) void {
    return epoxy_glEnableiEXT.?(arg_2325, arg_2326);
}
pub inline fn glEnableiNV(arg_2327: GLenum, arg_2328: GLuint) void {
    return epoxy_glEnableiNV.?(arg_2327, arg_2328);
}
pub inline fn glEnableiOES(arg_2329: GLenum, arg_2330: GLuint) void {
    return epoxy_glEnableiOES.?(arg_2329, arg_2330);
}
pub inline fn glEnd() void {
    return epoxy_glEnd.?();
}
pub inline fn glEndConditionalRender() void {
    return epoxy_glEndConditionalRender.?();
}
pub inline fn glEndConditionalRenderNV() void {
    return epoxy_glEndConditionalRenderNV.?();
}
pub inline fn glEndConditionalRenderNVX() void {
    return epoxy_glEndConditionalRenderNVX.?();
}
pub inline fn glEndFragmentShaderATI() void {
    return epoxy_glEndFragmentShaderATI.?();
}
pub inline fn glEndList() void {
    return epoxy_glEndList.?();
}
pub inline fn glEndOcclusionQueryNV() void {
    return epoxy_glEndOcclusionQueryNV.?();
}
pub inline fn glEndPerfMonitorAMD(arg_2331: GLuint) void {
    return epoxy_glEndPerfMonitorAMD.?(arg_2331);
}
pub inline fn glEndPerfQueryINTEL(arg_2332: GLuint) void {
    return epoxy_glEndPerfQueryINTEL.?(arg_2332);
}
pub inline fn glEndQuery(arg_2333: GLenum) void {
    return epoxy_glEndQuery.?(arg_2333);
}
pub inline fn glEndQueryARB(arg_2334: GLenum) void {
    return epoxy_glEndQueryARB.?(arg_2334);
}
pub inline fn glEndQueryEXT(arg_2335: GLenum) void {
    return epoxy_glEndQueryEXT.?(arg_2335);
}
pub inline fn glEndQueryIndexed(arg_2336: GLenum, arg_2337: GLuint) void {
    return epoxy_glEndQueryIndexed.?(arg_2336, arg_2337);
}
pub inline fn glEndTilingQCOM(arg_2338: GLbitfield) void {
    return epoxy_glEndTilingQCOM.?(arg_2338);
}
pub inline fn glEndTransformFeedback() void {
    return epoxy_glEndTransformFeedback.?();
}
pub inline fn glEndTransformFeedbackEXT() void {
    return epoxy_glEndTransformFeedbackEXT.?();
}
pub inline fn glEndTransformFeedbackNV() void {
    return epoxy_glEndTransformFeedbackNV.?();
}
pub inline fn glEndVertexShaderEXT() void {
    return epoxy_glEndVertexShaderEXT.?();
}
pub inline fn glEndVideoCaptureNV(arg_2339: GLuint) void {
    return epoxy_glEndVideoCaptureNV.?(arg_2339);
}
pub inline fn glEvalCoord1d(arg_2340: GLdouble) void {
    return epoxy_glEvalCoord1d.?(arg_2340);
}
pub inline fn glEvalCoord1dv(arg_2341: [*c]const GLdouble) void {
    return epoxy_glEvalCoord1dv.?(arg_2341);
}
pub inline fn glEvalCoord1f(arg_2342: GLfloat) void {
    return epoxy_glEvalCoord1f.?(arg_2342);
}
pub inline fn glEvalCoord1fv(arg_2343: [*c]const GLfloat) void {
    return epoxy_glEvalCoord1fv.?(arg_2343);
}
pub inline fn glEvalCoord1xOES(arg_2344: GLfixed) void {
    return epoxy_glEvalCoord1xOES.?(arg_2344);
}
pub inline fn glEvalCoord1xvOES(arg_2345: [*c]const GLfixed) void {
    return epoxy_glEvalCoord1xvOES.?(arg_2345);
}
pub inline fn glEvalCoord2d(arg_2346: GLdouble, arg_2347: GLdouble) void {
    return epoxy_glEvalCoord2d.?(arg_2346, arg_2347);
}
pub inline fn glEvalCoord2dv(arg_2348: [*c]const GLdouble) void {
    return epoxy_glEvalCoord2dv.?(arg_2348);
}
pub inline fn glEvalCoord2f(arg_2349: GLfloat, arg_2350: GLfloat) void {
    return epoxy_glEvalCoord2f.?(arg_2349, arg_2350);
}
pub inline fn glEvalCoord2fv(arg_2351: [*c]const GLfloat) void {
    return epoxy_glEvalCoord2fv.?(arg_2351);
}
pub inline fn glEvalCoord2xOES(arg_2352: GLfixed, arg_2353: GLfixed) void {
    return epoxy_glEvalCoord2xOES.?(arg_2352, arg_2353);
}
pub inline fn glEvalCoord2xvOES(arg_2354: [*c]const GLfixed) void {
    return epoxy_glEvalCoord2xvOES.?(arg_2354);
}
pub inline fn glEvalMapsNV(arg_2355: GLenum, arg_2356: GLenum) void {
    return epoxy_glEvalMapsNV.?(arg_2355, arg_2356);
}
pub inline fn glEvalMesh1(arg_2357: GLenum, arg_2358: GLint, arg_2359: GLint) void {
    return epoxy_glEvalMesh1.?(arg_2357, arg_2358, arg_2359);
}
pub inline fn glEvalMesh2(arg_2360: GLenum, arg_2361: GLint, arg_2362: GLint, arg_2363: GLint, arg_2364: GLint) void {
    return epoxy_glEvalMesh2.?(arg_2360, arg_2361, arg_2362, arg_2363, arg_2364);
}
pub inline fn glEvalPoint1(arg_2365: GLint) void {
    return epoxy_glEvalPoint1.?(arg_2365);
}
pub inline fn glEvalPoint2(arg_2366: GLint, arg_2367: GLint) void {
    return epoxy_glEvalPoint2.?(arg_2366, arg_2367);
}
pub inline fn glEvaluateDepthValuesARB() void {
    return epoxy_glEvaluateDepthValuesARB.?();
}
pub inline fn glExecuteProgramNV(arg_2368: GLenum, arg_2369: GLuint, arg_2370: [*c]const GLfloat) void {
    return epoxy_glExecuteProgramNV.?(arg_2368, arg_2369, arg_2370);
}
pub inline fn glExtGetBufferPointervQCOM(arg_2371: GLenum, arg_2372: [*c]?*anyopaque) void {
    return epoxy_glExtGetBufferPointervQCOM.?(arg_2371, arg_2372);
}
pub inline fn glExtGetBuffersQCOM(arg_2373: [*c]GLuint, arg_2374: GLint, arg_2375: [*c]GLint) void {
    return epoxy_glExtGetBuffersQCOM.?(arg_2373, arg_2374, arg_2375);
}
pub inline fn glExtGetFramebuffersQCOM(arg_2376: [*c]GLuint, arg_2377: GLint, arg_2378: [*c]GLint) void {
    return epoxy_glExtGetFramebuffersQCOM.?(arg_2376, arg_2377, arg_2378);
}
pub inline fn glExtGetProgramBinarySourceQCOM(arg_2379: GLuint, arg_2380: GLenum, arg_2381: [*c]GLchar, arg_2382: [*c]GLint) void {
    return epoxy_glExtGetProgramBinarySourceQCOM.?(arg_2379, arg_2380, arg_2381, arg_2382);
}
pub inline fn glExtGetProgramsQCOM(arg_2383: [*c]GLuint, arg_2384: GLint, arg_2385: [*c]GLint) void {
    return epoxy_glExtGetProgramsQCOM.?(arg_2383, arg_2384, arg_2385);
}
pub inline fn glExtGetRenderbuffersQCOM(arg_2386: [*c]GLuint, arg_2387: GLint, arg_2388: [*c]GLint) void {
    return epoxy_glExtGetRenderbuffersQCOM.?(arg_2386, arg_2387, arg_2388);
}
pub inline fn glExtGetShadersQCOM(arg_2389: [*c]GLuint, arg_2390: GLint, arg_2391: [*c]GLint) void {
    return epoxy_glExtGetShadersQCOM.?(arg_2389, arg_2390, arg_2391);
}
pub inline fn glExtGetTexLevelParameterivQCOM(arg_2392: GLuint, arg_2393: GLenum, arg_2394: GLint, arg_2395: GLenum, arg_2396: [*c]GLint) void {
    return epoxy_glExtGetTexLevelParameterivQCOM.?(arg_2392, arg_2393, arg_2394, arg_2395, arg_2396);
}
pub inline fn glExtGetTexSubImageQCOM(arg_2397: GLenum, arg_2398: GLint, arg_2399: GLint, arg_2400: GLint, arg_2401: GLint, arg_2402: GLsizei, arg_2403: GLsizei, arg_2404: GLsizei, arg_2405: GLenum, arg_2406: GLenum, arg_2407: ?*anyopaque) void {
    return epoxy_glExtGetTexSubImageQCOM.?(arg_2397, arg_2398, arg_2399, arg_2400, arg_2401, arg_2402, arg_2403, arg_2404, arg_2405, arg_2406, arg_2407);
}
pub inline fn glExtGetTexturesQCOM(arg_2408: [*c]GLuint, arg_2409: GLint, arg_2410: [*c]GLint) void {
    return epoxy_glExtGetTexturesQCOM.?(arg_2408, arg_2409, arg_2410);
}
pub inline fn glExtIsProgramBinaryQCOM(arg_2411: GLuint) GLboolean {
    return epoxy_glExtIsProgramBinaryQCOM.?(arg_2411);
}
pub inline fn glExtTexObjectStateOverrideiQCOM(arg_2412: GLenum, arg_2413: GLenum, arg_2414: GLint) void {
    return epoxy_glExtTexObjectStateOverrideiQCOM.?(arg_2412, arg_2413, arg_2414);
}
pub inline fn glExtractComponentEXT(arg_2415: GLuint, arg_2416: GLuint, arg_2417: GLuint) void {
    return epoxy_glExtractComponentEXT.?(arg_2415, arg_2416, arg_2417);
}
pub inline fn glFeedbackBuffer(arg_2418: GLsizei, arg_2419: GLenum, arg_2420: [*c]GLfloat) void {
    return epoxy_glFeedbackBuffer.?(arg_2418, arg_2419, arg_2420);
}
pub inline fn glFeedbackBufferxOES(arg_2421: GLsizei, arg_2422: GLenum, arg_2423: [*c]const GLfixed) void {
    return epoxy_glFeedbackBufferxOES.?(arg_2421, arg_2422, arg_2423);
}
pub inline fn glFenceSync(arg_2424: GLenum, arg_2425: GLbitfield) GLsync {
    return epoxy_glFenceSync.?(arg_2424, arg_2425);
}
pub inline fn glFenceSyncAPPLE(arg_2426: GLenum, arg_2427: GLbitfield) GLsync {
    return epoxy_glFenceSyncAPPLE.?(arg_2426, arg_2427);
}
pub inline fn glFinalCombinerInputNV(arg_2428: GLenum, arg_2429: GLenum, arg_2430: GLenum, arg_2431: GLenum) void {
    return epoxy_glFinalCombinerInputNV.?(arg_2428, arg_2429, arg_2430, arg_2431);
}
pub inline fn glFinish() void {
    return epoxy_glFinish.?();
}
pub inline fn glFinishAsyncSGIX(arg_2432: [*c]GLuint) GLint {
    return epoxy_glFinishAsyncSGIX.?(arg_2432);
}
pub inline fn glFinishFenceAPPLE(arg_2433: GLuint) void {
    return epoxy_glFinishFenceAPPLE.?(arg_2433);
}
pub inline fn glFinishFenceNV(arg_2434: GLuint) void {
    return epoxy_glFinishFenceNV.?(arg_2434);
}
pub inline fn glFinishObjectAPPLE(arg_2435: GLenum, arg_2436: GLint) void {
    return epoxy_glFinishObjectAPPLE.?(arg_2435, arg_2436);
}
pub inline fn glFinishTextureSUNX() void {
    return epoxy_glFinishTextureSUNX.?();
}
pub inline fn glFlush() void {
    return epoxy_glFlush.?();
}
pub inline fn glFlushMappedBufferRange(arg_2437: GLenum, arg_2438: GLintptr, arg_2439: GLsizeiptr) void {
    return epoxy_glFlushMappedBufferRange.?(arg_2437, arg_2438, arg_2439);
}
pub inline fn glFlushMappedBufferRangeAPPLE(arg_2440: GLenum, arg_2441: GLintptr, arg_2442: GLsizeiptr) void {
    return epoxy_glFlushMappedBufferRangeAPPLE.?(arg_2440, arg_2441, arg_2442);
}
pub inline fn glFlushMappedBufferRangeEXT(arg_2443: GLenum, arg_2444: GLintptr, arg_2445: GLsizeiptr) void {
    return epoxy_glFlushMappedBufferRangeEXT.?(arg_2443, arg_2444, arg_2445);
}
pub inline fn glFlushMappedNamedBufferRange(arg_2446: GLuint, arg_2447: GLintptr, arg_2448: GLsizeiptr) void {
    return epoxy_glFlushMappedNamedBufferRange.?(arg_2446, arg_2447, arg_2448);
}
pub inline fn glFlushMappedNamedBufferRangeEXT(arg_2449: GLuint, arg_2450: GLintptr, arg_2451: GLsizeiptr) void {
    return epoxy_glFlushMappedNamedBufferRangeEXT.?(arg_2449, arg_2450, arg_2451);
}
pub inline fn glFlushPixelDataRangeNV(arg_2452: GLenum) void {
    return epoxy_glFlushPixelDataRangeNV.?(arg_2452);
}
pub inline fn glFlushRasterSGIX() void {
    return epoxy_glFlushRasterSGIX.?();
}
pub inline fn glFlushStaticDataIBM(arg_2453: GLenum) void {
    return epoxy_glFlushStaticDataIBM.?(arg_2453);
}
pub inline fn glFlushVertexArrayRangeAPPLE(arg_2454: GLsizei, arg_2455: ?*anyopaque) void {
    return epoxy_glFlushVertexArrayRangeAPPLE.?(arg_2454, arg_2455);
}
pub inline fn glFlushVertexArrayRangeNV() void {
    return epoxy_glFlushVertexArrayRangeNV.?();
}
pub inline fn glFogCoordFormatNV(arg_2456: GLenum, arg_2457: GLsizei) void {
    return epoxy_glFogCoordFormatNV.?(arg_2456, arg_2457);
}
pub inline fn glFogCoordPointer(arg_2458: GLenum, arg_2459: GLsizei, arg_2460: ?*const anyopaque) void {
    return epoxy_glFogCoordPointer.?(arg_2458, arg_2459, arg_2460);
}
pub inline fn glFogCoordPointerEXT(arg_2461: GLenum, arg_2462: GLsizei, arg_2463: ?*const anyopaque) void {
    return epoxy_glFogCoordPointerEXT.?(arg_2461, arg_2462, arg_2463);
}
pub inline fn glFogCoordPointerListIBM(arg_2464: GLenum, arg_2465: GLint, arg_2466: [*c]?*const anyopaque, arg_2467: GLint) void {
    return epoxy_glFogCoordPointerListIBM.?(arg_2464, arg_2465, arg_2466, arg_2467);
}
pub inline fn glFogCoordd(arg_2468: GLdouble) void {
    return epoxy_glFogCoordd.?(arg_2468);
}
pub inline fn glFogCoorddEXT(arg_2469: GLdouble) void {
    return epoxy_glFogCoorddEXT.?(arg_2469);
}
pub inline fn glFogCoorddv(arg_2470: [*c]const GLdouble) void {
    return epoxy_glFogCoorddv.?(arg_2470);
}
pub inline fn glFogCoorddvEXT(arg_2471: [*c]const GLdouble) void {
    return epoxy_glFogCoorddvEXT.?(arg_2471);
}
pub inline fn glFogCoordf(arg_2472: GLfloat) void {
    return epoxy_glFogCoordf.?(arg_2472);
}
pub inline fn glFogCoordfEXT(arg_2473: GLfloat) void {
    return epoxy_glFogCoordfEXT.?(arg_2473);
}
pub inline fn glFogCoordfv(arg_2474: [*c]const GLfloat) void {
    return epoxy_glFogCoordfv.?(arg_2474);
}
pub inline fn glFogCoordfvEXT(arg_2475: [*c]const GLfloat) void {
    return epoxy_glFogCoordfvEXT.?(arg_2475);
}
pub inline fn glFogCoordhNV(arg_2476: GLhalfNV) void {
    return epoxy_glFogCoordhNV.?(arg_2476);
}
pub inline fn glFogCoordhvNV(arg_2477: [*c]const GLhalfNV) void {
    return epoxy_glFogCoordhvNV.?(arg_2477);
}
pub inline fn glFogFuncSGIS(arg_2478: GLsizei, arg_2479: [*c]const GLfloat) void {
    return epoxy_glFogFuncSGIS.?(arg_2478, arg_2479);
}
pub inline fn glFogf(arg_2480: GLenum, arg_2481: GLfloat) void {
    return epoxy_glFogf.?(arg_2480, arg_2481);
}
pub inline fn glFogfv(arg_2482: GLenum, arg_2483: [*c]const GLfloat) void {
    return epoxy_glFogfv.?(arg_2482, arg_2483);
}
pub inline fn glFogi(arg_2484: GLenum, arg_2485: GLint) void {
    return epoxy_glFogi.?(arg_2484, arg_2485);
}
pub inline fn glFogiv(arg_2486: GLenum, arg_2487: [*c]const GLint) void {
    return epoxy_glFogiv.?(arg_2486, arg_2487);
}
pub inline fn glFogx(arg_2488: GLenum, arg_2489: GLfixed) void {
    return epoxy_glFogx.?(arg_2488, arg_2489);
}
pub inline fn glFogxOES(arg_2490: GLenum, arg_2491: GLfixed) void {
    return epoxy_glFogxOES.?(arg_2490, arg_2491);
}
pub inline fn glFogxv(arg_2492: GLenum, arg_2493: [*c]const GLfixed) void {
    return epoxy_glFogxv.?(arg_2492, arg_2493);
}
pub inline fn glFogxvOES(arg_2494: GLenum, arg_2495: [*c]const GLfixed) void {
    return epoxy_glFogxvOES.?(arg_2494, arg_2495);
}
pub inline fn glFragmentColorMaterialSGIX(arg_2496: GLenum, arg_2497: GLenum) void {
    return epoxy_glFragmentColorMaterialSGIX.?(arg_2496, arg_2497);
}
pub inline fn glFragmentCoverageColorNV(arg_2498: GLuint) void {
    return epoxy_glFragmentCoverageColorNV.?(arg_2498);
}
pub inline fn glFragmentLightModelfSGIX(arg_2499: GLenum, arg_2500: GLfloat) void {
    return epoxy_glFragmentLightModelfSGIX.?(arg_2499, arg_2500);
}
pub inline fn glFragmentLightModelfvSGIX(arg_2501: GLenum, arg_2502: [*c]const GLfloat) void {
    return epoxy_glFragmentLightModelfvSGIX.?(arg_2501, arg_2502);
}
pub inline fn glFragmentLightModeliSGIX(arg_2503: GLenum, arg_2504: GLint) void {
    return epoxy_glFragmentLightModeliSGIX.?(arg_2503, arg_2504);
}
pub inline fn glFragmentLightModelivSGIX(arg_2505: GLenum, arg_2506: [*c]const GLint) void {
    return epoxy_glFragmentLightModelivSGIX.?(arg_2505, arg_2506);
}
pub inline fn glFragmentLightfSGIX(arg_2507: GLenum, arg_2508: GLenum, arg_2509: GLfloat) void {
    return epoxy_glFragmentLightfSGIX.?(arg_2507, arg_2508, arg_2509);
}
pub inline fn glFragmentLightfvSGIX(arg_2510: GLenum, arg_2511: GLenum, arg_2512: [*c]const GLfloat) void {
    return epoxy_glFragmentLightfvSGIX.?(arg_2510, arg_2511, arg_2512);
}
pub inline fn glFragmentLightiSGIX(arg_2513: GLenum, arg_2514: GLenum, arg_2515: GLint) void {
    return epoxy_glFragmentLightiSGIX.?(arg_2513, arg_2514, arg_2515);
}
pub inline fn glFragmentLightivSGIX(arg_2516: GLenum, arg_2517: GLenum, arg_2518: [*c]const GLint) void {
    return epoxy_glFragmentLightivSGIX.?(arg_2516, arg_2517, arg_2518);
}
pub inline fn glFragmentMaterialfSGIX(arg_2519: GLenum, arg_2520: GLenum, arg_2521: GLfloat) void {
    return epoxy_glFragmentMaterialfSGIX.?(arg_2519, arg_2520, arg_2521);
}
pub inline fn glFragmentMaterialfvSGIX(arg_2522: GLenum, arg_2523: GLenum, arg_2524: [*c]const GLfloat) void {
    return epoxy_glFragmentMaterialfvSGIX.?(arg_2522, arg_2523, arg_2524);
}
pub inline fn glFragmentMaterialiSGIX(arg_2525: GLenum, arg_2526: GLenum, arg_2527: GLint) void {
    return epoxy_glFragmentMaterialiSGIX.?(arg_2525, arg_2526, arg_2527);
}
pub inline fn glFragmentMaterialivSGIX(arg_2528: GLenum, arg_2529: GLenum, arg_2530: [*c]const GLint) void {
    return epoxy_glFragmentMaterialivSGIX.?(arg_2528, arg_2529, arg_2530);
}
pub inline fn glFrameTerminatorGREMEDY() void {
    return epoxy_glFrameTerminatorGREMEDY.?();
}
pub inline fn glFrameZoomSGIX(arg_2531: GLint) void {
    return epoxy_glFrameZoomSGIX.?(arg_2531);
}
pub inline fn glFramebufferDrawBufferEXT(arg_2532: GLuint, arg_2533: GLenum) void {
    return epoxy_glFramebufferDrawBufferEXT.?(arg_2532, arg_2533);
}
pub inline fn glFramebufferDrawBuffersEXT(arg_2534: GLuint, arg_2535: GLsizei, arg_2536: [*c]const GLenum) void {
    return epoxy_glFramebufferDrawBuffersEXT.?(arg_2534, arg_2535, arg_2536);
}
pub inline fn glFramebufferFetchBarrierEXT() void {
    return epoxy_glFramebufferFetchBarrierEXT.?();
}
pub inline fn glFramebufferFetchBarrierQCOM() void {
    return epoxy_glFramebufferFetchBarrierQCOM.?();
}
pub inline fn glFramebufferFoveationConfigQCOM(arg_2537: GLuint, arg_2538: GLuint, arg_2539: GLuint, arg_2540: GLuint, arg_2541: [*c]GLuint) void {
    return epoxy_glFramebufferFoveationConfigQCOM.?(arg_2537, arg_2538, arg_2539, arg_2540, arg_2541);
}
pub inline fn glFramebufferFoveationParametersQCOM(arg_2542: GLuint, arg_2543: GLuint, arg_2544: GLuint, arg_2545: GLfloat, arg_2546: GLfloat, arg_2547: GLfloat, arg_2548: GLfloat, arg_2549: GLfloat) void {
    return epoxy_glFramebufferFoveationParametersQCOM.?(arg_2542, arg_2543, arg_2544, arg_2545, arg_2546, arg_2547, arg_2548, arg_2549);
}
pub inline fn glFramebufferParameteri(arg_2550: GLenum, arg_2551: GLenum, arg_2552: GLint) void {
    return epoxy_glFramebufferParameteri.?(arg_2550, arg_2551, arg_2552);
}
pub inline fn glFramebufferParameteriMESA(arg_2553: GLenum, arg_2554: GLenum, arg_2555: GLint) void {
    return epoxy_glFramebufferParameteriMESA.?(arg_2553, arg_2554, arg_2555);
}
pub inline fn glFramebufferPixelLocalStorageSizeEXT(arg_2556: GLuint, arg_2557: GLsizei) void {
    return epoxy_glFramebufferPixelLocalStorageSizeEXT.?(arg_2556, arg_2557);
}
pub inline fn glFramebufferReadBufferEXT(arg_2558: GLuint, arg_2559: GLenum) void {
    return epoxy_glFramebufferReadBufferEXT.?(arg_2558, arg_2559);
}
pub inline fn glFramebufferRenderbuffer(arg_2560: GLenum, arg_2561: GLenum, arg_2562: GLenum, arg_2563: GLuint) void {
    return epoxy_glFramebufferRenderbuffer.?(arg_2560, arg_2561, arg_2562, arg_2563);
}
pub inline fn glFramebufferRenderbufferEXT(arg_2564: GLenum, arg_2565: GLenum, arg_2566: GLenum, arg_2567: GLuint) void {
    return epoxy_glFramebufferRenderbufferEXT.?(arg_2564, arg_2565, arg_2566, arg_2567);
}
pub inline fn glFramebufferRenderbufferOES(arg_2568: GLenum, arg_2569: GLenum, arg_2570: GLenum, arg_2571: GLuint) void {
    return epoxy_glFramebufferRenderbufferOES.?(arg_2568, arg_2569, arg_2570, arg_2571);
}
pub inline fn glFramebufferSampleLocationsfvARB(arg_2572: GLenum, arg_2573: GLuint, arg_2574: GLsizei, arg_2575: [*c]const GLfloat) void {
    return epoxy_glFramebufferSampleLocationsfvARB.?(arg_2572, arg_2573, arg_2574, arg_2575);
}
pub inline fn glFramebufferSampleLocationsfvNV(arg_2576: GLenum, arg_2577: GLuint, arg_2578: GLsizei, arg_2579: [*c]const GLfloat) void {
    return epoxy_glFramebufferSampleLocationsfvNV.?(arg_2576, arg_2577, arg_2578, arg_2579);
}
pub inline fn glFramebufferSamplePositionsfvAMD(arg_2580: GLenum, arg_2581: GLuint, arg_2582: GLuint, arg_2583: [*c]const GLfloat) void {
    return epoxy_glFramebufferSamplePositionsfvAMD.?(arg_2580, arg_2581, arg_2582, arg_2583);
}
pub inline fn glFramebufferTexture(arg_2584: GLenum, arg_2585: GLenum, arg_2586: GLuint, arg_2587: GLint) void {
    return epoxy_glFramebufferTexture.?(arg_2584, arg_2585, arg_2586, arg_2587);
}
pub inline fn glFramebufferTexture1D(arg_2588: GLenum, arg_2589: GLenum, arg_2590: GLenum, arg_2591: GLuint, arg_2592: GLint) void {
    return epoxy_glFramebufferTexture1D.?(arg_2588, arg_2589, arg_2590, arg_2591, arg_2592);
}
pub inline fn glFramebufferTexture1DEXT(arg_2593: GLenum, arg_2594: GLenum, arg_2595: GLenum, arg_2596: GLuint, arg_2597: GLint) void {
    return epoxy_glFramebufferTexture1DEXT.?(arg_2593, arg_2594, arg_2595, arg_2596, arg_2597);
}
pub inline fn glFramebufferTexture2D(arg_2598: GLenum, arg_2599: GLenum, arg_2600: GLenum, arg_2601: GLuint, arg_2602: GLint) void {
    return epoxy_glFramebufferTexture2D.?(arg_2598, arg_2599, arg_2600, arg_2601, arg_2602);
}
pub inline fn glFramebufferTexture2DDownsampleIMG(arg_2603: GLenum, arg_2604: GLenum, arg_2605: GLenum, arg_2606: GLuint, arg_2607: GLint, arg_2608: GLint, arg_2609: GLint) void {
    return epoxy_glFramebufferTexture2DDownsampleIMG.?(arg_2603, arg_2604, arg_2605, arg_2606, arg_2607, arg_2608, arg_2609);
}
pub inline fn glFramebufferTexture2DEXT(arg_2610: GLenum, arg_2611: GLenum, arg_2612: GLenum, arg_2613: GLuint, arg_2614: GLint) void {
    return epoxy_glFramebufferTexture2DEXT.?(arg_2610, arg_2611, arg_2612, arg_2613, arg_2614);
}
pub inline fn glFramebufferTexture2DMultisampleEXT(arg_2615: GLenum, arg_2616: GLenum, arg_2617: GLenum, arg_2618: GLuint, arg_2619: GLint, arg_2620: GLsizei) void {
    return epoxy_glFramebufferTexture2DMultisampleEXT.?(arg_2615, arg_2616, arg_2617, arg_2618, arg_2619, arg_2620);
}
pub inline fn glFramebufferTexture2DMultisampleIMG(arg_2621: GLenum, arg_2622: GLenum, arg_2623: GLenum, arg_2624: GLuint, arg_2625: GLint, arg_2626: GLsizei) void {
    return epoxy_glFramebufferTexture2DMultisampleIMG.?(arg_2621, arg_2622, arg_2623, arg_2624, arg_2625, arg_2626);
}
pub inline fn glFramebufferTexture2DOES(arg_2627: GLenum, arg_2628: GLenum, arg_2629: GLenum, arg_2630: GLuint, arg_2631: GLint) void {
    return epoxy_glFramebufferTexture2DOES.?(arg_2627, arg_2628, arg_2629, arg_2630, arg_2631);
}
pub inline fn glFramebufferTexture3D(arg_2632: GLenum, arg_2633: GLenum, arg_2634: GLenum, arg_2635: GLuint, arg_2636: GLint, arg_2637: GLint) void {
    return epoxy_glFramebufferTexture3D.?(arg_2632, arg_2633, arg_2634, arg_2635, arg_2636, arg_2637);
}
pub inline fn glFramebufferTexture3DEXT(arg_2638: GLenum, arg_2639: GLenum, arg_2640: GLenum, arg_2641: GLuint, arg_2642: GLint, arg_2643: GLint) void {
    return epoxy_glFramebufferTexture3DEXT.?(arg_2638, arg_2639, arg_2640, arg_2641, arg_2642, arg_2643);
}
pub inline fn glFramebufferTexture3DOES(arg_2644: GLenum, arg_2645: GLenum, arg_2646: GLenum, arg_2647: GLuint, arg_2648: GLint, arg_2649: GLint) void {
    return epoxy_glFramebufferTexture3DOES.?(arg_2644, arg_2645, arg_2646, arg_2647, arg_2648, arg_2649);
}
pub inline fn glFramebufferTextureARB(arg_2650: GLenum, arg_2651: GLenum, arg_2652: GLuint, arg_2653: GLint) void {
    return epoxy_glFramebufferTextureARB.?(arg_2650, arg_2651, arg_2652, arg_2653);
}
pub inline fn glFramebufferTextureEXT(arg_2654: GLenum, arg_2655: GLenum, arg_2656: GLuint, arg_2657: GLint) void {
    return epoxy_glFramebufferTextureEXT.?(arg_2654, arg_2655, arg_2656, arg_2657);
}
pub inline fn glFramebufferTextureFaceARB(arg_2658: GLenum, arg_2659: GLenum, arg_2660: GLuint, arg_2661: GLint, arg_2662: GLenum) void {
    return epoxy_glFramebufferTextureFaceARB.?(arg_2658, arg_2659, arg_2660, arg_2661, arg_2662);
}
pub inline fn glFramebufferTextureFaceEXT(arg_2663: GLenum, arg_2664: GLenum, arg_2665: GLuint, arg_2666: GLint, arg_2667: GLenum) void {
    return epoxy_glFramebufferTextureFaceEXT.?(arg_2663, arg_2664, arg_2665, arg_2666, arg_2667);
}
pub inline fn glFramebufferTextureLayer(arg_2668: GLenum, arg_2669: GLenum, arg_2670: GLuint, arg_2671: GLint, arg_2672: GLint) void {
    return epoxy_glFramebufferTextureLayer.?(arg_2668, arg_2669, arg_2670, arg_2671, arg_2672);
}
pub inline fn glFramebufferTextureLayerARB(arg_2673: GLenum, arg_2674: GLenum, arg_2675: GLuint, arg_2676: GLint, arg_2677: GLint) void {
    return epoxy_glFramebufferTextureLayerARB.?(arg_2673, arg_2674, arg_2675, arg_2676, arg_2677);
}
pub inline fn glFramebufferTextureLayerDownsampleIMG(arg_2678: GLenum, arg_2679: GLenum, arg_2680: GLuint, arg_2681: GLint, arg_2682: GLint, arg_2683: GLint, arg_2684: GLint) void {
    return epoxy_glFramebufferTextureLayerDownsampleIMG.?(arg_2678, arg_2679, arg_2680, arg_2681, arg_2682, arg_2683, arg_2684);
}
pub inline fn glFramebufferTextureLayerEXT(arg_2685: GLenum, arg_2686: GLenum, arg_2687: GLuint, arg_2688: GLint, arg_2689: GLint) void {
    return epoxy_glFramebufferTextureLayerEXT.?(arg_2685, arg_2686, arg_2687, arg_2688, arg_2689);
}
pub inline fn glFramebufferTextureMultisampleMultiviewOVR(arg_2690: GLenum, arg_2691: GLenum, arg_2692: GLuint, arg_2693: GLint, arg_2694: GLsizei, arg_2695: GLint, arg_2696: GLsizei) void {
    return epoxy_glFramebufferTextureMultisampleMultiviewOVR.?(arg_2690, arg_2691, arg_2692, arg_2693, arg_2694, arg_2695, arg_2696);
}
pub inline fn glFramebufferTextureMultiviewOVR(arg_2697: GLenum, arg_2698: GLenum, arg_2699: GLuint, arg_2700: GLint, arg_2701: GLint, arg_2702: GLsizei) void {
    return epoxy_glFramebufferTextureMultiviewOVR.?(arg_2697, arg_2698, arg_2699, arg_2700, arg_2701, arg_2702);
}
pub inline fn glFramebufferTextureOES(arg_2703: GLenum, arg_2704: GLenum, arg_2705: GLuint, arg_2706: GLint) void {
    return epoxy_glFramebufferTextureOES.?(arg_2703, arg_2704, arg_2705, arg_2706);
}
pub inline fn glFreeObjectBufferATI(arg_2707: GLuint) void {
    return epoxy_glFreeObjectBufferATI.?(arg_2707);
}
pub inline fn glFrontFace(arg_2708: GLenum) void {
    return epoxy_glFrontFace.?(arg_2708);
}
pub inline fn glFrustum(arg_2709: GLdouble, arg_2710: GLdouble, arg_2711: GLdouble, arg_2712: GLdouble, arg_2713: GLdouble, arg_2714: GLdouble) void {
    return epoxy_glFrustum.?(arg_2709, arg_2710, arg_2711, arg_2712, arg_2713, arg_2714);
}
pub inline fn glFrustumf(arg_2715: GLfloat, arg_2716: GLfloat, arg_2717: GLfloat, arg_2718: GLfloat, arg_2719: GLfloat, arg_2720: GLfloat) void {
    return epoxy_glFrustumf.?(arg_2715, arg_2716, arg_2717, arg_2718, arg_2719, arg_2720);
}
pub inline fn glFrustumfOES(arg_2721: GLfloat, arg_2722: GLfloat, arg_2723: GLfloat, arg_2724: GLfloat, arg_2725: GLfloat, arg_2726: GLfloat) void {
    return epoxy_glFrustumfOES.?(arg_2721, arg_2722, arg_2723, arg_2724, arg_2725, arg_2726);
}
pub inline fn glFrustumx(arg_2727: GLfixed, arg_2728: GLfixed, arg_2729: GLfixed, arg_2730: GLfixed, arg_2731: GLfixed, arg_2732: GLfixed) void {
    return epoxy_glFrustumx.?(arg_2727, arg_2728, arg_2729, arg_2730, arg_2731, arg_2732);
}
pub inline fn glFrustumxOES(arg_2733: GLfixed, arg_2734: GLfixed, arg_2735: GLfixed, arg_2736: GLfixed, arg_2737: GLfixed, arg_2738: GLfixed) void {
    return epoxy_glFrustumxOES.?(arg_2733, arg_2734, arg_2735, arg_2736, arg_2737, arg_2738);
}
pub inline fn glGenAsyncMarkersSGIX(arg_2739: GLsizei) GLuint {
    return epoxy_glGenAsyncMarkersSGIX.?(arg_2739);
}
pub inline fn glGenBuffers(arg_2740: GLsizei, arg_2741: [*c]GLuint) void {
    return epoxy_glGenBuffers.?(arg_2740, arg_2741);
}
pub inline fn glGenBuffersARB(arg_2742: GLsizei, arg_2743: [*c]GLuint) void {
    return epoxy_glGenBuffersARB.?(arg_2742, arg_2743);
}
pub inline fn glGenFencesAPPLE(arg_2744: GLsizei, arg_2745: [*c]GLuint) void {
    return epoxy_glGenFencesAPPLE.?(arg_2744, arg_2745);
}
pub inline fn glGenFencesNV(arg_2746: GLsizei, arg_2747: [*c]GLuint) void {
    return epoxy_glGenFencesNV.?(arg_2746, arg_2747);
}
pub inline fn glGenFragmentShadersATI(arg_2748: GLuint) GLuint {
    return epoxy_glGenFragmentShadersATI.?(arg_2748);
}
pub inline fn glGenFramebuffers(arg_2749: GLsizei, arg_2750: [*c]GLuint) void {
    return epoxy_glGenFramebuffers.?(arg_2749, arg_2750);
}
pub inline fn glGenFramebuffersEXT(arg_2751: GLsizei, arg_2752: [*c]GLuint) void {
    return epoxy_glGenFramebuffersEXT.?(arg_2751, arg_2752);
}
pub inline fn glGenFramebuffersOES(arg_2753: GLsizei, arg_2754: [*c]GLuint) void {
    return epoxy_glGenFramebuffersOES.?(arg_2753, arg_2754);
}
pub inline fn glGenLists(arg_2755: GLsizei) GLuint {
    return epoxy_glGenLists.?(arg_2755);
}
pub inline fn glGenNamesAMD(arg_2756: GLenum, arg_2757: GLuint, arg_2758: [*c]GLuint) void {
    return epoxy_glGenNamesAMD.?(arg_2756, arg_2757, arg_2758);
}
pub inline fn glGenOcclusionQueriesNV(arg_2759: GLsizei, arg_2760: [*c]GLuint) void {
    return epoxy_glGenOcclusionQueriesNV.?(arg_2759, arg_2760);
}
pub inline fn glGenPathsNV(arg_2761: GLsizei) GLuint {
    return epoxy_glGenPathsNV.?(arg_2761);
}
pub inline fn glGenPerfMonitorsAMD(arg_2762: GLsizei, arg_2763: [*c]GLuint) void {
    return epoxy_glGenPerfMonitorsAMD.?(arg_2762, arg_2763);
}
pub inline fn glGenProgramPipelines(arg_2764: GLsizei, arg_2765: [*c]GLuint) void {
    return epoxy_glGenProgramPipelines.?(arg_2764, arg_2765);
}
pub inline fn glGenProgramPipelinesEXT(arg_2766: GLsizei, arg_2767: [*c]GLuint) void {
    return epoxy_glGenProgramPipelinesEXT.?(arg_2766, arg_2767);
}
pub inline fn glGenProgramsARB(arg_2768: GLsizei, arg_2769: [*c]GLuint) void {
    return epoxy_glGenProgramsARB.?(arg_2768, arg_2769);
}
pub inline fn glGenProgramsNV(arg_2770: GLsizei, arg_2771: [*c]GLuint) void {
    return epoxy_glGenProgramsNV.?(arg_2770, arg_2771);
}
pub inline fn glGenQueries(arg_2772: GLsizei, arg_2773: [*c]GLuint) void {
    return epoxy_glGenQueries.?(arg_2772, arg_2773);
}
pub inline fn glGenQueriesARB(arg_2774: GLsizei, arg_2775: [*c]GLuint) void {
    return epoxy_glGenQueriesARB.?(arg_2774, arg_2775);
}
pub inline fn glGenQueriesEXT(arg_2776: GLsizei, arg_2777: [*c]GLuint) void {
    return epoxy_glGenQueriesEXT.?(arg_2776, arg_2777);
}
pub inline fn glGenQueryResourceTagNV(arg_2778: GLsizei, arg_2779: [*c]GLint) void {
    return epoxy_glGenQueryResourceTagNV.?(arg_2778, arg_2779);
}
pub inline fn glGenRenderbuffers(arg_2780: GLsizei, arg_2781: [*c]GLuint) void {
    return epoxy_glGenRenderbuffers.?(arg_2780, arg_2781);
}
pub inline fn glGenRenderbuffersEXT(arg_2782: GLsizei, arg_2783: [*c]GLuint) void {
    return epoxy_glGenRenderbuffersEXT.?(arg_2782, arg_2783);
}
pub inline fn glGenRenderbuffersOES(arg_2784: GLsizei, arg_2785: [*c]GLuint) void {
    return epoxy_glGenRenderbuffersOES.?(arg_2784, arg_2785);
}
pub inline fn glGenSamplers(arg_2786: GLsizei, arg_2787: [*c]GLuint) void {
    return epoxy_glGenSamplers.?(arg_2786, arg_2787);
}
pub inline fn glGenSemaphoresEXT(arg_2788: GLsizei, arg_2789: [*c]GLuint) void {
    return epoxy_glGenSemaphoresEXT.?(arg_2788, arg_2789);
}
pub inline fn glGenSymbolsEXT(arg_2790: GLenum, arg_2791: GLenum, arg_2792: GLenum, arg_2793: GLuint) GLuint {
    return epoxy_glGenSymbolsEXT.?(arg_2790, arg_2791, arg_2792, arg_2793);
}
pub inline fn glGenTextures(arg_2794: GLsizei, arg_2795: [*c]GLuint) void {
    return epoxy_glGenTextures.?(arg_2794, arg_2795);
}
pub inline fn glGenTexturesEXT(arg_2796: GLsizei, arg_2797: [*c]GLuint) void {
    return epoxy_glGenTexturesEXT.?(arg_2796, arg_2797);
}
pub inline fn glGenTransformFeedbacks(arg_2798: GLsizei, arg_2799: [*c]GLuint) void {
    return epoxy_glGenTransformFeedbacks.?(arg_2798, arg_2799);
}
pub inline fn glGenTransformFeedbacksNV(arg_2800: GLsizei, arg_2801: [*c]GLuint) void {
    return epoxy_glGenTransformFeedbacksNV.?(arg_2800, arg_2801);
}
pub inline fn glGenVertexArrays(arg_2802: GLsizei, arg_2803: [*c]GLuint) void {
    return epoxy_glGenVertexArrays.?(arg_2802, arg_2803);
}
pub inline fn glGenVertexArraysAPPLE(arg_2804: GLsizei, arg_2805: [*c]GLuint) void {
    return epoxy_glGenVertexArraysAPPLE.?(arg_2804, arg_2805);
}
pub inline fn glGenVertexArraysOES(arg_2806: GLsizei, arg_2807: [*c]GLuint) void {
    return epoxy_glGenVertexArraysOES.?(arg_2806, arg_2807);
}
pub inline fn glGenVertexShadersEXT(arg_2808: GLuint) GLuint {
    return epoxy_glGenVertexShadersEXT.?(arg_2808);
}
pub inline fn glGenerateMipmap(arg_2809: GLenum) void {
    return epoxy_glGenerateMipmap.?(arg_2809);
}
pub inline fn glGenerateMipmapEXT(arg_2810: GLenum) void {
    return epoxy_glGenerateMipmapEXT.?(arg_2810);
}
pub inline fn glGenerateMipmapOES(arg_2811: GLenum) void {
    return epoxy_glGenerateMipmapOES.?(arg_2811);
}
pub inline fn glGenerateMultiTexMipmapEXT(arg_2812: GLenum, arg_2813: GLenum) void {
    return epoxy_glGenerateMultiTexMipmapEXT.?(arg_2812, arg_2813);
}
pub inline fn glGenerateTextureMipmap(arg_2814: GLuint) void {
    return epoxy_glGenerateTextureMipmap.?(arg_2814);
}
pub inline fn glGenerateTextureMipmapEXT(arg_2815: GLuint, arg_2816: GLenum) void {
    return epoxy_glGenerateTextureMipmapEXT.?(arg_2815, arg_2816);
}
pub inline fn glGetActiveAtomicCounterBufferiv(arg_2817: GLuint, arg_2818: GLuint, arg_2819: GLenum, arg_2820: [*c]GLint) void {
    return epoxy_glGetActiveAtomicCounterBufferiv.?(arg_2817, arg_2818, arg_2819, arg_2820);
}
pub inline fn glGetActiveAttrib(arg_2821: GLuint, arg_2822: GLuint, arg_2823: GLsizei, arg_2824: [*c]GLsizei, arg_2825: [*c]GLint, arg_2826: [*c]GLenum, arg_2827: [*c]GLchar) void {
    return epoxy_glGetActiveAttrib.?(arg_2821, arg_2822, arg_2823, arg_2824, arg_2825, arg_2826, arg_2827);
}
pub inline fn glGetActiveAttribARB(arg_2828: GLhandleARB, arg_2829: GLuint, arg_2830: GLsizei, arg_2831: [*c]GLsizei, arg_2832: [*c]GLint, arg_2833: [*c]GLenum, arg_2834: [*c]GLcharARB) void {
    return epoxy_glGetActiveAttribARB.?(arg_2828, arg_2829, arg_2830, arg_2831, arg_2832, arg_2833, arg_2834);
}
pub inline fn glGetActiveSubroutineName(arg_2835: GLuint, arg_2836: GLenum, arg_2837: GLuint, arg_2838: GLsizei, arg_2839: [*c]GLsizei, arg_2840: [*c]GLchar) void {
    return epoxy_glGetActiveSubroutineName.?(arg_2835, arg_2836, arg_2837, arg_2838, arg_2839, arg_2840);
}
pub inline fn glGetActiveSubroutineUniformName(arg_2841: GLuint, arg_2842: GLenum, arg_2843: GLuint, arg_2844: GLsizei, arg_2845: [*c]GLsizei, arg_2846: [*c]GLchar) void {
    return epoxy_glGetActiveSubroutineUniformName.?(arg_2841, arg_2842, arg_2843, arg_2844, arg_2845, arg_2846);
}
pub inline fn glGetActiveSubroutineUniformiv(arg_2847: GLuint, arg_2848: GLenum, arg_2849: GLuint, arg_2850: GLenum, arg_2851: [*c]GLint) void {
    return epoxy_glGetActiveSubroutineUniformiv.?(arg_2847, arg_2848, arg_2849, arg_2850, arg_2851);
}
pub inline fn glGetActiveUniform(arg_2852: GLuint, arg_2853: GLuint, arg_2854: GLsizei, arg_2855: [*c]GLsizei, arg_2856: [*c]GLint, arg_2857: [*c]GLenum, arg_2858: [*c]GLchar) void {
    return epoxy_glGetActiveUniform.?(arg_2852, arg_2853, arg_2854, arg_2855, arg_2856, arg_2857, arg_2858);
}
pub inline fn glGetActiveUniformARB(arg_2859: GLhandleARB, arg_2860: GLuint, arg_2861: GLsizei, arg_2862: [*c]GLsizei, arg_2863: [*c]GLint, arg_2864: [*c]GLenum, arg_2865: [*c]GLcharARB) void {
    return epoxy_glGetActiveUniformARB.?(arg_2859, arg_2860, arg_2861, arg_2862, arg_2863, arg_2864, arg_2865);
}
pub inline fn glGetActiveUniformBlockName(arg_2866: GLuint, arg_2867: GLuint, arg_2868: GLsizei, arg_2869: [*c]GLsizei, arg_2870: [*c]GLchar) void {
    return epoxy_glGetActiveUniformBlockName.?(arg_2866, arg_2867, arg_2868, arg_2869, arg_2870);
}
pub inline fn glGetActiveUniformBlockiv(arg_2871: GLuint, arg_2872: GLuint, arg_2873: GLenum, arg_2874: [*c]GLint) void {
    return epoxy_glGetActiveUniformBlockiv.?(arg_2871, arg_2872, arg_2873, arg_2874);
}
pub inline fn glGetActiveUniformName(arg_2875: GLuint, arg_2876: GLuint, arg_2877: GLsizei, arg_2878: [*c]GLsizei, arg_2879: [*c]GLchar) void {
    return epoxy_glGetActiveUniformName.?(arg_2875, arg_2876, arg_2877, arg_2878, arg_2879);
}
pub inline fn glGetActiveUniformsiv(arg_2880: GLuint, arg_2881: GLsizei, arg_2882: [*c]const GLuint, arg_2883: GLenum, arg_2884: [*c]GLint) void {
    return epoxy_glGetActiveUniformsiv.?(arg_2880, arg_2881, arg_2882, arg_2883, arg_2884);
}
pub inline fn glGetActiveVaryingNV(arg_2885: GLuint, arg_2886: GLuint, arg_2887: GLsizei, arg_2888: [*c]GLsizei, arg_2889: [*c]GLsizei, arg_2890: [*c]GLenum, arg_2891: [*c]GLchar) void {
    return epoxy_glGetActiveVaryingNV.?(arg_2885, arg_2886, arg_2887, arg_2888, arg_2889, arg_2890, arg_2891);
}
pub inline fn glGetArrayObjectfvATI(arg_2892: GLenum, arg_2893: GLenum, arg_2894: [*c]GLfloat) void {
    return epoxy_glGetArrayObjectfvATI.?(arg_2892, arg_2893, arg_2894);
}
pub inline fn glGetArrayObjectivATI(arg_2895: GLenum, arg_2896: GLenum, arg_2897: [*c]GLint) void {
    return epoxy_glGetArrayObjectivATI.?(arg_2895, arg_2896, arg_2897);
}
pub inline fn glGetAttachedObjectsARB(arg_2898: GLhandleARB, arg_2899: GLsizei, arg_2900: [*c]GLsizei, arg_2901: [*c]GLhandleARB) void {
    return epoxy_glGetAttachedObjectsARB.?(arg_2898, arg_2899, arg_2900, arg_2901);
}
pub inline fn glGetAttachedShaders(arg_2902: GLuint, arg_2903: GLsizei, arg_2904: [*c]GLsizei, arg_2905: [*c]GLuint) void {
    return epoxy_glGetAttachedShaders.?(arg_2902, arg_2903, arg_2904, arg_2905);
}
pub inline fn glGetAttribLocation(arg_2906: GLuint, arg_2907: [*c]const GLchar) GLint {
    return epoxy_glGetAttribLocation.?(arg_2906, arg_2907);
}
pub inline fn glGetAttribLocationARB(arg_2908: GLhandleARB, arg_2909: [*c]const GLcharARB) GLint {
    return epoxy_glGetAttribLocationARB.?(arg_2908, arg_2909);
}
pub inline fn glGetBooleanIndexedvEXT(arg_2910: GLenum, arg_2911: GLuint, arg_2912: [*c]GLboolean) void {
    return epoxy_glGetBooleanIndexedvEXT.?(arg_2910, arg_2911, arg_2912);
}
pub inline fn glGetBooleani_v(arg_2913: GLenum, arg_2914: GLuint, arg_2915: [*c]GLboolean) void {
    return epoxy_glGetBooleani_v.?(arg_2913, arg_2914, arg_2915);
}
pub inline fn glGetBooleanv(arg_2916: GLenum, arg_2917: [*c]GLboolean) void {
    return epoxy_glGetBooleanv.?(arg_2916, arg_2917);
}
pub inline fn glGetBufferParameteri64v(arg_2918: GLenum, arg_2919: GLenum, arg_2920: [*c]GLint64) void {
    return epoxy_glGetBufferParameteri64v.?(arg_2918, arg_2919, arg_2920);
}
pub inline fn glGetBufferParameteriv(arg_2921: GLenum, arg_2922: GLenum, arg_2923: [*c]GLint) void {
    return epoxy_glGetBufferParameteriv.?(arg_2921, arg_2922, arg_2923);
}
pub inline fn glGetBufferParameterivARB(arg_2924: GLenum, arg_2925: GLenum, arg_2926: [*c]GLint) void {
    return epoxy_glGetBufferParameterivARB.?(arg_2924, arg_2925, arg_2926);
}
pub inline fn glGetBufferParameterui64vNV(arg_2927: GLenum, arg_2928: GLenum, arg_2929: [*c]GLuint64EXT) void {
    return epoxy_glGetBufferParameterui64vNV.?(arg_2927, arg_2928, arg_2929);
}
pub inline fn glGetBufferPointerv(arg_2930: GLenum, arg_2931: GLenum, arg_2932: [*c]?*anyopaque) void {
    return epoxy_glGetBufferPointerv.?(arg_2930, arg_2931, arg_2932);
}
pub inline fn glGetBufferPointervARB(arg_2933: GLenum, arg_2934: GLenum, arg_2935: [*c]?*anyopaque) void {
    return epoxy_glGetBufferPointervARB.?(arg_2933, arg_2934, arg_2935);
}
pub inline fn glGetBufferPointervOES(arg_2936: GLenum, arg_2937: GLenum, arg_2938: [*c]?*anyopaque) void {
    return epoxy_glGetBufferPointervOES.?(arg_2936, arg_2937, arg_2938);
}
pub inline fn glGetBufferSubData(arg_2939: GLenum, arg_2940: GLintptr, arg_2941: GLsizeiptr, arg_2942: ?*anyopaque) void {
    return epoxy_glGetBufferSubData.?(arg_2939, arg_2940, arg_2941, arg_2942);
}
pub inline fn glGetBufferSubDataARB(arg_2943: GLenum, arg_2944: GLintptrARB, arg_2945: GLsizeiptrARB, arg_2946: ?*anyopaque) void {
    return epoxy_glGetBufferSubDataARB.?(arg_2943, arg_2944, arg_2945, arg_2946);
}
pub inline fn glGetClipPlane(arg_2947: GLenum, arg_2948: [*c]GLdouble) void {
    return epoxy_glGetClipPlane.?(arg_2947, arg_2948);
}
pub inline fn glGetClipPlanef(arg_2949: GLenum, arg_2950: [*c]GLfloat) void {
    return epoxy_glGetClipPlanef.?(arg_2949, arg_2950);
}
pub inline fn glGetClipPlanefOES(arg_2951: GLenum, arg_2952: [*c]GLfloat) void {
    return epoxy_glGetClipPlanefOES.?(arg_2951, arg_2952);
}
pub inline fn glGetClipPlanex(arg_2953: GLenum, arg_2954: [*c]GLfixed) void {
    return epoxy_glGetClipPlanex.?(arg_2953, arg_2954);
}
pub inline fn glGetClipPlanexOES(arg_2955: GLenum, arg_2956: [*c]GLfixed) void {
    return epoxy_glGetClipPlanexOES.?(arg_2955, arg_2956);
}
pub inline fn glGetColorTable(arg_2957: GLenum, arg_2958: GLenum, arg_2959: GLenum, arg_2960: ?*anyopaque) void {
    return epoxy_glGetColorTable.?(arg_2957, arg_2958, arg_2959, arg_2960);
}
pub inline fn glGetColorTableEXT(arg_2961: GLenum, arg_2962: GLenum, arg_2963: GLenum, arg_2964: ?*anyopaque) void {
    return epoxy_glGetColorTableEXT.?(arg_2961, arg_2962, arg_2963, arg_2964);
}
pub inline fn glGetColorTableParameterfv(arg_2965: GLenum, arg_2966: GLenum, arg_2967: [*c]GLfloat) void {
    return epoxy_glGetColorTableParameterfv.?(arg_2965, arg_2966, arg_2967);
}
pub inline fn glGetColorTableParameterfvEXT(arg_2968: GLenum, arg_2969: GLenum, arg_2970: [*c]GLfloat) void {
    return epoxy_glGetColorTableParameterfvEXT.?(arg_2968, arg_2969, arg_2970);
}
pub inline fn glGetColorTableParameterfvSGI(arg_2971: GLenum, arg_2972: GLenum, arg_2973: [*c]GLfloat) void {
    return epoxy_glGetColorTableParameterfvSGI.?(arg_2971, arg_2972, arg_2973);
}
pub inline fn glGetColorTableParameteriv(arg_2974: GLenum, arg_2975: GLenum, arg_2976: [*c]GLint) void {
    return epoxy_glGetColorTableParameteriv.?(arg_2974, arg_2975, arg_2976);
}
pub inline fn glGetColorTableParameterivEXT(arg_2977: GLenum, arg_2978: GLenum, arg_2979: [*c]GLint) void {
    return epoxy_glGetColorTableParameterivEXT.?(arg_2977, arg_2978, arg_2979);
}
pub inline fn glGetColorTableParameterivSGI(arg_2980: GLenum, arg_2981: GLenum, arg_2982: [*c]GLint) void {
    return epoxy_glGetColorTableParameterivSGI.?(arg_2980, arg_2981, arg_2982);
}
pub inline fn glGetColorTableSGI(arg_2983: GLenum, arg_2984: GLenum, arg_2985: GLenum, arg_2986: ?*anyopaque) void {
    return epoxy_glGetColorTableSGI.?(arg_2983, arg_2984, arg_2985, arg_2986);
}
pub inline fn glGetCombinerInputParameterfvNV(arg_2987: GLenum, arg_2988: GLenum, arg_2989: GLenum, arg_2990: GLenum, arg_2991: [*c]GLfloat) void {
    return epoxy_glGetCombinerInputParameterfvNV.?(arg_2987, arg_2988, arg_2989, arg_2990, arg_2991);
}
pub inline fn glGetCombinerInputParameterivNV(arg_2992: GLenum, arg_2993: GLenum, arg_2994: GLenum, arg_2995: GLenum, arg_2996: [*c]GLint) void {
    return epoxy_glGetCombinerInputParameterivNV.?(arg_2992, arg_2993, arg_2994, arg_2995, arg_2996);
}
pub inline fn glGetCombinerOutputParameterfvNV(arg_2997: GLenum, arg_2998: GLenum, arg_2999: GLenum, arg_3000: [*c]GLfloat) void {
    return epoxy_glGetCombinerOutputParameterfvNV.?(arg_2997, arg_2998, arg_2999, arg_3000);
}
pub inline fn glGetCombinerOutputParameterivNV(arg_3001: GLenum, arg_3002: GLenum, arg_3003: GLenum, arg_3004: [*c]GLint) void {
    return epoxy_glGetCombinerOutputParameterivNV.?(arg_3001, arg_3002, arg_3003, arg_3004);
}
pub inline fn glGetCombinerStageParameterfvNV(arg_3005: GLenum, arg_3006: GLenum, arg_3007: [*c]GLfloat) void {
    return epoxy_glGetCombinerStageParameterfvNV.?(arg_3005, arg_3006, arg_3007);
}
pub inline fn glGetCommandHeaderNV(arg_3008: GLenum, arg_3009: GLuint) GLuint {
    return epoxy_glGetCommandHeaderNV.?(arg_3008, arg_3009);
}
pub inline fn glGetCompressedMultiTexImageEXT(arg_3010: GLenum, arg_3011: GLenum, arg_3012: GLint, arg_3013: ?*anyopaque) void {
    return epoxy_glGetCompressedMultiTexImageEXT.?(arg_3010, arg_3011, arg_3012, arg_3013);
}
pub inline fn glGetCompressedTexImage(arg_3014: GLenum, arg_3015: GLint, arg_3016: ?*anyopaque) void {
    return epoxy_glGetCompressedTexImage.?(arg_3014, arg_3015, arg_3016);
}
pub inline fn glGetCompressedTexImageARB(arg_3017: GLenum, arg_3018: GLint, arg_3019: ?*anyopaque) void {
    return epoxy_glGetCompressedTexImageARB.?(arg_3017, arg_3018, arg_3019);
}
pub inline fn glGetCompressedTextureImage(arg_3020: GLuint, arg_3021: GLint, arg_3022: GLsizei, arg_3023: ?*anyopaque) void {
    return epoxy_glGetCompressedTextureImage.?(arg_3020, arg_3021, arg_3022, arg_3023);
}
pub inline fn glGetCompressedTextureImageEXT(arg_3024: GLuint, arg_3025: GLenum, arg_3026: GLint, arg_3027: ?*anyopaque) void {
    return epoxy_glGetCompressedTextureImageEXT.?(arg_3024, arg_3025, arg_3026, arg_3027);
}
pub inline fn glGetCompressedTextureSubImage(arg_3028: GLuint, arg_3029: GLint, arg_3030: GLint, arg_3031: GLint, arg_3032: GLint, arg_3033: GLsizei, arg_3034: GLsizei, arg_3035: GLsizei, arg_3036: GLsizei, arg_3037: ?*anyopaque) void {
    return epoxy_glGetCompressedTextureSubImage.?(arg_3028, arg_3029, arg_3030, arg_3031, arg_3032, arg_3033, arg_3034, arg_3035, arg_3036, arg_3037);
}
pub inline fn glGetConvolutionFilter(arg_3038: GLenum, arg_3039: GLenum, arg_3040: GLenum, arg_3041: ?*anyopaque) void {
    return epoxy_glGetConvolutionFilter.?(arg_3038, arg_3039, arg_3040, arg_3041);
}
pub inline fn glGetConvolutionFilterEXT(arg_3042: GLenum, arg_3043: GLenum, arg_3044: GLenum, arg_3045: ?*anyopaque) void {
    return epoxy_glGetConvolutionFilterEXT.?(arg_3042, arg_3043, arg_3044, arg_3045);
}
pub inline fn glGetConvolutionParameterfv(arg_3046: GLenum, arg_3047: GLenum, arg_3048: [*c]GLfloat) void {
    return epoxy_glGetConvolutionParameterfv.?(arg_3046, arg_3047, arg_3048);
}
pub inline fn glGetConvolutionParameterfvEXT(arg_3049: GLenum, arg_3050: GLenum, arg_3051: [*c]GLfloat) void {
    return epoxy_glGetConvolutionParameterfvEXT.?(arg_3049, arg_3050, arg_3051);
}
pub inline fn glGetConvolutionParameteriv(arg_3052: GLenum, arg_3053: GLenum, arg_3054: [*c]GLint) void {
    return epoxy_glGetConvolutionParameteriv.?(arg_3052, arg_3053, arg_3054);
}
pub inline fn glGetConvolutionParameterivEXT(arg_3055: GLenum, arg_3056: GLenum, arg_3057: [*c]GLint) void {
    return epoxy_glGetConvolutionParameterivEXT.?(arg_3055, arg_3056, arg_3057);
}
pub inline fn glGetConvolutionParameterxvOES(arg_3058: GLenum, arg_3059: GLenum, arg_3060: [*c]GLfixed) void {
    return epoxy_glGetConvolutionParameterxvOES.?(arg_3058, arg_3059, arg_3060);
}
pub inline fn glGetCoverageModulationTableNV(arg_3061: GLsizei, arg_3062: [*c]GLfloat) void {
    return epoxy_glGetCoverageModulationTableNV.?(arg_3061, arg_3062);
}
pub inline fn glGetDebugMessageLog(arg_3063: GLuint, arg_3064: GLsizei, arg_3065: [*c]GLenum, arg_3066: [*c]GLenum, arg_3067: [*c]GLuint, arg_3068: [*c]GLenum, arg_3069: [*c]GLsizei, arg_3070: [*c]GLchar) GLuint {
    return epoxy_glGetDebugMessageLog.?(arg_3063, arg_3064, arg_3065, arg_3066, arg_3067, arg_3068, arg_3069, arg_3070);
}
pub inline fn glGetDebugMessageLogAMD(arg_3071: GLuint, arg_3072: GLsizei, arg_3073: [*c]GLenum, arg_3074: [*c]GLuint, arg_3075: [*c]GLuint, arg_3076: [*c]GLsizei, arg_3077: [*c]GLchar) GLuint {
    return epoxy_glGetDebugMessageLogAMD.?(arg_3071, arg_3072, arg_3073, arg_3074, arg_3075, arg_3076, arg_3077);
}
pub inline fn glGetDebugMessageLogARB(arg_3078: GLuint, arg_3079: GLsizei, arg_3080: [*c]GLenum, arg_3081: [*c]GLenum, arg_3082: [*c]GLuint, arg_3083: [*c]GLenum, arg_3084: [*c]GLsizei, arg_3085: [*c]GLchar) GLuint {
    return epoxy_glGetDebugMessageLogARB.?(arg_3078, arg_3079, arg_3080, arg_3081, arg_3082, arg_3083, arg_3084, arg_3085);
}
pub inline fn glGetDebugMessageLogKHR(arg_3086: GLuint, arg_3087: GLsizei, arg_3088: [*c]GLenum, arg_3089: [*c]GLenum, arg_3090: [*c]GLuint, arg_3091: [*c]GLenum, arg_3092: [*c]GLsizei, arg_3093: [*c]GLchar) GLuint {
    return epoxy_glGetDebugMessageLogKHR.?(arg_3086, arg_3087, arg_3088, arg_3089, arg_3090, arg_3091, arg_3092, arg_3093);
}
pub inline fn glGetDetailTexFuncSGIS(arg_3094: GLenum, arg_3095: [*c]GLfloat) void {
    return epoxy_glGetDetailTexFuncSGIS.?(arg_3094, arg_3095);
}
pub inline fn glGetDoubleIndexedvEXT(arg_3096: GLenum, arg_3097: GLuint, arg_3098: [*c]GLdouble) void {
    return epoxy_glGetDoubleIndexedvEXT.?(arg_3096, arg_3097, arg_3098);
}
pub inline fn glGetDoublei_v(arg_3099: GLenum, arg_3100: GLuint, arg_3101: [*c]GLdouble) void {
    return epoxy_glGetDoublei_v.?(arg_3099, arg_3100, arg_3101);
}
pub inline fn glGetDoublei_vEXT(arg_3102: GLenum, arg_3103: GLuint, arg_3104: [*c]GLdouble) void {
    return epoxy_glGetDoublei_vEXT.?(arg_3102, arg_3103, arg_3104);
}
pub inline fn glGetDoublev(arg_3105: GLenum, arg_3106: [*c]GLdouble) void {
    return epoxy_glGetDoublev.?(arg_3105, arg_3106);
}
pub inline fn glGetDriverControlStringQCOM(arg_3107: GLuint, arg_3108: GLsizei, arg_3109: [*c]GLsizei, arg_3110: [*c]GLchar) void {
    return epoxy_glGetDriverControlStringQCOM.?(arg_3107, arg_3108, arg_3109, arg_3110);
}
pub inline fn glGetDriverControlsQCOM(arg_3111: [*c]GLint, arg_3112: GLsizei, arg_3113: [*c]GLuint) void {
    return epoxy_glGetDriverControlsQCOM.?(arg_3111, arg_3112, arg_3113);
}
pub inline fn glGetError() GLenum {
    return epoxy_glGetError.?();
}
pub inline fn glGetFenceivNV(arg_3114: GLuint, arg_3115: GLenum, arg_3116: [*c]GLint) void {
    return epoxy_glGetFenceivNV.?(arg_3114, arg_3115, arg_3116);
}
pub inline fn glGetFinalCombinerInputParameterfvNV(arg_3117: GLenum, arg_3118: GLenum, arg_3119: [*c]GLfloat) void {
    return epoxy_glGetFinalCombinerInputParameterfvNV.?(arg_3117, arg_3118, arg_3119);
}
pub inline fn glGetFinalCombinerInputParameterivNV(arg_3120: GLenum, arg_3121: GLenum, arg_3122: [*c]GLint) void {
    return epoxy_glGetFinalCombinerInputParameterivNV.?(arg_3120, arg_3121, arg_3122);
}
pub inline fn glGetFirstPerfQueryIdINTEL(arg_3123: [*c]GLuint) void {
    return epoxy_glGetFirstPerfQueryIdINTEL.?(arg_3123);
}
pub inline fn glGetFixedv(arg_3124: GLenum, arg_3125: [*c]GLfixed) void {
    return epoxy_glGetFixedv.?(arg_3124, arg_3125);
}
pub inline fn glGetFixedvOES(arg_3126: GLenum, arg_3127: [*c]GLfixed) void {
    return epoxy_glGetFixedvOES.?(arg_3126, arg_3127);
}
pub inline fn glGetFloatIndexedvEXT(arg_3128: GLenum, arg_3129: GLuint, arg_3130: [*c]GLfloat) void {
    return epoxy_glGetFloatIndexedvEXT.?(arg_3128, arg_3129, arg_3130);
}
pub inline fn glGetFloati_v(arg_3131: GLenum, arg_3132: GLuint, arg_3133: [*c]GLfloat) void {
    return epoxy_glGetFloati_v.?(arg_3131, arg_3132, arg_3133);
}
pub inline fn glGetFloati_vEXT(arg_3134: GLenum, arg_3135: GLuint, arg_3136: [*c]GLfloat) void {
    return epoxy_glGetFloati_vEXT.?(arg_3134, arg_3135, arg_3136);
}
pub inline fn glGetFloati_vNV(arg_3137: GLenum, arg_3138: GLuint, arg_3139: [*c]GLfloat) void {
    return epoxy_glGetFloati_vNV.?(arg_3137, arg_3138, arg_3139);
}
pub inline fn glGetFloati_vOES(arg_3140: GLenum, arg_3141: GLuint, arg_3142: [*c]GLfloat) void {
    return epoxy_glGetFloati_vOES.?(arg_3140, arg_3141, arg_3142);
}
pub inline fn glGetFloatv(arg_3143: GLenum, arg_3144: [*c]GLfloat) void {
    return epoxy_glGetFloatv.?(arg_3143, arg_3144);
}
pub inline fn glGetFogFuncSGIS(arg_3145: [*c]GLfloat) void {
    return epoxy_glGetFogFuncSGIS.?(arg_3145);
}
pub inline fn glGetFragDataIndex(arg_3146: GLuint, arg_3147: [*c]const GLchar) GLint {
    return epoxy_glGetFragDataIndex.?(arg_3146, arg_3147);
}
pub inline fn glGetFragDataIndexEXT(arg_3148: GLuint, arg_3149: [*c]const GLchar) GLint {
    return epoxy_glGetFragDataIndexEXT.?(arg_3148, arg_3149);
}
pub inline fn glGetFragDataLocation(arg_3150: GLuint, arg_3151: [*c]const GLchar) GLint {
    return epoxy_glGetFragDataLocation.?(arg_3150, arg_3151);
}
pub inline fn glGetFragDataLocationEXT(arg_3152: GLuint, arg_3153: [*c]const GLchar) GLint {
    return epoxy_glGetFragDataLocationEXT.?(arg_3152, arg_3153);
}
pub inline fn glGetFragmentLightfvSGIX(arg_3154: GLenum, arg_3155: GLenum, arg_3156: [*c]GLfloat) void {
    return epoxy_glGetFragmentLightfvSGIX.?(arg_3154, arg_3155, arg_3156);
}
pub inline fn glGetFragmentLightivSGIX(arg_3157: GLenum, arg_3158: GLenum, arg_3159: [*c]GLint) void {
    return epoxy_glGetFragmentLightivSGIX.?(arg_3157, arg_3158, arg_3159);
}
pub inline fn glGetFragmentMaterialfvSGIX(arg_3160: GLenum, arg_3161: GLenum, arg_3162: [*c]GLfloat) void {
    return epoxy_glGetFragmentMaterialfvSGIX.?(arg_3160, arg_3161, arg_3162);
}
pub inline fn glGetFragmentMaterialivSGIX(arg_3163: GLenum, arg_3164: GLenum, arg_3165: [*c]GLint) void {
    return epoxy_glGetFragmentMaterialivSGIX.?(arg_3163, arg_3164, arg_3165);
}
pub inline fn glGetFramebufferAttachmentParameteriv(arg_3166: GLenum, arg_3167: GLenum, arg_3168: GLenum, arg_3169: [*c]GLint) void {
    return epoxy_glGetFramebufferAttachmentParameteriv.?(arg_3166, arg_3167, arg_3168, arg_3169);
}
pub inline fn glGetFramebufferAttachmentParameterivEXT(arg_3170: GLenum, arg_3171: GLenum, arg_3172: GLenum, arg_3173: [*c]GLint) void {
    return epoxy_glGetFramebufferAttachmentParameterivEXT.?(arg_3170, arg_3171, arg_3172, arg_3173);
}
pub inline fn glGetFramebufferAttachmentParameterivOES(arg_3174: GLenum, arg_3175: GLenum, arg_3176: GLenum, arg_3177: [*c]GLint) void {
    return epoxy_glGetFramebufferAttachmentParameterivOES.?(arg_3174, arg_3175, arg_3176, arg_3177);
}
pub inline fn glGetFramebufferParameterfvAMD(arg_3178: GLenum, arg_3179: GLenum, arg_3180: GLuint, arg_3181: GLuint, arg_3182: GLsizei, arg_3183: [*c]GLfloat) void {
    return epoxy_glGetFramebufferParameterfvAMD.?(arg_3178, arg_3179, arg_3180, arg_3181, arg_3182, arg_3183);
}
pub inline fn glGetFramebufferParameteriv(arg_3184: GLenum, arg_3185: GLenum, arg_3186: [*c]GLint) void {
    return epoxy_glGetFramebufferParameteriv.?(arg_3184, arg_3185, arg_3186);
}
pub inline fn glGetFramebufferParameterivEXT(arg_3187: GLuint, arg_3188: GLenum, arg_3189: [*c]GLint) void {
    return epoxy_glGetFramebufferParameterivEXT.?(arg_3187, arg_3188, arg_3189);
}
pub inline fn glGetFramebufferParameterivMESA(arg_3190: GLenum, arg_3191: GLenum, arg_3192: [*c]GLint) void {
    return epoxy_glGetFramebufferParameterivMESA.?(arg_3190, arg_3191, arg_3192);
}
pub inline fn glGetFramebufferPixelLocalStorageSizeEXT(arg_3193: GLuint) GLsizei {
    return epoxy_glGetFramebufferPixelLocalStorageSizeEXT.?(arg_3193);
}
pub inline fn glGetGraphicsResetStatus() GLenum {
    return epoxy_glGetGraphicsResetStatus.?();
}
pub inline fn glGetGraphicsResetStatusARB() GLenum {
    return epoxy_glGetGraphicsResetStatusARB.?();
}
pub inline fn glGetGraphicsResetStatusEXT() GLenum {
    return epoxy_glGetGraphicsResetStatusEXT.?();
}
pub inline fn glGetGraphicsResetStatusKHR() GLenum {
    return epoxy_glGetGraphicsResetStatusKHR.?();
}
pub inline fn glGetHandleARB(arg_3194: GLenum) GLhandleARB {
    return epoxy_glGetHandleARB.?(arg_3194);
}
pub inline fn glGetHistogram(arg_3195: GLenum, arg_3196: GLboolean, arg_3197: GLenum, arg_3198: GLenum, arg_3199: ?*anyopaque) void {
    return epoxy_glGetHistogram.?(arg_3195, arg_3196, arg_3197, arg_3198, arg_3199);
}
pub inline fn glGetHistogramEXT(arg_3200: GLenum, arg_3201: GLboolean, arg_3202: GLenum, arg_3203: GLenum, arg_3204: ?*anyopaque) void {
    return epoxy_glGetHistogramEXT.?(arg_3200, arg_3201, arg_3202, arg_3203, arg_3204);
}
pub inline fn glGetHistogramParameterfv(arg_3205: GLenum, arg_3206: GLenum, arg_3207: [*c]GLfloat) void {
    return epoxy_glGetHistogramParameterfv.?(arg_3205, arg_3206, arg_3207);
}
pub inline fn glGetHistogramParameterfvEXT(arg_3208: GLenum, arg_3209: GLenum, arg_3210: [*c]GLfloat) void {
    return epoxy_glGetHistogramParameterfvEXT.?(arg_3208, arg_3209, arg_3210);
}
pub inline fn glGetHistogramParameteriv(arg_3211: GLenum, arg_3212: GLenum, arg_3213: [*c]GLint) void {
    return epoxy_glGetHistogramParameteriv.?(arg_3211, arg_3212, arg_3213);
}
pub inline fn glGetHistogramParameterivEXT(arg_3214: GLenum, arg_3215: GLenum, arg_3216: [*c]GLint) void {
    return epoxy_glGetHistogramParameterivEXT.?(arg_3214, arg_3215, arg_3216);
}
pub inline fn glGetHistogramParameterxvOES(arg_3217: GLenum, arg_3218: GLenum, arg_3219: [*c]GLfixed) void {
    return epoxy_glGetHistogramParameterxvOES.?(arg_3217, arg_3218, arg_3219);
}
pub inline fn glGetImageHandleARB(arg_3220: GLuint, arg_3221: GLint, arg_3222: GLboolean, arg_3223: GLint, arg_3224: GLenum) GLuint64 {
    return epoxy_glGetImageHandleARB.?(arg_3220, arg_3221, arg_3222, arg_3223, arg_3224);
}
pub inline fn glGetImageHandleNV(arg_3225: GLuint, arg_3226: GLint, arg_3227: GLboolean, arg_3228: GLint, arg_3229: GLenum) GLuint64 {
    return epoxy_glGetImageHandleNV.?(arg_3225, arg_3226, arg_3227, arg_3228, arg_3229);
}
pub inline fn glGetImageTransformParameterfvHP(arg_3230: GLenum, arg_3231: GLenum, arg_3232: [*c]GLfloat) void {
    return epoxy_glGetImageTransformParameterfvHP.?(arg_3230, arg_3231, arg_3232);
}
pub inline fn glGetImageTransformParameterivHP(arg_3233: GLenum, arg_3234: GLenum, arg_3235: [*c]GLint) void {
    return epoxy_glGetImageTransformParameterivHP.?(arg_3233, arg_3234, arg_3235);
}
pub inline fn glGetInfoLogARB(arg_3236: GLhandleARB, arg_3237: GLsizei, arg_3238: [*c]GLsizei, arg_3239: [*c]GLcharARB) void {
    return epoxy_glGetInfoLogARB.?(arg_3236, arg_3237, arg_3238, arg_3239);
}
pub inline fn glGetInstrumentsSGIX() GLint {
    return epoxy_glGetInstrumentsSGIX.?();
}
pub inline fn glGetInteger64i_v(arg_3240: GLenum, arg_3241: GLuint, arg_3242: [*c]GLint64) void {
    return epoxy_glGetInteger64i_v.?(arg_3240, arg_3241, arg_3242);
}
pub inline fn glGetInteger64v(arg_3243: GLenum, arg_3244: [*c]GLint64) void {
    return epoxy_glGetInteger64v.?(arg_3243, arg_3244);
}
pub inline fn glGetInteger64vAPPLE(arg_3245: GLenum, arg_3246: [*c]GLint64) void {
    return epoxy_glGetInteger64vAPPLE.?(arg_3245, arg_3246);
}
pub inline fn glGetIntegerIndexedvEXT(arg_3247: GLenum, arg_3248: GLuint, arg_3249: [*c]GLint) void {
    return epoxy_glGetIntegerIndexedvEXT.?(arg_3247, arg_3248, arg_3249);
}
pub inline fn glGetIntegeri_v(arg_3250: GLenum, arg_3251: GLuint, arg_3252: [*c]GLint) void {
    return epoxy_glGetIntegeri_v.?(arg_3250, arg_3251, arg_3252);
}
pub inline fn glGetIntegeri_vEXT(arg_3253: GLenum, arg_3254: GLuint, arg_3255: [*c]GLint) void {
    return epoxy_glGetIntegeri_vEXT.?(arg_3253, arg_3254, arg_3255);
}
pub inline fn glGetIntegerui64i_vNV(arg_3256: GLenum, arg_3257: GLuint, arg_3258: [*c]GLuint64EXT) void {
    return epoxy_glGetIntegerui64i_vNV.?(arg_3256, arg_3257, arg_3258);
}
pub inline fn glGetIntegerui64vNV(arg_3259: GLenum, arg_3260: [*c]GLuint64EXT) void {
    return epoxy_glGetIntegerui64vNV.?(arg_3259, arg_3260);
}
pub inline fn glGetIntegerv(arg_3261: GLenum, arg_3262: [*c]GLint) void {
    return epoxy_glGetIntegerv.?(arg_3261, arg_3262);
}
pub inline fn glGetInternalformatSampleivNV(arg_3263: GLenum, arg_3264: GLenum, arg_3265: GLsizei, arg_3266: GLenum, arg_3267: GLsizei, arg_3268: [*c]GLint) void {
    return epoxy_glGetInternalformatSampleivNV.?(arg_3263, arg_3264, arg_3265, arg_3266, arg_3267, arg_3268);
}
pub inline fn glGetInternalformati64v(arg_3269: GLenum, arg_3270: GLenum, arg_3271: GLenum, arg_3272: GLsizei, arg_3273: [*c]GLint64) void {
    return epoxy_glGetInternalformati64v.?(arg_3269, arg_3270, arg_3271, arg_3272, arg_3273);
}
pub inline fn glGetInternalformativ(arg_3274: GLenum, arg_3275: GLenum, arg_3276: GLenum, arg_3277: GLsizei, arg_3278: [*c]GLint) void {
    return epoxy_glGetInternalformativ.?(arg_3274, arg_3275, arg_3276, arg_3277, arg_3278);
}
pub inline fn glGetInvariantBooleanvEXT(arg_3279: GLuint, arg_3280: GLenum, arg_3281: [*c]GLboolean) void {
    return epoxy_glGetInvariantBooleanvEXT.?(arg_3279, arg_3280, arg_3281);
}
pub inline fn glGetInvariantFloatvEXT(arg_3282: GLuint, arg_3283: GLenum, arg_3284: [*c]GLfloat) void {
    return epoxy_glGetInvariantFloatvEXT.?(arg_3282, arg_3283, arg_3284);
}
pub inline fn glGetInvariantIntegervEXT(arg_3285: GLuint, arg_3286: GLenum, arg_3287: [*c]GLint) void {
    return epoxy_glGetInvariantIntegervEXT.?(arg_3285, arg_3286, arg_3287);
}
pub inline fn glGetLightfv(arg_3288: GLenum, arg_3289: GLenum, arg_3290: [*c]GLfloat) void {
    return epoxy_glGetLightfv.?(arg_3288, arg_3289, arg_3290);
}
pub inline fn glGetLightiv(arg_3291: GLenum, arg_3292: GLenum, arg_3293: [*c]GLint) void {
    return epoxy_glGetLightiv.?(arg_3291, arg_3292, arg_3293);
}
pub inline fn glGetLightxOES(arg_3294: GLenum, arg_3295: GLenum, arg_3296: [*c]GLfixed) void {
    return epoxy_glGetLightxOES.?(arg_3294, arg_3295, arg_3296);
}
pub inline fn glGetLightxv(arg_3297: GLenum, arg_3298: GLenum, arg_3299: [*c]GLfixed) void {
    return epoxy_glGetLightxv.?(arg_3297, arg_3298, arg_3299);
}
pub inline fn glGetLightxvOES(arg_3300: GLenum, arg_3301: GLenum, arg_3302: [*c]GLfixed) void {
    return epoxy_glGetLightxvOES.?(arg_3300, arg_3301, arg_3302);
}
pub inline fn glGetListParameterfvSGIX(arg_3303: GLuint, arg_3304: GLenum, arg_3305: [*c]GLfloat) void {
    return epoxy_glGetListParameterfvSGIX.?(arg_3303, arg_3304, arg_3305);
}
pub inline fn glGetListParameterivSGIX(arg_3306: GLuint, arg_3307: GLenum, arg_3308: [*c]GLint) void {
    return epoxy_glGetListParameterivSGIX.?(arg_3306, arg_3307, arg_3308);
}
pub inline fn glGetLocalConstantBooleanvEXT(arg_3309: GLuint, arg_3310: GLenum, arg_3311: [*c]GLboolean) void {
    return epoxy_glGetLocalConstantBooleanvEXT.?(arg_3309, arg_3310, arg_3311);
}
pub inline fn glGetLocalConstantFloatvEXT(arg_3312: GLuint, arg_3313: GLenum, arg_3314: [*c]GLfloat) void {
    return epoxy_glGetLocalConstantFloatvEXT.?(arg_3312, arg_3313, arg_3314);
}
pub inline fn glGetLocalConstantIntegervEXT(arg_3315: GLuint, arg_3316: GLenum, arg_3317: [*c]GLint) void {
    return epoxy_glGetLocalConstantIntegervEXT.?(arg_3315, arg_3316, arg_3317);
}
pub inline fn glGetMapAttribParameterfvNV(arg_3318: GLenum, arg_3319: GLuint, arg_3320: GLenum, arg_3321: [*c]GLfloat) void {
    return epoxy_glGetMapAttribParameterfvNV.?(arg_3318, arg_3319, arg_3320, arg_3321);
}
pub inline fn glGetMapAttribParameterivNV(arg_3322: GLenum, arg_3323: GLuint, arg_3324: GLenum, arg_3325: [*c]GLint) void {
    return epoxy_glGetMapAttribParameterivNV.?(arg_3322, arg_3323, arg_3324, arg_3325);
}
pub inline fn glGetMapControlPointsNV(arg_3326: GLenum, arg_3327: GLuint, arg_3328: GLenum, arg_3329: GLsizei, arg_3330: GLsizei, arg_3331: GLboolean, arg_3332: ?*anyopaque) void {
    return epoxy_glGetMapControlPointsNV.?(arg_3326, arg_3327, arg_3328, arg_3329, arg_3330, arg_3331, arg_3332);
}
pub inline fn glGetMapParameterfvNV(arg_3333: GLenum, arg_3334: GLenum, arg_3335: [*c]GLfloat) void {
    return epoxy_glGetMapParameterfvNV.?(arg_3333, arg_3334, arg_3335);
}
pub inline fn glGetMapParameterivNV(arg_3336: GLenum, arg_3337: GLenum, arg_3338: [*c]GLint) void {
    return epoxy_glGetMapParameterivNV.?(arg_3336, arg_3337, arg_3338);
}
pub inline fn glGetMapdv(arg_3339: GLenum, arg_3340: GLenum, arg_3341: [*c]GLdouble) void {
    return epoxy_glGetMapdv.?(arg_3339, arg_3340, arg_3341);
}
pub inline fn glGetMapfv(arg_3342: GLenum, arg_3343: GLenum, arg_3344: [*c]GLfloat) void {
    return epoxy_glGetMapfv.?(arg_3342, arg_3343, arg_3344);
}
pub inline fn glGetMapiv(arg_3345: GLenum, arg_3346: GLenum, arg_3347: [*c]GLint) void {
    return epoxy_glGetMapiv.?(arg_3345, arg_3346, arg_3347);
}
pub inline fn glGetMapxvOES(arg_3348: GLenum, arg_3349: GLenum, arg_3350: [*c]GLfixed) void {
    return epoxy_glGetMapxvOES.?(arg_3348, arg_3349, arg_3350);
}
pub inline fn glGetMaterialfv(arg_3351: GLenum, arg_3352: GLenum, arg_3353: [*c]GLfloat) void {
    return epoxy_glGetMaterialfv.?(arg_3351, arg_3352, arg_3353);
}
pub inline fn glGetMaterialiv(arg_3354: GLenum, arg_3355: GLenum, arg_3356: [*c]GLint) void {
    return epoxy_glGetMaterialiv.?(arg_3354, arg_3355, arg_3356);
}
pub inline fn glGetMaterialxOES(arg_3357: GLenum, arg_3358: GLenum, arg_3359: GLfixed) void {
    return epoxy_glGetMaterialxOES.?(arg_3357, arg_3358, arg_3359);
}
pub inline fn glGetMaterialxv(arg_3360: GLenum, arg_3361: GLenum, arg_3362: [*c]GLfixed) void {
    return epoxy_glGetMaterialxv.?(arg_3360, arg_3361, arg_3362);
}
pub inline fn glGetMaterialxvOES(arg_3363: GLenum, arg_3364: GLenum, arg_3365: [*c]GLfixed) void {
    return epoxy_glGetMaterialxvOES.?(arg_3363, arg_3364, arg_3365);
}
pub inline fn glGetMemoryObjectDetachedResourcesuivNV(arg_3366: GLuint, arg_3367: GLenum, arg_3368: GLint, arg_3369: GLsizei, arg_3370: [*c]GLuint) void {
    return epoxy_glGetMemoryObjectDetachedResourcesuivNV.?(arg_3366, arg_3367, arg_3368, arg_3369, arg_3370);
}
pub inline fn glGetMemoryObjectParameterivEXT(arg_3371: GLuint, arg_3372: GLenum, arg_3373: [*c]GLint) void {
    return epoxy_glGetMemoryObjectParameterivEXT.?(arg_3371, arg_3372, arg_3373);
}
pub inline fn glGetMinmax(arg_3374: GLenum, arg_3375: GLboolean, arg_3376: GLenum, arg_3377: GLenum, arg_3378: ?*anyopaque) void {
    return epoxy_glGetMinmax.?(arg_3374, arg_3375, arg_3376, arg_3377, arg_3378);
}
pub inline fn glGetMinmaxEXT(arg_3379: GLenum, arg_3380: GLboolean, arg_3381: GLenum, arg_3382: GLenum, arg_3383: ?*anyopaque) void {
    return epoxy_glGetMinmaxEXT.?(arg_3379, arg_3380, arg_3381, arg_3382, arg_3383);
}
pub inline fn glGetMinmaxParameterfv(arg_3384: GLenum, arg_3385: GLenum, arg_3386: [*c]GLfloat) void {
    return epoxy_glGetMinmaxParameterfv.?(arg_3384, arg_3385, arg_3386);
}
pub inline fn glGetMinmaxParameterfvEXT(arg_3387: GLenum, arg_3388: GLenum, arg_3389: [*c]GLfloat) void {
    return epoxy_glGetMinmaxParameterfvEXT.?(arg_3387, arg_3388, arg_3389);
}
pub inline fn glGetMinmaxParameteriv(arg_3390: GLenum, arg_3391: GLenum, arg_3392: [*c]GLint) void {
    return epoxy_glGetMinmaxParameteriv.?(arg_3390, arg_3391, arg_3392);
}
pub inline fn glGetMinmaxParameterivEXT(arg_3393: GLenum, arg_3394: GLenum, arg_3395: [*c]GLint) void {
    return epoxy_glGetMinmaxParameterivEXT.?(arg_3393, arg_3394, arg_3395);
}
pub inline fn glGetMultiTexEnvfvEXT(arg_3396: GLenum, arg_3397: GLenum, arg_3398: GLenum, arg_3399: [*c]GLfloat) void {
    return epoxy_glGetMultiTexEnvfvEXT.?(arg_3396, arg_3397, arg_3398, arg_3399);
}
pub inline fn glGetMultiTexEnvivEXT(arg_3400: GLenum, arg_3401: GLenum, arg_3402: GLenum, arg_3403: [*c]GLint) void {
    return epoxy_glGetMultiTexEnvivEXT.?(arg_3400, arg_3401, arg_3402, arg_3403);
}
pub inline fn glGetMultiTexGendvEXT(arg_3404: GLenum, arg_3405: GLenum, arg_3406: GLenum, arg_3407: [*c]GLdouble) void {
    return epoxy_glGetMultiTexGendvEXT.?(arg_3404, arg_3405, arg_3406, arg_3407);
}
pub inline fn glGetMultiTexGenfvEXT(arg_3408: GLenum, arg_3409: GLenum, arg_3410: GLenum, arg_3411: [*c]GLfloat) void {
    return epoxy_glGetMultiTexGenfvEXT.?(arg_3408, arg_3409, arg_3410, arg_3411);
}
pub inline fn glGetMultiTexGenivEXT(arg_3412: GLenum, arg_3413: GLenum, arg_3414: GLenum, arg_3415: [*c]GLint) void {
    return epoxy_glGetMultiTexGenivEXT.?(arg_3412, arg_3413, arg_3414, arg_3415);
}
pub inline fn glGetMultiTexImageEXT(arg_3416: GLenum, arg_3417: GLenum, arg_3418: GLint, arg_3419: GLenum, arg_3420: GLenum, arg_3421: ?*anyopaque) void {
    return epoxy_glGetMultiTexImageEXT.?(arg_3416, arg_3417, arg_3418, arg_3419, arg_3420, arg_3421);
}
pub inline fn glGetMultiTexLevelParameterfvEXT(arg_3422: GLenum, arg_3423: GLenum, arg_3424: GLint, arg_3425: GLenum, arg_3426: [*c]GLfloat) void {
    return epoxy_glGetMultiTexLevelParameterfvEXT.?(arg_3422, arg_3423, arg_3424, arg_3425, arg_3426);
}
pub inline fn glGetMultiTexLevelParameterivEXT(arg_3427: GLenum, arg_3428: GLenum, arg_3429: GLint, arg_3430: GLenum, arg_3431: [*c]GLint) void {
    return epoxy_glGetMultiTexLevelParameterivEXT.?(arg_3427, arg_3428, arg_3429, arg_3430, arg_3431);
}
pub inline fn glGetMultiTexParameterIivEXT(arg_3432: GLenum, arg_3433: GLenum, arg_3434: GLenum, arg_3435: [*c]GLint) void {
    return epoxy_glGetMultiTexParameterIivEXT.?(arg_3432, arg_3433, arg_3434, arg_3435);
}
pub inline fn glGetMultiTexParameterIuivEXT(arg_3436: GLenum, arg_3437: GLenum, arg_3438: GLenum, arg_3439: [*c]GLuint) void {
    return epoxy_glGetMultiTexParameterIuivEXT.?(arg_3436, arg_3437, arg_3438, arg_3439);
}
pub inline fn glGetMultiTexParameterfvEXT(arg_3440: GLenum, arg_3441: GLenum, arg_3442: GLenum, arg_3443: [*c]GLfloat) void {
    return epoxy_glGetMultiTexParameterfvEXT.?(arg_3440, arg_3441, arg_3442, arg_3443);
}
pub inline fn glGetMultiTexParameterivEXT(arg_3444: GLenum, arg_3445: GLenum, arg_3446: GLenum, arg_3447: [*c]GLint) void {
    return epoxy_glGetMultiTexParameterivEXT.?(arg_3444, arg_3445, arg_3446, arg_3447);
}
pub inline fn glGetMultisamplefv(arg_3448: GLenum, arg_3449: GLuint, arg_3450: [*c]GLfloat) void {
    return epoxy_glGetMultisamplefv.?(arg_3448, arg_3449, arg_3450);
}
pub inline fn glGetMultisamplefvNV(arg_3451: GLenum, arg_3452: GLuint, arg_3453: [*c]GLfloat) void {
    return epoxy_glGetMultisamplefvNV.?(arg_3451, arg_3452, arg_3453);
}
pub inline fn glGetNamedBufferParameteri64v(arg_3454: GLuint, arg_3455: GLenum, arg_3456: [*c]GLint64) void {
    return epoxy_glGetNamedBufferParameteri64v.?(arg_3454, arg_3455, arg_3456);
}
pub inline fn glGetNamedBufferParameteriv(arg_3457: GLuint, arg_3458: GLenum, arg_3459: [*c]GLint) void {
    return epoxy_glGetNamedBufferParameteriv.?(arg_3457, arg_3458, arg_3459);
}
pub inline fn glGetNamedBufferParameterivEXT(arg_3460: GLuint, arg_3461: GLenum, arg_3462: [*c]GLint) void {
    return epoxy_glGetNamedBufferParameterivEXT.?(arg_3460, arg_3461, arg_3462);
}
pub inline fn glGetNamedBufferParameterui64vNV(arg_3463: GLuint, arg_3464: GLenum, arg_3465: [*c]GLuint64EXT) void {
    return epoxy_glGetNamedBufferParameterui64vNV.?(arg_3463, arg_3464, arg_3465);
}
pub inline fn glGetNamedBufferPointerv(arg_3466: GLuint, arg_3467: GLenum, arg_3468: [*c]?*anyopaque) void {
    return epoxy_glGetNamedBufferPointerv.?(arg_3466, arg_3467, arg_3468);
}
pub inline fn glGetNamedBufferPointervEXT(arg_3469: GLuint, arg_3470: GLenum, arg_3471: [*c]?*anyopaque) void {
    return epoxy_glGetNamedBufferPointervEXT.?(arg_3469, arg_3470, arg_3471);
}
pub inline fn glGetNamedBufferSubData(arg_3472: GLuint, arg_3473: GLintptr, arg_3474: GLsizeiptr, arg_3475: ?*anyopaque) void {
    return epoxy_glGetNamedBufferSubData.?(arg_3472, arg_3473, arg_3474, arg_3475);
}
pub inline fn glGetNamedBufferSubDataEXT(arg_3476: GLuint, arg_3477: GLintptr, arg_3478: GLsizeiptr, arg_3479: ?*anyopaque) void {
    return epoxy_glGetNamedBufferSubDataEXT.?(arg_3476, arg_3477, arg_3478, arg_3479);
}
pub inline fn glGetNamedFramebufferAttachmentParameteriv(arg_3480: GLuint, arg_3481: GLenum, arg_3482: GLenum, arg_3483: [*c]GLint) void {
    return epoxy_glGetNamedFramebufferAttachmentParameteriv.?(arg_3480, arg_3481, arg_3482, arg_3483);
}
pub inline fn glGetNamedFramebufferAttachmentParameterivEXT(arg_3484: GLuint, arg_3485: GLenum, arg_3486: GLenum, arg_3487: [*c]GLint) void {
    return epoxy_glGetNamedFramebufferAttachmentParameterivEXT.?(arg_3484, arg_3485, arg_3486, arg_3487);
}
pub inline fn glGetNamedFramebufferParameterfvAMD(arg_3488: GLuint, arg_3489: GLenum, arg_3490: GLuint, arg_3491: GLuint, arg_3492: GLsizei, arg_3493: [*c]GLfloat) void {
    return epoxy_glGetNamedFramebufferParameterfvAMD.?(arg_3488, arg_3489, arg_3490, arg_3491, arg_3492, arg_3493);
}
pub inline fn glGetNamedFramebufferParameteriv(arg_3494: GLuint, arg_3495: GLenum, arg_3496: [*c]GLint) void {
    return epoxy_glGetNamedFramebufferParameteriv.?(arg_3494, arg_3495, arg_3496);
}
pub inline fn glGetNamedFramebufferParameterivEXT(arg_3497: GLuint, arg_3498: GLenum, arg_3499: [*c]GLint) void {
    return epoxy_glGetNamedFramebufferParameterivEXT.?(arg_3497, arg_3498, arg_3499);
}
pub inline fn glGetNamedProgramLocalParameterIivEXT(arg_3500: GLuint, arg_3501: GLenum, arg_3502: GLuint, arg_3503: [*c]GLint) void {
    return epoxy_glGetNamedProgramLocalParameterIivEXT.?(arg_3500, arg_3501, arg_3502, arg_3503);
}
pub inline fn glGetNamedProgramLocalParameterIuivEXT(arg_3504: GLuint, arg_3505: GLenum, arg_3506: GLuint, arg_3507: [*c]GLuint) void {
    return epoxy_glGetNamedProgramLocalParameterIuivEXT.?(arg_3504, arg_3505, arg_3506, arg_3507);
}
pub inline fn glGetNamedProgramLocalParameterdvEXT(arg_3508: GLuint, arg_3509: GLenum, arg_3510: GLuint, arg_3511: [*c]GLdouble) void {
    return epoxy_glGetNamedProgramLocalParameterdvEXT.?(arg_3508, arg_3509, arg_3510, arg_3511);
}
pub inline fn glGetNamedProgramLocalParameterfvEXT(arg_3512: GLuint, arg_3513: GLenum, arg_3514: GLuint, arg_3515: [*c]GLfloat) void {
    return epoxy_glGetNamedProgramLocalParameterfvEXT.?(arg_3512, arg_3513, arg_3514, arg_3515);
}
pub inline fn glGetNamedProgramStringEXT(arg_3516: GLuint, arg_3517: GLenum, arg_3518: GLenum, arg_3519: ?*anyopaque) void {
    return epoxy_glGetNamedProgramStringEXT.?(arg_3516, arg_3517, arg_3518, arg_3519);
}
pub inline fn glGetNamedProgramivEXT(arg_3520: GLuint, arg_3521: GLenum, arg_3522: GLenum, arg_3523: [*c]GLint) void {
    return epoxy_glGetNamedProgramivEXT.?(arg_3520, arg_3521, arg_3522, arg_3523);
}
pub inline fn glGetNamedRenderbufferParameteriv(arg_3524: GLuint, arg_3525: GLenum, arg_3526: [*c]GLint) void {
    return epoxy_glGetNamedRenderbufferParameteriv.?(arg_3524, arg_3525, arg_3526);
}
pub inline fn glGetNamedRenderbufferParameterivEXT(arg_3527: GLuint, arg_3528: GLenum, arg_3529: [*c]GLint) void {
    return epoxy_glGetNamedRenderbufferParameterivEXT.?(arg_3527, arg_3528, arg_3529);
}
pub inline fn glGetNamedStringARB(arg_3530: GLint, arg_3531: [*c]const GLchar, arg_3532: GLsizei, arg_3533: [*c]GLint, arg_3534: [*c]GLchar) void {
    return epoxy_glGetNamedStringARB.?(arg_3530, arg_3531, arg_3532, arg_3533, arg_3534);
}
pub inline fn glGetNamedStringivARB(arg_3535: GLint, arg_3536: [*c]const GLchar, arg_3537: GLenum, arg_3538: [*c]GLint) void {
    return epoxy_glGetNamedStringivARB.?(arg_3535, arg_3536, arg_3537, arg_3538);
}
pub inline fn glGetNextPerfQueryIdINTEL(arg_3539: GLuint, arg_3540: [*c]GLuint) void {
    return epoxy_glGetNextPerfQueryIdINTEL.?(arg_3539, arg_3540);
}
pub inline fn glGetObjectBufferfvATI(arg_3541: GLuint, arg_3542: GLenum, arg_3543: [*c]GLfloat) void {
    return epoxy_glGetObjectBufferfvATI.?(arg_3541, arg_3542, arg_3543);
}
pub inline fn glGetObjectBufferivATI(arg_3544: GLuint, arg_3545: GLenum, arg_3546: [*c]GLint) void {
    return epoxy_glGetObjectBufferivATI.?(arg_3544, arg_3545, arg_3546);
}
pub inline fn glGetObjectLabel(arg_3547: GLenum, arg_3548: GLuint, arg_3549: GLsizei, arg_3550: [*c]GLsizei, arg_3551: [*c]GLchar) void {
    return epoxy_glGetObjectLabel.?(arg_3547, arg_3548, arg_3549, arg_3550, arg_3551);
}
pub inline fn glGetObjectLabelEXT(arg_3552: GLenum, arg_3553: GLuint, arg_3554: GLsizei, arg_3555: [*c]GLsizei, arg_3556: [*c]GLchar) void {
    return epoxy_glGetObjectLabelEXT.?(arg_3552, arg_3553, arg_3554, arg_3555, arg_3556);
}
pub inline fn glGetObjectLabelKHR(arg_3557: GLenum, arg_3558: GLuint, arg_3559: GLsizei, arg_3560: [*c]GLsizei, arg_3561: [*c]GLchar) void {
    return epoxy_glGetObjectLabelKHR.?(arg_3557, arg_3558, arg_3559, arg_3560, arg_3561);
}
pub inline fn glGetObjectParameterfvARB(arg_3562: GLhandleARB, arg_3563: GLenum, arg_3564: [*c]GLfloat) void {
    return epoxy_glGetObjectParameterfvARB.?(arg_3562, arg_3563, arg_3564);
}
pub inline fn glGetObjectParameterivAPPLE(arg_3565: GLenum, arg_3566: GLuint, arg_3567: GLenum, arg_3568: [*c]GLint) void {
    return epoxy_glGetObjectParameterivAPPLE.?(arg_3565, arg_3566, arg_3567, arg_3568);
}
pub inline fn glGetObjectParameterivARB(arg_3569: GLhandleARB, arg_3570: GLenum, arg_3571: [*c]GLint) void {
    return epoxy_glGetObjectParameterivARB.?(arg_3569, arg_3570, arg_3571);
}
pub inline fn glGetObjectPtrLabel(arg_3572: ?*const anyopaque, arg_3573: GLsizei, arg_3574: [*c]GLsizei, arg_3575: [*c]GLchar) void {
    return epoxy_glGetObjectPtrLabel.?(arg_3572, arg_3573, arg_3574, arg_3575);
}
pub inline fn glGetObjectPtrLabelKHR(arg_3576: ?*const anyopaque, arg_3577: GLsizei, arg_3578: [*c]GLsizei, arg_3579: [*c]GLchar) void {
    return epoxy_glGetObjectPtrLabelKHR.?(arg_3576, arg_3577, arg_3578, arg_3579);
}
pub inline fn glGetOcclusionQueryivNV(arg_3580: GLuint, arg_3581: GLenum, arg_3582: [*c]GLint) void {
    return epoxy_glGetOcclusionQueryivNV.?(arg_3580, arg_3581, arg_3582);
}
pub inline fn glGetOcclusionQueryuivNV(arg_3583: GLuint, arg_3584: GLenum, arg_3585: [*c]GLuint) void {
    return epoxy_glGetOcclusionQueryuivNV.?(arg_3583, arg_3584, arg_3585);
}
pub inline fn glGetPathColorGenfvNV(arg_3586: GLenum, arg_3587: GLenum, arg_3588: [*c]GLfloat) void {
    return epoxy_glGetPathColorGenfvNV.?(arg_3586, arg_3587, arg_3588);
}
pub inline fn glGetPathColorGenivNV(arg_3589: GLenum, arg_3590: GLenum, arg_3591: [*c]GLint) void {
    return epoxy_glGetPathColorGenivNV.?(arg_3589, arg_3590, arg_3591);
}
pub inline fn glGetPathCommandsNV(arg_3592: GLuint, arg_3593: [*c]GLubyte) void {
    return epoxy_glGetPathCommandsNV.?(arg_3592, arg_3593);
}
pub inline fn glGetPathCoordsNV(arg_3594: GLuint, arg_3595: [*c]GLfloat) void {
    return epoxy_glGetPathCoordsNV.?(arg_3594, arg_3595);
}
pub inline fn glGetPathDashArrayNV(arg_3596: GLuint, arg_3597: [*c]GLfloat) void {
    return epoxy_glGetPathDashArrayNV.?(arg_3596, arg_3597);
}
pub inline fn glGetPathLengthNV(arg_3598: GLuint, arg_3599: GLsizei, arg_3600: GLsizei) GLfloat {
    return epoxy_glGetPathLengthNV.?(arg_3598, arg_3599, arg_3600);
}
pub inline fn glGetPathMetricRangeNV(arg_3601: GLbitfield, arg_3602: GLuint, arg_3603: GLsizei, arg_3604: GLsizei, arg_3605: [*c]GLfloat) void {
    return epoxy_glGetPathMetricRangeNV.?(arg_3601, arg_3602, arg_3603, arg_3604, arg_3605);
}
pub inline fn glGetPathMetricsNV(arg_3606: GLbitfield, arg_3607: GLsizei, arg_3608: GLenum, arg_3609: ?*const anyopaque, arg_3610: GLuint, arg_3611: GLsizei, arg_3612: [*c]GLfloat) void {
    return epoxy_glGetPathMetricsNV.?(arg_3606, arg_3607, arg_3608, arg_3609, arg_3610, arg_3611, arg_3612);
}
pub inline fn glGetPathParameterfvNV(arg_3613: GLuint, arg_3614: GLenum, arg_3615: [*c]GLfloat) void {
    return epoxy_glGetPathParameterfvNV.?(arg_3613, arg_3614, arg_3615);
}
pub inline fn glGetPathParameterivNV(arg_3616: GLuint, arg_3617: GLenum, arg_3618: [*c]GLint) void {
    return epoxy_glGetPathParameterivNV.?(arg_3616, arg_3617, arg_3618);
}
pub inline fn glGetPathSpacingNV(arg_3619: GLenum, arg_3620: GLsizei, arg_3621: GLenum, arg_3622: ?*const anyopaque, arg_3623: GLuint, arg_3624: GLfloat, arg_3625: GLfloat, arg_3626: GLenum, arg_3627: [*c]GLfloat) void {
    return epoxy_glGetPathSpacingNV.?(arg_3619, arg_3620, arg_3621, arg_3622, arg_3623, arg_3624, arg_3625, arg_3626, arg_3627);
}
pub inline fn glGetPathTexGenfvNV(arg_3628: GLenum, arg_3629: GLenum, arg_3630: [*c]GLfloat) void {
    return epoxy_glGetPathTexGenfvNV.?(arg_3628, arg_3629, arg_3630);
}
pub inline fn glGetPathTexGenivNV(arg_3631: GLenum, arg_3632: GLenum, arg_3633: [*c]GLint) void {
    return epoxy_glGetPathTexGenivNV.?(arg_3631, arg_3632, arg_3633);
}
pub inline fn glGetPerfCounterInfoINTEL(arg_3634: GLuint, arg_3635: GLuint, arg_3636: GLuint, arg_3637: [*c]GLchar, arg_3638: GLuint, arg_3639: [*c]GLchar, arg_3640: [*c]GLuint, arg_3641: [*c]GLuint, arg_3642: [*c]GLuint, arg_3643: [*c]GLuint, arg_3644: [*c]GLuint64) void {
    return epoxy_glGetPerfCounterInfoINTEL.?(arg_3634, arg_3635, arg_3636, arg_3637, arg_3638, arg_3639, arg_3640, arg_3641, arg_3642, arg_3643, arg_3644);
}
pub inline fn glGetPerfMonitorCounterDataAMD(arg_3645: GLuint, arg_3646: GLenum, arg_3647: GLsizei, arg_3648: [*c]GLuint, arg_3649: [*c]GLint) void {
    return epoxy_glGetPerfMonitorCounterDataAMD.?(arg_3645, arg_3646, arg_3647, arg_3648, arg_3649);
}
pub inline fn glGetPerfMonitorCounterInfoAMD(arg_3650: GLuint, arg_3651: GLuint, arg_3652: GLenum, arg_3653: ?*anyopaque) void {
    return epoxy_glGetPerfMonitorCounterInfoAMD.?(arg_3650, arg_3651, arg_3652, arg_3653);
}
pub inline fn glGetPerfMonitorCounterStringAMD(arg_3654: GLuint, arg_3655: GLuint, arg_3656: GLsizei, arg_3657: [*c]GLsizei, arg_3658: [*c]GLchar) void {
    return epoxy_glGetPerfMonitorCounterStringAMD.?(arg_3654, arg_3655, arg_3656, arg_3657, arg_3658);
}
pub inline fn glGetPerfMonitorCountersAMD(arg_3659: GLuint, arg_3660: [*c]GLint, arg_3661: [*c]GLint, arg_3662: GLsizei, arg_3663: [*c]GLuint) void {
    return epoxy_glGetPerfMonitorCountersAMD.?(arg_3659, arg_3660, arg_3661, arg_3662, arg_3663);
}
pub inline fn glGetPerfMonitorGroupStringAMD(arg_3664: GLuint, arg_3665: GLsizei, arg_3666: [*c]GLsizei, arg_3667: [*c]GLchar) void {
    return epoxy_glGetPerfMonitorGroupStringAMD.?(arg_3664, arg_3665, arg_3666, arg_3667);
}
pub inline fn glGetPerfMonitorGroupsAMD(arg_3668: [*c]GLint, arg_3669: GLsizei, arg_3670: [*c]GLuint) void {
    return epoxy_glGetPerfMonitorGroupsAMD.?(arg_3668, arg_3669, arg_3670);
}
pub inline fn glGetPerfQueryDataINTEL(arg_3671: GLuint, arg_3672: GLuint, arg_3673: GLsizei, arg_3674: ?*anyopaque, arg_3675: [*c]GLuint) void {
    return epoxy_glGetPerfQueryDataINTEL.?(arg_3671, arg_3672, arg_3673, arg_3674, arg_3675);
}
pub inline fn glGetPerfQueryIdByNameINTEL(arg_3676: [*c]GLchar, arg_3677: [*c]GLuint) void {
    return epoxy_glGetPerfQueryIdByNameINTEL.?(arg_3676, arg_3677);
}
pub inline fn glGetPerfQueryInfoINTEL(arg_3678: GLuint, arg_3679: GLuint, arg_3680: [*c]GLchar, arg_3681: [*c]GLuint, arg_3682: [*c]GLuint, arg_3683: [*c]GLuint, arg_3684: [*c]GLuint) void {
    return epoxy_glGetPerfQueryInfoINTEL.?(arg_3678, arg_3679, arg_3680, arg_3681, arg_3682, arg_3683, arg_3684);
}
pub inline fn glGetPixelMapfv(arg_3685: GLenum, arg_3686: [*c]GLfloat) void {
    return epoxy_glGetPixelMapfv.?(arg_3685, arg_3686);
}
pub inline fn glGetPixelMapuiv(arg_3687: GLenum, arg_3688: [*c]GLuint) void {
    return epoxy_glGetPixelMapuiv.?(arg_3687, arg_3688);
}
pub inline fn glGetPixelMapusv(arg_3689: GLenum, arg_3690: [*c]GLushort) void {
    return epoxy_glGetPixelMapusv.?(arg_3689, arg_3690);
}
pub inline fn glGetPixelMapxv(arg_3691: GLenum, arg_3692: GLint, arg_3693: [*c]GLfixed) void {
    return epoxy_glGetPixelMapxv.?(arg_3691, arg_3692, arg_3693);
}
pub inline fn glGetPixelTexGenParameterfvSGIS(arg_3694: GLenum, arg_3695: [*c]GLfloat) void {
    return epoxy_glGetPixelTexGenParameterfvSGIS.?(arg_3694, arg_3695);
}
pub inline fn glGetPixelTexGenParameterivSGIS(arg_3696: GLenum, arg_3697: [*c]GLint) void {
    return epoxy_glGetPixelTexGenParameterivSGIS.?(arg_3696, arg_3697);
}
pub inline fn glGetPixelTransformParameterfvEXT(arg_3698: GLenum, arg_3699: GLenum, arg_3700: [*c]GLfloat) void {
    return epoxy_glGetPixelTransformParameterfvEXT.?(arg_3698, arg_3699, arg_3700);
}
pub inline fn glGetPixelTransformParameterivEXT(arg_3701: GLenum, arg_3702: GLenum, arg_3703: [*c]GLint) void {
    return epoxy_glGetPixelTransformParameterivEXT.?(arg_3701, arg_3702, arg_3703);
}
pub inline fn glGetPointerIndexedvEXT(arg_3704: GLenum, arg_3705: GLuint, arg_3706: [*c]?*anyopaque) void {
    return epoxy_glGetPointerIndexedvEXT.?(arg_3704, arg_3705, arg_3706);
}
pub inline fn glGetPointeri_vEXT(arg_3707: GLenum, arg_3708: GLuint, arg_3709: [*c]?*anyopaque) void {
    return epoxy_glGetPointeri_vEXT.?(arg_3707, arg_3708, arg_3709);
}
pub inline fn glGetPointerv(arg_3710: GLenum, arg_3711: [*c]?*anyopaque) void {
    return epoxy_glGetPointerv.?(arg_3710, arg_3711);
}
pub inline fn glGetPointervEXT(arg_3712: GLenum, arg_3713: [*c]?*anyopaque) void {
    return epoxy_glGetPointervEXT.?(arg_3712, arg_3713);
}
pub inline fn glGetPointervKHR(arg_3714: GLenum, arg_3715: [*c]?*anyopaque) void {
    return epoxy_glGetPointervKHR.?(arg_3714, arg_3715);
}
pub inline fn glGetPolygonStipple(arg_3716: [*c]GLubyte) void {
    return epoxy_glGetPolygonStipple.?(arg_3716);
}
pub inline fn glGetProgramBinary(arg_3717: GLuint, arg_3718: GLsizei, arg_3719: [*c]GLsizei, arg_3720: [*c]GLenum, arg_3721: ?*anyopaque) void {
    return epoxy_glGetProgramBinary.?(arg_3717, arg_3718, arg_3719, arg_3720, arg_3721);
}
pub inline fn glGetProgramBinaryOES(arg_3722: GLuint, arg_3723: GLsizei, arg_3724: [*c]GLsizei, arg_3725: [*c]GLenum, arg_3726: ?*anyopaque) void {
    return epoxy_glGetProgramBinaryOES.?(arg_3722, arg_3723, arg_3724, arg_3725, arg_3726);
}
pub inline fn glGetProgramEnvParameterIivNV(arg_3727: GLenum, arg_3728: GLuint, arg_3729: [*c]GLint) void {
    return epoxy_glGetProgramEnvParameterIivNV.?(arg_3727, arg_3728, arg_3729);
}
pub inline fn glGetProgramEnvParameterIuivNV(arg_3730: GLenum, arg_3731: GLuint, arg_3732: [*c]GLuint) void {
    return epoxy_glGetProgramEnvParameterIuivNV.?(arg_3730, arg_3731, arg_3732);
}
pub inline fn glGetProgramEnvParameterdvARB(arg_3733: GLenum, arg_3734: GLuint, arg_3735: [*c]GLdouble) void {
    return epoxy_glGetProgramEnvParameterdvARB.?(arg_3733, arg_3734, arg_3735);
}
pub inline fn glGetProgramEnvParameterfvARB(arg_3736: GLenum, arg_3737: GLuint, arg_3738: [*c]GLfloat) void {
    return epoxy_glGetProgramEnvParameterfvARB.?(arg_3736, arg_3737, arg_3738);
}
pub inline fn glGetProgramInfoLog(arg_3739: GLuint, arg_3740: GLsizei, arg_3741: [*c]GLsizei, arg_3742: [*c]GLchar) void {
    return epoxy_glGetProgramInfoLog.?(arg_3739, arg_3740, arg_3741, arg_3742);
}
pub inline fn glGetProgramInterfaceiv(arg_3743: GLuint, arg_3744: GLenum, arg_3745: GLenum, arg_3746: [*c]GLint) void {
    return epoxy_glGetProgramInterfaceiv.?(arg_3743, arg_3744, arg_3745, arg_3746);
}
pub inline fn glGetProgramLocalParameterIivNV(arg_3747: GLenum, arg_3748: GLuint, arg_3749: [*c]GLint) void {
    return epoxy_glGetProgramLocalParameterIivNV.?(arg_3747, arg_3748, arg_3749);
}
pub inline fn glGetProgramLocalParameterIuivNV(arg_3750: GLenum, arg_3751: GLuint, arg_3752: [*c]GLuint) void {
    return epoxy_glGetProgramLocalParameterIuivNV.?(arg_3750, arg_3751, arg_3752);
}
pub inline fn glGetProgramLocalParameterdvARB(arg_3753: GLenum, arg_3754: GLuint, arg_3755: [*c]GLdouble) void {
    return epoxy_glGetProgramLocalParameterdvARB.?(arg_3753, arg_3754, arg_3755);
}
pub inline fn glGetProgramLocalParameterfvARB(arg_3756: GLenum, arg_3757: GLuint, arg_3758: [*c]GLfloat) void {
    return epoxy_glGetProgramLocalParameterfvARB.?(arg_3756, arg_3757, arg_3758);
}
pub inline fn glGetProgramNamedParameterdvNV(arg_3759: GLuint, arg_3760: GLsizei, arg_3761: [*c]const GLubyte, arg_3762: [*c]GLdouble) void {
    return epoxy_glGetProgramNamedParameterdvNV.?(arg_3759, arg_3760, arg_3761, arg_3762);
}
pub inline fn glGetProgramNamedParameterfvNV(arg_3763: GLuint, arg_3764: GLsizei, arg_3765: [*c]const GLubyte, arg_3766: [*c]GLfloat) void {
    return epoxy_glGetProgramNamedParameterfvNV.?(arg_3763, arg_3764, arg_3765, arg_3766);
}
pub inline fn glGetProgramParameterdvNV(arg_3767: GLenum, arg_3768: GLuint, arg_3769: GLenum, arg_3770: [*c]GLdouble) void {
    return epoxy_glGetProgramParameterdvNV.?(arg_3767, arg_3768, arg_3769, arg_3770);
}
pub inline fn glGetProgramParameterfvNV(arg_3771: GLenum, arg_3772: GLuint, arg_3773: GLenum, arg_3774: [*c]GLfloat) void {
    return epoxy_glGetProgramParameterfvNV.?(arg_3771, arg_3772, arg_3773, arg_3774);
}
pub inline fn glGetProgramPipelineInfoLog(arg_3775: GLuint, arg_3776: GLsizei, arg_3777: [*c]GLsizei, arg_3778: [*c]GLchar) void {
    return epoxy_glGetProgramPipelineInfoLog.?(arg_3775, arg_3776, arg_3777, arg_3778);
}
pub inline fn glGetProgramPipelineInfoLogEXT(arg_3779: GLuint, arg_3780: GLsizei, arg_3781: [*c]GLsizei, arg_3782: [*c]GLchar) void {
    return epoxy_glGetProgramPipelineInfoLogEXT.?(arg_3779, arg_3780, arg_3781, arg_3782);
}
pub inline fn glGetProgramPipelineiv(arg_3783: GLuint, arg_3784: GLenum, arg_3785: [*c]GLint) void {
    return epoxy_glGetProgramPipelineiv.?(arg_3783, arg_3784, arg_3785);
}
pub inline fn glGetProgramPipelineivEXT(arg_3786: GLuint, arg_3787: GLenum, arg_3788: [*c]GLint) void {
    return epoxy_glGetProgramPipelineivEXT.?(arg_3786, arg_3787, arg_3788);
}
pub inline fn glGetProgramResourceIndex(arg_3789: GLuint, arg_3790: GLenum, arg_3791: [*c]const GLchar) GLuint {
    return epoxy_glGetProgramResourceIndex.?(arg_3789, arg_3790, arg_3791);
}
pub inline fn glGetProgramResourceLocation(arg_3792: GLuint, arg_3793: GLenum, arg_3794: [*c]const GLchar) GLint {
    return epoxy_glGetProgramResourceLocation.?(arg_3792, arg_3793, arg_3794);
}
pub inline fn glGetProgramResourceLocationIndex(arg_3795: GLuint, arg_3796: GLenum, arg_3797: [*c]const GLchar) GLint {
    return epoxy_glGetProgramResourceLocationIndex.?(arg_3795, arg_3796, arg_3797);
}
pub inline fn glGetProgramResourceLocationIndexEXT(arg_3798: GLuint, arg_3799: GLenum, arg_3800: [*c]const GLchar) GLint {
    return epoxy_glGetProgramResourceLocationIndexEXT.?(arg_3798, arg_3799, arg_3800);
}
pub inline fn glGetProgramResourceName(arg_3801: GLuint, arg_3802: GLenum, arg_3803: GLuint, arg_3804: GLsizei, arg_3805: [*c]GLsizei, arg_3806: [*c]GLchar) void {
    return epoxy_glGetProgramResourceName.?(arg_3801, arg_3802, arg_3803, arg_3804, arg_3805, arg_3806);
}
pub inline fn glGetProgramResourcefvNV(arg_3807: GLuint, arg_3808: GLenum, arg_3809: GLuint, arg_3810: GLsizei, arg_3811: [*c]const GLenum, arg_3812: GLsizei, arg_3813: [*c]GLsizei, arg_3814: [*c]GLfloat) void {
    return epoxy_glGetProgramResourcefvNV.?(arg_3807, arg_3808, arg_3809, arg_3810, arg_3811, arg_3812, arg_3813, arg_3814);
}
pub inline fn glGetProgramResourceiv(arg_3815: GLuint, arg_3816: GLenum, arg_3817: GLuint, arg_3818: GLsizei, arg_3819: [*c]const GLenum, arg_3820: GLsizei, arg_3821: [*c]GLsizei, arg_3822: [*c]GLint) void {
    return epoxy_glGetProgramResourceiv.?(arg_3815, arg_3816, arg_3817, arg_3818, arg_3819, arg_3820, arg_3821, arg_3822);
}
pub inline fn glGetProgramStageiv(arg_3823: GLuint, arg_3824: GLenum, arg_3825: GLenum, arg_3826: [*c]GLint) void {
    return epoxy_glGetProgramStageiv.?(arg_3823, arg_3824, arg_3825, arg_3826);
}
pub inline fn glGetProgramStringARB(arg_3827: GLenum, arg_3828: GLenum, arg_3829: ?*anyopaque) void {
    return epoxy_glGetProgramStringARB.?(arg_3827, arg_3828, arg_3829);
}
pub inline fn glGetProgramStringNV(arg_3830: GLuint, arg_3831: GLenum, arg_3832: [*c]GLubyte) void {
    return epoxy_glGetProgramStringNV.?(arg_3830, arg_3831, arg_3832);
}
pub inline fn glGetProgramSubroutineParameteruivNV(arg_3833: GLenum, arg_3834: GLuint, arg_3835: [*c]GLuint) void {
    return epoxy_glGetProgramSubroutineParameteruivNV.?(arg_3833, arg_3834, arg_3835);
}
pub inline fn glGetProgramiv(arg_3836: GLuint, arg_3837: GLenum, arg_3838: [*c]GLint) void {
    return epoxy_glGetProgramiv.?(arg_3836, arg_3837, arg_3838);
}
pub inline fn glGetProgramivARB(arg_3839: GLenum, arg_3840: GLenum, arg_3841: [*c]GLint) void {
    return epoxy_glGetProgramivARB.?(arg_3839, arg_3840, arg_3841);
}
pub inline fn glGetProgramivNV(arg_3842: GLuint, arg_3843: GLenum, arg_3844: [*c]GLint) void {
    return epoxy_glGetProgramivNV.?(arg_3842, arg_3843, arg_3844);
}
pub inline fn glGetQueryBufferObjecti64v(arg_3845: GLuint, arg_3846: GLuint, arg_3847: GLenum, arg_3848: GLintptr) void {
    return epoxy_glGetQueryBufferObjecti64v.?(arg_3845, arg_3846, arg_3847, arg_3848);
}
pub inline fn glGetQueryBufferObjectiv(arg_3849: GLuint, arg_3850: GLuint, arg_3851: GLenum, arg_3852: GLintptr) void {
    return epoxy_glGetQueryBufferObjectiv.?(arg_3849, arg_3850, arg_3851, arg_3852);
}
pub inline fn glGetQueryBufferObjectui64v(arg_3853: GLuint, arg_3854: GLuint, arg_3855: GLenum, arg_3856: GLintptr) void {
    return epoxy_glGetQueryBufferObjectui64v.?(arg_3853, arg_3854, arg_3855, arg_3856);
}
pub inline fn glGetQueryBufferObjectuiv(arg_3857: GLuint, arg_3858: GLuint, arg_3859: GLenum, arg_3860: GLintptr) void {
    return epoxy_glGetQueryBufferObjectuiv.?(arg_3857, arg_3858, arg_3859, arg_3860);
}
pub inline fn glGetQueryIndexediv(arg_3861: GLenum, arg_3862: GLuint, arg_3863: GLenum, arg_3864: [*c]GLint) void {
    return epoxy_glGetQueryIndexediv.?(arg_3861, arg_3862, arg_3863, arg_3864);
}
pub inline fn glGetQueryObjecti64v(arg_3865: GLuint, arg_3866: GLenum, arg_3867: [*c]GLint64) void {
    return epoxy_glGetQueryObjecti64v.?(arg_3865, arg_3866, arg_3867);
}
pub inline fn glGetQueryObjecti64vEXT(arg_3868: GLuint, arg_3869: GLenum, arg_3870: [*c]GLint64) void {
    return epoxy_glGetQueryObjecti64vEXT.?(arg_3868, arg_3869, arg_3870);
}
pub inline fn glGetQueryObjectiv(arg_3871: GLuint, arg_3872: GLenum, arg_3873: [*c]GLint) void {
    return epoxy_glGetQueryObjectiv.?(arg_3871, arg_3872, arg_3873);
}
pub inline fn glGetQueryObjectivARB(arg_3874: GLuint, arg_3875: GLenum, arg_3876: [*c]GLint) void {
    return epoxy_glGetQueryObjectivARB.?(arg_3874, arg_3875, arg_3876);
}
pub inline fn glGetQueryObjectivEXT(arg_3877: GLuint, arg_3878: GLenum, arg_3879: [*c]GLint) void {
    return epoxy_glGetQueryObjectivEXT.?(arg_3877, arg_3878, arg_3879);
}
pub inline fn glGetQueryObjectui64v(arg_3880: GLuint, arg_3881: GLenum, arg_3882: [*c]GLuint64) void {
    return epoxy_glGetQueryObjectui64v.?(arg_3880, arg_3881, arg_3882);
}
pub inline fn glGetQueryObjectui64vEXT(arg_3883: GLuint, arg_3884: GLenum, arg_3885: [*c]GLuint64) void {
    return epoxy_glGetQueryObjectui64vEXT.?(arg_3883, arg_3884, arg_3885);
}
pub inline fn glGetQueryObjectuiv(arg_3886: GLuint, arg_3887: GLenum, arg_3888: [*c]GLuint) void {
    return epoxy_glGetQueryObjectuiv.?(arg_3886, arg_3887, arg_3888);
}
pub inline fn glGetQueryObjectuivARB(arg_3889: GLuint, arg_3890: GLenum, arg_3891: [*c]GLuint) void {
    return epoxy_glGetQueryObjectuivARB.?(arg_3889, arg_3890, arg_3891);
}
pub inline fn glGetQueryObjectuivEXT(arg_3892: GLuint, arg_3893: GLenum, arg_3894: [*c]GLuint) void {
    return epoxy_glGetQueryObjectuivEXT.?(arg_3892, arg_3893, arg_3894);
}
pub inline fn glGetQueryiv(arg_3895: GLenum, arg_3896: GLenum, arg_3897: [*c]GLint) void {
    return epoxy_glGetQueryiv.?(arg_3895, arg_3896, arg_3897);
}
pub inline fn glGetQueryivARB(arg_3898: GLenum, arg_3899: GLenum, arg_3900: [*c]GLint) void {
    return epoxy_glGetQueryivARB.?(arg_3898, arg_3899, arg_3900);
}
pub inline fn glGetQueryivEXT(arg_3901: GLenum, arg_3902: GLenum, arg_3903: [*c]GLint) void {
    return epoxy_glGetQueryivEXT.?(arg_3901, arg_3902, arg_3903);
}
pub inline fn glGetRenderbufferParameteriv(arg_3904: GLenum, arg_3905: GLenum, arg_3906: [*c]GLint) void {
    return epoxy_glGetRenderbufferParameteriv.?(arg_3904, arg_3905, arg_3906);
}
pub inline fn glGetRenderbufferParameterivEXT(arg_3907: GLenum, arg_3908: GLenum, arg_3909: [*c]GLint) void {
    return epoxy_glGetRenderbufferParameterivEXT.?(arg_3907, arg_3908, arg_3909);
}
pub inline fn glGetRenderbufferParameterivOES(arg_3910: GLenum, arg_3911: GLenum, arg_3912: [*c]GLint) void {
    return epoxy_glGetRenderbufferParameterivOES.?(arg_3910, arg_3911, arg_3912);
}
pub inline fn glGetSamplerParameterIiv(arg_3913: GLuint, arg_3914: GLenum, arg_3915: [*c]GLint) void {
    return epoxy_glGetSamplerParameterIiv.?(arg_3913, arg_3914, arg_3915);
}
pub inline fn glGetSamplerParameterIivEXT(arg_3916: GLuint, arg_3917: GLenum, arg_3918: [*c]GLint) void {
    return epoxy_glGetSamplerParameterIivEXT.?(arg_3916, arg_3917, arg_3918);
}
pub inline fn glGetSamplerParameterIivOES(arg_3919: GLuint, arg_3920: GLenum, arg_3921: [*c]GLint) void {
    return epoxy_glGetSamplerParameterIivOES.?(arg_3919, arg_3920, arg_3921);
}
pub inline fn glGetSamplerParameterIuiv(arg_3922: GLuint, arg_3923: GLenum, arg_3924: [*c]GLuint) void {
    return epoxy_glGetSamplerParameterIuiv.?(arg_3922, arg_3923, arg_3924);
}
pub inline fn glGetSamplerParameterIuivEXT(arg_3925: GLuint, arg_3926: GLenum, arg_3927: [*c]GLuint) void {
    return epoxy_glGetSamplerParameterIuivEXT.?(arg_3925, arg_3926, arg_3927);
}
pub inline fn glGetSamplerParameterIuivOES(arg_3928: GLuint, arg_3929: GLenum, arg_3930: [*c]GLuint) void {
    return epoxy_glGetSamplerParameterIuivOES.?(arg_3928, arg_3929, arg_3930);
}
pub inline fn glGetSamplerParameterfv(arg_3931: GLuint, arg_3932: GLenum, arg_3933: [*c]GLfloat) void {
    return epoxy_glGetSamplerParameterfv.?(arg_3931, arg_3932, arg_3933);
}
pub inline fn glGetSamplerParameteriv(arg_3934: GLuint, arg_3935: GLenum, arg_3936: [*c]GLint) void {
    return epoxy_glGetSamplerParameteriv.?(arg_3934, arg_3935, arg_3936);
}
pub inline fn glGetSemaphoreParameterui64vEXT(arg_3937: GLuint, arg_3938: GLenum, arg_3939: [*c]GLuint64) void {
    return epoxy_glGetSemaphoreParameterui64vEXT.?(arg_3937, arg_3938, arg_3939);
}
pub inline fn glGetSeparableFilter(arg_3940: GLenum, arg_3941: GLenum, arg_3942: GLenum, arg_3943: ?*anyopaque, arg_3944: ?*anyopaque, arg_3945: ?*anyopaque) void {
    return epoxy_glGetSeparableFilter.?(arg_3940, arg_3941, arg_3942, arg_3943, arg_3944, arg_3945);
}
pub inline fn glGetSeparableFilterEXT(arg_3946: GLenum, arg_3947: GLenum, arg_3948: GLenum, arg_3949: ?*anyopaque, arg_3950: ?*anyopaque, arg_3951: ?*anyopaque) void {
    return epoxy_glGetSeparableFilterEXT.?(arg_3946, arg_3947, arg_3948, arg_3949, arg_3950, arg_3951);
}
pub inline fn glGetShaderInfoLog(arg_3952: GLuint, arg_3953: GLsizei, arg_3954: [*c]GLsizei, arg_3955: [*c]GLchar) void {
    return epoxy_glGetShaderInfoLog.?(arg_3952, arg_3953, arg_3954, arg_3955);
}
pub inline fn glGetShaderPrecisionFormat(arg_3956: GLenum, arg_3957: GLenum, arg_3958: [*c]GLint, arg_3959: [*c]GLint) void {
    return epoxy_glGetShaderPrecisionFormat.?(arg_3956, arg_3957, arg_3958, arg_3959);
}
pub inline fn glGetShaderSource(arg_3960: GLuint, arg_3961: GLsizei, arg_3962: [*c]GLsizei, arg_3963: [*c]GLchar) void {
    return epoxy_glGetShaderSource.?(arg_3960, arg_3961, arg_3962, arg_3963);
}
pub inline fn glGetShaderSourceARB(arg_3964: GLhandleARB, arg_3965: GLsizei, arg_3966: [*c]GLsizei, arg_3967: [*c]GLcharARB) void {
    return epoxy_glGetShaderSourceARB.?(arg_3964, arg_3965, arg_3966, arg_3967);
}
pub inline fn glGetShaderiv(arg_3968: GLuint, arg_3969: GLenum, arg_3970: [*c]GLint) void {
    return epoxy_glGetShaderiv.?(arg_3968, arg_3969, arg_3970);
}
pub inline fn glGetShadingRateImagePaletteNV(arg_3971: GLuint, arg_3972: GLuint, arg_3973: [*c]GLenum) void {
    return epoxy_glGetShadingRateImagePaletteNV.?(arg_3971, arg_3972, arg_3973);
}
pub inline fn glGetShadingRateSampleLocationivNV(arg_3974: GLenum, arg_3975: GLuint, arg_3976: GLuint, arg_3977: [*c]GLint) void {
    return epoxy_glGetShadingRateSampleLocationivNV.?(arg_3974, arg_3975, arg_3976, arg_3977);
}
pub inline fn glGetSharpenTexFuncSGIS(arg_3978: GLenum, arg_3979: [*c]GLfloat) void {
    return epoxy_glGetSharpenTexFuncSGIS.?(arg_3978, arg_3979);
}
pub inline fn glGetStageIndexNV(arg_3980: GLenum) GLushort {
    return epoxy_glGetStageIndexNV.?(arg_3980);
}
pub inline fn glGetString(arg_3981: GLenum) [*c]const GLubyte {
    return epoxy_glGetString.?(arg_3981);
}
pub inline fn glGetStringi(arg_3982: GLenum, arg_3983: GLuint) [*c]const GLubyte {
    return epoxy_glGetStringi.?(arg_3982, arg_3983);
}
pub inline fn glGetSubroutineIndex(arg_3984: GLuint, arg_3985: GLenum, arg_3986: [*c]const GLchar) GLuint {
    return epoxy_glGetSubroutineIndex.?(arg_3984, arg_3985, arg_3986);
}
pub inline fn glGetSubroutineUniformLocation(arg_3987: GLuint, arg_3988: GLenum, arg_3989: [*c]const GLchar) GLint {
    return epoxy_glGetSubroutineUniformLocation.?(arg_3987, arg_3988, arg_3989);
}
pub inline fn glGetSynciv(arg_3990: GLsync, arg_3991: GLenum, arg_3992: GLsizei, arg_3993: [*c]GLsizei, arg_3994: [*c]GLint) void {
    return epoxy_glGetSynciv.?(arg_3990, arg_3991, arg_3992, arg_3993, arg_3994);
}
pub inline fn glGetSyncivAPPLE(arg_3995: GLsync, arg_3996: GLenum, arg_3997: GLsizei, arg_3998: [*c]GLsizei, arg_3999: [*c]GLint) void {
    return epoxy_glGetSyncivAPPLE.?(arg_3995, arg_3996, arg_3997, arg_3998, arg_3999);
}
pub inline fn glGetTexBumpParameterfvATI(arg_4000: GLenum, arg_4001: [*c]GLfloat) void {
    return epoxy_glGetTexBumpParameterfvATI.?(arg_4000, arg_4001);
}
pub inline fn glGetTexBumpParameterivATI(arg_4002: GLenum, arg_4003: [*c]GLint) void {
    return epoxy_glGetTexBumpParameterivATI.?(arg_4002, arg_4003);
}
pub inline fn glGetTexEnvfv(arg_4004: GLenum, arg_4005: GLenum, arg_4006: [*c]GLfloat) void {
    return epoxy_glGetTexEnvfv.?(arg_4004, arg_4005, arg_4006);
}
pub inline fn glGetTexEnviv(arg_4007: GLenum, arg_4008: GLenum, arg_4009: [*c]GLint) void {
    return epoxy_glGetTexEnviv.?(arg_4007, arg_4008, arg_4009);
}
pub inline fn glGetTexEnvxv(arg_4010: GLenum, arg_4011: GLenum, arg_4012: [*c]GLfixed) void {
    return epoxy_glGetTexEnvxv.?(arg_4010, arg_4011, arg_4012);
}
pub inline fn glGetTexEnvxvOES(arg_4013: GLenum, arg_4014: GLenum, arg_4015: [*c]GLfixed) void {
    return epoxy_glGetTexEnvxvOES.?(arg_4013, arg_4014, arg_4015);
}
pub inline fn glGetTexFilterFuncSGIS(arg_4016: GLenum, arg_4017: GLenum, arg_4018: [*c]GLfloat) void {
    return epoxy_glGetTexFilterFuncSGIS.?(arg_4016, arg_4017, arg_4018);
}
pub inline fn glGetTexGendv(arg_4019: GLenum, arg_4020: GLenum, arg_4021: [*c]GLdouble) void {
    return epoxy_glGetTexGendv.?(arg_4019, arg_4020, arg_4021);
}
pub inline fn glGetTexGenfv(arg_4022: GLenum, arg_4023: GLenum, arg_4024: [*c]GLfloat) void {
    return epoxy_glGetTexGenfv.?(arg_4022, arg_4023, arg_4024);
}
pub inline fn glGetTexGenfvOES(arg_4025: GLenum, arg_4026: GLenum, arg_4027: [*c]GLfloat) void {
    return epoxy_glGetTexGenfvOES.?(arg_4025, arg_4026, arg_4027);
}
pub inline fn glGetTexGeniv(arg_4028: GLenum, arg_4029: GLenum, arg_4030: [*c]GLint) void {
    return epoxy_glGetTexGeniv.?(arg_4028, arg_4029, arg_4030);
}
pub inline fn glGetTexGenivOES(arg_4031: GLenum, arg_4032: GLenum, arg_4033: [*c]GLint) void {
    return epoxy_glGetTexGenivOES.?(arg_4031, arg_4032, arg_4033);
}
pub inline fn glGetTexGenxvOES(arg_4034: GLenum, arg_4035: GLenum, arg_4036: [*c]GLfixed) void {
    return epoxy_glGetTexGenxvOES.?(arg_4034, arg_4035, arg_4036);
}
pub inline fn glGetTexImage(arg_4037: GLenum, arg_4038: GLint, arg_4039: GLenum, arg_4040: GLenum, arg_4041: ?*anyopaque) void {
    return epoxy_glGetTexImage.?(arg_4037, arg_4038, arg_4039, arg_4040, arg_4041);
}
pub inline fn glGetTexLevelParameterfv(arg_4042: GLenum, arg_4043: GLint, arg_4044: GLenum, arg_4045: [*c]GLfloat) void {
    return epoxy_glGetTexLevelParameterfv.?(arg_4042, arg_4043, arg_4044, arg_4045);
}
pub inline fn glGetTexLevelParameteriv(arg_4046: GLenum, arg_4047: GLint, arg_4048: GLenum, arg_4049: [*c]GLint) void {
    return epoxy_glGetTexLevelParameteriv.?(arg_4046, arg_4047, arg_4048, arg_4049);
}
pub inline fn glGetTexLevelParameterxvOES(arg_4050: GLenum, arg_4051: GLint, arg_4052: GLenum, arg_4053: [*c]GLfixed) void {
    return epoxy_glGetTexLevelParameterxvOES.?(arg_4050, arg_4051, arg_4052, arg_4053);
}
pub inline fn glGetTexParameterIiv(arg_4054: GLenum, arg_4055: GLenum, arg_4056: [*c]GLint) void {
    return epoxy_glGetTexParameterIiv.?(arg_4054, arg_4055, arg_4056);
}
pub inline fn glGetTexParameterIivEXT(arg_4057: GLenum, arg_4058: GLenum, arg_4059: [*c]GLint) void {
    return epoxy_glGetTexParameterIivEXT.?(arg_4057, arg_4058, arg_4059);
}
pub inline fn glGetTexParameterIivOES(arg_4060: GLenum, arg_4061: GLenum, arg_4062: [*c]GLint) void {
    return epoxy_glGetTexParameterIivOES.?(arg_4060, arg_4061, arg_4062);
}
pub inline fn glGetTexParameterIuiv(arg_4063: GLenum, arg_4064: GLenum, arg_4065: [*c]GLuint) void {
    return epoxy_glGetTexParameterIuiv.?(arg_4063, arg_4064, arg_4065);
}
pub inline fn glGetTexParameterIuivEXT(arg_4066: GLenum, arg_4067: GLenum, arg_4068: [*c]GLuint) void {
    return epoxy_glGetTexParameterIuivEXT.?(arg_4066, arg_4067, arg_4068);
}
pub inline fn glGetTexParameterIuivOES(arg_4069: GLenum, arg_4070: GLenum, arg_4071: [*c]GLuint) void {
    return epoxy_glGetTexParameterIuivOES.?(arg_4069, arg_4070, arg_4071);
}
pub inline fn glGetTexParameterPointervAPPLE(arg_4072: GLenum, arg_4073: GLenum, arg_4074: [*c]?*anyopaque) void {
    return epoxy_glGetTexParameterPointervAPPLE.?(arg_4072, arg_4073, arg_4074);
}
pub inline fn glGetTexParameterfv(arg_4075: GLenum, arg_4076: GLenum, arg_4077: [*c]GLfloat) void {
    return epoxy_glGetTexParameterfv.?(arg_4075, arg_4076, arg_4077);
}
pub inline fn glGetTexParameteriv(arg_4078: GLenum, arg_4079: GLenum, arg_4080: [*c]GLint) void {
    return epoxy_glGetTexParameteriv.?(arg_4078, arg_4079, arg_4080);
}
pub inline fn glGetTexParameterxv(arg_4081: GLenum, arg_4082: GLenum, arg_4083: [*c]GLfixed) void {
    return epoxy_glGetTexParameterxv.?(arg_4081, arg_4082, arg_4083);
}
pub inline fn glGetTexParameterxvOES(arg_4084: GLenum, arg_4085: GLenum, arg_4086: [*c]GLfixed) void {
    return epoxy_glGetTexParameterxvOES.?(arg_4084, arg_4085, arg_4086);
}
pub inline fn glGetTextureHandleARB(arg_4087: GLuint) GLuint64 {
    return epoxy_glGetTextureHandleARB.?(arg_4087);
}
pub inline fn glGetTextureHandleIMG(arg_4088: GLuint) GLuint64 {
    return epoxy_glGetTextureHandleIMG.?(arg_4088);
}
pub inline fn glGetTextureHandleNV(arg_4089: GLuint) GLuint64 {
    return epoxy_glGetTextureHandleNV.?(arg_4089);
}
pub inline fn glGetTextureImage(arg_4090: GLuint, arg_4091: GLint, arg_4092: GLenum, arg_4093: GLenum, arg_4094: GLsizei, arg_4095: ?*anyopaque) void {
    return epoxy_glGetTextureImage.?(arg_4090, arg_4091, arg_4092, arg_4093, arg_4094, arg_4095);
}
pub inline fn glGetTextureImageEXT(arg_4096: GLuint, arg_4097: GLenum, arg_4098: GLint, arg_4099: GLenum, arg_4100: GLenum, arg_4101: ?*anyopaque) void {
    return epoxy_glGetTextureImageEXT.?(arg_4096, arg_4097, arg_4098, arg_4099, arg_4100, arg_4101);
}
pub inline fn glGetTextureLevelParameterfv(arg_4102: GLuint, arg_4103: GLint, arg_4104: GLenum, arg_4105: [*c]GLfloat) void {
    return epoxy_glGetTextureLevelParameterfv.?(arg_4102, arg_4103, arg_4104, arg_4105);
}
pub inline fn glGetTextureLevelParameterfvEXT(arg_4106: GLuint, arg_4107: GLenum, arg_4108: GLint, arg_4109: GLenum, arg_4110: [*c]GLfloat) void {
    return epoxy_glGetTextureLevelParameterfvEXT.?(arg_4106, arg_4107, arg_4108, arg_4109, arg_4110);
}
pub inline fn glGetTextureLevelParameteriv(arg_4111: GLuint, arg_4112: GLint, arg_4113: GLenum, arg_4114: [*c]GLint) void {
    return epoxy_glGetTextureLevelParameteriv.?(arg_4111, arg_4112, arg_4113, arg_4114);
}
pub inline fn glGetTextureLevelParameterivEXT(arg_4115: GLuint, arg_4116: GLenum, arg_4117: GLint, arg_4118: GLenum, arg_4119: [*c]GLint) void {
    return epoxy_glGetTextureLevelParameterivEXT.?(arg_4115, arg_4116, arg_4117, arg_4118, arg_4119);
}
pub inline fn glGetTextureParameterIiv(arg_4120: GLuint, arg_4121: GLenum, arg_4122: [*c]GLint) void {
    return epoxy_glGetTextureParameterIiv.?(arg_4120, arg_4121, arg_4122);
}
pub inline fn glGetTextureParameterIivEXT(arg_4123: GLuint, arg_4124: GLenum, arg_4125: GLenum, arg_4126: [*c]GLint) void {
    return epoxy_glGetTextureParameterIivEXT.?(arg_4123, arg_4124, arg_4125, arg_4126);
}
pub inline fn glGetTextureParameterIuiv(arg_4127: GLuint, arg_4128: GLenum, arg_4129: [*c]GLuint) void {
    return epoxy_glGetTextureParameterIuiv.?(arg_4127, arg_4128, arg_4129);
}
pub inline fn glGetTextureParameterIuivEXT(arg_4130: GLuint, arg_4131: GLenum, arg_4132: GLenum, arg_4133: [*c]GLuint) void {
    return epoxy_glGetTextureParameterIuivEXT.?(arg_4130, arg_4131, arg_4132, arg_4133);
}
pub inline fn glGetTextureParameterfv(arg_4134: GLuint, arg_4135: GLenum, arg_4136: [*c]GLfloat) void {
    return epoxy_glGetTextureParameterfv.?(arg_4134, arg_4135, arg_4136);
}
pub inline fn glGetTextureParameterfvEXT(arg_4137: GLuint, arg_4138: GLenum, arg_4139: GLenum, arg_4140: [*c]GLfloat) void {
    return epoxy_glGetTextureParameterfvEXT.?(arg_4137, arg_4138, arg_4139, arg_4140);
}
pub inline fn glGetTextureParameteriv(arg_4141: GLuint, arg_4142: GLenum, arg_4143: [*c]GLint) void {
    return epoxy_glGetTextureParameteriv.?(arg_4141, arg_4142, arg_4143);
}
pub inline fn glGetTextureParameterivEXT(arg_4144: GLuint, arg_4145: GLenum, arg_4146: GLenum, arg_4147: [*c]GLint) void {
    return epoxy_glGetTextureParameterivEXT.?(arg_4144, arg_4145, arg_4146, arg_4147);
}
pub inline fn glGetTextureSamplerHandleARB(arg_4148: GLuint, arg_4149: GLuint) GLuint64 {
    return epoxy_glGetTextureSamplerHandleARB.?(arg_4148, arg_4149);
}
pub inline fn glGetTextureSamplerHandleIMG(arg_4150: GLuint, arg_4151: GLuint) GLuint64 {
    return epoxy_glGetTextureSamplerHandleIMG.?(arg_4150, arg_4151);
}
pub inline fn glGetTextureSamplerHandleNV(arg_4152: GLuint, arg_4153: GLuint) GLuint64 {
    return epoxy_glGetTextureSamplerHandleNV.?(arg_4152, arg_4153);
}
pub inline fn glGetTextureSubImage(arg_4154: GLuint, arg_4155: GLint, arg_4156: GLint, arg_4157: GLint, arg_4158: GLint, arg_4159: GLsizei, arg_4160: GLsizei, arg_4161: GLsizei, arg_4162: GLenum, arg_4163: GLenum, arg_4164: GLsizei, arg_4165: ?*anyopaque) void {
    return epoxy_glGetTextureSubImage.?(arg_4154, arg_4155, arg_4156, arg_4157, arg_4158, arg_4159, arg_4160, arg_4161, arg_4162, arg_4163, arg_4164, arg_4165);
}
pub inline fn glGetTrackMatrixivNV(arg_4166: GLenum, arg_4167: GLuint, arg_4168: GLenum, arg_4169: [*c]GLint) void {
    return epoxy_glGetTrackMatrixivNV.?(arg_4166, arg_4167, arg_4168, arg_4169);
}
pub inline fn glGetTransformFeedbackVarying(arg_4170: GLuint, arg_4171: GLuint, arg_4172: GLsizei, arg_4173: [*c]GLsizei, arg_4174: [*c]GLsizei, arg_4175: [*c]GLenum, arg_4176: [*c]GLchar) void {
    return epoxy_glGetTransformFeedbackVarying.?(arg_4170, arg_4171, arg_4172, arg_4173, arg_4174, arg_4175, arg_4176);
}
pub inline fn glGetTransformFeedbackVaryingEXT(arg_4177: GLuint, arg_4178: GLuint, arg_4179: GLsizei, arg_4180: [*c]GLsizei, arg_4181: [*c]GLsizei, arg_4182: [*c]GLenum, arg_4183: [*c]GLchar) void {
    return epoxy_glGetTransformFeedbackVaryingEXT.?(arg_4177, arg_4178, arg_4179, arg_4180, arg_4181, arg_4182, arg_4183);
}
pub inline fn glGetTransformFeedbackVaryingNV(arg_4184: GLuint, arg_4185: GLuint, arg_4186: [*c]GLint) void {
    return epoxy_glGetTransformFeedbackVaryingNV.?(arg_4184, arg_4185, arg_4186);
}
pub inline fn glGetTransformFeedbacki64_v(arg_4187: GLuint, arg_4188: GLenum, arg_4189: GLuint, arg_4190: [*c]GLint64) void {
    return epoxy_glGetTransformFeedbacki64_v.?(arg_4187, arg_4188, arg_4189, arg_4190);
}
pub inline fn glGetTransformFeedbacki_v(arg_4191: GLuint, arg_4192: GLenum, arg_4193: GLuint, arg_4194: [*c]GLint) void {
    return epoxy_glGetTransformFeedbacki_v.?(arg_4191, arg_4192, arg_4193, arg_4194);
}
pub inline fn glGetTransformFeedbackiv(arg_4195: GLuint, arg_4196: GLenum, arg_4197: [*c]GLint) void {
    return epoxy_glGetTransformFeedbackiv.?(arg_4195, arg_4196, arg_4197);
}
pub inline fn glGetTranslatedShaderSourceANGLE(arg_4198: GLuint, arg_4199: GLsizei, arg_4200: [*c]GLsizei, arg_4201: [*c]GLchar) void {
    return epoxy_glGetTranslatedShaderSourceANGLE.?(arg_4198, arg_4199, arg_4200, arg_4201);
}
pub inline fn glGetUniformBlockIndex(arg_4202: GLuint, arg_4203: [*c]const GLchar) GLuint {
    return epoxy_glGetUniformBlockIndex.?(arg_4202, arg_4203);
}
pub inline fn glGetUniformBufferSizeEXT(arg_4204: GLuint, arg_4205: GLint) GLint {
    return epoxy_glGetUniformBufferSizeEXT.?(arg_4204, arg_4205);
}
pub inline fn glGetUniformIndices(arg_4206: GLuint, arg_4207: GLsizei, arg_4208: [*c]const [*c]const GLchar, arg_4209: [*c]GLuint) void {
    return epoxy_glGetUniformIndices.?(arg_4206, arg_4207, arg_4208, arg_4209);
}
pub inline fn glGetUniformLocation(arg_4210: GLuint, arg_4211: [*c]const GLchar) GLint {
    return epoxy_glGetUniformLocation.?(arg_4210, arg_4211);
}
pub inline fn glGetUniformLocationARB(arg_4212: GLhandleARB, arg_4213: [*c]const GLcharARB) GLint {
    return epoxy_glGetUniformLocationARB.?(arg_4212, arg_4213);
}
pub inline fn glGetUniformOffsetEXT(arg_4214: GLuint, arg_4215: GLint) GLintptr {
    return epoxy_glGetUniformOffsetEXT.?(arg_4214, arg_4215);
}
pub inline fn glGetUniformSubroutineuiv(arg_4216: GLenum, arg_4217: GLint, arg_4218: [*c]GLuint) void {
    return epoxy_glGetUniformSubroutineuiv.?(arg_4216, arg_4217, arg_4218);
}
pub inline fn glGetUniformdv(arg_4219: GLuint, arg_4220: GLint, arg_4221: [*c]GLdouble) void {
    return epoxy_glGetUniformdv.?(arg_4219, arg_4220, arg_4221);
}
pub inline fn glGetUniformfv(arg_4222: GLuint, arg_4223: GLint, arg_4224: [*c]GLfloat) void {
    return epoxy_glGetUniformfv.?(arg_4222, arg_4223, arg_4224);
}
pub inline fn glGetUniformfvARB(arg_4225: GLhandleARB, arg_4226: GLint, arg_4227: [*c]GLfloat) void {
    return epoxy_glGetUniformfvARB.?(arg_4225, arg_4226, arg_4227);
}
pub inline fn glGetUniformi64vARB(arg_4228: GLuint, arg_4229: GLint, arg_4230: [*c]GLint64) void {
    return epoxy_glGetUniformi64vARB.?(arg_4228, arg_4229, arg_4230);
}
pub inline fn glGetUniformi64vNV(arg_4231: GLuint, arg_4232: GLint, arg_4233: [*c]GLint64EXT) void {
    return epoxy_glGetUniformi64vNV.?(arg_4231, arg_4232, arg_4233);
}
pub inline fn glGetUniformiv(arg_4234: GLuint, arg_4235: GLint, arg_4236: [*c]GLint) void {
    return epoxy_glGetUniformiv.?(arg_4234, arg_4235, arg_4236);
}
pub inline fn glGetUniformivARB(arg_4237: GLhandleARB, arg_4238: GLint, arg_4239: [*c]GLint) void {
    return epoxy_glGetUniformivARB.?(arg_4237, arg_4238, arg_4239);
}
pub inline fn glGetUniformui64vARB(arg_4240: GLuint, arg_4241: GLint, arg_4242: [*c]GLuint64) void {
    return epoxy_glGetUniformui64vARB.?(arg_4240, arg_4241, arg_4242);
}
pub inline fn glGetUniformui64vNV(arg_4243: GLuint, arg_4244: GLint, arg_4245: [*c]GLuint64EXT) void {
    return epoxy_glGetUniformui64vNV.?(arg_4243, arg_4244, arg_4245);
}
pub inline fn glGetUniformuiv(arg_4246: GLuint, arg_4247: GLint, arg_4248: [*c]GLuint) void {
    return epoxy_glGetUniformuiv.?(arg_4246, arg_4247, arg_4248);
}
pub inline fn glGetUniformuivEXT(arg_4249: GLuint, arg_4250: GLint, arg_4251: [*c]GLuint) void {
    return epoxy_glGetUniformuivEXT.?(arg_4249, arg_4250, arg_4251);
}
pub inline fn glGetUnsignedBytei_vEXT(arg_4252: GLenum, arg_4253: GLuint, arg_4254: [*c]GLubyte) void {
    return epoxy_glGetUnsignedBytei_vEXT.?(arg_4252, arg_4253, arg_4254);
}
pub inline fn glGetUnsignedBytevEXT(arg_4255: GLenum, arg_4256: [*c]GLubyte) void {
    return epoxy_glGetUnsignedBytevEXT.?(arg_4255, arg_4256);
}
pub inline fn glGetVariantArrayObjectfvATI(arg_4257: GLuint, arg_4258: GLenum, arg_4259: [*c]GLfloat) void {
    return epoxy_glGetVariantArrayObjectfvATI.?(arg_4257, arg_4258, arg_4259);
}
pub inline fn glGetVariantArrayObjectivATI(arg_4260: GLuint, arg_4261: GLenum, arg_4262: [*c]GLint) void {
    return epoxy_glGetVariantArrayObjectivATI.?(arg_4260, arg_4261, arg_4262);
}
pub inline fn glGetVariantBooleanvEXT(arg_4263: GLuint, arg_4264: GLenum, arg_4265: [*c]GLboolean) void {
    return epoxy_glGetVariantBooleanvEXT.?(arg_4263, arg_4264, arg_4265);
}
pub inline fn glGetVariantFloatvEXT(arg_4266: GLuint, arg_4267: GLenum, arg_4268: [*c]GLfloat) void {
    return epoxy_glGetVariantFloatvEXT.?(arg_4266, arg_4267, arg_4268);
}
pub inline fn glGetVariantIntegervEXT(arg_4269: GLuint, arg_4270: GLenum, arg_4271: [*c]GLint) void {
    return epoxy_glGetVariantIntegervEXT.?(arg_4269, arg_4270, arg_4271);
}
pub inline fn glGetVariantPointervEXT(arg_4272: GLuint, arg_4273: GLenum, arg_4274: [*c]?*anyopaque) void {
    return epoxy_glGetVariantPointervEXT.?(arg_4272, arg_4273, arg_4274);
}
pub inline fn glGetVaryingLocationNV(arg_4275: GLuint, arg_4276: [*c]const GLchar) GLint {
    return epoxy_glGetVaryingLocationNV.?(arg_4275, arg_4276);
}
pub inline fn glGetVertexArrayIndexed64iv(arg_4277: GLuint, arg_4278: GLuint, arg_4279: GLenum, arg_4280: [*c]GLint64) void {
    return epoxy_glGetVertexArrayIndexed64iv.?(arg_4277, arg_4278, arg_4279, arg_4280);
}
pub inline fn glGetVertexArrayIndexediv(arg_4281: GLuint, arg_4282: GLuint, arg_4283: GLenum, arg_4284: [*c]GLint) void {
    return epoxy_glGetVertexArrayIndexediv.?(arg_4281, arg_4282, arg_4283, arg_4284);
}
pub inline fn glGetVertexArrayIntegeri_vEXT(arg_4285: GLuint, arg_4286: GLuint, arg_4287: GLenum, arg_4288: [*c]GLint) void {
    return epoxy_glGetVertexArrayIntegeri_vEXT.?(arg_4285, arg_4286, arg_4287, arg_4288);
}
pub inline fn glGetVertexArrayIntegervEXT(arg_4289: GLuint, arg_4290: GLenum, arg_4291: [*c]GLint) void {
    return epoxy_glGetVertexArrayIntegervEXT.?(arg_4289, arg_4290, arg_4291);
}
pub inline fn glGetVertexArrayPointeri_vEXT(arg_4292: GLuint, arg_4293: GLuint, arg_4294: GLenum, arg_4295: [*c]?*anyopaque) void {
    return epoxy_glGetVertexArrayPointeri_vEXT.?(arg_4292, arg_4293, arg_4294, arg_4295);
}
pub inline fn glGetVertexArrayPointervEXT(arg_4296: GLuint, arg_4297: GLenum, arg_4298: [*c]?*anyopaque) void {
    return epoxy_glGetVertexArrayPointervEXT.?(arg_4296, arg_4297, arg_4298);
}
pub inline fn glGetVertexArrayiv(arg_4299: GLuint, arg_4300: GLenum, arg_4301: [*c]GLint) void {
    return epoxy_glGetVertexArrayiv.?(arg_4299, arg_4300, arg_4301);
}
pub inline fn glGetVertexAttribArrayObjectfvATI(arg_4302: GLuint, arg_4303: GLenum, arg_4304: [*c]GLfloat) void {
    return epoxy_glGetVertexAttribArrayObjectfvATI.?(arg_4302, arg_4303, arg_4304);
}
pub inline fn glGetVertexAttribArrayObjectivATI(arg_4305: GLuint, arg_4306: GLenum, arg_4307: [*c]GLint) void {
    return epoxy_glGetVertexAttribArrayObjectivATI.?(arg_4305, arg_4306, arg_4307);
}
pub inline fn glGetVertexAttribIiv(arg_4308: GLuint, arg_4309: GLenum, arg_4310: [*c]GLint) void {
    return epoxy_glGetVertexAttribIiv.?(arg_4308, arg_4309, arg_4310);
}
pub inline fn glGetVertexAttribIivEXT(arg_4311: GLuint, arg_4312: GLenum, arg_4313: [*c]GLint) void {
    return epoxy_glGetVertexAttribIivEXT.?(arg_4311, arg_4312, arg_4313);
}
pub inline fn glGetVertexAttribIuiv(arg_4314: GLuint, arg_4315: GLenum, arg_4316: [*c]GLuint) void {
    return epoxy_glGetVertexAttribIuiv.?(arg_4314, arg_4315, arg_4316);
}
pub inline fn glGetVertexAttribIuivEXT(arg_4317: GLuint, arg_4318: GLenum, arg_4319: [*c]GLuint) void {
    return epoxy_glGetVertexAttribIuivEXT.?(arg_4317, arg_4318, arg_4319);
}
pub inline fn glGetVertexAttribLdv(arg_4320: GLuint, arg_4321: GLenum, arg_4322: [*c]GLdouble) void {
    return epoxy_glGetVertexAttribLdv.?(arg_4320, arg_4321, arg_4322);
}
pub inline fn glGetVertexAttribLdvEXT(arg_4323: GLuint, arg_4324: GLenum, arg_4325: [*c]GLdouble) void {
    return epoxy_glGetVertexAttribLdvEXT.?(arg_4323, arg_4324, arg_4325);
}
pub inline fn glGetVertexAttribLi64vNV(arg_4326: GLuint, arg_4327: GLenum, arg_4328: [*c]GLint64EXT) void {
    return epoxy_glGetVertexAttribLi64vNV.?(arg_4326, arg_4327, arg_4328);
}
pub inline fn glGetVertexAttribLui64vARB(arg_4329: GLuint, arg_4330: GLenum, arg_4331: [*c]GLuint64EXT) void {
    return epoxy_glGetVertexAttribLui64vARB.?(arg_4329, arg_4330, arg_4331);
}
pub inline fn glGetVertexAttribLui64vNV(arg_4332: GLuint, arg_4333: GLenum, arg_4334: [*c]GLuint64EXT) void {
    return epoxy_glGetVertexAttribLui64vNV.?(arg_4332, arg_4333, arg_4334);
}
pub inline fn glGetVertexAttribPointerv(arg_4335: GLuint, arg_4336: GLenum, arg_4337: [*c]?*anyopaque) void {
    return epoxy_glGetVertexAttribPointerv.?(arg_4335, arg_4336, arg_4337);
}
pub inline fn glGetVertexAttribPointervARB(arg_4338: GLuint, arg_4339: GLenum, arg_4340: [*c]?*anyopaque) void {
    return epoxy_glGetVertexAttribPointervARB.?(arg_4338, arg_4339, arg_4340);
}
pub inline fn glGetVertexAttribPointervNV(arg_4341: GLuint, arg_4342: GLenum, arg_4343: [*c]?*anyopaque) void {
    return epoxy_glGetVertexAttribPointervNV.?(arg_4341, arg_4342, arg_4343);
}
pub inline fn glGetVertexAttribdv(arg_4344: GLuint, arg_4345: GLenum, arg_4346: [*c]GLdouble) void {
    return epoxy_glGetVertexAttribdv.?(arg_4344, arg_4345, arg_4346);
}
pub inline fn glGetVertexAttribdvARB(arg_4347: GLuint, arg_4348: GLenum, arg_4349: [*c]GLdouble) void {
    return epoxy_glGetVertexAttribdvARB.?(arg_4347, arg_4348, arg_4349);
}
pub inline fn glGetVertexAttribdvNV(arg_4350: GLuint, arg_4351: GLenum, arg_4352: [*c]GLdouble) void {
    return epoxy_glGetVertexAttribdvNV.?(arg_4350, arg_4351, arg_4352);
}
pub inline fn glGetVertexAttribfv(arg_4353: GLuint, arg_4354: GLenum, arg_4355: [*c]GLfloat) void {
    return epoxy_glGetVertexAttribfv.?(arg_4353, arg_4354, arg_4355);
}
pub inline fn glGetVertexAttribfvARB(arg_4356: GLuint, arg_4357: GLenum, arg_4358: [*c]GLfloat) void {
    return epoxy_glGetVertexAttribfvARB.?(arg_4356, arg_4357, arg_4358);
}
pub inline fn glGetVertexAttribfvNV(arg_4359: GLuint, arg_4360: GLenum, arg_4361: [*c]GLfloat) void {
    return epoxy_glGetVertexAttribfvNV.?(arg_4359, arg_4360, arg_4361);
}
pub inline fn glGetVertexAttribiv(arg_4362: GLuint, arg_4363: GLenum, arg_4364: [*c]GLint) void {
    return epoxy_glGetVertexAttribiv.?(arg_4362, arg_4363, arg_4364);
}
pub inline fn glGetVertexAttribivARB(arg_4365: GLuint, arg_4366: GLenum, arg_4367: [*c]GLint) void {
    return epoxy_glGetVertexAttribivARB.?(arg_4365, arg_4366, arg_4367);
}
pub inline fn glGetVertexAttribivNV(arg_4368: GLuint, arg_4369: GLenum, arg_4370: [*c]GLint) void {
    return epoxy_glGetVertexAttribivNV.?(arg_4368, arg_4369, arg_4370);
}
pub inline fn glGetVideoCaptureStreamdvNV(arg_4371: GLuint, arg_4372: GLuint, arg_4373: GLenum, arg_4374: [*c]GLdouble) void {
    return epoxy_glGetVideoCaptureStreamdvNV.?(arg_4371, arg_4372, arg_4373, arg_4374);
}
pub inline fn glGetVideoCaptureStreamfvNV(arg_4375: GLuint, arg_4376: GLuint, arg_4377: GLenum, arg_4378: [*c]GLfloat) void {
    return epoxy_glGetVideoCaptureStreamfvNV.?(arg_4375, arg_4376, arg_4377, arg_4378);
}
pub inline fn glGetVideoCaptureStreamivNV(arg_4379: GLuint, arg_4380: GLuint, arg_4381: GLenum, arg_4382: [*c]GLint) void {
    return epoxy_glGetVideoCaptureStreamivNV.?(arg_4379, arg_4380, arg_4381, arg_4382);
}
pub inline fn glGetVideoCaptureivNV(arg_4383: GLuint, arg_4384: GLenum, arg_4385: [*c]GLint) void {
    return epoxy_glGetVideoCaptureivNV.?(arg_4383, arg_4384, arg_4385);
}
pub inline fn glGetVideoi64vNV(arg_4386: GLuint, arg_4387: GLenum, arg_4388: [*c]GLint64EXT) void {
    return epoxy_glGetVideoi64vNV.?(arg_4386, arg_4387, arg_4388);
}
pub inline fn glGetVideoivNV(arg_4389: GLuint, arg_4390: GLenum, arg_4391: [*c]GLint) void {
    return epoxy_glGetVideoivNV.?(arg_4389, arg_4390, arg_4391);
}
pub inline fn glGetVideoui64vNV(arg_4392: GLuint, arg_4393: GLenum, arg_4394: [*c]GLuint64EXT) void {
    return epoxy_glGetVideoui64vNV.?(arg_4392, arg_4393, arg_4394);
}
pub inline fn glGetVideouivNV(arg_4395: GLuint, arg_4396: GLenum, arg_4397: [*c]GLuint) void {
    return epoxy_glGetVideouivNV.?(arg_4395, arg_4396, arg_4397);
}
pub inline fn glGetVkProcAddrNV(arg_4398: [*c]const GLchar) GLVULKANPROCNV {
    return epoxy_glGetVkProcAddrNV.?(arg_4398);
}
pub inline fn glGetnColorTable(arg_4399: GLenum, arg_4400: GLenum, arg_4401: GLenum, arg_4402: GLsizei, arg_4403: ?*anyopaque) void {
    return epoxy_glGetnColorTable.?(arg_4399, arg_4400, arg_4401, arg_4402, arg_4403);
}
pub inline fn glGetnColorTableARB(arg_4404: GLenum, arg_4405: GLenum, arg_4406: GLenum, arg_4407: GLsizei, arg_4408: ?*anyopaque) void {
    return epoxy_glGetnColorTableARB.?(arg_4404, arg_4405, arg_4406, arg_4407, arg_4408);
}
pub inline fn glGetnCompressedTexImage(arg_4409: GLenum, arg_4410: GLint, arg_4411: GLsizei, arg_4412: ?*anyopaque) void {
    return epoxy_glGetnCompressedTexImage.?(arg_4409, arg_4410, arg_4411, arg_4412);
}
pub inline fn glGetnCompressedTexImageARB(arg_4413: GLenum, arg_4414: GLint, arg_4415: GLsizei, arg_4416: ?*anyopaque) void {
    return epoxy_glGetnCompressedTexImageARB.?(arg_4413, arg_4414, arg_4415, arg_4416);
}
pub inline fn glGetnConvolutionFilter(arg_4417: GLenum, arg_4418: GLenum, arg_4419: GLenum, arg_4420: GLsizei, arg_4421: ?*anyopaque) void {
    return epoxy_glGetnConvolutionFilter.?(arg_4417, arg_4418, arg_4419, arg_4420, arg_4421);
}
pub inline fn glGetnConvolutionFilterARB(arg_4422: GLenum, arg_4423: GLenum, arg_4424: GLenum, arg_4425: GLsizei, arg_4426: ?*anyopaque) void {
    return epoxy_glGetnConvolutionFilterARB.?(arg_4422, arg_4423, arg_4424, arg_4425, arg_4426);
}
pub inline fn glGetnHistogram(arg_4427: GLenum, arg_4428: GLboolean, arg_4429: GLenum, arg_4430: GLenum, arg_4431: GLsizei, arg_4432: ?*anyopaque) void {
    return epoxy_glGetnHistogram.?(arg_4427, arg_4428, arg_4429, arg_4430, arg_4431, arg_4432);
}
pub inline fn glGetnHistogramARB(arg_4433: GLenum, arg_4434: GLboolean, arg_4435: GLenum, arg_4436: GLenum, arg_4437: GLsizei, arg_4438: ?*anyopaque) void {
    return epoxy_glGetnHistogramARB.?(arg_4433, arg_4434, arg_4435, arg_4436, arg_4437, arg_4438);
}
pub inline fn glGetnMapdv(arg_4439: GLenum, arg_4440: GLenum, arg_4441: GLsizei, arg_4442: [*c]GLdouble) void {
    return epoxy_glGetnMapdv.?(arg_4439, arg_4440, arg_4441, arg_4442);
}
pub inline fn glGetnMapdvARB(arg_4443: GLenum, arg_4444: GLenum, arg_4445: GLsizei, arg_4446: [*c]GLdouble) void {
    return epoxy_glGetnMapdvARB.?(arg_4443, arg_4444, arg_4445, arg_4446);
}
pub inline fn glGetnMapfv(arg_4447: GLenum, arg_4448: GLenum, arg_4449: GLsizei, arg_4450: [*c]GLfloat) void {
    return epoxy_glGetnMapfv.?(arg_4447, arg_4448, arg_4449, arg_4450);
}
pub inline fn glGetnMapfvARB(arg_4451: GLenum, arg_4452: GLenum, arg_4453: GLsizei, arg_4454: [*c]GLfloat) void {
    return epoxy_glGetnMapfvARB.?(arg_4451, arg_4452, arg_4453, arg_4454);
}
pub inline fn glGetnMapiv(arg_4455: GLenum, arg_4456: GLenum, arg_4457: GLsizei, arg_4458: [*c]GLint) void {
    return epoxy_glGetnMapiv.?(arg_4455, arg_4456, arg_4457, arg_4458);
}
pub inline fn glGetnMapivARB(arg_4459: GLenum, arg_4460: GLenum, arg_4461: GLsizei, arg_4462: [*c]GLint) void {
    return epoxy_glGetnMapivARB.?(arg_4459, arg_4460, arg_4461, arg_4462);
}
pub inline fn glGetnMinmax(arg_4463: GLenum, arg_4464: GLboolean, arg_4465: GLenum, arg_4466: GLenum, arg_4467: GLsizei, arg_4468: ?*anyopaque) void {
    return epoxy_glGetnMinmax.?(arg_4463, arg_4464, arg_4465, arg_4466, arg_4467, arg_4468);
}
pub inline fn glGetnMinmaxARB(arg_4469: GLenum, arg_4470: GLboolean, arg_4471: GLenum, arg_4472: GLenum, arg_4473: GLsizei, arg_4474: ?*anyopaque) void {
    return epoxy_glGetnMinmaxARB.?(arg_4469, arg_4470, arg_4471, arg_4472, arg_4473, arg_4474);
}
pub inline fn glGetnPixelMapfv(arg_4475: GLenum, arg_4476: GLsizei, arg_4477: [*c]GLfloat) void {
    return epoxy_glGetnPixelMapfv.?(arg_4475, arg_4476, arg_4477);
}
pub inline fn glGetnPixelMapfvARB(arg_4478: GLenum, arg_4479: GLsizei, arg_4480: [*c]GLfloat) void {
    return epoxy_glGetnPixelMapfvARB.?(arg_4478, arg_4479, arg_4480);
}
pub inline fn glGetnPixelMapuiv(arg_4481: GLenum, arg_4482: GLsizei, arg_4483: [*c]GLuint) void {
    return epoxy_glGetnPixelMapuiv.?(arg_4481, arg_4482, arg_4483);
}
pub inline fn glGetnPixelMapuivARB(arg_4484: GLenum, arg_4485: GLsizei, arg_4486: [*c]GLuint) void {
    return epoxy_glGetnPixelMapuivARB.?(arg_4484, arg_4485, arg_4486);
}
pub inline fn glGetnPixelMapusv(arg_4487: GLenum, arg_4488: GLsizei, arg_4489: [*c]GLushort) void {
    return epoxy_glGetnPixelMapusv.?(arg_4487, arg_4488, arg_4489);
}
pub inline fn glGetnPixelMapusvARB(arg_4490: GLenum, arg_4491: GLsizei, arg_4492: [*c]GLushort) void {
    return epoxy_glGetnPixelMapusvARB.?(arg_4490, arg_4491, arg_4492);
}
pub inline fn glGetnPolygonStipple(arg_4493: GLsizei, arg_4494: [*c]GLubyte) void {
    return epoxy_glGetnPolygonStipple.?(arg_4493, arg_4494);
}
pub inline fn glGetnPolygonStippleARB(arg_4495: GLsizei, arg_4496: [*c]GLubyte) void {
    return epoxy_glGetnPolygonStippleARB.?(arg_4495, arg_4496);
}
pub inline fn glGetnSeparableFilter(arg_4497: GLenum, arg_4498: GLenum, arg_4499: GLenum, arg_4500: GLsizei, arg_4501: ?*anyopaque, arg_4502: GLsizei, arg_4503: ?*anyopaque, arg_4504: ?*anyopaque) void {
    return epoxy_glGetnSeparableFilter.?(arg_4497, arg_4498, arg_4499, arg_4500, arg_4501, arg_4502, arg_4503, arg_4504);
}
pub inline fn glGetnSeparableFilterARB(arg_4505: GLenum, arg_4506: GLenum, arg_4507: GLenum, arg_4508: GLsizei, arg_4509: ?*anyopaque, arg_4510: GLsizei, arg_4511: ?*anyopaque, arg_4512: ?*anyopaque) void {
    return epoxy_glGetnSeparableFilterARB.?(arg_4505, arg_4506, arg_4507, arg_4508, arg_4509, arg_4510, arg_4511, arg_4512);
}
pub inline fn glGetnTexImage(arg_4513: GLenum, arg_4514: GLint, arg_4515: GLenum, arg_4516: GLenum, arg_4517: GLsizei, arg_4518: ?*anyopaque) void {
    return epoxy_glGetnTexImage.?(arg_4513, arg_4514, arg_4515, arg_4516, arg_4517, arg_4518);
}
pub inline fn glGetnTexImageARB(arg_4519: GLenum, arg_4520: GLint, arg_4521: GLenum, arg_4522: GLenum, arg_4523: GLsizei, arg_4524: ?*anyopaque) void {
    return epoxy_glGetnTexImageARB.?(arg_4519, arg_4520, arg_4521, arg_4522, arg_4523, arg_4524);
}
pub inline fn glGetnUniformdv(arg_4525: GLuint, arg_4526: GLint, arg_4527: GLsizei, arg_4528: [*c]GLdouble) void {
    return epoxy_glGetnUniformdv.?(arg_4525, arg_4526, arg_4527, arg_4528);
}
pub inline fn glGetnUniformdvARB(arg_4529: GLuint, arg_4530: GLint, arg_4531: GLsizei, arg_4532: [*c]GLdouble) void {
    return epoxy_glGetnUniformdvARB.?(arg_4529, arg_4530, arg_4531, arg_4532);
}
pub inline fn glGetnUniformfv(arg_4533: GLuint, arg_4534: GLint, arg_4535: GLsizei, arg_4536: [*c]GLfloat) void {
    return epoxy_glGetnUniformfv.?(arg_4533, arg_4534, arg_4535, arg_4536);
}
pub inline fn glGetnUniformfvARB(arg_4537: GLuint, arg_4538: GLint, arg_4539: GLsizei, arg_4540: [*c]GLfloat) void {
    return epoxy_glGetnUniformfvARB.?(arg_4537, arg_4538, arg_4539, arg_4540);
}
pub inline fn glGetnUniformfvEXT(arg_4541: GLuint, arg_4542: GLint, arg_4543: GLsizei, arg_4544: [*c]GLfloat) void {
    return epoxy_glGetnUniformfvEXT.?(arg_4541, arg_4542, arg_4543, arg_4544);
}
pub inline fn glGetnUniformfvKHR(arg_4545: GLuint, arg_4546: GLint, arg_4547: GLsizei, arg_4548: [*c]GLfloat) void {
    return epoxy_glGetnUniformfvKHR.?(arg_4545, arg_4546, arg_4547, arg_4548);
}
pub inline fn glGetnUniformi64vARB(arg_4549: GLuint, arg_4550: GLint, arg_4551: GLsizei, arg_4552: [*c]GLint64) void {
    return epoxy_glGetnUniformi64vARB.?(arg_4549, arg_4550, arg_4551, arg_4552);
}
pub inline fn glGetnUniformiv(arg_4553: GLuint, arg_4554: GLint, arg_4555: GLsizei, arg_4556: [*c]GLint) void {
    return epoxy_glGetnUniformiv.?(arg_4553, arg_4554, arg_4555, arg_4556);
}
pub inline fn glGetnUniformivARB(arg_4557: GLuint, arg_4558: GLint, arg_4559: GLsizei, arg_4560: [*c]GLint) void {
    return epoxy_glGetnUniformivARB.?(arg_4557, arg_4558, arg_4559, arg_4560);
}
pub inline fn glGetnUniformivEXT(arg_4561: GLuint, arg_4562: GLint, arg_4563: GLsizei, arg_4564: [*c]GLint) void {
    return epoxy_glGetnUniformivEXT.?(arg_4561, arg_4562, arg_4563, arg_4564);
}
pub inline fn glGetnUniformivKHR(arg_4565: GLuint, arg_4566: GLint, arg_4567: GLsizei, arg_4568: [*c]GLint) void {
    return epoxy_glGetnUniformivKHR.?(arg_4565, arg_4566, arg_4567, arg_4568);
}
pub inline fn glGetnUniformui64vARB(arg_4569: GLuint, arg_4570: GLint, arg_4571: GLsizei, arg_4572: [*c]GLuint64) void {
    return epoxy_glGetnUniformui64vARB.?(arg_4569, arg_4570, arg_4571, arg_4572);
}
pub inline fn glGetnUniformuiv(arg_4573: GLuint, arg_4574: GLint, arg_4575: GLsizei, arg_4576: [*c]GLuint) void {
    return epoxy_glGetnUniformuiv.?(arg_4573, arg_4574, arg_4575, arg_4576);
}
pub inline fn glGetnUniformuivARB(arg_4577: GLuint, arg_4578: GLint, arg_4579: GLsizei, arg_4580: [*c]GLuint) void {
    return epoxy_glGetnUniformuivARB.?(arg_4577, arg_4578, arg_4579, arg_4580);
}
pub inline fn glGetnUniformuivKHR(arg_4581: GLuint, arg_4582: GLint, arg_4583: GLsizei, arg_4584: [*c]GLuint) void {
    return epoxy_glGetnUniformuivKHR.?(arg_4581, arg_4582, arg_4583, arg_4584);
}
pub inline fn glGlobalAlphaFactorbSUN(arg_4585: GLbyte) void {
    return epoxy_glGlobalAlphaFactorbSUN.?(arg_4585);
}
pub inline fn glGlobalAlphaFactordSUN(arg_4586: GLdouble) void {
    return epoxy_glGlobalAlphaFactordSUN.?(arg_4586);
}
pub inline fn glGlobalAlphaFactorfSUN(arg_4587: GLfloat) void {
    return epoxy_glGlobalAlphaFactorfSUN.?(arg_4587);
}
pub inline fn glGlobalAlphaFactoriSUN(arg_4588: GLint) void {
    return epoxy_glGlobalAlphaFactoriSUN.?(arg_4588);
}
pub inline fn glGlobalAlphaFactorsSUN(arg_4589: GLshort) void {
    return epoxy_glGlobalAlphaFactorsSUN.?(arg_4589);
}
pub inline fn glGlobalAlphaFactorubSUN(arg_4590: GLubyte) void {
    return epoxy_glGlobalAlphaFactorubSUN.?(arg_4590);
}
pub inline fn glGlobalAlphaFactoruiSUN(arg_4591: GLuint) void {
    return epoxy_glGlobalAlphaFactoruiSUN.?(arg_4591);
}
pub inline fn glGlobalAlphaFactorusSUN(arg_4592: GLushort) void {
    return epoxy_glGlobalAlphaFactorusSUN.?(arg_4592);
}
pub inline fn glHint(arg_4593: GLenum, arg_4594: GLenum) void {
    return epoxy_glHint.?(arg_4593, arg_4594);
}
pub inline fn glHintPGI(arg_4595: GLenum, arg_4596: GLint) void {
    return epoxy_glHintPGI.?(arg_4595, arg_4596);
}
pub inline fn glHistogram(arg_4597: GLenum, arg_4598: GLsizei, arg_4599: GLenum, arg_4600: GLboolean) void {
    return epoxy_glHistogram.?(arg_4597, arg_4598, arg_4599, arg_4600);
}
pub inline fn glHistogramEXT(arg_4601: GLenum, arg_4602: GLsizei, arg_4603: GLenum, arg_4604: GLboolean) void {
    return epoxy_glHistogramEXT.?(arg_4601, arg_4602, arg_4603, arg_4604);
}
pub inline fn glIglooInterfaceSGIX(arg_4605: GLenum, arg_4606: ?*const anyopaque) void {
    return epoxy_glIglooInterfaceSGIX.?(arg_4605, arg_4606);
}
pub inline fn glImageTransformParameterfHP(arg_4607: GLenum, arg_4608: GLenum, arg_4609: GLfloat) void {
    return epoxy_glImageTransformParameterfHP.?(arg_4607, arg_4608, arg_4609);
}
pub inline fn glImageTransformParameterfvHP(arg_4610: GLenum, arg_4611: GLenum, arg_4612: [*c]const GLfloat) void {
    return epoxy_glImageTransformParameterfvHP.?(arg_4610, arg_4611, arg_4612);
}
pub inline fn glImageTransformParameteriHP(arg_4613: GLenum, arg_4614: GLenum, arg_4615: GLint) void {
    return epoxy_glImageTransformParameteriHP.?(arg_4613, arg_4614, arg_4615);
}
pub inline fn glImageTransformParameterivHP(arg_4616: GLenum, arg_4617: GLenum, arg_4618: [*c]const GLint) void {
    return epoxy_glImageTransformParameterivHP.?(arg_4616, arg_4617, arg_4618);
}
pub inline fn glImportMemoryFdEXT(arg_4619: GLuint, arg_4620: GLuint64, arg_4621: GLenum, arg_4622: GLint) void {
    return epoxy_glImportMemoryFdEXT.?(arg_4619, arg_4620, arg_4621, arg_4622);
}
pub inline fn glImportMemoryWin32HandleEXT(arg_4623: GLuint, arg_4624: GLuint64, arg_4625: GLenum, arg_4626: ?*anyopaque) void {
    return epoxy_glImportMemoryWin32HandleEXT.?(arg_4623, arg_4624, arg_4625, arg_4626);
}
pub inline fn glImportMemoryWin32NameEXT(arg_4627: GLuint, arg_4628: GLuint64, arg_4629: GLenum, arg_4630: ?*const anyopaque) void {
    return epoxy_glImportMemoryWin32NameEXT.?(arg_4627, arg_4628, arg_4629, arg_4630);
}
pub inline fn glImportSemaphoreFdEXT(arg_4631: GLuint, arg_4632: GLenum, arg_4633: GLint) void {
    return epoxy_glImportSemaphoreFdEXT.?(arg_4631, arg_4632, arg_4633);
}
pub inline fn glImportSemaphoreWin32HandleEXT(arg_4634: GLuint, arg_4635: GLenum, arg_4636: ?*anyopaque) void {
    return epoxy_glImportSemaphoreWin32HandleEXT.?(arg_4634, arg_4635, arg_4636);
}
pub inline fn glImportSemaphoreWin32NameEXT(arg_4637: GLuint, arg_4638: GLenum, arg_4639: ?*const anyopaque) void {
    return epoxy_glImportSemaphoreWin32NameEXT.?(arg_4637, arg_4638, arg_4639);
}
pub inline fn glImportSyncEXT(arg_4640: GLenum, arg_4641: GLintptr, arg_4642: GLbitfield) GLsync {
    return epoxy_glImportSyncEXT.?(arg_4640, arg_4641, arg_4642);
}
pub inline fn glIndexFormatNV(arg_4643: GLenum, arg_4644: GLsizei) void {
    return epoxy_glIndexFormatNV.?(arg_4643, arg_4644);
}
pub inline fn glIndexFuncEXT(arg_4645: GLenum, arg_4646: GLclampf) void {
    return epoxy_glIndexFuncEXT.?(arg_4645, arg_4646);
}
pub inline fn glIndexMask(arg_4647: GLuint) void {
    return epoxy_glIndexMask.?(arg_4647);
}
pub inline fn glIndexMaterialEXT(arg_4648: GLenum, arg_4649: GLenum) void {
    return epoxy_glIndexMaterialEXT.?(arg_4648, arg_4649);
}
pub inline fn glIndexPointer(arg_4650: GLenum, arg_4651: GLsizei, arg_4652: ?*const anyopaque) void {
    return epoxy_glIndexPointer.?(arg_4650, arg_4651, arg_4652);
}
pub inline fn glIndexPointerEXT(arg_4653: GLenum, arg_4654: GLsizei, arg_4655: GLsizei, arg_4656: ?*const anyopaque) void {
    return epoxy_glIndexPointerEXT.?(arg_4653, arg_4654, arg_4655, arg_4656);
}
pub inline fn glIndexPointerListIBM(arg_4657: GLenum, arg_4658: GLint, arg_4659: [*c]?*const anyopaque, arg_4660: GLint) void {
    return epoxy_glIndexPointerListIBM.?(arg_4657, arg_4658, arg_4659, arg_4660);
}
pub inline fn glIndexd(arg_4661: GLdouble) void {
    return epoxy_glIndexd.?(arg_4661);
}
pub inline fn glIndexdv(arg_4662: [*c]const GLdouble) void {
    return epoxy_glIndexdv.?(arg_4662);
}
pub inline fn glIndexf(arg_4663: GLfloat) void {
    return epoxy_glIndexf.?(arg_4663);
}
pub inline fn glIndexfv(arg_4664: [*c]const GLfloat) void {
    return epoxy_glIndexfv.?(arg_4664);
}
pub inline fn glIndexi(arg_4665: GLint) void {
    return epoxy_glIndexi.?(arg_4665);
}
pub inline fn glIndexiv(arg_4666: [*c]const GLint) void {
    return epoxy_glIndexiv.?(arg_4666);
}
pub inline fn glIndexs(arg_4667: GLshort) void {
    return epoxy_glIndexs.?(arg_4667);
}
pub inline fn glIndexsv(arg_4668: [*c]const GLshort) void {
    return epoxy_glIndexsv.?(arg_4668);
}
pub inline fn glIndexub(arg_4669: GLubyte) void {
    return epoxy_glIndexub.?(arg_4669);
}
pub inline fn glIndexubv(arg_4670: [*c]const GLubyte) void {
    return epoxy_glIndexubv.?(arg_4670);
}
pub inline fn glIndexxOES(arg_4671: GLfixed) void {
    return epoxy_glIndexxOES.?(arg_4671);
}
pub inline fn glIndexxvOES(arg_4672: [*c]const GLfixed) void {
    return epoxy_glIndexxvOES.?(arg_4672);
}
pub inline fn glInitNames() void {
    return epoxy_glInitNames.?();
}
pub inline fn glInsertComponentEXT(arg_4673: GLuint, arg_4674: GLuint, arg_4675: GLuint) void {
    return epoxy_glInsertComponentEXT.?(arg_4673, arg_4674, arg_4675);
}
pub inline fn glInsertEventMarkerEXT(arg_4676: GLsizei, arg_4677: [*c]const GLchar) void {
    return epoxy_glInsertEventMarkerEXT.?(arg_4676, arg_4677);
}
pub inline fn glInstrumentsBufferSGIX(arg_4678: GLsizei, arg_4679: [*c]GLint) void {
    return epoxy_glInstrumentsBufferSGIX.?(arg_4678, arg_4679);
}
pub inline fn glInterleavedArrays(arg_4680: GLenum, arg_4681: GLsizei, arg_4682: ?*const anyopaque) void {
    return epoxy_glInterleavedArrays.?(arg_4680, arg_4681, arg_4682);
}
pub inline fn glInterpolatePathsNV(arg_4683: GLuint, arg_4684: GLuint, arg_4685: GLuint, arg_4686: GLfloat) void {
    return epoxy_glInterpolatePathsNV.?(arg_4683, arg_4684, arg_4685, arg_4686);
}
pub inline fn glInvalidateBufferData(arg_4687: GLuint) void {
    return epoxy_glInvalidateBufferData.?(arg_4687);
}
pub inline fn glInvalidateBufferSubData(arg_4688: GLuint, arg_4689: GLintptr, arg_4690: GLsizeiptr) void {
    return epoxy_glInvalidateBufferSubData.?(arg_4688, arg_4689, arg_4690);
}
pub inline fn glInvalidateFramebuffer(arg_4691: GLenum, arg_4692: GLsizei, arg_4693: [*c]const GLenum) void {
    return epoxy_glInvalidateFramebuffer.?(arg_4691, arg_4692, arg_4693);
}
pub inline fn glInvalidateNamedFramebufferData(arg_4694: GLuint, arg_4695: GLsizei, arg_4696: [*c]const GLenum) void {
    return epoxy_glInvalidateNamedFramebufferData.?(arg_4694, arg_4695, arg_4696);
}
pub inline fn glInvalidateNamedFramebufferSubData(arg_4697: GLuint, arg_4698: GLsizei, arg_4699: [*c]const GLenum, arg_4700: GLint, arg_4701: GLint, arg_4702: GLsizei, arg_4703: GLsizei) void {
    return epoxy_glInvalidateNamedFramebufferSubData.?(arg_4697, arg_4698, arg_4699, arg_4700, arg_4701, arg_4702, arg_4703);
}
pub inline fn glInvalidateSubFramebuffer(arg_4704: GLenum, arg_4705: GLsizei, arg_4706: [*c]const GLenum, arg_4707: GLint, arg_4708: GLint, arg_4709: GLsizei, arg_4710: GLsizei) void {
    return epoxy_glInvalidateSubFramebuffer.?(arg_4704, arg_4705, arg_4706, arg_4707, arg_4708, arg_4709, arg_4710);
}
pub inline fn glInvalidateTexImage(arg_4711: GLuint, arg_4712: GLint) void {
    return epoxy_glInvalidateTexImage.?(arg_4711, arg_4712);
}
pub inline fn glInvalidateTexSubImage(arg_4713: GLuint, arg_4714: GLint, arg_4715: GLint, arg_4716: GLint, arg_4717: GLint, arg_4718: GLsizei, arg_4719: GLsizei, arg_4720: GLsizei) void {
    return epoxy_glInvalidateTexSubImage.?(arg_4713, arg_4714, arg_4715, arg_4716, arg_4717, arg_4718, arg_4719, arg_4720);
}
pub inline fn glIsAsyncMarkerSGIX(arg_4721: GLuint) GLboolean {
    return epoxy_glIsAsyncMarkerSGIX.?(arg_4721);
}
pub inline fn glIsBuffer(arg_4722: GLuint) GLboolean {
    return epoxy_glIsBuffer.?(arg_4722);
}
pub inline fn glIsBufferARB(arg_4723: GLuint) GLboolean {
    return epoxy_glIsBufferARB.?(arg_4723);
}
pub inline fn glIsBufferResidentNV(arg_4724: GLenum) GLboolean {
    return epoxy_glIsBufferResidentNV.?(arg_4724);
}
pub inline fn glIsCommandListNV(arg_4725: GLuint) GLboolean {
    return epoxy_glIsCommandListNV.?(arg_4725);
}
pub inline fn glIsEnabled(arg_4726: GLenum) GLboolean {
    return epoxy_glIsEnabled.?(arg_4726);
}
pub inline fn glIsEnabledIndexedEXT(arg_4727: GLenum, arg_4728: GLuint) GLboolean {
    return epoxy_glIsEnabledIndexedEXT.?(arg_4727, arg_4728);
}
pub inline fn glIsEnabledi(arg_4729: GLenum, arg_4730: GLuint) GLboolean {
    return epoxy_glIsEnabledi.?(arg_4729, arg_4730);
}
pub inline fn glIsEnablediEXT(arg_4731: GLenum, arg_4732: GLuint) GLboolean {
    return epoxy_glIsEnablediEXT.?(arg_4731, arg_4732);
}
pub inline fn glIsEnablediNV(arg_4733: GLenum, arg_4734: GLuint) GLboolean {
    return epoxy_glIsEnablediNV.?(arg_4733, arg_4734);
}
pub inline fn glIsEnablediOES(arg_4735: GLenum, arg_4736: GLuint) GLboolean {
    return epoxy_glIsEnablediOES.?(arg_4735, arg_4736);
}
pub inline fn glIsFenceAPPLE(arg_4737: GLuint) GLboolean {
    return epoxy_glIsFenceAPPLE.?(arg_4737);
}
pub inline fn glIsFenceNV(arg_4738: GLuint) GLboolean {
    return epoxy_glIsFenceNV.?(arg_4738);
}
pub inline fn glIsFramebuffer(arg_4739: GLuint) GLboolean {
    return epoxy_glIsFramebuffer.?(arg_4739);
}
pub inline fn glIsFramebufferEXT(arg_4740: GLuint) GLboolean {
    return epoxy_glIsFramebufferEXT.?(arg_4740);
}
pub inline fn glIsFramebufferOES(arg_4741: GLuint) GLboolean {
    return epoxy_glIsFramebufferOES.?(arg_4741);
}
pub inline fn glIsImageHandleResidentARB(arg_4742: GLuint64) GLboolean {
    return epoxy_glIsImageHandleResidentARB.?(arg_4742);
}
pub inline fn glIsImageHandleResidentNV(arg_4743: GLuint64) GLboolean {
    return epoxy_glIsImageHandleResidentNV.?(arg_4743);
}
pub inline fn glIsList(arg_4744: GLuint) GLboolean {
    return epoxy_glIsList.?(arg_4744);
}
pub inline fn glIsMemoryObjectEXT(arg_4745: GLuint) GLboolean {
    return epoxy_glIsMemoryObjectEXT.?(arg_4745);
}
pub inline fn glIsNameAMD(arg_4746: GLenum, arg_4747: GLuint) GLboolean {
    return epoxy_glIsNameAMD.?(arg_4746, arg_4747);
}
pub inline fn glIsNamedBufferResidentNV(arg_4748: GLuint) GLboolean {
    return epoxy_glIsNamedBufferResidentNV.?(arg_4748);
}
pub inline fn glIsNamedStringARB(arg_4749: GLint, arg_4750: [*c]const GLchar) GLboolean {
    return epoxy_glIsNamedStringARB.?(arg_4749, arg_4750);
}
pub inline fn glIsObjectBufferATI(arg_4751: GLuint) GLboolean {
    return epoxy_glIsObjectBufferATI.?(arg_4751);
}
pub inline fn glIsOcclusionQueryNV(arg_4752: GLuint) GLboolean {
    return epoxy_glIsOcclusionQueryNV.?(arg_4752);
}
pub inline fn glIsPathNV(arg_4753: GLuint) GLboolean {
    return epoxy_glIsPathNV.?(arg_4753);
}
pub inline fn glIsPointInFillPathNV(arg_4754: GLuint, arg_4755: GLuint, arg_4756: GLfloat, arg_4757: GLfloat) GLboolean {
    return epoxy_glIsPointInFillPathNV.?(arg_4754, arg_4755, arg_4756, arg_4757);
}
pub inline fn glIsPointInStrokePathNV(arg_4758: GLuint, arg_4759: GLfloat, arg_4760: GLfloat) GLboolean {
    return epoxy_glIsPointInStrokePathNV.?(arg_4758, arg_4759, arg_4760);
}
pub inline fn glIsProgram(arg_4761: GLuint) GLboolean {
    return epoxy_glIsProgram.?(arg_4761);
}
pub inline fn glIsProgramARB(arg_4762: GLuint) GLboolean {
    return epoxy_glIsProgramARB.?(arg_4762);
}
pub inline fn glIsProgramNV(arg_4763: GLuint) GLboolean {
    return epoxy_glIsProgramNV.?(arg_4763);
}
pub inline fn glIsProgramPipeline(arg_4764: GLuint) GLboolean {
    return epoxy_glIsProgramPipeline.?(arg_4764);
}
pub inline fn glIsProgramPipelineEXT(arg_4765: GLuint) GLboolean {
    return epoxy_glIsProgramPipelineEXT.?(arg_4765);
}
pub inline fn glIsQuery(arg_4766: GLuint) GLboolean {
    return epoxy_glIsQuery.?(arg_4766);
}
pub inline fn glIsQueryARB(arg_4767: GLuint) GLboolean {
    return epoxy_glIsQueryARB.?(arg_4767);
}
pub inline fn glIsQueryEXT(arg_4768: GLuint) GLboolean {
    return epoxy_glIsQueryEXT.?(arg_4768);
}
pub inline fn glIsRenderbuffer(arg_4769: GLuint) GLboolean {
    return epoxy_glIsRenderbuffer.?(arg_4769);
}
pub inline fn glIsRenderbufferEXT(arg_4770: GLuint) GLboolean {
    return epoxy_glIsRenderbufferEXT.?(arg_4770);
}
pub inline fn glIsRenderbufferOES(arg_4771: GLuint) GLboolean {
    return epoxy_glIsRenderbufferOES.?(arg_4771);
}
pub inline fn glIsSampler(arg_4772: GLuint) GLboolean {
    return epoxy_glIsSampler.?(arg_4772);
}
pub inline fn glIsSemaphoreEXT(arg_4773: GLuint) GLboolean {
    return epoxy_glIsSemaphoreEXT.?(arg_4773);
}
pub inline fn glIsShader(arg_4774: GLuint) GLboolean {
    return epoxy_glIsShader.?(arg_4774);
}
pub inline fn glIsStateNV(arg_4775: GLuint) GLboolean {
    return epoxy_glIsStateNV.?(arg_4775);
}
pub inline fn glIsSync(arg_4776: GLsync) GLboolean {
    return epoxy_glIsSync.?(arg_4776);
}
pub inline fn glIsSyncAPPLE(arg_4777: GLsync) GLboolean {
    return epoxy_glIsSyncAPPLE.?(arg_4777);
}
pub inline fn glIsTexture(arg_4778: GLuint) GLboolean {
    return epoxy_glIsTexture.?(arg_4778);
}
pub inline fn glIsTextureEXT(arg_4779: GLuint) GLboolean {
    return epoxy_glIsTextureEXT.?(arg_4779);
}
pub inline fn glIsTextureHandleResidentARB(arg_4780: GLuint64) GLboolean {
    return epoxy_glIsTextureHandleResidentARB.?(arg_4780);
}
pub inline fn glIsTextureHandleResidentNV(arg_4781: GLuint64) GLboolean {
    return epoxy_glIsTextureHandleResidentNV.?(arg_4781);
}
pub inline fn glIsTransformFeedback(arg_4782: GLuint) GLboolean {
    return epoxy_glIsTransformFeedback.?(arg_4782);
}
pub inline fn glIsTransformFeedbackNV(arg_4783: GLuint) GLboolean {
    return epoxy_glIsTransformFeedbackNV.?(arg_4783);
}
pub inline fn glIsVariantEnabledEXT(arg_4784: GLuint, arg_4785: GLenum) GLboolean {
    return epoxy_glIsVariantEnabledEXT.?(arg_4784, arg_4785);
}
pub inline fn glIsVertexArray(arg_4786: GLuint) GLboolean {
    return epoxy_glIsVertexArray.?(arg_4786);
}
pub inline fn glIsVertexArrayAPPLE(arg_4787: GLuint) GLboolean {
    return epoxy_glIsVertexArrayAPPLE.?(arg_4787);
}
pub inline fn glIsVertexArrayOES(arg_4788: GLuint) GLboolean {
    return epoxy_glIsVertexArrayOES.?(arg_4788);
}
pub inline fn glIsVertexAttribEnabledAPPLE(arg_4789: GLuint, arg_4790: GLenum) GLboolean {
    return epoxy_glIsVertexAttribEnabledAPPLE.?(arg_4789, arg_4790);
}
pub inline fn glLGPUCopyImageSubDataNVX(arg_4791: GLuint, arg_4792: GLbitfield, arg_4793: GLuint, arg_4794: GLenum, arg_4795: GLint, arg_4796: GLint, arg_4797: GLint, arg_4798: GLint, arg_4799: GLuint, arg_4800: GLenum, arg_4801: GLint, arg_4802: GLint, arg_4803: GLint, arg_4804: GLint, arg_4805: GLsizei, arg_4806: GLsizei, arg_4807: GLsizei) void {
    return epoxy_glLGPUCopyImageSubDataNVX.?(arg_4791, arg_4792, arg_4793, arg_4794, arg_4795, arg_4796, arg_4797, arg_4798, arg_4799, arg_4800, arg_4801, arg_4802, arg_4803, arg_4804, arg_4805, arg_4806, arg_4807);
}
pub inline fn glLGPUInterlockNVX() void {
    return epoxy_glLGPUInterlockNVX.?();
}
pub inline fn glLGPUNamedBufferSubDataNVX(arg_4808: GLbitfield, arg_4809: GLuint, arg_4810: GLintptr, arg_4811: GLsizeiptr, arg_4812: ?*const anyopaque) void {
    return epoxy_glLGPUNamedBufferSubDataNVX.?(arg_4808, arg_4809, arg_4810, arg_4811, arg_4812);
}
pub inline fn glLabelObjectEXT(arg_4813: GLenum, arg_4814: GLuint, arg_4815: GLsizei, arg_4816: [*c]const GLchar) void {
    return epoxy_glLabelObjectEXT.?(arg_4813, arg_4814, arg_4815, arg_4816);
}
pub inline fn glLightEnviSGIX(arg_4817: GLenum, arg_4818: GLint) void {
    return epoxy_glLightEnviSGIX.?(arg_4817, arg_4818);
}
pub inline fn glLightModelf(arg_4819: GLenum, arg_4820: GLfloat) void {
    return epoxy_glLightModelf.?(arg_4819, arg_4820);
}
pub inline fn glLightModelfv(arg_4821: GLenum, arg_4822: [*c]const GLfloat) void {
    return epoxy_glLightModelfv.?(arg_4821, arg_4822);
}
pub inline fn glLightModeli(arg_4823: GLenum, arg_4824: GLint) void {
    return epoxy_glLightModeli.?(arg_4823, arg_4824);
}
pub inline fn glLightModeliv(arg_4825: GLenum, arg_4826: [*c]const GLint) void {
    return epoxy_glLightModeliv.?(arg_4825, arg_4826);
}
pub inline fn glLightModelx(arg_4827: GLenum, arg_4828: GLfixed) void {
    return epoxy_glLightModelx.?(arg_4827, arg_4828);
}
pub inline fn glLightModelxOES(arg_4829: GLenum, arg_4830: GLfixed) void {
    return epoxy_glLightModelxOES.?(arg_4829, arg_4830);
}
pub inline fn glLightModelxv(arg_4831: GLenum, arg_4832: [*c]const GLfixed) void {
    return epoxy_glLightModelxv.?(arg_4831, arg_4832);
}
pub inline fn glLightModelxvOES(arg_4833: GLenum, arg_4834: [*c]const GLfixed) void {
    return epoxy_glLightModelxvOES.?(arg_4833, arg_4834);
}
pub inline fn glLightf(arg_4835: GLenum, arg_4836: GLenum, arg_4837: GLfloat) void {
    return epoxy_glLightf.?(arg_4835, arg_4836, arg_4837);
}
pub inline fn glLightfv(arg_4838: GLenum, arg_4839: GLenum, arg_4840: [*c]const GLfloat) void {
    return epoxy_glLightfv.?(arg_4838, arg_4839, arg_4840);
}
pub inline fn glLighti(arg_4841: GLenum, arg_4842: GLenum, arg_4843: GLint) void {
    return epoxy_glLighti.?(arg_4841, arg_4842, arg_4843);
}
pub inline fn glLightiv(arg_4844: GLenum, arg_4845: GLenum, arg_4846: [*c]const GLint) void {
    return epoxy_glLightiv.?(arg_4844, arg_4845, arg_4846);
}
pub inline fn glLightx(arg_4847: GLenum, arg_4848: GLenum, arg_4849: GLfixed) void {
    return epoxy_glLightx.?(arg_4847, arg_4848, arg_4849);
}
pub inline fn glLightxOES(arg_4850: GLenum, arg_4851: GLenum, arg_4852: GLfixed) void {
    return epoxy_glLightxOES.?(arg_4850, arg_4851, arg_4852);
}
pub inline fn glLightxv(arg_4853: GLenum, arg_4854: GLenum, arg_4855: [*c]const GLfixed) void {
    return epoxy_glLightxv.?(arg_4853, arg_4854, arg_4855);
}
pub inline fn glLightxvOES(arg_4856: GLenum, arg_4857: GLenum, arg_4858: [*c]const GLfixed) void {
    return epoxy_glLightxvOES.?(arg_4856, arg_4857, arg_4858);
}
pub inline fn glLineStipple(arg_4859: GLint, arg_4860: GLushort) void {
    return epoxy_glLineStipple.?(arg_4859, arg_4860);
}
pub inline fn glLineWidth(arg_4861: GLfloat) void {
    return epoxy_glLineWidth.?(arg_4861);
}
pub inline fn glLineWidthx(arg_4862: GLfixed) void {
    return epoxy_glLineWidthx.?(arg_4862);
}
pub inline fn glLineWidthxOES(arg_4863: GLfixed) void {
    return epoxy_glLineWidthxOES.?(arg_4863);
}
pub inline fn glLinkProgram(arg_4864: GLuint) void {
    return epoxy_glLinkProgram.?(arg_4864);
}
pub inline fn glLinkProgramARB(arg_4865: GLhandleARB) void {
    return epoxy_glLinkProgramARB.?(arg_4865);
}
pub inline fn glListBase(arg_4866: GLuint) void {
    return epoxy_glListBase.?(arg_4866);
}
pub inline fn glListDrawCommandsStatesClientNV(arg_4867: GLuint, arg_4868: GLuint, arg_4869: [*c]?*const anyopaque, arg_4870: [*c]const GLsizei, arg_4871: [*c]const GLuint, arg_4872: [*c]const GLuint, arg_4873: GLuint) void {
    return epoxy_glListDrawCommandsStatesClientNV.?(arg_4867, arg_4868, arg_4869, arg_4870, arg_4871, arg_4872, arg_4873);
}
pub inline fn glListParameterfSGIX(arg_4874: GLuint, arg_4875: GLenum, arg_4876: GLfloat) void {
    return epoxy_glListParameterfSGIX.?(arg_4874, arg_4875, arg_4876);
}
pub inline fn glListParameterfvSGIX(arg_4877: GLuint, arg_4878: GLenum, arg_4879: [*c]const GLfloat) void {
    return epoxy_glListParameterfvSGIX.?(arg_4877, arg_4878, arg_4879);
}
pub inline fn glListParameteriSGIX(arg_4880: GLuint, arg_4881: GLenum, arg_4882: GLint) void {
    return epoxy_glListParameteriSGIX.?(arg_4880, arg_4881, arg_4882);
}
pub inline fn glListParameterivSGIX(arg_4883: GLuint, arg_4884: GLenum, arg_4885: [*c]const GLint) void {
    return epoxy_glListParameterivSGIX.?(arg_4883, arg_4884, arg_4885);
}
pub inline fn glLoadIdentity() void {
    return epoxy_glLoadIdentity.?();
}
pub inline fn glLoadIdentityDeformationMapSGIX(arg_4886: GLbitfield) void {
    return epoxy_glLoadIdentityDeformationMapSGIX.?(arg_4886);
}
pub inline fn glLoadMatrixd(arg_4887: [*c]const GLdouble) void {
    return epoxy_glLoadMatrixd.?(arg_4887);
}
pub inline fn glLoadMatrixf(arg_4888: [*c]const GLfloat) void {
    return epoxy_glLoadMatrixf.?(arg_4888);
}
pub inline fn glLoadMatrixx(arg_4889: [*c]const GLfixed) void {
    return epoxy_glLoadMatrixx.?(arg_4889);
}
pub inline fn glLoadMatrixxOES(arg_4890: [*c]const GLfixed) void {
    return epoxy_glLoadMatrixxOES.?(arg_4890);
}
pub inline fn glLoadName(arg_4891: GLuint) void {
    return epoxy_glLoadName.?(arg_4891);
}
pub inline fn glLoadPaletteFromModelViewMatrixOES() void {
    return epoxy_glLoadPaletteFromModelViewMatrixOES.?();
}
pub inline fn glLoadProgramNV(arg_4892: GLenum, arg_4893: GLuint, arg_4894: GLsizei, arg_4895: [*c]const GLubyte) void {
    return epoxy_glLoadProgramNV.?(arg_4892, arg_4893, arg_4894, arg_4895);
}
pub inline fn glLoadTransposeMatrixd(arg_4896: [*c]const GLdouble) void {
    return epoxy_glLoadTransposeMatrixd.?(arg_4896);
}
pub inline fn glLoadTransposeMatrixdARB(arg_4897: [*c]const GLdouble) void {
    return epoxy_glLoadTransposeMatrixdARB.?(arg_4897);
}
pub inline fn glLoadTransposeMatrixf(arg_4898: [*c]const GLfloat) void {
    return epoxy_glLoadTransposeMatrixf.?(arg_4898);
}
pub inline fn glLoadTransposeMatrixfARB(arg_4899: [*c]const GLfloat) void {
    return epoxy_glLoadTransposeMatrixfARB.?(arg_4899);
}
pub inline fn glLoadTransposeMatrixxOES(arg_4900: [*c]const GLfixed) void {
    return epoxy_glLoadTransposeMatrixxOES.?(arg_4900);
}
pub inline fn glLockArraysEXT(arg_4901: GLint, arg_4902: GLsizei) void {
    return epoxy_glLockArraysEXT.?(arg_4901, arg_4902);
}
pub inline fn glLogicOp(arg_4903: GLenum) void {
    return epoxy_glLogicOp.?(arg_4903);
}
pub inline fn glMakeBufferNonResidentNV(arg_4904: GLenum) void {
    return epoxy_glMakeBufferNonResidentNV.?(arg_4904);
}
pub inline fn glMakeBufferResidentNV(arg_4905: GLenum, arg_4906: GLenum) void {
    return epoxy_glMakeBufferResidentNV.?(arg_4905, arg_4906);
}
pub inline fn glMakeImageHandleNonResidentARB(arg_4907: GLuint64) void {
    return epoxy_glMakeImageHandleNonResidentARB.?(arg_4907);
}
pub inline fn glMakeImageHandleNonResidentNV(arg_4908: GLuint64) void {
    return epoxy_glMakeImageHandleNonResidentNV.?(arg_4908);
}
pub inline fn glMakeImageHandleResidentARB(arg_4909: GLuint64, arg_4910: GLenum) void {
    return epoxy_glMakeImageHandleResidentARB.?(arg_4909, arg_4910);
}
pub inline fn glMakeImageHandleResidentNV(arg_4911: GLuint64, arg_4912: GLenum) void {
    return epoxy_glMakeImageHandleResidentNV.?(arg_4911, arg_4912);
}
pub inline fn glMakeNamedBufferNonResidentNV(arg_4913: GLuint) void {
    return epoxy_glMakeNamedBufferNonResidentNV.?(arg_4913);
}
pub inline fn glMakeNamedBufferResidentNV(arg_4914: GLuint, arg_4915: GLenum) void {
    return epoxy_glMakeNamedBufferResidentNV.?(arg_4914, arg_4915);
}
pub inline fn glMakeTextureHandleNonResidentARB(arg_4916: GLuint64) void {
    return epoxy_glMakeTextureHandleNonResidentARB.?(arg_4916);
}
pub inline fn glMakeTextureHandleNonResidentNV(arg_4917: GLuint64) void {
    return epoxy_glMakeTextureHandleNonResidentNV.?(arg_4917);
}
pub inline fn glMakeTextureHandleResidentARB(arg_4918: GLuint64) void {
    return epoxy_glMakeTextureHandleResidentARB.?(arg_4918);
}
pub inline fn glMakeTextureHandleResidentNV(arg_4919: GLuint64) void {
    return epoxy_glMakeTextureHandleResidentNV.?(arg_4919);
}
pub inline fn glMap1d(arg_4920: GLenum, arg_4921: GLdouble, arg_4922: GLdouble, arg_4923: GLint, arg_4924: GLint, arg_4925: [*c]const GLdouble) void {
    return epoxy_glMap1d.?(arg_4920, arg_4921, arg_4922, arg_4923, arg_4924, arg_4925);
}
pub inline fn glMap1f(arg_4926: GLenum, arg_4927: GLfloat, arg_4928: GLfloat, arg_4929: GLint, arg_4930: GLint, arg_4931: [*c]const GLfloat) void {
    return epoxy_glMap1f.?(arg_4926, arg_4927, arg_4928, arg_4929, arg_4930, arg_4931);
}
pub inline fn glMap1xOES(arg_4932: GLenum, arg_4933: GLfixed, arg_4934: GLfixed, arg_4935: GLint, arg_4936: GLint, arg_4937: GLfixed) void {
    return epoxy_glMap1xOES.?(arg_4932, arg_4933, arg_4934, arg_4935, arg_4936, arg_4937);
}
pub inline fn glMap2d(arg_4938: GLenum, arg_4939: GLdouble, arg_4940: GLdouble, arg_4941: GLint, arg_4942: GLint, arg_4943: GLdouble, arg_4944: GLdouble, arg_4945: GLint, arg_4946: GLint, arg_4947: [*c]const GLdouble) void {
    return epoxy_glMap2d.?(arg_4938, arg_4939, arg_4940, arg_4941, arg_4942, arg_4943, arg_4944, arg_4945, arg_4946, arg_4947);
}
pub inline fn glMap2f(arg_4948: GLenum, arg_4949: GLfloat, arg_4950: GLfloat, arg_4951: GLint, arg_4952: GLint, arg_4953: GLfloat, arg_4954: GLfloat, arg_4955: GLint, arg_4956: GLint, arg_4957: [*c]const GLfloat) void {
    return epoxy_glMap2f.?(arg_4948, arg_4949, arg_4950, arg_4951, arg_4952, arg_4953, arg_4954, arg_4955, arg_4956, arg_4957);
}
pub inline fn glMap2xOES(arg_4958: GLenum, arg_4959: GLfixed, arg_4960: GLfixed, arg_4961: GLint, arg_4962: GLint, arg_4963: GLfixed, arg_4964: GLfixed, arg_4965: GLint, arg_4966: GLint, arg_4967: GLfixed) void {
    return epoxy_glMap2xOES.?(arg_4958, arg_4959, arg_4960, arg_4961, arg_4962, arg_4963, arg_4964, arg_4965, arg_4966, arg_4967);
}
pub inline fn glMapBuffer(arg_4968: GLenum, arg_4969: GLenum) ?*anyopaque {
    return epoxy_glMapBuffer.?(arg_4968, arg_4969);
}
pub inline fn glMapBufferARB(arg_4970: GLenum, arg_4971: GLenum) ?*anyopaque {
    return epoxy_glMapBufferARB.?(arg_4970, arg_4971);
}
pub inline fn glMapBufferOES(arg_4972: GLenum, arg_4973: GLenum) ?*anyopaque {
    return epoxy_glMapBufferOES.?(arg_4972, arg_4973);
}
pub inline fn glMapBufferRange(arg_4974: GLenum, arg_4975: GLintptr, arg_4976: GLsizeiptr, arg_4977: GLbitfield) ?*anyopaque {
    return epoxy_glMapBufferRange.?(arg_4974, arg_4975, arg_4976, arg_4977);
}
pub inline fn glMapBufferRangeEXT(arg_4978: GLenum, arg_4979: GLintptr, arg_4980: GLsizeiptr, arg_4981: GLbitfield) ?*anyopaque {
    return epoxy_glMapBufferRangeEXT.?(arg_4978, arg_4979, arg_4980, arg_4981);
}
pub inline fn glMapControlPointsNV(arg_4982: GLenum, arg_4983: GLuint, arg_4984: GLenum, arg_4985: GLsizei, arg_4986: GLsizei, arg_4987: GLint, arg_4988: GLint, arg_4989: GLboolean, arg_4990: ?*const anyopaque) void {
    return epoxy_glMapControlPointsNV.?(arg_4982, arg_4983, arg_4984, arg_4985, arg_4986, arg_4987, arg_4988, arg_4989, arg_4990);
}
pub inline fn glMapGrid1d(arg_4991: GLint, arg_4992: GLdouble, arg_4993: GLdouble) void {
    return epoxy_glMapGrid1d.?(arg_4991, arg_4992, arg_4993);
}
pub inline fn glMapGrid1f(arg_4994: GLint, arg_4995: GLfloat, arg_4996: GLfloat) void {
    return epoxy_glMapGrid1f.?(arg_4994, arg_4995, arg_4996);
}
pub inline fn glMapGrid1xOES(arg_4997: GLint, arg_4998: GLfixed, arg_4999: GLfixed) void {
    return epoxy_glMapGrid1xOES.?(arg_4997, arg_4998, arg_4999);
}
pub inline fn glMapGrid2d(arg_5000: GLint, arg_5001: GLdouble, arg_5002: GLdouble, arg_5003: GLint, arg_5004: GLdouble, arg_5005: GLdouble) void {
    return epoxy_glMapGrid2d.?(arg_5000, arg_5001, arg_5002, arg_5003, arg_5004, arg_5005);
}
pub inline fn glMapGrid2f(arg_5006: GLint, arg_5007: GLfloat, arg_5008: GLfloat, arg_5009: GLint, arg_5010: GLfloat, arg_5011: GLfloat) void {
    return epoxy_glMapGrid2f.?(arg_5006, arg_5007, arg_5008, arg_5009, arg_5010, arg_5011);
}
pub inline fn glMapGrid2xOES(arg_5012: GLint, arg_5013: GLfixed, arg_5014: GLfixed, arg_5015: GLfixed, arg_5016: GLfixed) void {
    return epoxy_glMapGrid2xOES.?(arg_5012, arg_5013, arg_5014, arg_5015, arg_5016);
}
pub inline fn glMapNamedBuffer(arg_5017: GLuint, arg_5018: GLenum) ?*anyopaque {
    return epoxy_glMapNamedBuffer.?(arg_5017, arg_5018);
}
pub inline fn glMapNamedBufferEXT(arg_5019: GLuint, arg_5020: GLenum) ?*anyopaque {
    return epoxy_glMapNamedBufferEXT.?(arg_5019, arg_5020);
}
pub inline fn glMapNamedBufferRange(arg_5021: GLuint, arg_5022: GLintptr, arg_5023: GLsizeiptr, arg_5024: GLbitfield) ?*anyopaque {
    return epoxy_glMapNamedBufferRange.?(arg_5021, arg_5022, arg_5023, arg_5024);
}
pub inline fn glMapNamedBufferRangeEXT(arg_5025: GLuint, arg_5026: GLintptr, arg_5027: GLsizeiptr, arg_5028: GLbitfield) ?*anyopaque {
    return epoxy_glMapNamedBufferRangeEXT.?(arg_5025, arg_5026, arg_5027, arg_5028);
}
pub inline fn glMapObjectBufferATI(arg_5029: GLuint) ?*anyopaque {
    return epoxy_glMapObjectBufferATI.?(arg_5029);
}
pub inline fn glMapParameterfvNV(arg_5030: GLenum, arg_5031: GLenum, arg_5032: [*c]const GLfloat) void {
    return epoxy_glMapParameterfvNV.?(arg_5030, arg_5031, arg_5032);
}
pub inline fn glMapParameterivNV(arg_5033: GLenum, arg_5034: GLenum, arg_5035: [*c]const GLint) void {
    return epoxy_glMapParameterivNV.?(arg_5033, arg_5034, arg_5035);
}
pub inline fn glMapTexture2DINTEL(arg_5036: GLuint, arg_5037: GLint, arg_5038: GLbitfield, arg_5039: [*c]GLint, arg_5040: [*c]GLenum) ?*anyopaque {
    return epoxy_glMapTexture2DINTEL.?(arg_5036, arg_5037, arg_5038, arg_5039, arg_5040);
}
pub inline fn glMapVertexAttrib1dAPPLE(arg_5041: GLuint, arg_5042: GLuint, arg_5043: GLdouble, arg_5044: GLdouble, arg_5045: GLint, arg_5046: GLint, arg_5047: [*c]const GLdouble) void {
    return epoxy_glMapVertexAttrib1dAPPLE.?(arg_5041, arg_5042, arg_5043, arg_5044, arg_5045, arg_5046, arg_5047);
}
pub inline fn glMapVertexAttrib1fAPPLE(arg_5048: GLuint, arg_5049: GLuint, arg_5050: GLfloat, arg_5051: GLfloat, arg_5052: GLint, arg_5053: GLint, arg_5054: [*c]const GLfloat) void {
    return epoxy_glMapVertexAttrib1fAPPLE.?(arg_5048, arg_5049, arg_5050, arg_5051, arg_5052, arg_5053, arg_5054);
}
pub inline fn glMapVertexAttrib2dAPPLE(arg_5055: GLuint, arg_5056: GLuint, arg_5057: GLdouble, arg_5058: GLdouble, arg_5059: GLint, arg_5060: GLint, arg_5061: GLdouble, arg_5062: GLdouble, arg_5063: GLint, arg_5064: GLint, arg_5065: [*c]const GLdouble) void {
    return epoxy_glMapVertexAttrib2dAPPLE.?(arg_5055, arg_5056, arg_5057, arg_5058, arg_5059, arg_5060, arg_5061, arg_5062, arg_5063, arg_5064, arg_5065);
}
pub inline fn glMapVertexAttrib2fAPPLE(arg_5066: GLuint, arg_5067: GLuint, arg_5068: GLfloat, arg_5069: GLfloat, arg_5070: GLint, arg_5071: GLint, arg_5072: GLfloat, arg_5073: GLfloat, arg_5074: GLint, arg_5075: GLint, arg_5076: [*c]const GLfloat) void {
    return epoxy_glMapVertexAttrib2fAPPLE.?(arg_5066, arg_5067, arg_5068, arg_5069, arg_5070, arg_5071, arg_5072, arg_5073, arg_5074, arg_5075, arg_5076);
}
pub inline fn glMaterialf(arg_5077: GLenum, arg_5078: GLenum, arg_5079: GLfloat) void {
    return epoxy_glMaterialf.?(arg_5077, arg_5078, arg_5079);
}
pub inline fn glMaterialfv(arg_5080: GLenum, arg_5081: GLenum, arg_5082: [*c]const GLfloat) void {
    return epoxy_glMaterialfv.?(arg_5080, arg_5081, arg_5082);
}
pub inline fn glMateriali(arg_5083: GLenum, arg_5084: GLenum, arg_5085: GLint) void {
    return epoxy_glMateriali.?(arg_5083, arg_5084, arg_5085);
}
pub inline fn glMaterialiv(arg_5086: GLenum, arg_5087: GLenum, arg_5088: [*c]const GLint) void {
    return epoxy_glMaterialiv.?(arg_5086, arg_5087, arg_5088);
}
pub inline fn glMaterialx(arg_5089: GLenum, arg_5090: GLenum, arg_5091: GLfixed) void {
    return epoxy_glMaterialx.?(arg_5089, arg_5090, arg_5091);
}
pub inline fn glMaterialxOES(arg_5092: GLenum, arg_5093: GLenum, arg_5094: GLfixed) void {
    return epoxy_glMaterialxOES.?(arg_5092, arg_5093, arg_5094);
}
pub inline fn glMaterialxv(arg_5095: GLenum, arg_5096: GLenum, arg_5097: [*c]const GLfixed) void {
    return epoxy_glMaterialxv.?(arg_5095, arg_5096, arg_5097);
}
pub inline fn glMaterialxvOES(arg_5098: GLenum, arg_5099: GLenum, arg_5100: [*c]const GLfixed) void {
    return epoxy_glMaterialxvOES.?(arg_5098, arg_5099, arg_5100);
}
pub inline fn glMatrixFrustumEXT(arg_5101: GLenum, arg_5102: GLdouble, arg_5103: GLdouble, arg_5104: GLdouble, arg_5105: GLdouble, arg_5106: GLdouble, arg_5107: GLdouble) void {
    return epoxy_glMatrixFrustumEXT.?(arg_5101, arg_5102, arg_5103, arg_5104, arg_5105, arg_5106, arg_5107);
}
pub inline fn glMatrixIndexPointerARB(arg_5108: GLint, arg_5109: GLenum, arg_5110: GLsizei, arg_5111: ?*const anyopaque) void {
    return epoxy_glMatrixIndexPointerARB.?(arg_5108, arg_5109, arg_5110, arg_5111);
}
pub inline fn glMatrixIndexPointerOES(arg_5112: GLint, arg_5113: GLenum, arg_5114: GLsizei, arg_5115: ?*const anyopaque) void {
    return epoxy_glMatrixIndexPointerOES.?(arg_5112, arg_5113, arg_5114, arg_5115);
}
pub inline fn glMatrixIndexubvARB(arg_5116: GLint, arg_5117: [*c]const GLubyte) void {
    return epoxy_glMatrixIndexubvARB.?(arg_5116, arg_5117);
}
pub inline fn glMatrixIndexuivARB(arg_5118: GLint, arg_5119: [*c]const GLuint) void {
    return epoxy_glMatrixIndexuivARB.?(arg_5118, arg_5119);
}
pub inline fn glMatrixIndexusvARB(arg_5120: GLint, arg_5121: [*c]const GLushort) void {
    return epoxy_glMatrixIndexusvARB.?(arg_5120, arg_5121);
}
pub inline fn glMatrixLoad3x2fNV(arg_5122: GLenum, arg_5123: [*c]const GLfloat) void {
    return epoxy_glMatrixLoad3x2fNV.?(arg_5122, arg_5123);
}
pub inline fn glMatrixLoad3x3fNV(arg_5124: GLenum, arg_5125: [*c]const GLfloat) void {
    return epoxy_glMatrixLoad3x3fNV.?(arg_5124, arg_5125);
}
pub inline fn glMatrixLoadIdentityEXT(arg_5126: GLenum) void {
    return epoxy_glMatrixLoadIdentityEXT.?(arg_5126);
}
pub inline fn glMatrixLoadTranspose3x3fNV(arg_5127: GLenum, arg_5128: [*c]const GLfloat) void {
    return epoxy_glMatrixLoadTranspose3x3fNV.?(arg_5127, arg_5128);
}
pub inline fn glMatrixLoadTransposedEXT(arg_5129: GLenum, arg_5130: [*c]const GLdouble) void {
    return epoxy_glMatrixLoadTransposedEXT.?(arg_5129, arg_5130);
}
pub inline fn glMatrixLoadTransposefEXT(arg_5131: GLenum, arg_5132: [*c]const GLfloat) void {
    return epoxy_glMatrixLoadTransposefEXT.?(arg_5131, arg_5132);
}
pub inline fn glMatrixLoaddEXT(arg_5133: GLenum, arg_5134: [*c]const GLdouble) void {
    return epoxy_glMatrixLoaddEXT.?(arg_5133, arg_5134);
}
pub inline fn glMatrixLoadfEXT(arg_5135: GLenum, arg_5136: [*c]const GLfloat) void {
    return epoxy_glMatrixLoadfEXT.?(arg_5135, arg_5136);
}
pub inline fn glMatrixMode(arg_5137: GLenum) void {
    return epoxy_glMatrixMode.?(arg_5137);
}
pub inline fn glMatrixMult3x2fNV(arg_5138: GLenum, arg_5139: [*c]const GLfloat) void {
    return epoxy_glMatrixMult3x2fNV.?(arg_5138, arg_5139);
}
pub inline fn glMatrixMult3x3fNV(arg_5140: GLenum, arg_5141: [*c]const GLfloat) void {
    return epoxy_glMatrixMult3x3fNV.?(arg_5140, arg_5141);
}
pub inline fn glMatrixMultTranspose3x3fNV(arg_5142: GLenum, arg_5143: [*c]const GLfloat) void {
    return epoxy_glMatrixMultTranspose3x3fNV.?(arg_5142, arg_5143);
}
pub inline fn glMatrixMultTransposedEXT(arg_5144: GLenum, arg_5145: [*c]const GLdouble) void {
    return epoxy_glMatrixMultTransposedEXT.?(arg_5144, arg_5145);
}
pub inline fn glMatrixMultTransposefEXT(arg_5146: GLenum, arg_5147: [*c]const GLfloat) void {
    return epoxy_glMatrixMultTransposefEXT.?(arg_5146, arg_5147);
}
pub inline fn glMatrixMultdEXT(arg_5148: GLenum, arg_5149: [*c]const GLdouble) void {
    return epoxy_glMatrixMultdEXT.?(arg_5148, arg_5149);
}
pub inline fn glMatrixMultfEXT(arg_5150: GLenum, arg_5151: [*c]const GLfloat) void {
    return epoxy_glMatrixMultfEXT.?(arg_5150, arg_5151);
}
pub inline fn glMatrixOrthoEXT(arg_5152: GLenum, arg_5153: GLdouble, arg_5154: GLdouble, arg_5155: GLdouble, arg_5156: GLdouble, arg_5157: GLdouble, arg_5158: GLdouble) void {
    return epoxy_glMatrixOrthoEXT.?(arg_5152, arg_5153, arg_5154, arg_5155, arg_5156, arg_5157, arg_5158);
}
pub inline fn glMatrixPopEXT(arg_5159: GLenum) void {
    return epoxy_glMatrixPopEXT.?(arg_5159);
}
pub inline fn glMatrixPushEXT(arg_5160: GLenum) void {
    return epoxy_glMatrixPushEXT.?(arg_5160);
}
pub inline fn glMatrixRotatedEXT(arg_5161: GLenum, arg_5162: GLdouble, arg_5163: GLdouble, arg_5164: GLdouble, arg_5165: GLdouble) void {
    return epoxy_glMatrixRotatedEXT.?(arg_5161, arg_5162, arg_5163, arg_5164, arg_5165);
}
pub inline fn glMatrixRotatefEXT(arg_5166: GLenum, arg_5167: GLfloat, arg_5168: GLfloat, arg_5169: GLfloat, arg_5170: GLfloat) void {
    return epoxy_glMatrixRotatefEXT.?(arg_5166, arg_5167, arg_5168, arg_5169, arg_5170);
}
pub inline fn glMatrixScaledEXT(arg_5171: GLenum, arg_5172: GLdouble, arg_5173: GLdouble, arg_5174: GLdouble) void {
    return epoxy_glMatrixScaledEXT.?(arg_5171, arg_5172, arg_5173, arg_5174);
}
pub inline fn glMatrixScalefEXT(arg_5175: GLenum, arg_5176: GLfloat, arg_5177: GLfloat, arg_5178: GLfloat) void {
    return epoxy_glMatrixScalefEXT.?(arg_5175, arg_5176, arg_5177, arg_5178);
}
pub inline fn glMatrixTranslatedEXT(arg_5179: GLenum, arg_5180: GLdouble, arg_5181: GLdouble, arg_5182: GLdouble) void {
    return epoxy_glMatrixTranslatedEXT.?(arg_5179, arg_5180, arg_5181, arg_5182);
}
pub inline fn glMatrixTranslatefEXT(arg_5183: GLenum, arg_5184: GLfloat, arg_5185: GLfloat, arg_5186: GLfloat) void {
    return epoxy_glMatrixTranslatefEXT.?(arg_5183, arg_5184, arg_5185, arg_5186);
}
pub inline fn glMaxShaderCompilerThreadsARB(arg_5187: GLuint) void {
    return epoxy_glMaxShaderCompilerThreadsARB.?(arg_5187);
}
pub inline fn glMaxShaderCompilerThreadsKHR(arg_5188: GLuint) void {
    return epoxy_glMaxShaderCompilerThreadsKHR.?(arg_5188);
}
pub inline fn glMemoryBarrier(arg_5189: GLbitfield) void {
    return epoxy_glMemoryBarrier.?(arg_5189);
}
pub inline fn glMemoryBarrierByRegion(arg_5190: GLbitfield) void {
    return epoxy_glMemoryBarrierByRegion.?(arg_5190);
}
pub inline fn glMemoryBarrierEXT(arg_5191: GLbitfield) void {
    return epoxy_glMemoryBarrierEXT.?(arg_5191);
}
pub inline fn glMemoryObjectParameterivEXT(arg_5192: GLuint, arg_5193: GLenum, arg_5194: [*c]const GLint) void {
    return epoxy_glMemoryObjectParameterivEXT.?(arg_5192, arg_5193, arg_5194);
}
pub inline fn glMinSampleShading(arg_5195: GLfloat) void {
    return epoxy_glMinSampleShading.?(arg_5195);
}
pub inline fn glMinSampleShadingARB(arg_5196: GLfloat) void {
    return epoxy_glMinSampleShadingARB.?(arg_5196);
}
pub inline fn glMinSampleShadingOES(arg_5197: GLfloat) void {
    return epoxy_glMinSampleShadingOES.?(arg_5197);
}
pub inline fn glMinmax(arg_5198: GLenum, arg_5199: GLenum, arg_5200: GLboolean) void {
    return epoxy_glMinmax.?(arg_5198, arg_5199, arg_5200);
}
pub inline fn glMinmaxEXT(arg_5201: GLenum, arg_5202: GLenum, arg_5203: GLboolean) void {
    return epoxy_glMinmaxEXT.?(arg_5201, arg_5202, arg_5203);
}
pub inline fn glMultMatrixd(arg_5204: [*c]const GLdouble) void {
    return epoxy_glMultMatrixd.?(arg_5204);
}
pub inline fn glMultMatrixf(arg_5205: [*c]const GLfloat) void {
    return epoxy_glMultMatrixf.?(arg_5205);
}
pub inline fn glMultMatrixx(arg_5206: [*c]const GLfixed) void {
    return epoxy_glMultMatrixx.?(arg_5206);
}
pub inline fn glMultMatrixxOES(arg_5207: [*c]const GLfixed) void {
    return epoxy_glMultMatrixxOES.?(arg_5207);
}
pub inline fn glMultTransposeMatrixd(arg_5208: [*c]const GLdouble) void {
    return epoxy_glMultTransposeMatrixd.?(arg_5208);
}
pub inline fn glMultTransposeMatrixdARB(arg_5209: [*c]const GLdouble) void {
    return epoxy_glMultTransposeMatrixdARB.?(arg_5209);
}
pub inline fn glMultTransposeMatrixf(arg_5210: [*c]const GLfloat) void {
    return epoxy_glMultTransposeMatrixf.?(arg_5210);
}
pub inline fn glMultTransposeMatrixfARB(arg_5211: [*c]const GLfloat) void {
    return epoxy_glMultTransposeMatrixfARB.?(arg_5211);
}
pub inline fn glMultTransposeMatrixxOES(arg_5212: [*c]const GLfixed) void {
    return epoxy_glMultTransposeMatrixxOES.?(arg_5212);
}
pub inline fn glMultiDrawArrays(arg_5213: GLenum, arg_5214: [*c]const GLint, arg_5215: [*c]const GLsizei, arg_5216: GLsizei) void {
    return epoxy_glMultiDrawArrays.?(arg_5213, arg_5214, arg_5215, arg_5216);
}
pub inline fn glMultiDrawArraysEXT(arg_5217: GLenum, arg_5218: [*c]const GLint, arg_5219: [*c]const GLsizei, arg_5220: GLsizei) void {
    return epoxy_glMultiDrawArraysEXT.?(arg_5217, arg_5218, arg_5219, arg_5220);
}
pub inline fn glMultiDrawArraysIndirect(arg_5221: GLenum, arg_5222: ?*const anyopaque, arg_5223: GLsizei, arg_5224: GLsizei) void {
    return epoxy_glMultiDrawArraysIndirect.?(arg_5221, arg_5222, arg_5223, arg_5224);
}
pub inline fn glMultiDrawArraysIndirectAMD(arg_5225: GLenum, arg_5226: ?*const anyopaque, arg_5227: GLsizei, arg_5228: GLsizei) void {
    return epoxy_glMultiDrawArraysIndirectAMD.?(arg_5225, arg_5226, arg_5227, arg_5228);
}
pub inline fn glMultiDrawArraysIndirectBindlessCountNV(arg_5229: GLenum, arg_5230: ?*const anyopaque, arg_5231: GLsizei, arg_5232: GLsizei, arg_5233: GLsizei, arg_5234: GLint) void {
    return epoxy_glMultiDrawArraysIndirectBindlessCountNV.?(arg_5229, arg_5230, arg_5231, arg_5232, arg_5233, arg_5234);
}
pub inline fn glMultiDrawArraysIndirectBindlessNV(arg_5235: GLenum, arg_5236: ?*const anyopaque, arg_5237: GLsizei, arg_5238: GLsizei, arg_5239: GLint) void {
    return epoxy_glMultiDrawArraysIndirectBindlessNV.?(arg_5235, arg_5236, arg_5237, arg_5238, arg_5239);
}
pub inline fn glMultiDrawArraysIndirectCount(arg_5240: GLenum, arg_5241: ?*const anyopaque, arg_5242: GLintptr, arg_5243: GLsizei, arg_5244: GLsizei) void {
    return epoxy_glMultiDrawArraysIndirectCount.?(arg_5240, arg_5241, arg_5242, arg_5243, arg_5244);
}
pub inline fn glMultiDrawArraysIndirectCountARB(arg_5245: GLenum, arg_5246: ?*const anyopaque, arg_5247: GLintptr, arg_5248: GLsizei, arg_5249: GLsizei) void {
    return epoxy_glMultiDrawArraysIndirectCountARB.?(arg_5245, arg_5246, arg_5247, arg_5248, arg_5249);
}
pub inline fn glMultiDrawArraysIndirectEXT(arg_5250: GLenum, arg_5251: ?*const anyopaque, arg_5252: GLsizei, arg_5253: GLsizei) void {
    return epoxy_glMultiDrawArraysIndirectEXT.?(arg_5250, arg_5251, arg_5252, arg_5253);
}
pub inline fn glMultiDrawElementArrayAPPLE(arg_5254: GLenum, arg_5255: [*c]const GLint, arg_5256: [*c]const GLsizei, arg_5257: GLsizei) void {
    return epoxy_glMultiDrawElementArrayAPPLE.?(arg_5254, arg_5255, arg_5256, arg_5257);
}
pub inline fn glMultiDrawElements(arg_5258: GLenum, arg_5259: [*c]const GLsizei, arg_5260: GLenum, arg_5261: [*c]const ?*const anyopaque, arg_5262: GLsizei) void {
    return epoxy_glMultiDrawElements.?(arg_5258, arg_5259, arg_5260, arg_5261, arg_5262);
}
pub inline fn glMultiDrawElementsBaseVertex(arg_5263: GLenum, arg_5264: [*c]const GLsizei, arg_5265: GLenum, arg_5266: [*c]const ?*const anyopaque, arg_5267: GLsizei, arg_5268: [*c]const GLint) void {
    return epoxy_glMultiDrawElementsBaseVertex.?(arg_5263, arg_5264, arg_5265, arg_5266, arg_5267, arg_5268);
}
pub inline fn glMultiDrawElementsBaseVertexEXT(arg_5269: GLenum, arg_5270: [*c]const GLsizei, arg_5271: GLenum, arg_5272: [*c]const ?*const anyopaque, arg_5273: GLsizei, arg_5274: [*c]const GLint) void {
    return epoxy_glMultiDrawElementsBaseVertexEXT.?(arg_5269, arg_5270, arg_5271, arg_5272, arg_5273, arg_5274);
}
pub inline fn glMultiDrawElementsEXT(arg_5275: GLenum, arg_5276: [*c]const GLsizei, arg_5277: GLenum, arg_5278: [*c]const ?*const anyopaque, arg_5279: GLsizei) void {
    return epoxy_glMultiDrawElementsEXT.?(arg_5275, arg_5276, arg_5277, arg_5278, arg_5279);
}
pub inline fn glMultiDrawElementsIndirect(arg_5280: GLenum, arg_5281: GLenum, arg_5282: ?*const anyopaque, arg_5283: GLsizei, arg_5284: GLsizei) void {
    return epoxy_glMultiDrawElementsIndirect.?(arg_5280, arg_5281, arg_5282, arg_5283, arg_5284);
}
pub inline fn glMultiDrawElementsIndirectAMD(arg_5285: GLenum, arg_5286: GLenum, arg_5287: ?*const anyopaque, arg_5288: GLsizei, arg_5289: GLsizei) void {
    return epoxy_glMultiDrawElementsIndirectAMD.?(arg_5285, arg_5286, arg_5287, arg_5288, arg_5289);
}
pub inline fn glMultiDrawElementsIndirectBindlessCountNV(arg_5290: GLenum, arg_5291: GLenum, arg_5292: ?*const anyopaque, arg_5293: GLsizei, arg_5294: GLsizei, arg_5295: GLsizei, arg_5296: GLint) void {
    return epoxy_glMultiDrawElementsIndirectBindlessCountNV.?(arg_5290, arg_5291, arg_5292, arg_5293, arg_5294, arg_5295, arg_5296);
}
pub inline fn glMultiDrawElementsIndirectBindlessNV(arg_5297: GLenum, arg_5298: GLenum, arg_5299: ?*const anyopaque, arg_5300: GLsizei, arg_5301: GLsizei, arg_5302: GLint) void {
    return epoxy_glMultiDrawElementsIndirectBindlessNV.?(arg_5297, arg_5298, arg_5299, arg_5300, arg_5301, arg_5302);
}
pub inline fn glMultiDrawElementsIndirectCount(arg_5303: GLenum, arg_5304: GLenum, arg_5305: ?*const anyopaque, arg_5306: GLintptr, arg_5307: GLsizei, arg_5308: GLsizei) void {
    return epoxy_glMultiDrawElementsIndirectCount.?(arg_5303, arg_5304, arg_5305, arg_5306, arg_5307, arg_5308);
}
pub inline fn glMultiDrawElementsIndirectCountARB(arg_5309: GLenum, arg_5310: GLenum, arg_5311: ?*const anyopaque, arg_5312: GLintptr, arg_5313: GLsizei, arg_5314: GLsizei) void {
    return epoxy_glMultiDrawElementsIndirectCountARB.?(arg_5309, arg_5310, arg_5311, arg_5312, arg_5313, arg_5314);
}
pub inline fn glMultiDrawElementsIndirectEXT(arg_5315: GLenum, arg_5316: GLenum, arg_5317: ?*const anyopaque, arg_5318: GLsizei, arg_5319: GLsizei) void {
    return epoxy_glMultiDrawElementsIndirectEXT.?(arg_5315, arg_5316, arg_5317, arg_5318, arg_5319);
}
pub inline fn glMultiDrawMeshTasksIndirectCountNV(arg_5320: GLintptr, arg_5321: GLintptr, arg_5322: GLsizei, arg_5323: GLsizei) void {
    return epoxy_glMultiDrawMeshTasksIndirectCountNV.?(arg_5320, arg_5321, arg_5322, arg_5323);
}
pub inline fn glMultiDrawMeshTasksIndirectNV(arg_5324: GLintptr, arg_5325: GLsizei, arg_5326: GLsizei) void {
    return epoxy_glMultiDrawMeshTasksIndirectNV.?(arg_5324, arg_5325, arg_5326);
}
pub inline fn glMultiDrawRangeElementArrayAPPLE(arg_5327: GLenum, arg_5328: GLuint, arg_5329: GLuint, arg_5330: [*c]const GLint, arg_5331: [*c]const GLsizei, arg_5332: GLsizei) void {
    return epoxy_glMultiDrawRangeElementArrayAPPLE.?(arg_5327, arg_5328, arg_5329, arg_5330, arg_5331, arg_5332);
}
pub inline fn glMultiModeDrawArraysIBM(arg_5333: [*c]const GLenum, arg_5334: [*c]const GLint, arg_5335: [*c]const GLsizei, arg_5336: GLsizei, arg_5337: GLint) void {
    return epoxy_glMultiModeDrawArraysIBM.?(arg_5333, arg_5334, arg_5335, arg_5336, arg_5337);
}
pub inline fn glMultiModeDrawElementsIBM(arg_5338: [*c]const GLenum, arg_5339: [*c]const GLsizei, arg_5340: GLenum, arg_5341: [*c]const ?*const anyopaque, arg_5342: GLsizei, arg_5343: GLint) void {
    return epoxy_glMultiModeDrawElementsIBM.?(arg_5338, arg_5339, arg_5340, arg_5341, arg_5342, arg_5343);
}
pub inline fn glMultiTexBufferEXT(arg_5344: GLenum, arg_5345: GLenum, arg_5346: GLenum, arg_5347: GLuint) void {
    return epoxy_glMultiTexBufferEXT.?(arg_5344, arg_5345, arg_5346, arg_5347);
}
pub inline fn glMultiTexCoord1bOES(arg_5348: GLenum, arg_5349: GLbyte) void {
    return epoxy_glMultiTexCoord1bOES.?(arg_5348, arg_5349);
}
pub inline fn glMultiTexCoord1bvOES(arg_5350: GLenum, arg_5351: [*c]const GLbyte) void {
    return epoxy_glMultiTexCoord1bvOES.?(arg_5350, arg_5351);
}
pub inline fn glMultiTexCoord1d(arg_5352: GLenum, arg_5353: GLdouble) void {
    return epoxy_glMultiTexCoord1d.?(arg_5352, arg_5353);
}
pub inline fn glMultiTexCoord1dARB(arg_5354: GLenum, arg_5355: GLdouble) void {
    return epoxy_glMultiTexCoord1dARB.?(arg_5354, arg_5355);
}
pub inline fn glMultiTexCoord1dv(arg_5356: GLenum, arg_5357: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord1dv.?(arg_5356, arg_5357);
}
pub inline fn glMultiTexCoord1dvARB(arg_5358: GLenum, arg_5359: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord1dvARB.?(arg_5358, arg_5359);
}
pub inline fn glMultiTexCoord1f(arg_5360: GLenum, arg_5361: GLfloat) void {
    return epoxy_glMultiTexCoord1f.?(arg_5360, arg_5361);
}
pub inline fn glMultiTexCoord1fARB(arg_5362: GLenum, arg_5363: GLfloat) void {
    return epoxy_glMultiTexCoord1fARB.?(arg_5362, arg_5363);
}
pub inline fn glMultiTexCoord1fv(arg_5364: GLenum, arg_5365: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord1fv.?(arg_5364, arg_5365);
}
pub inline fn glMultiTexCoord1fvARB(arg_5366: GLenum, arg_5367: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord1fvARB.?(arg_5366, arg_5367);
}
pub inline fn glMultiTexCoord1hNV(arg_5368: GLenum, arg_5369: GLhalfNV) void {
    return epoxy_glMultiTexCoord1hNV.?(arg_5368, arg_5369);
}
pub inline fn glMultiTexCoord1hvNV(arg_5370: GLenum, arg_5371: [*c]const GLhalfNV) void {
    return epoxy_glMultiTexCoord1hvNV.?(arg_5370, arg_5371);
}
pub inline fn glMultiTexCoord1i(arg_5372: GLenum, arg_5373: GLint) void {
    return epoxy_glMultiTexCoord1i.?(arg_5372, arg_5373);
}
pub inline fn glMultiTexCoord1iARB(arg_5374: GLenum, arg_5375: GLint) void {
    return epoxy_glMultiTexCoord1iARB.?(arg_5374, arg_5375);
}
pub inline fn glMultiTexCoord1iv(arg_5376: GLenum, arg_5377: [*c]const GLint) void {
    return epoxy_glMultiTexCoord1iv.?(arg_5376, arg_5377);
}
pub inline fn glMultiTexCoord1ivARB(arg_5378: GLenum, arg_5379: [*c]const GLint) void {
    return epoxy_glMultiTexCoord1ivARB.?(arg_5378, arg_5379);
}
pub inline fn glMultiTexCoord1s(arg_5380: GLenum, arg_5381: GLshort) void {
    return epoxy_glMultiTexCoord1s.?(arg_5380, arg_5381);
}
pub inline fn glMultiTexCoord1sARB(arg_5382: GLenum, arg_5383: GLshort) void {
    return epoxy_glMultiTexCoord1sARB.?(arg_5382, arg_5383);
}
pub inline fn glMultiTexCoord1sv(arg_5384: GLenum, arg_5385: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord1sv.?(arg_5384, arg_5385);
}
pub inline fn glMultiTexCoord1svARB(arg_5386: GLenum, arg_5387: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord1svARB.?(arg_5386, arg_5387);
}
pub inline fn glMultiTexCoord1xOES(arg_5388: GLenum, arg_5389: GLfixed) void {
    return epoxy_glMultiTexCoord1xOES.?(arg_5388, arg_5389);
}
pub inline fn glMultiTexCoord1xvOES(arg_5390: GLenum, arg_5391: [*c]const GLfixed) void {
    return epoxy_glMultiTexCoord1xvOES.?(arg_5390, arg_5391);
}
pub inline fn glMultiTexCoord2bOES(arg_5392: GLenum, arg_5393: GLbyte, arg_5394: GLbyte) void {
    return epoxy_glMultiTexCoord2bOES.?(arg_5392, arg_5393, arg_5394);
}
pub inline fn glMultiTexCoord2bvOES(arg_5395: GLenum, arg_5396: [*c]const GLbyte) void {
    return epoxy_glMultiTexCoord2bvOES.?(arg_5395, arg_5396);
}
pub inline fn glMultiTexCoord2d(arg_5397: GLenum, arg_5398: GLdouble, arg_5399: GLdouble) void {
    return epoxy_glMultiTexCoord2d.?(arg_5397, arg_5398, arg_5399);
}
pub inline fn glMultiTexCoord2dARB(arg_5400: GLenum, arg_5401: GLdouble, arg_5402: GLdouble) void {
    return epoxy_glMultiTexCoord2dARB.?(arg_5400, arg_5401, arg_5402);
}
pub inline fn glMultiTexCoord2dv(arg_5403: GLenum, arg_5404: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord2dv.?(arg_5403, arg_5404);
}
pub inline fn glMultiTexCoord2dvARB(arg_5405: GLenum, arg_5406: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord2dvARB.?(arg_5405, arg_5406);
}
pub inline fn glMultiTexCoord2f(arg_5407: GLenum, arg_5408: GLfloat, arg_5409: GLfloat) void {
    return epoxy_glMultiTexCoord2f.?(arg_5407, arg_5408, arg_5409);
}
pub inline fn glMultiTexCoord2fARB(arg_5410: GLenum, arg_5411: GLfloat, arg_5412: GLfloat) void {
    return epoxy_glMultiTexCoord2fARB.?(arg_5410, arg_5411, arg_5412);
}
pub inline fn glMultiTexCoord2fv(arg_5413: GLenum, arg_5414: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord2fv.?(arg_5413, arg_5414);
}
pub inline fn glMultiTexCoord2fvARB(arg_5415: GLenum, arg_5416: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord2fvARB.?(arg_5415, arg_5416);
}
pub inline fn glMultiTexCoord2hNV(arg_5417: GLenum, arg_5418: GLhalfNV, arg_5419: GLhalfNV) void {
    return epoxy_glMultiTexCoord2hNV.?(arg_5417, arg_5418, arg_5419);
}
pub inline fn glMultiTexCoord2hvNV(arg_5420: GLenum, arg_5421: [*c]const GLhalfNV) void {
    return epoxy_glMultiTexCoord2hvNV.?(arg_5420, arg_5421);
}
pub inline fn glMultiTexCoord2i(arg_5422: GLenum, arg_5423: GLint, arg_5424: GLint) void {
    return epoxy_glMultiTexCoord2i.?(arg_5422, arg_5423, arg_5424);
}
pub inline fn glMultiTexCoord2iARB(arg_5425: GLenum, arg_5426: GLint, arg_5427: GLint) void {
    return epoxy_glMultiTexCoord2iARB.?(arg_5425, arg_5426, arg_5427);
}
pub inline fn glMultiTexCoord2iv(arg_5428: GLenum, arg_5429: [*c]const GLint) void {
    return epoxy_glMultiTexCoord2iv.?(arg_5428, arg_5429);
}
pub inline fn glMultiTexCoord2ivARB(arg_5430: GLenum, arg_5431: [*c]const GLint) void {
    return epoxy_glMultiTexCoord2ivARB.?(arg_5430, arg_5431);
}
pub inline fn glMultiTexCoord2s(arg_5432: GLenum, arg_5433: GLshort, arg_5434: GLshort) void {
    return epoxy_glMultiTexCoord2s.?(arg_5432, arg_5433, arg_5434);
}
pub inline fn glMultiTexCoord2sARB(arg_5435: GLenum, arg_5436: GLshort, arg_5437: GLshort) void {
    return epoxy_glMultiTexCoord2sARB.?(arg_5435, arg_5436, arg_5437);
}
pub inline fn glMultiTexCoord2sv(arg_5438: GLenum, arg_5439: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord2sv.?(arg_5438, arg_5439);
}
pub inline fn glMultiTexCoord2svARB(arg_5440: GLenum, arg_5441: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord2svARB.?(arg_5440, arg_5441);
}
pub inline fn glMultiTexCoord2xOES(arg_5442: GLenum, arg_5443: GLfixed, arg_5444: GLfixed) void {
    return epoxy_glMultiTexCoord2xOES.?(arg_5442, arg_5443, arg_5444);
}
pub inline fn glMultiTexCoord2xvOES(arg_5445: GLenum, arg_5446: [*c]const GLfixed) void {
    return epoxy_glMultiTexCoord2xvOES.?(arg_5445, arg_5446);
}
pub inline fn glMultiTexCoord3bOES(arg_5447: GLenum, arg_5448: GLbyte, arg_5449: GLbyte, arg_5450: GLbyte) void {
    return epoxy_glMultiTexCoord3bOES.?(arg_5447, arg_5448, arg_5449, arg_5450);
}
pub inline fn glMultiTexCoord3bvOES(arg_5451: GLenum, arg_5452: [*c]const GLbyte) void {
    return epoxy_glMultiTexCoord3bvOES.?(arg_5451, arg_5452);
}
pub inline fn glMultiTexCoord3d(arg_5453: GLenum, arg_5454: GLdouble, arg_5455: GLdouble, arg_5456: GLdouble) void {
    return epoxy_glMultiTexCoord3d.?(arg_5453, arg_5454, arg_5455, arg_5456);
}
pub inline fn glMultiTexCoord3dARB(arg_5457: GLenum, arg_5458: GLdouble, arg_5459: GLdouble, arg_5460: GLdouble) void {
    return epoxy_glMultiTexCoord3dARB.?(arg_5457, arg_5458, arg_5459, arg_5460);
}
pub inline fn glMultiTexCoord3dv(arg_5461: GLenum, arg_5462: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord3dv.?(arg_5461, arg_5462);
}
pub inline fn glMultiTexCoord3dvARB(arg_5463: GLenum, arg_5464: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord3dvARB.?(arg_5463, arg_5464);
}
pub inline fn glMultiTexCoord3f(arg_5465: GLenum, arg_5466: GLfloat, arg_5467: GLfloat, arg_5468: GLfloat) void {
    return epoxy_glMultiTexCoord3f.?(arg_5465, arg_5466, arg_5467, arg_5468);
}
pub inline fn glMultiTexCoord3fARB(arg_5469: GLenum, arg_5470: GLfloat, arg_5471: GLfloat, arg_5472: GLfloat) void {
    return epoxy_glMultiTexCoord3fARB.?(arg_5469, arg_5470, arg_5471, arg_5472);
}
pub inline fn glMultiTexCoord3fv(arg_5473: GLenum, arg_5474: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord3fv.?(arg_5473, arg_5474);
}
pub inline fn glMultiTexCoord3fvARB(arg_5475: GLenum, arg_5476: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord3fvARB.?(arg_5475, arg_5476);
}
pub inline fn glMultiTexCoord3hNV(arg_5477: GLenum, arg_5478: GLhalfNV, arg_5479: GLhalfNV, arg_5480: GLhalfNV) void {
    return epoxy_glMultiTexCoord3hNV.?(arg_5477, arg_5478, arg_5479, arg_5480);
}
pub inline fn glMultiTexCoord3hvNV(arg_5481: GLenum, arg_5482: [*c]const GLhalfNV) void {
    return epoxy_glMultiTexCoord3hvNV.?(arg_5481, arg_5482);
}
pub inline fn glMultiTexCoord3i(arg_5483: GLenum, arg_5484: GLint, arg_5485: GLint, arg_5486: GLint) void {
    return epoxy_glMultiTexCoord3i.?(arg_5483, arg_5484, arg_5485, arg_5486);
}
pub inline fn glMultiTexCoord3iARB(arg_5487: GLenum, arg_5488: GLint, arg_5489: GLint, arg_5490: GLint) void {
    return epoxy_glMultiTexCoord3iARB.?(arg_5487, arg_5488, arg_5489, arg_5490);
}
pub inline fn glMultiTexCoord3iv(arg_5491: GLenum, arg_5492: [*c]const GLint) void {
    return epoxy_glMultiTexCoord3iv.?(arg_5491, arg_5492);
}
pub inline fn glMultiTexCoord3ivARB(arg_5493: GLenum, arg_5494: [*c]const GLint) void {
    return epoxy_glMultiTexCoord3ivARB.?(arg_5493, arg_5494);
}
pub inline fn glMultiTexCoord3s(arg_5495: GLenum, arg_5496: GLshort, arg_5497: GLshort, arg_5498: GLshort) void {
    return epoxy_glMultiTexCoord3s.?(arg_5495, arg_5496, arg_5497, arg_5498);
}
pub inline fn glMultiTexCoord3sARB(arg_5499: GLenum, arg_5500: GLshort, arg_5501: GLshort, arg_5502: GLshort) void {
    return epoxy_glMultiTexCoord3sARB.?(arg_5499, arg_5500, arg_5501, arg_5502);
}
pub inline fn glMultiTexCoord3sv(arg_5503: GLenum, arg_5504: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord3sv.?(arg_5503, arg_5504);
}
pub inline fn glMultiTexCoord3svARB(arg_5505: GLenum, arg_5506: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord3svARB.?(arg_5505, arg_5506);
}
pub inline fn glMultiTexCoord3xOES(arg_5507: GLenum, arg_5508: GLfixed, arg_5509: GLfixed, arg_5510: GLfixed) void {
    return epoxy_glMultiTexCoord3xOES.?(arg_5507, arg_5508, arg_5509, arg_5510);
}
pub inline fn glMultiTexCoord3xvOES(arg_5511: GLenum, arg_5512: [*c]const GLfixed) void {
    return epoxy_glMultiTexCoord3xvOES.?(arg_5511, arg_5512);
}
pub inline fn glMultiTexCoord4bOES(arg_5513: GLenum, arg_5514: GLbyte, arg_5515: GLbyte, arg_5516: GLbyte, arg_5517: GLbyte) void {
    return epoxy_glMultiTexCoord4bOES.?(arg_5513, arg_5514, arg_5515, arg_5516, arg_5517);
}
pub inline fn glMultiTexCoord4bvOES(arg_5518: GLenum, arg_5519: [*c]const GLbyte) void {
    return epoxy_glMultiTexCoord4bvOES.?(arg_5518, arg_5519);
}
pub inline fn glMultiTexCoord4d(arg_5520: GLenum, arg_5521: GLdouble, arg_5522: GLdouble, arg_5523: GLdouble, arg_5524: GLdouble) void {
    return epoxy_glMultiTexCoord4d.?(arg_5520, arg_5521, arg_5522, arg_5523, arg_5524);
}
pub inline fn glMultiTexCoord4dARB(arg_5525: GLenum, arg_5526: GLdouble, arg_5527: GLdouble, arg_5528: GLdouble, arg_5529: GLdouble) void {
    return epoxy_glMultiTexCoord4dARB.?(arg_5525, arg_5526, arg_5527, arg_5528, arg_5529);
}
pub inline fn glMultiTexCoord4dv(arg_5530: GLenum, arg_5531: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord4dv.?(arg_5530, arg_5531);
}
pub inline fn glMultiTexCoord4dvARB(arg_5532: GLenum, arg_5533: [*c]const GLdouble) void {
    return epoxy_glMultiTexCoord4dvARB.?(arg_5532, arg_5533);
}
pub inline fn glMultiTexCoord4f(arg_5534: GLenum, arg_5535: GLfloat, arg_5536: GLfloat, arg_5537: GLfloat, arg_5538: GLfloat) void {
    return epoxy_glMultiTexCoord4f.?(arg_5534, arg_5535, arg_5536, arg_5537, arg_5538);
}
pub inline fn glMultiTexCoord4fARB(arg_5539: GLenum, arg_5540: GLfloat, arg_5541: GLfloat, arg_5542: GLfloat, arg_5543: GLfloat) void {
    return epoxy_glMultiTexCoord4fARB.?(arg_5539, arg_5540, arg_5541, arg_5542, arg_5543);
}
pub inline fn glMultiTexCoord4fv(arg_5544: GLenum, arg_5545: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord4fv.?(arg_5544, arg_5545);
}
pub inline fn glMultiTexCoord4fvARB(arg_5546: GLenum, arg_5547: [*c]const GLfloat) void {
    return epoxy_glMultiTexCoord4fvARB.?(arg_5546, arg_5547);
}
pub inline fn glMultiTexCoord4hNV(arg_5548: GLenum, arg_5549: GLhalfNV, arg_5550: GLhalfNV, arg_5551: GLhalfNV, arg_5552: GLhalfNV) void {
    return epoxy_glMultiTexCoord4hNV.?(arg_5548, arg_5549, arg_5550, arg_5551, arg_5552);
}
pub inline fn glMultiTexCoord4hvNV(arg_5553: GLenum, arg_5554: [*c]const GLhalfNV) void {
    return epoxy_glMultiTexCoord4hvNV.?(arg_5553, arg_5554);
}
pub inline fn glMultiTexCoord4i(arg_5555: GLenum, arg_5556: GLint, arg_5557: GLint, arg_5558: GLint, arg_5559: GLint) void {
    return epoxy_glMultiTexCoord4i.?(arg_5555, arg_5556, arg_5557, arg_5558, arg_5559);
}
pub inline fn glMultiTexCoord4iARB(arg_5560: GLenum, arg_5561: GLint, arg_5562: GLint, arg_5563: GLint, arg_5564: GLint) void {
    return epoxy_glMultiTexCoord4iARB.?(arg_5560, arg_5561, arg_5562, arg_5563, arg_5564);
}
pub inline fn glMultiTexCoord4iv(arg_5565: GLenum, arg_5566: [*c]const GLint) void {
    return epoxy_glMultiTexCoord4iv.?(arg_5565, arg_5566);
}
pub inline fn glMultiTexCoord4ivARB(arg_5567: GLenum, arg_5568: [*c]const GLint) void {
    return epoxy_glMultiTexCoord4ivARB.?(arg_5567, arg_5568);
}
pub inline fn glMultiTexCoord4s(arg_5569: GLenum, arg_5570: GLshort, arg_5571: GLshort, arg_5572: GLshort, arg_5573: GLshort) void {
    return epoxy_glMultiTexCoord4s.?(arg_5569, arg_5570, arg_5571, arg_5572, arg_5573);
}
pub inline fn glMultiTexCoord4sARB(arg_5574: GLenum, arg_5575: GLshort, arg_5576: GLshort, arg_5577: GLshort, arg_5578: GLshort) void {
    return epoxy_glMultiTexCoord4sARB.?(arg_5574, arg_5575, arg_5576, arg_5577, arg_5578);
}
pub inline fn glMultiTexCoord4sv(arg_5579: GLenum, arg_5580: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord4sv.?(arg_5579, arg_5580);
}
pub inline fn glMultiTexCoord4svARB(arg_5581: GLenum, arg_5582: [*c]const GLshort) void {
    return epoxy_glMultiTexCoord4svARB.?(arg_5581, arg_5582);
}
pub inline fn glMultiTexCoord4x(arg_5583: GLenum, arg_5584: GLfixed, arg_5585: GLfixed, arg_5586: GLfixed, arg_5587: GLfixed) void {
    return epoxy_glMultiTexCoord4x.?(arg_5583, arg_5584, arg_5585, arg_5586, arg_5587);
}
pub inline fn glMultiTexCoord4xOES(arg_5588: GLenum, arg_5589: GLfixed, arg_5590: GLfixed, arg_5591: GLfixed, arg_5592: GLfixed) void {
    return epoxy_glMultiTexCoord4xOES.?(arg_5588, arg_5589, arg_5590, arg_5591, arg_5592);
}
pub inline fn glMultiTexCoord4xvOES(arg_5593: GLenum, arg_5594: [*c]const GLfixed) void {
    return epoxy_glMultiTexCoord4xvOES.?(arg_5593, arg_5594);
}
pub inline fn glMultiTexCoordP1ui(arg_5595: GLenum, arg_5596: GLenum, arg_5597: GLuint) void {
    return epoxy_glMultiTexCoordP1ui.?(arg_5595, arg_5596, arg_5597);
}
pub inline fn glMultiTexCoordP1uiv(arg_5598: GLenum, arg_5599: GLenum, arg_5600: [*c]const GLuint) void {
    return epoxy_glMultiTexCoordP1uiv.?(arg_5598, arg_5599, arg_5600);
}
pub inline fn glMultiTexCoordP2ui(arg_5601: GLenum, arg_5602: GLenum, arg_5603: GLuint) void {
    return epoxy_glMultiTexCoordP2ui.?(arg_5601, arg_5602, arg_5603);
}
pub inline fn glMultiTexCoordP2uiv(arg_5604: GLenum, arg_5605: GLenum, arg_5606: [*c]const GLuint) void {
    return epoxy_glMultiTexCoordP2uiv.?(arg_5604, arg_5605, arg_5606);
}
pub inline fn glMultiTexCoordP3ui(arg_5607: GLenum, arg_5608: GLenum, arg_5609: GLuint) void {
    return epoxy_glMultiTexCoordP3ui.?(arg_5607, arg_5608, arg_5609);
}
pub inline fn glMultiTexCoordP3uiv(arg_5610: GLenum, arg_5611: GLenum, arg_5612: [*c]const GLuint) void {
    return epoxy_glMultiTexCoordP3uiv.?(arg_5610, arg_5611, arg_5612);
}
pub inline fn glMultiTexCoordP4ui(arg_5613: GLenum, arg_5614: GLenum, arg_5615: GLuint) void {
    return epoxy_glMultiTexCoordP4ui.?(arg_5613, arg_5614, arg_5615);
}
pub inline fn glMultiTexCoordP4uiv(arg_5616: GLenum, arg_5617: GLenum, arg_5618: [*c]const GLuint) void {
    return epoxy_glMultiTexCoordP4uiv.?(arg_5616, arg_5617, arg_5618);
}
pub inline fn glMultiTexCoordPointerEXT(arg_5619: GLenum, arg_5620: GLint, arg_5621: GLenum, arg_5622: GLsizei, arg_5623: ?*const anyopaque) void {
    return epoxy_glMultiTexCoordPointerEXT.?(arg_5619, arg_5620, arg_5621, arg_5622, arg_5623);
}
pub inline fn glMultiTexEnvfEXT(arg_5624: GLenum, arg_5625: GLenum, arg_5626: GLenum, arg_5627: GLfloat) void {
    return epoxy_glMultiTexEnvfEXT.?(arg_5624, arg_5625, arg_5626, arg_5627);
}
pub inline fn glMultiTexEnvfvEXT(arg_5628: GLenum, arg_5629: GLenum, arg_5630: GLenum, arg_5631: [*c]const GLfloat) void {
    return epoxy_glMultiTexEnvfvEXT.?(arg_5628, arg_5629, arg_5630, arg_5631);
}
pub inline fn glMultiTexEnviEXT(arg_5632: GLenum, arg_5633: GLenum, arg_5634: GLenum, arg_5635: GLint) void {
    return epoxy_glMultiTexEnviEXT.?(arg_5632, arg_5633, arg_5634, arg_5635);
}
pub inline fn glMultiTexEnvivEXT(arg_5636: GLenum, arg_5637: GLenum, arg_5638: GLenum, arg_5639: [*c]const GLint) void {
    return epoxy_glMultiTexEnvivEXT.?(arg_5636, arg_5637, arg_5638, arg_5639);
}
pub inline fn glMultiTexGendEXT(arg_5640: GLenum, arg_5641: GLenum, arg_5642: GLenum, arg_5643: GLdouble) void {
    return epoxy_glMultiTexGendEXT.?(arg_5640, arg_5641, arg_5642, arg_5643);
}
pub inline fn glMultiTexGendvEXT(arg_5644: GLenum, arg_5645: GLenum, arg_5646: GLenum, arg_5647: [*c]const GLdouble) void {
    return epoxy_glMultiTexGendvEXT.?(arg_5644, arg_5645, arg_5646, arg_5647);
}
pub inline fn glMultiTexGenfEXT(arg_5648: GLenum, arg_5649: GLenum, arg_5650: GLenum, arg_5651: GLfloat) void {
    return epoxy_glMultiTexGenfEXT.?(arg_5648, arg_5649, arg_5650, arg_5651);
}
pub inline fn glMultiTexGenfvEXT(arg_5652: GLenum, arg_5653: GLenum, arg_5654: GLenum, arg_5655: [*c]const GLfloat) void {
    return epoxy_glMultiTexGenfvEXT.?(arg_5652, arg_5653, arg_5654, arg_5655);
}
pub inline fn glMultiTexGeniEXT(arg_5656: GLenum, arg_5657: GLenum, arg_5658: GLenum, arg_5659: GLint) void {
    return epoxy_glMultiTexGeniEXT.?(arg_5656, arg_5657, arg_5658, arg_5659);
}
pub inline fn glMultiTexGenivEXT(arg_5660: GLenum, arg_5661: GLenum, arg_5662: GLenum, arg_5663: [*c]const GLint) void {
    return epoxy_glMultiTexGenivEXT.?(arg_5660, arg_5661, arg_5662, arg_5663);
}
pub inline fn glMultiTexImage1DEXT(arg_5664: GLenum, arg_5665: GLenum, arg_5666: GLint, arg_5667: GLint, arg_5668: GLsizei, arg_5669: GLint, arg_5670: GLenum, arg_5671: GLenum, arg_5672: ?*const anyopaque) void {
    return epoxy_glMultiTexImage1DEXT.?(arg_5664, arg_5665, arg_5666, arg_5667, arg_5668, arg_5669, arg_5670, arg_5671, arg_5672);
}
pub inline fn glMultiTexImage2DEXT(arg_5673: GLenum, arg_5674: GLenum, arg_5675: GLint, arg_5676: GLint, arg_5677: GLsizei, arg_5678: GLsizei, arg_5679: GLint, arg_5680: GLenum, arg_5681: GLenum, arg_5682: ?*const anyopaque) void {
    return epoxy_glMultiTexImage2DEXT.?(arg_5673, arg_5674, arg_5675, arg_5676, arg_5677, arg_5678, arg_5679, arg_5680, arg_5681, arg_5682);
}
pub inline fn glMultiTexImage3DEXT(arg_5683: GLenum, arg_5684: GLenum, arg_5685: GLint, arg_5686: GLint, arg_5687: GLsizei, arg_5688: GLsizei, arg_5689: GLsizei, arg_5690: GLint, arg_5691: GLenum, arg_5692: GLenum, arg_5693: ?*const anyopaque) void {
    return epoxy_glMultiTexImage3DEXT.?(arg_5683, arg_5684, arg_5685, arg_5686, arg_5687, arg_5688, arg_5689, arg_5690, arg_5691, arg_5692, arg_5693);
}
pub inline fn glMultiTexParameterIivEXT(arg_5694: GLenum, arg_5695: GLenum, arg_5696: GLenum, arg_5697: [*c]const GLint) void {
    return epoxy_glMultiTexParameterIivEXT.?(arg_5694, arg_5695, arg_5696, arg_5697);
}
pub inline fn glMultiTexParameterIuivEXT(arg_5698: GLenum, arg_5699: GLenum, arg_5700: GLenum, arg_5701: [*c]const GLuint) void {
    return epoxy_glMultiTexParameterIuivEXT.?(arg_5698, arg_5699, arg_5700, arg_5701);
}
pub inline fn glMultiTexParameterfEXT(arg_5702: GLenum, arg_5703: GLenum, arg_5704: GLenum, arg_5705: GLfloat) void {
    return epoxy_glMultiTexParameterfEXT.?(arg_5702, arg_5703, arg_5704, arg_5705);
}
pub inline fn glMultiTexParameterfvEXT(arg_5706: GLenum, arg_5707: GLenum, arg_5708: GLenum, arg_5709: [*c]const GLfloat) void {
    return epoxy_glMultiTexParameterfvEXT.?(arg_5706, arg_5707, arg_5708, arg_5709);
}
pub inline fn glMultiTexParameteriEXT(arg_5710: GLenum, arg_5711: GLenum, arg_5712: GLenum, arg_5713: GLint) void {
    return epoxy_glMultiTexParameteriEXT.?(arg_5710, arg_5711, arg_5712, arg_5713);
}
pub inline fn glMultiTexParameterivEXT(arg_5714: GLenum, arg_5715: GLenum, arg_5716: GLenum, arg_5717: [*c]const GLint) void {
    return epoxy_glMultiTexParameterivEXT.?(arg_5714, arg_5715, arg_5716, arg_5717);
}
pub inline fn glMultiTexRenderbufferEXT(arg_5718: GLenum, arg_5719: GLenum, arg_5720: GLuint) void {
    return epoxy_glMultiTexRenderbufferEXT.?(arg_5718, arg_5719, arg_5720);
}
pub inline fn glMultiTexSubImage1DEXT(arg_5721: GLenum, arg_5722: GLenum, arg_5723: GLint, arg_5724: GLint, arg_5725: GLsizei, arg_5726: GLenum, arg_5727: GLenum, arg_5728: ?*const anyopaque) void {
    return epoxy_glMultiTexSubImage1DEXT.?(arg_5721, arg_5722, arg_5723, arg_5724, arg_5725, arg_5726, arg_5727, arg_5728);
}
pub inline fn glMultiTexSubImage2DEXT(arg_5729: GLenum, arg_5730: GLenum, arg_5731: GLint, arg_5732: GLint, arg_5733: GLint, arg_5734: GLsizei, arg_5735: GLsizei, arg_5736: GLenum, arg_5737: GLenum, arg_5738: ?*const anyopaque) void {
    return epoxy_glMultiTexSubImage2DEXT.?(arg_5729, arg_5730, arg_5731, arg_5732, arg_5733, arg_5734, arg_5735, arg_5736, arg_5737, arg_5738);
}
pub inline fn glMultiTexSubImage3DEXT(arg_5739: GLenum, arg_5740: GLenum, arg_5741: GLint, arg_5742: GLint, arg_5743: GLint, arg_5744: GLint, arg_5745: GLsizei, arg_5746: GLsizei, arg_5747: GLsizei, arg_5748: GLenum, arg_5749: GLenum, arg_5750: ?*const anyopaque) void {
    return epoxy_glMultiTexSubImage3DEXT.?(arg_5739, arg_5740, arg_5741, arg_5742, arg_5743, arg_5744, arg_5745, arg_5746, arg_5747, arg_5748, arg_5749, arg_5750);
}
pub inline fn glMulticastBarrierNV() void {
    return epoxy_glMulticastBarrierNV.?();
}
pub inline fn glMulticastBlitFramebufferNV(arg_5751: GLuint, arg_5752: GLuint, arg_5753: GLint, arg_5754: GLint, arg_5755: GLint, arg_5756: GLint, arg_5757: GLint, arg_5758: GLint, arg_5759: GLint, arg_5760: GLint, arg_5761: GLbitfield, arg_5762: GLenum) void {
    return epoxy_glMulticastBlitFramebufferNV.?(arg_5751, arg_5752, arg_5753, arg_5754, arg_5755, arg_5756, arg_5757, arg_5758, arg_5759, arg_5760, arg_5761, arg_5762);
}
pub inline fn glMulticastBufferSubDataNV(arg_5763: GLbitfield, arg_5764: GLuint, arg_5765: GLintptr, arg_5766: GLsizeiptr, arg_5767: ?*const anyopaque) void {
    return epoxy_glMulticastBufferSubDataNV.?(arg_5763, arg_5764, arg_5765, arg_5766, arg_5767);
}
pub inline fn glMulticastCopyBufferSubDataNV(arg_5768: GLuint, arg_5769: GLbitfield, arg_5770: GLuint, arg_5771: GLuint, arg_5772: GLintptr, arg_5773: GLintptr, arg_5774: GLsizeiptr) void {
    return epoxy_glMulticastCopyBufferSubDataNV.?(arg_5768, arg_5769, arg_5770, arg_5771, arg_5772, arg_5773, arg_5774);
}
pub inline fn glMulticastCopyImageSubDataNV(arg_5775: GLuint, arg_5776: GLbitfield, arg_5777: GLuint, arg_5778: GLenum, arg_5779: GLint, arg_5780: GLint, arg_5781: GLint, arg_5782: GLint, arg_5783: GLuint, arg_5784: GLenum, arg_5785: GLint, arg_5786: GLint, arg_5787: GLint, arg_5788: GLint, arg_5789: GLsizei, arg_5790: GLsizei, arg_5791: GLsizei) void {
    return epoxy_glMulticastCopyImageSubDataNV.?(arg_5775, arg_5776, arg_5777, arg_5778, arg_5779, arg_5780, arg_5781, arg_5782, arg_5783, arg_5784, arg_5785, arg_5786, arg_5787, arg_5788, arg_5789, arg_5790, arg_5791);
}
pub inline fn glMulticastFramebufferSampleLocationsfvNV(arg_5792: GLuint, arg_5793: GLuint, arg_5794: GLuint, arg_5795: GLsizei, arg_5796: [*c]const GLfloat) void {
    return epoxy_glMulticastFramebufferSampleLocationsfvNV.?(arg_5792, arg_5793, arg_5794, arg_5795, arg_5796);
}
pub inline fn glMulticastGetQueryObjecti64vNV(arg_5797: GLuint, arg_5798: GLuint, arg_5799: GLenum, arg_5800: [*c]GLint64) void {
    return epoxy_glMulticastGetQueryObjecti64vNV.?(arg_5797, arg_5798, arg_5799, arg_5800);
}
pub inline fn glMulticastGetQueryObjectivNV(arg_5801: GLuint, arg_5802: GLuint, arg_5803: GLenum, arg_5804: [*c]GLint) void {
    return epoxy_glMulticastGetQueryObjectivNV.?(arg_5801, arg_5802, arg_5803, arg_5804);
}
pub inline fn glMulticastGetQueryObjectui64vNV(arg_5805: GLuint, arg_5806: GLuint, arg_5807: GLenum, arg_5808: [*c]GLuint64) void {
    return epoxy_glMulticastGetQueryObjectui64vNV.?(arg_5805, arg_5806, arg_5807, arg_5808);
}
pub inline fn glMulticastGetQueryObjectuivNV(arg_5809: GLuint, arg_5810: GLuint, arg_5811: GLenum, arg_5812: [*c]GLuint) void {
    return epoxy_glMulticastGetQueryObjectuivNV.?(arg_5809, arg_5810, arg_5811, arg_5812);
}
pub inline fn glMulticastScissorArrayvNVX(arg_5813: GLuint, arg_5814: GLuint, arg_5815: GLsizei, arg_5816: [*c]const GLint) void {
    return epoxy_glMulticastScissorArrayvNVX.?(arg_5813, arg_5814, arg_5815, arg_5816);
}
pub inline fn glMulticastViewportArrayvNVX(arg_5817: GLuint, arg_5818: GLuint, arg_5819: GLsizei, arg_5820: [*c]const GLfloat) void {
    return epoxy_glMulticastViewportArrayvNVX.?(arg_5817, arg_5818, arg_5819, arg_5820);
}
pub inline fn glMulticastViewportPositionWScaleNVX(arg_5821: GLuint, arg_5822: GLuint, arg_5823: GLfloat, arg_5824: GLfloat) void {
    return epoxy_glMulticastViewportPositionWScaleNVX.?(arg_5821, arg_5822, arg_5823, arg_5824);
}
pub inline fn glMulticastWaitSyncNV(arg_5825: GLuint, arg_5826: GLbitfield) void {
    return epoxy_glMulticastWaitSyncNV.?(arg_5825, arg_5826);
}
pub inline fn glNamedBufferAttachMemoryNV(arg_5827: GLuint, arg_5828: GLuint, arg_5829: GLuint64) void {
    return epoxy_glNamedBufferAttachMemoryNV.?(arg_5827, arg_5828, arg_5829);
}
pub inline fn glNamedBufferData(arg_5830: GLuint, arg_5831: GLsizeiptr, arg_5832: ?*const anyopaque, arg_5833: GLenum) void {
    return epoxy_glNamedBufferData.?(arg_5830, arg_5831, arg_5832, arg_5833);
}
pub inline fn glNamedBufferDataEXT(arg_5834: GLuint, arg_5835: GLsizeiptr, arg_5836: ?*const anyopaque, arg_5837: GLenum) void {
    return epoxy_glNamedBufferDataEXT.?(arg_5834, arg_5835, arg_5836, arg_5837);
}
pub inline fn glNamedBufferPageCommitmentARB(arg_5838: GLuint, arg_5839: GLintptr, arg_5840: GLsizeiptr, arg_5841: GLboolean) void {
    return epoxy_glNamedBufferPageCommitmentARB.?(arg_5838, arg_5839, arg_5840, arg_5841);
}
pub inline fn glNamedBufferPageCommitmentEXT(arg_5842: GLuint, arg_5843: GLintptr, arg_5844: GLsizeiptr, arg_5845: GLboolean) void {
    return epoxy_glNamedBufferPageCommitmentEXT.?(arg_5842, arg_5843, arg_5844, arg_5845);
}
pub inline fn glNamedBufferStorage(arg_5846: GLuint, arg_5847: GLsizeiptr, arg_5848: ?*const anyopaque, arg_5849: GLbitfield) void {
    return epoxy_glNamedBufferStorage.?(arg_5846, arg_5847, arg_5848, arg_5849);
}
pub inline fn glNamedBufferStorageEXT(arg_5850: GLuint, arg_5851: GLsizeiptr, arg_5852: ?*const anyopaque, arg_5853: GLbitfield) void {
    return epoxy_glNamedBufferStorageEXT.?(arg_5850, arg_5851, arg_5852, arg_5853);
}
pub inline fn glNamedBufferStorageExternalEXT(arg_5854: GLuint, arg_5855: GLintptr, arg_5856: GLsizeiptr, arg_5857: GLeglClientBufferEXT, arg_5858: GLbitfield) void {
    return epoxy_glNamedBufferStorageExternalEXT.?(arg_5854, arg_5855, arg_5856, arg_5857, arg_5858);
}
pub inline fn glNamedBufferStorageMemEXT(arg_5859: GLuint, arg_5860: GLsizeiptr, arg_5861: GLuint, arg_5862: GLuint64) void {
    return epoxy_glNamedBufferStorageMemEXT.?(arg_5859, arg_5860, arg_5861, arg_5862);
}
pub inline fn glNamedBufferSubData(arg_5863: GLuint, arg_5864: GLintptr, arg_5865: GLsizeiptr, arg_5866: ?*const anyopaque) void {
    return epoxy_glNamedBufferSubData.?(arg_5863, arg_5864, arg_5865, arg_5866);
}
pub inline fn glNamedBufferSubDataEXT(arg_5867: GLuint, arg_5868: GLintptr, arg_5869: GLsizeiptr, arg_5870: ?*const anyopaque) void {
    return epoxy_glNamedBufferSubDataEXT.?(arg_5867, arg_5868, arg_5869, arg_5870);
}
pub inline fn glNamedCopyBufferSubDataEXT(arg_5871: GLuint, arg_5872: GLuint, arg_5873: GLintptr, arg_5874: GLintptr, arg_5875: GLsizeiptr) void {
    return epoxy_glNamedCopyBufferSubDataEXT.?(arg_5871, arg_5872, arg_5873, arg_5874, arg_5875);
}
pub inline fn glNamedFramebufferDrawBuffer(arg_5876: GLuint, arg_5877: GLenum) void {
    return epoxy_glNamedFramebufferDrawBuffer.?(arg_5876, arg_5877);
}
pub inline fn glNamedFramebufferDrawBuffers(arg_5878: GLuint, arg_5879: GLsizei, arg_5880: [*c]const GLenum) void {
    return epoxy_glNamedFramebufferDrawBuffers.?(arg_5878, arg_5879, arg_5880);
}
pub inline fn glNamedFramebufferParameteri(arg_5881: GLuint, arg_5882: GLenum, arg_5883: GLint) void {
    return epoxy_glNamedFramebufferParameteri.?(arg_5881, arg_5882, arg_5883);
}
pub inline fn glNamedFramebufferParameteriEXT(arg_5884: GLuint, arg_5885: GLenum, arg_5886: GLint) void {
    return epoxy_glNamedFramebufferParameteriEXT.?(arg_5884, arg_5885, arg_5886);
}
pub inline fn glNamedFramebufferReadBuffer(arg_5887: GLuint, arg_5888: GLenum) void {
    return epoxy_glNamedFramebufferReadBuffer.?(arg_5887, arg_5888);
}
pub inline fn glNamedFramebufferRenderbuffer(arg_5889: GLuint, arg_5890: GLenum, arg_5891: GLenum, arg_5892: GLuint) void {
    return epoxy_glNamedFramebufferRenderbuffer.?(arg_5889, arg_5890, arg_5891, arg_5892);
}
pub inline fn glNamedFramebufferRenderbufferEXT(arg_5893: GLuint, arg_5894: GLenum, arg_5895: GLenum, arg_5896: GLuint) void {
    return epoxy_glNamedFramebufferRenderbufferEXT.?(arg_5893, arg_5894, arg_5895, arg_5896);
}
pub inline fn glNamedFramebufferSampleLocationsfvARB(arg_5897: GLuint, arg_5898: GLuint, arg_5899: GLsizei, arg_5900: [*c]const GLfloat) void {
    return epoxy_glNamedFramebufferSampleLocationsfvARB.?(arg_5897, arg_5898, arg_5899, arg_5900);
}
pub inline fn glNamedFramebufferSampleLocationsfvNV(arg_5901: GLuint, arg_5902: GLuint, arg_5903: GLsizei, arg_5904: [*c]const GLfloat) void {
    return epoxy_glNamedFramebufferSampleLocationsfvNV.?(arg_5901, arg_5902, arg_5903, arg_5904);
}
pub inline fn glNamedFramebufferSamplePositionsfvAMD(arg_5905: GLuint, arg_5906: GLuint, arg_5907: GLuint, arg_5908: [*c]const GLfloat) void {
    return epoxy_glNamedFramebufferSamplePositionsfvAMD.?(arg_5905, arg_5906, arg_5907, arg_5908);
}
pub inline fn glNamedFramebufferTexture(arg_5909: GLuint, arg_5910: GLenum, arg_5911: GLuint, arg_5912: GLint) void {
    return epoxy_glNamedFramebufferTexture.?(arg_5909, arg_5910, arg_5911, arg_5912);
}
pub inline fn glNamedFramebufferTexture1DEXT(arg_5913: GLuint, arg_5914: GLenum, arg_5915: GLenum, arg_5916: GLuint, arg_5917: GLint) void {
    return epoxy_glNamedFramebufferTexture1DEXT.?(arg_5913, arg_5914, arg_5915, arg_5916, arg_5917);
}
pub inline fn glNamedFramebufferTexture2DEXT(arg_5918: GLuint, arg_5919: GLenum, arg_5920: GLenum, arg_5921: GLuint, arg_5922: GLint) void {
    return epoxy_glNamedFramebufferTexture2DEXT.?(arg_5918, arg_5919, arg_5920, arg_5921, arg_5922);
}
pub inline fn glNamedFramebufferTexture3DEXT(arg_5923: GLuint, arg_5924: GLenum, arg_5925: GLenum, arg_5926: GLuint, arg_5927: GLint, arg_5928: GLint) void {
    return epoxy_glNamedFramebufferTexture3DEXT.?(arg_5923, arg_5924, arg_5925, arg_5926, arg_5927, arg_5928);
}
pub inline fn glNamedFramebufferTextureEXT(arg_5929: GLuint, arg_5930: GLenum, arg_5931: GLuint, arg_5932: GLint) void {
    return epoxy_glNamedFramebufferTextureEXT.?(arg_5929, arg_5930, arg_5931, arg_5932);
}
pub inline fn glNamedFramebufferTextureFaceEXT(arg_5933: GLuint, arg_5934: GLenum, arg_5935: GLuint, arg_5936: GLint, arg_5937: GLenum) void {
    return epoxy_glNamedFramebufferTextureFaceEXT.?(arg_5933, arg_5934, arg_5935, arg_5936, arg_5937);
}
pub inline fn glNamedFramebufferTextureLayer(arg_5938: GLuint, arg_5939: GLenum, arg_5940: GLuint, arg_5941: GLint, arg_5942: GLint) void {
    return epoxy_glNamedFramebufferTextureLayer.?(arg_5938, arg_5939, arg_5940, arg_5941, arg_5942);
}
pub inline fn glNamedFramebufferTextureLayerEXT(arg_5943: GLuint, arg_5944: GLenum, arg_5945: GLuint, arg_5946: GLint, arg_5947: GLint) void {
    return epoxy_glNamedFramebufferTextureLayerEXT.?(arg_5943, arg_5944, arg_5945, arg_5946, arg_5947);
}
pub inline fn glNamedProgramLocalParameter4dEXT(arg_5948: GLuint, arg_5949: GLenum, arg_5950: GLuint, arg_5951: GLdouble, arg_5952: GLdouble, arg_5953: GLdouble, arg_5954: GLdouble) void {
    return epoxy_glNamedProgramLocalParameter4dEXT.?(arg_5948, arg_5949, arg_5950, arg_5951, arg_5952, arg_5953, arg_5954);
}
pub inline fn glNamedProgramLocalParameter4dvEXT(arg_5955: GLuint, arg_5956: GLenum, arg_5957: GLuint, arg_5958: [*c]const GLdouble) void {
    return epoxy_glNamedProgramLocalParameter4dvEXT.?(arg_5955, arg_5956, arg_5957, arg_5958);
}
pub inline fn glNamedProgramLocalParameter4fEXT(arg_5959: GLuint, arg_5960: GLenum, arg_5961: GLuint, arg_5962: GLfloat, arg_5963: GLfloat, arg_5964: GLfloat, arg_5965: GLfloat) void {
    return epoxy_glNamedProgramLocalParameter4fEXT.?(arg_5959, arg_5960, arg_5961, arg_5962, arg_5963, arg_5964, arg_5965);
}
pub inline fn glNamedProgramLocalParameter4fvEXT(arg_5966: GLuint, arg_5967: GLenum, arg_5968: GLuint, arg_5969: [*c]const GLfloat) void {
    return epoxy_glNamedProgramLocalParameter4fvEXT.?(arg_5966, arg_5967, arg_5968, arg_5969);
}
pub inline fn glNamedProgramLocalParameterI4iEXT(arg_5970: GLuint, arg_5971: GLenum, arg_5972: GLuint, arg_5973: GLint, arg_5974: GLint, arg_5975: GLint, arg_5976: GLint) void {
    return epoxy_glNamedProgramLocalParameterI4iEXT.?(arg_5970, arg_5971, arg_5972, arg_5973, arg_5974, arg_5975, arg_5976);
}
pub inline fn glNamedProgramLocalParameterI4ivEXT(arg_5977: GLuint, arg_5978: GLenum, arg_5979: GLuint, arg_5980: [*c]const GLint) void {
    return epoxy_glNamedProgramLocalParameterI4ivEXT.?(arg_5977, arg_5978, arg_5979, arg_5980);
}
pub inline fn glNamedProgramLocalParameterI4uiEXT(arg_5981: GLuint, arg_5982: GLenum, arg_5983: GLuint, arg_5984: GLuint, arg_5985: GLuint, arg_5986: GLuint, arg_5987: GLuint) void {
    return epoxy_glNamedProgramLocalParameterI4uiEXT.?(arg_5981, arg_5982, arg_5983, arg_5984, arg_5985, arg_5986, arg_5987);
}
pub inline fn glNamedProgramLocalParameterI4uivEXT(arg_5988: GLuint, arg_5989: GLenum, arg_5990: GLuint, arg_5991: [*c]const GLuint) void {
    return epoxy_glNamedProgramLocalParameterI4uivEXT.?(arg_5988, arg_5989, arg_5990, arg_5991);
}
pub inline fn glNamedProgramLocalParameters4fvEXT(arg_5992: GLuint, arg_5993: GLenum, arg_5994: GLuint, arg_5995: GLsizei, arg_5996: [*c]const GLfloat) void {
    return epoxy_glNamedProgramLocalParameters4fvEXT.?(arg_5992, arg_5993, arg_5994, arg_5995, arg_5996);
}
pub inline fn glNamedProgramLocalParametersI4ivEXT(arg_5997: GLuint, arg_5998: GLenum, arg_5999: GLuint, arg_6000: GLsizei, arg_6001: [*c]const GLint) void {
    return epoxy_glNamedProgramLocalParametersI4ivEXT.?(arg_5997, arg_5998, arg_5999, arg_6000, arg_6001);
}
pub inline fn glNamedProgramLocalParametersI4uivEXT(arg_6002: GLuint, arg_6003: GLenum, arg_6004: GLuint, arg_6005: GLsizei, arg_6006: [*c]const GLuint) void {
    return epoxy_glNamedProgramLocalParametersI4uivEXT.?(arg_6002, arg_6003, arg_6004, arg_6005, arg_6006);
}
pub inline fn glNamedProgramStringEXT(arg_6007: GLuint, arg_6008: GLenum, arg_6009: GLenum, arg_6010: GLsizei, arg_6011: ?*const anyopaque) void {
    return epoxy_glNamedProgramStringEXT.?(arg_6007, arg_6008, arg_6009, arg_6010, arg_6011);
}
pub inline fn glNamedRenderbufferStorage(arg_6012: GLuint, arg_6013: GLenum, arg_6014: GLsizei, arg_6015: GLsizei) void {
    return epoxy_glNamedRenderbufferStorage.?(arg_6012, arg_6013, arg_6014, arg_6015);
}
pub inline fn glNamedRenderbufferStorageEXT(arg_6016: GLuint, arg_6017: GLenum, arg_6018: GLsizei, arg_6019: GLsizei) void {
    return epoxy_glNamedRenderbufferStorageEXT.?(arg_6016, arg_6017, arg_6018, arg_6019);
}
pub inline fn glNamedRenderbufferStorageMultisample(arg_6020: GLuint, arg_6021: GLsizei, arg_6022: GLenum, arg_6023: GLsizei, arg_6024: GLsizei) void {
    return epoxy_glNamedRenderbufferStorageMultisample.?(arg_6020, arg_6021, arg_6022, arg_6023, arg_6024);
}
pub inline fn glNamedRenderbufferStorageMultisampleAdvancedAMD(arg_6025: GLuint, arg_6026: GLsizei, arg_6027: GLsizei, arg_6028: GLenum, arg_6029: GLsizei, arg_6030: GLsizei) void {
    return epoxy_glNamedRenderbufferStorageMultisampleAdvancedAMD.?(arg_6025, arg_6026, arg_6027, arg_6028, arg_6029, arg_6030);
}
pub inline fn glNamedRenderbufferStorageMultisampleCoverageEXT(arg_6031: GLuint, arg_6032: GLsizei, arg_6033: GLsizei, arg_6034: GLenum, arg_6035: GLsizei, arg_6036: GLsizei) void {
    return epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT.?(arg_6031, arg_6032, arg_6033, arg_6034, arg_6035, arg_6036);
}
pub inline fn glNamedRenderbufferStorageMultisampleEXT(arg_6037: GLuint, arg_6038: GLsizei, arg_6039: GLenum, arg_6040: GLsizei, arg_6041: GLsizei) void {
    return epoxy_glNamedRenderbufferStorageMultisampleEXT.?(arg_6037, arg_6038, arg_6039, arg_6040, arg_6041);
}
pub inline fn glNamedStringARB(arg_6042: GLenum, arg_6043: GLint, arg_6044: [*c]const GLchar, arg_6045: GLint, arg_6046: [*c]const GLchar) void {
    return epoxy_glNamedStringARB.?(arg_6042, arg_6043, arg_6044, arg_6045, arg_6046);
}
pub inline fn glNewList(arg_6047: GLuint, arg_6048: GLenum) void {
    return epoxy_glNewList.?(arg_6047, arg_6048);
}
pub inline fn glNewObjectBufferATI(arg_6049: GLsizei, arg_6050: ?*const anyopaque, arg_6051: GLenum) GLuint {
    return epoxy_glNewObjectBufferATI.?(arg_6049, arg_6050, arg_6051);
}
pub inline fn glNormal3b(arg_6052: GLbyte, arg_6053: GLbyte, arg_6054: GLbyte) void {
    return epoxy_glNormal3b.?(arg_6052, arg_6053, arg_6054);
}
pub inline fn glNormal3bv(arg_6055: [*c]const GLbyte) void {
    return epoxy_glNormal3bv.?(arg_6055);
}
pub inline fn glNormal3d(arg_6056: GLdouble, arg_6057: GLdouble, arg_6058: GLdouble) void {
    return epoxy_glNormal3d.?(arg_6056, arg_6057, arg_6058);
}
pub inline fn glNormal3dv(arg_6059: [*c]const GLdouble) void {
    return epoxy_glNormal3dv.?(arg_6059);
}
pub inline fn glNormal3f(arg_6060: GLfloat, arg_6061: GLfloat, arg_6062: GLfloat) void {
    return epoxy_glNormal3f.?(arg_6060, arg_6061, arg_6062);
}
pub inline fn glNormal3fVertex3fSUN(arg_6063: GLfloat, arg_6064: GLfloat, arg_6065: GLfloat, arg_6066: GLfloat, arg_6067: GLfloat, arg_6068: GLfloat) void {
    return epoxy_glNormal3fVertex3fSUN.?(arg_6063, arg_6064, arg_6065, arg_6066, arg_6067, arg_6068);
}
pub inline fn glNormal3fVertex3fvSUN(arg_6069: [*c]const GLfloat, arg_6070: [*c]const GLfloat) void {
    return epoxy_glNormal3fVertex3fvSUN.?(arg_6069, arg_6070);
}
pub inline fn glNormal3fv(arg_6071: [*c]const GLfloat) void {
    return epoxy_glNormal3fv.?(arg_6071);
}
pub inline fn glNormal3hNV(arg_6072: GLhalfNV, arg_6073: GLhalfNV, arg_6074: GLhalfNV) void {
    return epoxy_glNormal3hNV.?(arg_6072, arg_6073, arg_6074);
}
pub inline fn glNormal3hvNV(arg_6075: [*c]const GLhalfNV) void {
    return epoxy_glNormal3hvNV.?(arg_6075);
}
pub inline fn glNormal3i(arg_6076: GLint, arg_6077: GLint, arg_6078: GLint) void {
    return epoxy_glNormal3i.?(arg_6076, arg_6077, arg_6078);
}
pub inline fn glNormal3iv(arg_6079: [*c]const GLint) void {
    return epoxy_glNormal3iv.?(arg_6079);
}
pub inline fn glNormal3s(arg_6080: GLshort, arg_6081: GLshort, arg_6082: GLshort) void {
    return epoxy_glNormal3s.?(arg_6080, arg_6081, arg_6082);
}
pub inline fn glNormal3sv(arg_6083: [*c]const GLshort) void {
    return epoxy_glNormal3sv.?(arg_6083);
}
pub inline fn glNormal3x(arg_6084: GLfixed, arg_6085: GLfixed, arg_6086: GLfixed) void {
    return epoxy_glNormal3x.?(arg_6084, arg_6085, arg_6086);
}
pub inline fn glNormal3xOES(arg_6087: GLfixed, arg_6088: GLfixed, arg_6089: GLfixed) void {
    return epoxy_glNormal3xOES.?(arg_6087, arg_6088, arg_6089);
}
pub inline fn glNormal3xvOES(arg_6090: [*c]const GLfixed) void {
    return epoxy_glNormal3xvOES.?(arg_6090);
}
pub inline fn glNormalFormatNV(arg_6091: GLenum, arg_6092: GLsizei) void {
    return epoxy_glNormalFormatNV.?(arg_6091, arg_6092);
}
pub inline fn glNormalP3ui(arg_6093: GLenum, arg_6094: GLuint) void {
    return epoxy_glNormalP3ui.?(arg_6093, arg_6094);
}
pub inline fn glNormalP3uiv(arg_6095: GLenum, arg_6096: [*c]const GLuint) void {
    return epoxy_glNormalP3uiv.?(arg_6095, arg_6096);
}
pub inline fn glNormalPointer(arg_6097: GLenum, arg_6098: GLsizei, arg_6099: ?*const anyopaque) void {
    return epoxy_glNormalPointer.?(arg_6097, arg_6098, arg_6099);
}
pub inline fn glNormalPointerEXT(arg_6100: GLenum, arg_6101: GLsizei, arg_6102: GLsizei, arg_6103: ?*const anyopaque) void {
    return epoxy_glNormalPointerEXT.?(arg_6100, arg_6101, arg_6102, arg_6103);
}
pub inline fn glNormalPointerListIBM(arg_6104: GLenum, arg_6105: GLint, arg_6106: [*c]?*const anyopaque, arg_6107: GLint) void {
    return epoxy_glNormalPointerListIBM.?(arg_6104, arg_6105, arg_6106, arg_6107);
}
pub inline fn glNormalPointervINTEL(arg_6108: GLenum, arg_6109: [*c]?*const anyopaque) void {
    return epoxy_glNormalPointervINTEL.?(arg_6108, arg_6109);
}
pub inline fn glNormalStream3bATI(arg_6110: GLenum, arg_6111: GLbyte, arg_6112: GLbyte, arg_6113: GLbyte) void {
    return epoxy_glNormalStream3bATI.?(arg_6110, arg_6111, arg_6112, arg_6113);
}
pub inline fn glNormalStream3bvATI(arg_6114: GLenum, arg_6115: [*c]const GLbyte) void {
    return epoxy_glNormalStream3bvATI.?(arg_6114, arg_6115);
}
pub inline fn glNormalStream3dATI(arg_6116: GLenum, arg_6117: GLdouble, arg_6118: GLdouble, arg_6119: GLdouble) void {
    return epoxy_glNormalStream3dATI.?(arg_6116, arg_6117, arg_6118, arg_6119);
}
pub inline fn glNormalStream3dvATI(arg_6120: GLenum, arg_6121: [*c]const GLdouble) void {
    return epoxy_glNormalStream3dvATI.?(arg_6120, arg_6121);
}
pub inline fn glNormalStream3fATI(arg_6122: GLenum, arg_6123: GLfloat, arg_6124: GLfloat, arg_6125: GLfloat) void {
    return epoxy_glNormalStream3fATI.?(arg_6122, arg_6123, arg_6124, arg_6125);
}
pub inline fn glNormalStream3fvATI(arg_6126: GLenum, arg_6127: [*c]const GLfloat) void {
    return epoxy_glNormalStream3fvATI.?(arg_6126, arg_6127);
}
pub inline fn glNormalStream3iATI(arg_6128: GLenum, arg_6129: GLint, arg_6130: GLint, arg_6131: GLint) void {
    return epoxy_glNormalStream3iATI.?(arg_6128, arg_6129, arg_6130, arg_6131);
}
pub inline fn glNormalStream3ivATI(arg_6132: GLenum, arg_6133: [*c]const GLint) void {
    return epoxy_glNormalStream3ivATI.?(arg_6132, arg_6133);
}
pub inline fn glNormalStream3sATI(arg_6134: GLenum, arg_6135: GLshort, arg_6136: GLshort, arg_6137: GLshort) void {
    return epoxy_glNormalStream3sATI.?(arg_6134, arg_6135, arg_6136, arg_6137);
}
pub inline fn glNormalStream3svATI(arg_6138: GLenum, arg_6139: [*c]const GLshort) void {
    return epoxy_glNormalStream3svATI.?(arg_6138, arg_6139);
}
pub inline fn glObjectLabel(arg_6140: GLenum, arg_6141: GLuint, arg_6142: GLsizei, arg_6143: [*c]const GLchar) void {
    return epoxy_glObjectLabel.?(arg_6140, arg_6141, arg_6142, arg_6143);
}
pub inline fn glObjectLabelKHR(arg_6144: GLenum, arg_6145: GLuint, arg_6146: GLsizei, arg_6147: [*c]const GLchar) void {
    return epoxy_glObjectLabelKHR.?(arg_6144, arg_6145, arg_6146, arg_6147);
}
pub inline fn glObjectPtrLabel(arg_6148: ?*const anyopaque, arg_6149: GLsizei, arg_6150: [*c]const GLchar) void {
    return epoxy_glObjectPtrLabel.?(arg_6148, arg_6149, arg_6150);
}
pub inline fn glObjectPtrLabelKHR(arg_6151: ?*const anyopaque, arg_6152: GLsizei, arg_6153: [*c]const GLchar) void {
    return epoxy_glObjectPtrLabelKHR.?(arg_6151, arg_6152, arg_6153);
}
pub inline fn glObjectPurgeableAPPLE(arg_6154: GLenum, arg_6155: GLuint, arg_6156: GLenum) GLenum {
    return epoxy_glObjectPurgeableAPPLE.?(arg_6154, arg_6155, arg_6156);
}
pub inline fn glObjectUnpurgeableAPPLE(arg_6157: GLenum, arg_6158: GLuint, arg_6159: GLenum) GLenum {
    return epoxy_glObjectUnpurgeableAPPLE.?(arg_6157, arg_6158, arg_6159);
}
pub inline fn glOrtho(arg_6160: GLdouble, arg_6161: GLdouble, arg_6162: GLdouble, arg_6163: GLdouble, arg_6164: GLdouble, arg_6165: GLdouble) void {
    return epoxy_glOrtho.?(arg_6160, arg_6161, arg_6162, arg_6163, arg_6164, arg_6165);
}
pub inline fn glOrthof(arg_6166: GLfloat, arg_6167: GLfloat, arg_6168: GLfloat, arg_6169: GLfloat, arg_6170: GLfloat, arg_6171: GLfloat) void {
    return epoxy_glOrthof.?(arg_6166, arg_6167, arg_6168, arg_6169, arg_6170, arg_6171);
}
pub inline fn glOrthofOES(arg_6172: GLfloat, arg_6173: GLfloat, arg_6174: GLfloat, arg_6175: GLfloat, arg_6176: GLfloat, arg_6177: GLfloat) void {
    return epoxy_glOrthofOES.?(arg_6172, arg_6173, arg_6174, arg_6175, arg_6176, arg_6177);
}
pub inline fn glOrthox(arg_6178: GLfixed, arg_6179: GLfixed, arg_6180: GLfixed, arg_6181: GLfixed, arg_6182: GLfixed, arg_6183: GLfixed) void {
    return epoxy_glOrthox.?(arg_6178, arg_6179, arg_6180, arg_6181, arg_6182, arg_6183);
}
pub inline fn glOrthoxOES(arg_6184: GLfixed, arg_6185: GLfixed, arg_6186: GLfixed, arg_6187: GLfixed, arg_6188: GLfixed, arg_6189: GLfixed) void {
    return epoxy_glOrthoxOES.?(arg_6184, arg_6185, arg_6186, arg_6187, arg_6188, arg_6189);
}
pub inline fn glPNTrianglesfATI(arg_6190: GLenum, arg_6191: GLfloat) void {
    return epoxy_glPNTrianglesfATI.?(arg_6190, arg_6191);
}
pub inline fn glPNTrianglesiATI(arg_6192: GLenum, arg_6193: GLint) void {
    return epoxy_glPNTrianglesiATI.?(arg_6192, arg_6193);
}
pub inline fn glPassTexCoordATI(arg_6194: GLuint, arg_6195: GLuint, arg_6196: GLenum) void {
    return epoxy_glPassTexCoordATI.?(arg_6194, arg_6195, arg_6196);
}
pub inline fn glPassThrough(arg_6197: GLfloat) void {
    return epoxy_glPassThrough.?(arg_6197);
}
pub inline fn glPassThroughxOES(arg_6198: GLfixed) void {
    return epoxy_glPassThroughxOES.?(arg_6198);
}
pub inline fn glPatchParameterfv(arg_6199: GLenum, arg_6200: [*c]const GLfloat) void {
    return epoxy_glPatchParameterfv.?(arg_6199, arg_6200);
}
pub inline fn glPatchParameteri(arg_6201: GLenum, arg_6202: GLint) void {
    return epoxy_glPatchParameteri.?(arg_6201, arg_6202);
}
pub inline fn glPatchParameteriEXT(arg_6203: GLenum, arg_6204: GLint) void {
    return epoxy_glPatchParameteriEXT.?(arg_6203, arg_6204);
}
pub inline fn glPatchParameteriOES(arg_6205: GLenum, arg_6206: GLint) void {
    return epoxy_glPatchParameteriOES.?(arg_6205, arg_6206);
}
pub inline fn glPathColorGenNV(arg_6207: GLenum, arg_6208: GLenum, arg_6209: GLenum, arg_6210: [*c]const GLfloat) void {
    return epoxy_glPathColorGenNV.?(arg_6207, arg_6208, arg_6209, arg_6210);
}
pub inline fn glPathCommandsNV(arg_6211: GLuint, arg_6212: GLsizei, arg_6213: [*c]const GLubyte, arg_6214: GLsizei, arg_6215: GLenum, arg_6216: ?*const anyopaque) void {
    return epoxy_glPathCommandsNV.?(arg_6211, arg_6212, arg_6213, arg_6214, arg_6215, arg_6216);
}
pub inline fn glPathCoordsNV(arg_6217: GLuint, arg_6218: GLsizei, arg_6219: GLenum, arg_6220: ?*const anyopaque) void {
    return epoxy_glPathCoordsNV.?(arg_6217, arg_6218, arg_6219, arg_6220);
}
pub inline fn glPathCoverDepthFuncNV(arg_6221: GLenum) void {
    return epoxy_glPathCoverDepthFuncNV.?(arg_6221);
}
pub inline fn glPathDashArrayNV(arg_6222: GLuint, arg_6223: GLsizei, arg_6224: [*c]const GLfloat) void {
    return epoxy_glPathDashArrayNV.?(arg_6222, arg_6223, arg_6224);
}
pub inline fn glPathFogGenNV(arg_6225: GLenum) void {
    return epoxy_glPathFogGenNV.?(arg_6225);
}
pub inline fn glPathGlyphIndexArrayNV(arg_6226: GLuint, arg_6227: GLenum, arg_6228: ?*const anyopaque, arg_6229: GLbitfield, arg_6230: GLuint, arg_6231: GLsizei, arg_6232: GLuint, arg_6233: GLfloat) GLenum {
    return epoxy_glPathGlyphIndexArrayNV.?(arg_6226, arg_6227, arg_6228, arg_6229, arg_6230, arg_6231, arg_6232, arg_6233);
}
pub inline fn glPathGlyphIndexRangeNV(arg_6234: GLenum, arg_6235: ?*const anyopaque, arg_6236: GLbitfield, arg_6237: GLuint, arg_6238: GLfloat, arg_6239: GLuint) GLenum {
    return epoxy_glPathGlyphIndexRangeNV.?(arg_6234, arg_6235, arg_6236, arg_6237, arg_6238, arg_6239);
}
pub inline fn glPathGlyphRangeNV(arg_6240: GLuint, arg_6241: GLenum, arg_6242: ?*const anyopaque, arg_6243: GLbitfield, arg_6244: GLuint, arg_6245: GLsizei, arg_6246: GLenum, arg_6247: GLuint, arg_6248: GLfloat) void {
    return epoxy_glPathGlyphRangeNV.?(arg_6240, arg_6241, arg_6242, arg_6243, arg_6244, arg_6245, arg_6246, arg_6247, arg_6248);
}
pub inline fn glPathGlyphsNV(arg_6249: GLuint, arg_6250: GLenum, arg_6251: ?*const anyopaque, arg_6252: GLbitfield, arg_6253: GLsizei, arg_6254: GLenum, arg_6255: ?*const anyopaque, arg_6256: GLenum, arg_6257: GLuint, arg_6258: GLfloat) void {
    return epoxy_glPathGlyphsNV.?(arg_6249, arg_6250, arg_6251, arg_6252, arg_6253, arg_6254, arg_6255, arg_6256, arg_6257, arg_6258);
}
pub inline fn glPathMemoryGlyphIndexArrayNV(arg_6259: GLuint, arg_6260: GLenum, arg_6261: GLsizeiptr, arg_6262: ?*const anyopaque, arg_6263: GLsizei, arg_6264: GLuint, arg_6265: GLsizei, arg_6266: GLuint, arg_6267: GLfloat) GLenum {
    return epoxy_glPathMemoryGlyphIndexArrayNV.?(arg_6259, arg_6260, arg_6261, arg_6262, arg_6263, arg_6264, arg_6265, arg_6266, arg_6267);
}
pub inline fn glPathParameterfNV(arg_6268: GLuint, arg_6269: GLenum, arg_6270: GLfloat) void {
    return epoxy_glPathParameterfNV.?(arg_6268, arg_6269, arg_6270);
}
pub inline fn glPathParameterfvNV(arg_6271: GLuint, arg_6272: GLenum, arg_6273: [*c]const GLfloat) void {
    return epoxy_glPathParameterfvNV.?(arg_6271, arg_6272, arg_6273);
}
pub inline fn glPathParameteriNV(arg_6274: GLuint, arg_6275: GLenum, arg_6276: GLint) void {
    return epoxy_glPathParameteriNV.?(arg_6274, arg_6275, arg_6276);
}
pub inline fn glPathParameterivNV(arg_6277: GLuint, arg_6278: GLenum, arg_6279: [*c]const GLint) void {
    return epoxy_glPathParameterivNV.?(arg_6277, arg_6278, arg_6279);
}
pub inline fn glPathStencilDepthOffsetNV(arg_6280: GLfloat, arg_6281: GLfloat) void {
    return epoxy_glPathStencilDepthOffsetNV.?(arg_6280, arg_6281);
}
pub inline fn glPathStencilFuncNV(arg_6282: GLenum, arg_6283: GLint, arg_6284: GLuint) void {
    return epoxy_glPathStencilFuncNV.?(arg_6282, arg_6283, arg_6284);
}
pub inline fn glPathStringNV(arg_6285: GLuint, arg_6286: GLenum, arg_6287: GLsizei, arg_6288: ?*const anyopaque) void {
    return epoxy_glPathStringNV.?(arg_6285, arg_6286, arg_6287, arg_6288);
}
pub inline fn glPathSubCommandsNV(arg_6289: GLuint, arg_6290: GLsizei, arg_6291: GLsizei, arg_6292: GLsizei, arg_6293: [*c]const GLubyte, arg_6294: GLsizei, arg_6295: GLenum, arg_6296: ?*const anyopaque) void {
    return epoxy_glPathSubCommandsNV.?(arg_6289, arg_6290, arg_6291, arg_6292, arg_6293, arg_6294, arg_6295, arg_6296);
}
pub inline fn glPathSubCoordsNV(arg_6297: GLuint, arg_6298: GLsizei, arg_6299: GLsizei, arg_6300: GLenum, arg_6301: ?*const anyopaque) void {
    return epoxy_glPathSubCoordsNV.?(arg_6297, arg_6298, arg_6299, arg_6300, arg_6301);
}
pub inline fn glPathTexGenNV(arg_6302: GLenum, arg_6303: GLenum, arg_6304: GLint, arg_6305: [*c]const GLfloat) void {
    return epoxy_glPathTexGenNV.?(arg_6302, arg_6303, arg_6304, arg_6305);
}
pub inline fn glPauseTransformFeedback() void {
    return epoxy_glPauseTransformFeedback.?();
}
pub inline fn glPauseTransformFeedbackNV() void {
    return epoxy_glPauseTransformFeedbackNV.?();
}
pub inline fn glPixelDataRangeNV(arg_6306: GLenum, arg_6307: GLsizei, arg_6308: ?*const anyopaque) void {
    return epoxy_glPixelDataRangeNV.?(arg_6306, arg_6307, arg_6308);
}
pub inline fn glPixelMapfv(arg_6309: GLenum, arg_6310: GLsizei, arg_6311: [*c]const GLfloat) void {
    return epoxy_glPixelMapfv.?(arg_6309, arg_6310, arg_6311);
}
pub inline fn glPixelMapuiv(arg_6312: GLenum, arg_6313: GLsizei, arg_6314: [*c]const GLuint) void {
    return epoxy_glPixelMapuiv.?(arg_6312, arg_6313, arg_6314);
}
pub inline fn glPixelMapusv(arg_6315: GLenum, arg_6316: GLsizei, arg_6317: [*c]const GLushort) void {
    return epoxy_glPixelMapusv.?(arg_6315, arg_6316, arg_6317);
}
pub inline fn glPixelMapx(arg_6318: GLenum, arg_6319: GLint, arg_6320: [*c]const GLfixed) void {
    return epoxy_glPixelMapx.?(arg_6318, arg_6319, arg_6320);
}
pub inline fn glPixelStoref(arg_6321: GLenum, arg_6322: GLfloat) void {
    return epoxy_glPixelStoref.?(arg_6321, arg_6322);
}
pub inline fn glPixelStorei(arg_6323: GLenum, arg_6324: GLint) void {
    return epoxy_glPixelStorei.?(arg_6323, arg_6324);
}
pub inline fn glPixelStorex(arg_6325: GLenum, arg_6326: GLfixed) void {
    return epoxy_glPixelStorex.?(arg_6325, arg_6326);
}
pub inline fn glPixelTexGenParameterfSGIS(arg_6327: GLenum, arg_6328: GLfloat) void {
    return epoxy_glPixelTexGenParameterfSGIS.?(arg_6327, arg_6328);
}
pub inline fn glPixelTexGenParameterfvSGIS(arg_6329: GLenum, arg_6330: [*c]const GLfloat) void {
    return epoxy_glPixelTexGenParameterfvSGIS.?(arg_6329, arg_6330);
}
pub inline fn glPixelTexGenParameteriSGIS(arg_6331: GLenum, arg_6332: GLint) void {
    return epoxy_glPixelTexGenParameteriSGIS.?(arg_6331, arg_6332);
}
pub inline fn glPixelTexGenParameterivSGIS(arg_6333: GLenum, arg_6334: [*c]const GLint) void {
    return epoxy_glPixelTexGenParameterivSGIS.?(arg_6333, arg_6334);
}
pub inline fn glPixelTexGenSGIX(arg_6335: GLenum) void {
    return epoxy_glPixelTexGenSGIX.?(arg_6335);
}
pub inline fn glPixelTransferf(arg_6336: GLenum, arg_6337: GLfloat) void {
    return epoxy_glPixelTransferf.?(arg_6336, arg_6337);
}
pub inline fn glPixelTransferi(arg_6338: GLenum, arg_6339: GLint) void {
    return epoxy_glPixelTransferi.?(arg_6338, arg_6339);
}
pub inline fn glPixelTransferxOES(arg_6340: GLenum, arg_6341: GLfixed) void {
    return epoxy_glPixelTransferxOES.?(arg_6340, arg_6341);
}
pub inline fn glPixelTransformParameterfEXT(arg_6342: GLenum, arg_6343: GLenum, arg_6344: GLfloat) void {
    return epoxy_glPixelTransformParameterfEXT.?(arg_6342, arg_6343, arg_6344);
}
pub inline fn glPixelTransformParameterfvEXT(arg_6345: GLenum, arg_6346: GLenum, arg_6347: [*c]const GLfloat) void {
    return epoxy_glPixelTransformParameterfvEXT.?(arg_6345, arg_6346, arg_6347);
}
pub inline fn glPixelTransformParameteriEXT(arg_6348: GLenum, arg_6349: GLenum, arg_6350: GLint) void {
    return epoxy_glPixelTransformParameteriEXT.?(arg_6348, arg_6349, arg_6350);
}
pub inline fn glPixelTransformParameterivEXT(arg_6351: GLenum, arg_6352: GLenum, arg_6353: [*c]const GLint) void {
    return epoxy_glPixelTransformParameterivEXT.?(arg_6351, arg_6352, arg_6353);
}
pub inline fn glPixelZoom(arg_6354: GLfloat, arg_6355: GLfloat) void {
    return epoxy_glPixelZoom.?(arg_6354, arg_6355);
}
pub inline fn glPixelZoomxOES(arg_6356: GLfixed, arg_6357: GLfixed) void {
    return epoxy_glPixelZoomxOES.?(arg_6356, arg_6357);
}
pub inline fn glPointAlongPathNV(arg_6358: GLuint, arg_6359: GLsizei, arg_6360: GLsizei, arg_6361: GLfloat, arg_6362: [*c]GLfloat, arg_6363: [*c]GLfloat, arg_6364: [*c]GLfloat, arg_6365: [*c]GLfloat) GLboolean {
    return epoxy_glPointAlongPathNV.?(arg_6358, arg_6359, arg_6360, arg_6361, arg_6362, arg_6363, arg_6364, arg_6365);
}
pub inline fn glPointParameterf(arg_6366: GLenum, arg_6367: GLfloat) void {
    return epoxy_glPointParameterf.?(arg_6366, arg_6367);
}
pub inline fn glPointParameterfARB(arg_6368: GLenum, arg_6369: GLfloat) void {
    return epoxy_glPointParameterfARB.?(arg_6368, arg_6369);
}
pub inline fn glPointParameterfEXT(arg_6370: GLenum, arg_6371: GLfloat) void {
    return epoxy_glPointParameterfEXT.?(arg_6370, arg_6371);
}
pub inline fn glPointParameterfSGIS(arg_6372: GLenum, arg_6373: GLfloat) void {
    return epoxy_glPointParameterfSGIS.?(arg_6372, arg_6373);
}
pub inline fn glPointParameterfv(arg_6374: GLenum, arg_6375: [*c]const GLfloat) void {
    return epoxy_glPointParameterfv.?(arg_6374, arg_6375);
}
pub inline fn glPointParameterfvARB(arg_6376: GLenum, arg_6377: [*c]const GLfloat) void {
    return epoxy_glPointParameterfvARB.?(arg_6376, arg_6377);
}
pub inline fn glPointParameterfvEXT(arg_6378: GLenum, arg_6379: [*c]const GLfloat) void {
    return epoxy_glPointParameterfvEXT.?(arg_6378, arg_6379);
}
pub inline fn glPointParameterfvSGIS(arg_6380: GLenum, arg_6381: [*c]const GLfloat) void {
    return epoxy_glPointParameterfvSGIS.?(arg_6380, arg_6381);
}
pub inline fn glPointParameteri(arg_6382: GLenum, arg_6383: GLint) void {
    return epoxy_glPointParameteri.?(arg_6382, arg_6383);
}
pub inline fn glPointParameteriNV(arg_6384: GLenum, arg_6385: GLint) void {
    return epoxy_glPointParameteriNV.?(arg_6384, arg_6385);
}
pub inline fn glPointParameteriv(arg_6386: GLenum, arg_6387: [*c]const GLint) void {
    return epoxy_glPointParameteriv.?(arg_6386, arg_6387);
}
pub inline fn glPointParameterivNV(arg_6388: GLenum, arg_6389: [*c]const GLint) void {
    return epoxy_glPointParameterivNV.?(arg_6388, arg_6389);
}
pub inline fn glPointParameterx(arg_6390: GLenum, arg_6391: GLfixed) void {
    return epoxy_glPointParameterx.?(arg_6390, arg_6391);
}
pub inline fn glPointParameterxOES(arg_6392: GLenum, arg_6393: GLfixed) void {
    return epoxy_glPointParameterxOES.?(arg_6392, arg_6393);
}
pub inline fn glPointParameterxv(arg_6394: GLenum, arg_6395: [*c]const GLfixed) void {
    return epoxy_glPointParameterxv.?(arg_6394, arg_6395);
}
pub inline fn glPointParameterxvOES(arg_6396: GLenum, arg_6397: [*c]const GLfixed) void {
    return epoxy_glPointParameterxvOES.?(arg_6396, arg_6397);
}
pub inline fn glPointSize(arg_6398: GLfloat) void {
    return epoxy_glPointSize.?(arg_6398);
}
pub inline fn glPointSizePointerOES(arg_6399: GLenum, arg_6400: GLsizei, arg_6401: ?*const anyopaque) void {
    return epoxy_glPointSizePointerOES.?(arg_6399, arg_6400, arg_6401);
}
pub inline fn glPointSizex(arg_6402: GLfixed) void {
    return epoxy_glPointSizex.?(arg_6402);
}
pub inline fn glPointSizexOES(arg_6403: GLfixed) void {
    return epoxy_glPointSizexOES.?(arg_6403);
}
pub inline fn glPollAsyncSGIX(arg_6404: [*c]GLuint) GLint {
    return epoxy_glPollAsyncSGIX.?(arg_6404);
}
pub inline fn glPollInstrumentsSGIX(arg_6405: [*c]GLint) GLint {
    return epoxy_glPollInstrumentsSGIX.?(arg_6405);
}
pub inline fn glPolygonMode(arg_6406: GLenum, arg_6407: GLenum) void {
    return epoxy_glPolygonMode.?(arg_6406, arg_6407);
}
pub inline fn glPolygonModeNV(arg_6408: GLenum, arg_6409: GLenum) void {
    return epoxy_glPolygonModeNV.?(arg_6408, arg_6409);
}
pub inline fn glPolygonOffset(arg_6410: GLfloat, arg_6411: GLfloat) void {
    return epoxy_glPolygonOffset.?(arg_6410, arg_6411);
}
pub inline fn glPolygonOffsetClamp(arg_6412: GLfloat, arg_6413: GLfloat, arg_6414: GLfloat) void {
    return epoxy_glPolygonOffsetClamp.?(arg_6412, arg_6413, arg_6414);
}
pub inline fn glPolygonOffsetClampEXT(arg_6415: GLfloat, arg_6416: GLfloat, arg_6417: GLfloat) void {
    return epoxy_glPolygonOffsetClampEXT.?(arg_6415, arg_6416, arg_6417);
}
pub inline fn glPolygonOffsetEXT(arg_6418: GLfloat, arg_6419: GLfloat) void {
    return epoxy_glPolygonOffsetEXT.?(arg_6418, arg_6419);
}
pub inline fn glPolygonOffsetx(arg_6420: GLfixed, arg_6421: GLfixed) void {
    return epoxy_glPolygonOffsetx.?(arg_6420, arg_6421);
}
pub inline fn glPolygonOffsetxOES(arg_6422: GLfixed, arg_6423: GLfixed) void {
    return epoxy_glPolygonOffsetxOES.?(arg_6422, arg_6423);
}
pub inline fn glPolygonStipple(arg_6424: [*c]const GLubyte) void {
    return epoxy_glPolygonStipple.?(arg_6424);
}
pub inline fn glPopAttrib() void {
    return epoxy_glPopAttrib.?();
}
pub inline fn glPopClientAttrib() void {
    return epoxy_glPopClientAttrib.?();
}
pub inline fn glPopDebugGroup() void {
    return epoxy_glPopDebugGroup.?();
}
pub inline fn glPopDebugGroupKHR() void {
    return epoxy_glPopDebugGroupKHR.?();
}
pub inline fn glPopGroupMarkerEXT() void {
    return epoxy_glPopGroupMarkerEXT.?();
}
pub inline fn glPopMatrix() void {
    return epoxy_glPopMatrix.?();
}
pub inline fn glPopName() void {
    return epoxy_glPopName.?();
}
pub inline fn glPresentFrameDualFillNV(arg_6425: GLuint, arg_6426: GLuint64EXT, arg_6427: GLuint, arg_6428: GLuint, arg_6429: GLenum, arg_6430: GLenum, arg_6431: GLuint, arg_6432: GLenum, arg_6433: GLuint, arg_6434: GLenum, arg_6435: GLuint, arg_6436: GLenum, arg_6437: GLuint) void {
    return epoxy_glPresentFrameDualFillNV.?(arg_6425, arg_6426, arg_6427, arg_6428, arg_6429, arg_6430, arg_6431, arg_6432, arg_6433, arg_6434, arg_6435, arg_6436, arg_6437);
}
pub inline fn glPresentFrameKeyedNV(arg_6438: GLuint, arg_6439: GLuint64EXT, arg_6440: GLuint, arg_6441: GLuint, arg_6442: GLenum, arg_6443: GLenum, arg_6444: GLuint, arg_6445: GLuint, arg_6446: GLenum, arg_6447: GLuint, arg_6448: GLuint) void {
    return epoxy_glPresentFrameKeyedNV.?(arg_6438, arg_6439, arg_6440, arg_6441, arg_6442, arg_6443, arg_6444, arg_6445, arg_6446, arg_6447, arg_6448);
}
pub inline fn glPrimitiveBoundingBox(arg_6449: GLfloat, arg_6450: GLfloat, arg_6451: GLfloat, arg_6452: GLfloat, arg_6453: GLfloat, arg_6454: GLfloat, arg_6455: GLfloat, arg_6456: GLfloat) void {
    return epoxy_glPrimitiveBoundingBox.?(arg_6449, arg_6450, arg_6451, arg_6452, arg_6453, arg_6454, arg_6455, arg_6456);
}
pub inline fn glPrimitiveBoundingBoxARB(arg_6457: GLfloat, arg_6458: GLfloat, arg_6459: GLfloat, arg_6460: GLfloat, arg_6461: GLfloat, arg_6462: GLfloat, arg_6463: GLfloat, arg_6464: GLfloat) void {
    return epoxy_glPrimitiveBoundingBoxARB.?(arg_6457, arg_6458, arg_6459, arg_6460, arg_6461, arg_6462, arg_6463, arg_6464);
}
pub inline fn glPrimitiveBoundingBoxEXT(arg_6465: GLfloat, arg_6466: GLfloat, arg_6467: GLfloat, arg_6468: GLfloat, arg_6469: GLfloat, arg_6470: GLfloat, arg_6471: GLfloat, arg_6472: GLfloat) void {
    return epoxy_glPrimitiveBoundingBoxEXT.?(arg_6465, arg_6466, arg_6467, arg_6468, arg_6469, arg_6470, arg_6471, arg_6472);
}
pub inline fn glPrimitiveBoundingBoxOES(arg_6473: GLfloat, arg_6474: GLfloat, arg_6475: GLfloat, arg_6476: GLfloat, arg_6477: GLfloat, arg_6478: GLfloat, arg_6479: GLfloat, arg_6480: GLfloat) void {
    return epoxy_glPrimitiveBoundingBoxOES.?(arg_6473, arg_6474, arg_6475, arg_6476, arg_6477, arg_6478, arg_6479, arg_6480);
}
pub inline fn glPrimitiveRestartIndex(arg_6481: GLuint) void {
    return epoxy_glPrimitiveRestartIndex.?(arg_6481);
}
pub inline fn glPrimitiveRestartIndexNV(arg_6482: GLuint) void {
    return epoxy_glPrimitiveRestartIndexNV.?(arg_6482);
}
pub inline fn glPrimitiveRestartNV() void {
    return epoxy_glPrimitiveRestartNV.?();
}
pub inline fn glPrioritizeTextures(arg_6483: GLsizei, arg_6484: [*c]const GLuint, arg_6485: [*c]const GLfloat) void {
    return epoxy_glPrioritizeTextures.?(arg_6483, arg_6484, arg_6485);
}
pub inline fn glPrioritizeTexturesEXT(arg_6486: GLsizei, arg_6487: [*c]const GLuint, arg_6488: [*c]const GLclampf) void {
    return epoxy_glPrioritizeTexturesEXT.?(arg_6486, arg_6487, arg_6488);
}
pub inline fn glPrioritizeTexturesxOES(arg_6489: GLsizei, arg_6490: [*c]const GLuint, arg_6491: [*c]const GLfixed) void {
    return epoxy_glPrioritizeTexturesxOES.?(arg_6489, arg_6490, arg_6491);
}
pub inline fn glProgramBinary(arg_6492: GLuint, arg_6493: GLenum, arg_6494: ?*const anyopaque, arg_6495: GLsizei) void {
    return epoxy_glProgramBinary.?(arg_6492, arg_6493, arg_6494, arg_6495);
}
pub inline fn glProgramBinaryOES(arg_6496: GLuint, arg_6497: GLenum, arg_6498: ?*const anyopaque, arg_6499: GLint) void {
    return epoxy_glProgramBinaryOES.?(arg_6496, arg_6497, arg_6498, arg_6499);
}
pub inline fn glProgramBufferParametersIivNV(arg_6500: GLenum, arg_6501: GLuint, arg_6502: GLuint, arg_6503: GLsizei, arg_6504: [*c]const GLint) void {
    return epoxy_glProgramBufferParametersIivNV.?(arg_6500, arg_6501, arg_6502, arg_6503, arg_6504);
}
pub inline fn glProgramBufferParametersIuivNV(arg_6505: GLenum, arg_6506: GLuint, arg_6507: GLuint, arg_6508: GLsizei, arg_6509: [*c]const GLuint) void {
    return epoxy_glProgramBufferParametersIuivNV.?(arg_6505, arg_6506, arg_6507, arg_6508, arg_6509);
}
pub inline fn glProgramBufferParametersfvNV(arg_6510: GLenum, arg_6511: GLuint, arg_6512: GLuint, arg_6513: GLsizei, arg_6514: [*c]const GLfloat) void {
    return epoxy_glProgramBufferParametersfvNV.?(arg_6510, arg_6511, arg_6512, arg_6513, arg_6514);
}
pub inline fn glProgramEnvParameter4dARB(arg_6515: GLenum, arg_6516: GLuint, arg_6517: GLdouble, arg_6518: GLdouble, arg_6519: GLdouble, arg_6520: GLdouble) void {
    return epoxy_glProgramEnvParameter4dARB.?(arg_6515, arg_6516, arg_6517, arg_6518, arg_6519, arg_6520);
}
pub inline fn glProgramEnvParameter4dvARB(arg_6521: GLenum, arg_6522: GLuint, arg_6523: [*c]const GLdouble) void {
    return epoxy_glProgramEnvParameter4dvARB.?(arg_6521, arg_6522, arg_6523);
}
pub inline fn glProgramEnvParameter4fARB(arg_6524: GLenum, arg_6525: GLuint, arg_6526: GLfloat, arg_6527: GLfloat, arg_6528: GLfloat, arg_6529: GLfloat) void {
    return epoxy_glProgramEnvParameter4fARB.?(arg_6524, arg_6525, arg_6526, arg_6527, arg_6528, arg_6529);
}
pub inline fn glProgramEnvParameter4fvARB(arg_6530: GLenum, arg_6531: GLuint, arg_6532: [*c]const GLfloat) void {
    return epoxy_glProgramEnvParameter4fvARB.?(arg_6530, arg_6531, arg_6532);
}
pub inline fn glProgramEnvParameterI4iNV(arg_6533: GLenum, arg_6534: GLuint, arg_6535: GLint, arg_6536: GLint, arg_6537: GLint, arg_6538: GLint) void {
    return epoxy_glProgramEnvParameterI4iNV.?(arg_6533, arg_6534, arg_6535, arg_6536, arg_6537, arg_6538);
}
pub inline fn glProgramEnvParameterI4ivNV(arg_6539: GLenum, arg_6540: GLuint, arg_6541: [*c]const GLint) void {
    return epoxy_glProgramEnvParameterI4ivNV.?(arg_6539, arg_6540, arg_6541);
}
pub inline fn glProgramEnvParameterI4uiNV(arg_6542: GLenum, arg_6543: GLuint, arg_6544: GLuint, arg_6545: GLuint, arg_6546: GLuint, arg_6547: GLuint) void {
    return epoxy_glProgramEnvParameterI4uiNV.?(arg_6542, arg_6543, arg_6544, arg_6545, arg_6546, arg_6547);
}
pub inline fn glProgramEnvParameterI4uivNV(arg_6548: GLenum, arg_6549: GLuint, arg_6550: [*c]const GLuint) void {
    return epoxy_glProgramEnvParameterI4uivNV.?(arg_6548, arg_6549, arg_6550);
}
pub inline fn glProgramEnvParameters4fvEXT(arg_6551: GLenum, arg_6552: GLuint, arg_6553: GLsizei, arg_6554: [*c]const GLfloat) void {
    return epoxy_glProgramEnvParameters4fvEXT.?(arg_6551, arg_6552, arg_6553, arg_6554);
}
pub inline fn glProgramEnvParametersI4ivNV(arg_6555: GLenum, arg_6556: GLuint, arg_6557: GLsizei, arg_6558: [*c]const GLint) void {
    return epoxy_glProgramEnvParametersI4ivNV.?(arg_6555, arg_6556, arg_6557, arg_6558);
}
pub inline fn glProgramEnvParametersI4uivNV(arg_6559: GLenum, arg_6560: GLuint, arg_6561: GLsizei, arg_6562: [*c]const GLuint) void {
    return epoxy_glProgramEnvParametersI4uivNV.?(arg_6559, arg_6560, arg_6561, arg_6562);
}
pub inline fn glProgramLocalParameter4dARB(arg_6563: GLenum, arg_6564: GLuint, arg_6565: GLdouble, arg_6566: GLdouble, arg_6567: GLdouble, arg_6568: GLdouble) void {
    return epoxy_glProgramLocalParameter4dARB.?(arg_6563, arg_6564, arg_6565, arg_6566, arg_6567, arg_6568);
}
pub inline fn glProgramLocalParameter4dvARB(arg_6569: GLenum, arg_6570: GLuint, arg_6571: [*c]const GLdouble) void {
    return epoxy_glProgramLocalParameter4dvARB.?(arg_6569, arg_6570, arg_6571);
}
pub inline fn glProgramLocalParameter4fARB(arg_6572: GLenum, arg_6573: GLuint, arg_6574: GLfloat, arg_6575: GLfloat, arg_6576: GLfloat, arg_6577: GLfloat) void {
    return epoxy_glProgramLocalParameter4fARB.?(arg_6572, arg_6573, arg_6574, arg_6575, arg_6576, arg_6577);
}
pub inline fn glProgramLocalParameter4fvARB(arg_6578: GLenum, arg_6579: GLuint, arg_6580: [*c]const GLfloat) void {
    return epoxy_glProgramLocalParameter4fvARB.?(arg_6578, arg_6579, arg_6580);
}
pub inline fn glProgramLocalParameterI4iNV(arg_6581: GLenum, arg_6582: GLuint, arg_6583: GLint, arg_6584: GLint, arg_6585: GLint, arg_6586: GLint) void {
    return epoxy_glProgramLocalParameterI4iNV.?(arg_6581, arg_6582, arg_6583, arg_6584, arg_6585, arg_6586);
}
pub inline fn glProgramLocalParameterI4ivNV(arg_6587: GLenum, arg_6588: GLuint, arg_6589: [*c]const GLint) void {
    return epoxy_glProgramLocalParameterI4ivNV.?(arg_6587, arg_6588, arg_6589);
}
pub inline fn glProgramLocalParameterI4uiNV(arg_6590: GLenum, arg_6591: GLuint, arg_6592: GLuint, arg_6593: GLuint, arg_6594: GLuint, arg_6595: GLuint) void {
    return epoxy_glProgramLocalParameterI4uiNV.?(arg_6590, arg_6591, arg_6592, arg_6593, arg_6594, arg_6595);
}
pub inline fn glProgramLocalParameterI4uivNV(arg_6596: GLenum, arg_6597: GLuint, arg_6598: [*c]const GLuint) void {
    return epoxy_glProgramLocalParameterI4uivNV.?(arg_6596, arg_6597, arg_6598);
}
pub inline fn glProgramLocalParameters4fvEXT(arg_6599: GLenum, arg_6600: GLuint, arg_6601: GLsizei, arg_6602: [*c]const GLfloat) void {
    return epoxy_glProgramLocalParameters4fvEXT.?(arg_6599, arg_6600, arg_6601, arg_6602);
}
pub inline fn glProgramLocalParametersI4ivNV(arg_6603: GLenum, arg_6604: GLuint, arg_6605: GLsizei, arg_6606: [*c]const GLint) void {
    return epoxy_glProgramLocalParametersI4ivNV.?(arg_6603, arg_6604, arg_6605, arg_6606);
}
pub inline fn glProgramLocalParametersI4uivNV(arg_6607: GLenum, arg_6608: GLuint, arg_6609: GLsizei, arg_6610: [*c]const GLuint) void {
    return epoxy_glProgramLocalParametersI4uivNV.?(arg_6607, arg_6608, arg_6609, arg_6610);
}
pub inline fn glProgramNamedParameter4dNV(arg_6611: GLuint, arg_6612: GLsizei, arg_6613: [*c]const GLubyte, arg_6614: GLdouble, arg_6615: GLdouble, arg_6616: GLdouble, arg_6617: GLdouble) void {
    return epoxy_glProgramNamedParameter4dNV.?(arg_6611, arg_6612, arg_6613, arg_6614, arg_6615, arg_6616, arg_6617);
}
pub inline fn glProgramNamedParameter4dvNV(arg_6618: GLuint, arg_6619: GLsizei, arg_6620: [*c]const GLubyte, arg_6621: [*c]const GLdouble) void {
    return epoxy_glProgramNamedParameter4dvNV.?(arg_6618, arg_6619, arg_6620, arg_6621);
}
pub inline fn glProgramNamedParameter4fNV(arg_6622: GLuint, arg_6623: GLsizei, arg_6624: [*c]const GLubyte, arg_6625: GLfloat, arg_6626: GLfloat, arg_6627: GLfloat, arg_6628: GLfloat) void {
    return epoxy_glProgramNamedParameter4fNV.?(arg_6622, arg_6623, arg_6624, arg_6625, arg_6626, arg_6627, arg_6628);
}
pub inline fn glProgramNamedParameter4fvNV(arg_6629: GLuint, arg_6630: GLsizei, arg_6631: [*c]const GLubyte, arg_6632: [*c]const GLfloat) void {
    return epoxy_glProgramNamedParameter4fvNV.?(arg_6629, arg_6630, arg_6631, arg_6632);
}
pub inline fn glProgramParameter4dNV(arg_6633: GLenum, arg_6634: GLuint, arg_6635: GLdouble, arg_6636: GLdouble, arg_6637: GLdouble, arg_6638: GLdouble) void {
    return epoxy_glProgramParameter4dNV.?(arg_6633, arg_6634, arg_6635, arg_6636, arg_6637, arg_6638);
}
pub inline fn glProgramParameter4dvNV(arg_6639: GLenum, arg_6640: GLuint, arg_6641: [*c]const GLdouble) void {
    return epoxy_glProgramParameter4dvNV.?(arg_6639, arg_6640, arg_6641);
}
pub inline fn glProgramParameter4fNV(arg_6642: GLenum, arg_6643: GLuint, arg_6644: GLfloat, arg_6645: GLfloat, arg_6646: GLfloat, arg_6647: GLfloat) void {
    return epoxy_glProgramParameter4fNV.?(arg_6642, arg_6643, arg_6644, arg_6645, arg_6646, arg_6647);
}
pub inline fn glProgramParameter4fvNV(arg_6648: GLenum, arg_6649: GLuint, arg_6650: [*c]const GLfloat) void {
    return epoxy_glProgramParameter4fvNV.?(arg_6648, arg_6649, arg_6650);
}
pub inline fn glProgramParameteri(arg_6651: GLuint, arg_6652: GLenum, arg_6653: GLint) void {
    return epoxy_glProgramParameteri.?(arg_6651, arg_6652, arg_6653);
}
pub inline fn glProgramParameteriARB(arg_6654: GLuint, arg_6655: GLenum, arg_6656: GLint) void {
    return epoxy_glProgramParameteriARB.?(arg_6654, arg_6655, arg_6656);
}
pub inline fn glProgramParameteriEXT(arg_6657: GLuint, arg_6658: GLenum, arg_6659: GLint) void {
    return epoxy_glProgramParameteriEXT.?(arg_6657, arg_6658, arg_6659);
}
pub inline fn glProgramParameters4dvNV(arg_6660: GLenum, arg_6661: GLuint, arg_6662: GLsizei, arg_6663: [*c]const GLdouble) void {
    return epoxy_glProgramParameters4dvNV.?(arg_6660, arg_6661, arg_6662, arg_6663);
}
pub inline fn glProgramParameters4fvNV(arg_6664: GLenum, arg_6665: GLuint, arg_6666: GLsizei, arg_6667: [*c]const GLfloat) void {
    return epoxy_glProgramParameters4fvNV.?(arg_6664, arg_6665, arg_6666, arg_6667);
}
pub inline fn glProgramPathFragmentInputGenNV(arg_6668: GLuint, arg_6669: GLint, arg_6670: GLenum, arg_6671: GLint, arg_6672: [*c]const GLfloat) void {
    return epoxy_glProgramPathFragmentInputGenNV.?(arg_6668, arg_6669, arg_6670, arg_6671, arg_6672);
}
pub inline fn glProgramStringARB(arg_6673: GLenum, arg_6674: GLenum, arg_6675: GLsizei, arg_6676: ?*const anyopaque) void {
    return epoxy_glProgramStringARB.?(arg_6673, arg_6674, arg_6675, arg_6676);
}
pub inline fn glProgramSubroutineParametersuivNV(arg_6677: GLenum, arg_6678: GLsizei, arg_6679: [*c]const GLuint) void {
    return epoxy_glProgramSubroutineParametersuivNV.?(arg_6677, arg_6678, arg_6679);
}
pub inline fn glProgramUniform1d(arg_6680: GLuint, arg_6681: GLint, arg_6682: GLdouble) void {
    return epoxy_glProgramUniform1d.?(arg_6680, arg_6681, arg_6682);
}
pub inline fn glProgramUniform1dEXT(arg_6683: GLuint, arg_6684: GLint, arg_6685: GLdouble) void {
    return epoxy_glProgramUniform1dEXT.?(arg_6683, arg_6684, arg_6685);
}
pub inline fn glProgramUniform1dv(arg_6686: GLuint, arg_6687: GLint, arg_6688: GLsizei, arg_6689: [*c]const GLdouble) void {
    return epoxy_glProgramUniform1dv.?(arg_6686, arg_6687, arg_6688, arg_6689);
}
pub inline fn glProgramUniform1dvEXT(arg_6690: GLuint, arg_6691: GLint, arg_6692: GLsizei, arg_6693: [*c]const GLdouble) void {
    return epoxy_glProgramUniform1dvEXT.?(arg_6690, arg_6691, arg_6692, arg_6693);
}
pub inline fn glProgramUniform1f(arg_6694: GLuint, arg_6695: GLint, arg_6696: GLfloat) void {
    return epoxy_glProgramUniform1f.?(arg_6694, arg_6695, arg_6696);
}
pub inline fn glProgramUniform1fEXT(arg_6697: GLuint, arg_6698: GLint, arg_6699: GLfloat) void {
    return epoxy_glProgramUniform1fEXT.?(arg_6697, arg_6698, arg_6699);
}
pub inline fn glProgramUniform1fv(arg_6700: GLuint, arg_6701: GLint, arg_6702: GLsizei, arg_6703: [*c]const GLfloat) void {
    return epoxy_glProgramUniform1fv.?(arg_6700, arg_6701, arg_6702, arg_6703);
}
pub inline fn glProgramUniform1fvEXT(arg_6704: GLuint, arg_6705: GLint, arg_6706: GLsizei, arg_6707: [*c]const GLfloat) void {
    return epoxy_glProgramUniform1fvEXT.?(arg_6704, arg_6705, arg_6706, arg_6707);
}
pub inline fn glProgramUniform1i(arg_6708: GLuint, arg_6709: GLint, arg_6710: GLint) void {
    return epoxy_glProgramUniform1i.?(arg_6708, arg_6709, arg_6710);
}
pub inline fn glProgramUniform1i64ARB(arg_6711: GLuint, arg_6712: GLint, arg_6713: GLint64) void {
    return epoxy_glProgramUniform1i64ARB.?(arg_6711, arg_6712, arg_6713);
}
pub inline fn glProgramUniform1i64NV(arg_6714: GLuint, arg_6715: GLint, arg_6716: GLint64EXT) void {
    return epoxy_glProgramUniform1i64NV.?(arg_6714, arg_6715, arg_6716);
}
pub inline fn glProgramUniform1i64vARB(arg_6717: GLuint, arg_6718: GLint, arg_6719: GLsizei, arg_6720: [*c]const GLint64) void {
    return epoxy_glProgramUniform1i64vARB.?(arg_6717, arg_6718, arg_6719, arg_6720);
}
pub inline fn glProgramUniform1i64vNV(arg_6721: GLuint, arg_6722: GLint, arg_6723: GLsizei, arg_6724: [*c]const GLint64EXT) void {
    return epoxy_glProgramUniform1i64vNV.?(arg_6721, arg_6722, arg_6723, arg_6724);
}
pub inline fn glProgramUniform1iEXT(arg_6725: GLuint, arg_6726: GLint, arg_6727: GLint) void {
    return epoxy_glProgramUniform1iEXT.?(arg_6725, arg_6726, arg_6727);
}
pub inline fn glProgramUniform1iv(arg_6728: GLuint, arg_6729: GLint, arg_6730: GLsizei, arg_6731: [*c]const GLint) void {
    return epoxy_glProgramUniform1iv.?(arg_6728, arg_6729, arg_6730, arg_6731);
}
pub inline fn glProgramUniform1ivEXT(arg_6732: GLuint, arg_6733: GLint, arg_6734: GLsizei, arg_6735: [*c]const GLint) void {
    return epoxy_glProgramUniform1ivEXT.?(arg_6732, arg_6733, arg_6734, arg_6735);
}
pub inline fn glProgramUniform1ui(arg_6736: GLuint, arg_6737: GLint, arg_6738: GLuint) void {
    return epoxy_glProgramUniform1ui.?(arg_6736, arg_6737, arg_6738);
}
pub inline fn glProgramUniform1ui64ARB(arg_6739: GLuint, arg_6740: GLint, arg_6741: GLuint64) void {
    return epoxy_glProgramUniform1ui64ARB.?(arg_6739, arg_6740, arg_6741);
}
pub inline fn glProgramUniform1ui64NV(arg_6742: GLuint, arg_6743: GLint, arg_6744: GLuint64EXT) void {
    return epoxy_glProgramUniform1ui64NV.?(arg_6742, arg_6743, arg_6744);
}
pub inline fn glProgramUniform1ui64vARB(arg_6745: GLuint, arg_6746: GLint, arg_6747: GLsizei, arg_6748: [*c]const GLuint64) void {
    return epoxy_glProgramUniform1ui64vARB.?(arg_6745, arg_6746, arg_6747, arg_6748);
}
pub inline fn glProgramUniform1ui64vNV(arg_6749: GLuint, arg_6750: GLint, arg_6751: GLsizei, arg_6752: [*c]const GLuint64EXT) void {
    return epoxy_glProgramUniform1ui64vNV.?(arg_6749, arg_6750, arg_6751, arg_6752);
}
pub inline fn glProgramUniform1uiEXT(arg_6753: GLuint, arg_6754: GLint, arg_6755: GLuint) void {
    return epoxy_glProgramUniform1uiEXT.?(arg_6753, arg_6754, arg_6755);
}
pub inline fn glProgramUniform1uiv(arg_6756: GLuint, arg_6757: GLint, arg_6758: GLsizei, arg_6759: [*c]const GLuint) void {
    return epoxy_glProgramUniform1uiv.?(arg_6756, arg_6757, arg_6758, arg_6759);
}
pub inline fn glProgramUniform1uivEXT(arg_6760: GLuint, arg_6761: GLint, arg_6762: GLsizei, arg_6763: [*c]const GLuint) void {
    return epoxy_glProgramUniform1uivEXT.?(arg_6760, arg_6761, arg_6762, arg_6763);
}
pub inline fn glProgramUniform2d(arg_6764: GLuint, arg_6765: GLint, arg_6766: GLdouble, arg_6767: GLdouble) void {
    return epoxy_glProgramUniform2d.?(arg_6764, arg_6765, arg_6766, arg_6767);
}
pub inline fn glProgramUniform2dEXT(arg_6768: GLuint, arg_6769: GLint, arg_6770: GLdouble, arg_6771: GLdouble) void {
    return epoxy_glProgramUniform2dEXT.?(arg_6768, arg_6769, arg_6770, arg_6771);
}
pub inline fn glProgramUniform2dv(arg_6772: GLuint, arg_6773: GLint, arg_6774: GLsizei, arg_6775: [*c]const GLdouble) void {
    return epoxy_glProgramUniform2dv.?(arg_6772, arg_6773, arg_6774, arg_6775);
}
pub inline fn glProgramUniform2dvEXT(arg_6776: GLuint, arg_6777: GLint, arg_6778: GLsizei, arg_6779: [*c]const GLdouble) void {
    return epoxy_glProgramUniform2dvEXT.?(arg_6776, arg_6777, arg_6778, arg_6779);
}
pub inline fn glProgramUniform2f(arg_6780: GLuint, arg_6781: GLint, arg_6782: GLfloat, arg_6783: GLfloat) void {
    return epoxy_glProgramUniform2f.?(arg_6780, arg_6781, arg_6782, arg_6783);
}
pub inline fn glProgramUniform2fEXT(arg_6784: GLuint, arg_6785: GLint, arg_6786: GLfloat, arg_6787: GLfloat) void {
    return epoxy_glProgramUniform2fEXT.?(arg_6784, arg_6785, arg_6786, arg_6787);
}
pub inline fn glProgramUniform2fv(arg_6788: GLuint, arg_6789: GLint, arg_6790: GLsizei, arg_6791: [*c]const GLfloat) void {
    return epoxy_glProgramUniform2fv.?(arg_6788, arg_6789, arg_6790, arg_6791);
}
pub inline fn glProgramUniform2fvEXT(arg_6792: GLuint, arg_6793: GLint, arg_6794: GLsizei, arg_6795: [*c]const GLfloat) void {
    return epoxy_glProgramUniform2fvEXT.?(arg_6792, arg_6793, arg_6794, arg_6795);
}
pub inline fn glProgramUniform2i(arg_6796: GLuint, arg_6797: GLint, arg_6798: GLint, arg_6799: GLint) void {
    return epoxy_glProgramUniform2i.?(arg_6796, arg_6797, arg_6798, arg_6799);
}
pub inline fn glProgramUniform2i64ARB(arg_6800: GLuint, arg_6801: GLint, arg_6802: GLint64, arg_6803: GLint64) void {
    return epoxy_glProgramUniform2i64ARB.?(arg_6800, arg_6801, arg_6802, arg_6803);
}
pub inline fn glProgramUniform2i64NV(arg_6804: GLuint, arg_6805: GLint, arg_6806: GLint64EXT, arg_6807: GLint64EXT) void {
    return epoxy_glProgramUniform2i64NV.?(arg_6804, arg_6805, arg_6806, arg_6807);
}
pub inline fn glProgramUniform2i64vARB(arg_6808: GLuint, arg_6809: GLint, arg_6810: GLsizei, arg_6811: [*c]const GLint64) void {
    return epoxy_glProgramUniform2i64vARB.?(arg_6808, arg_6809, arg_6810, arg_6811);
}
pub inline fn glProgramUniform2i64vNV(arg_6812: GLuint, arg_6813: GLint, arg_6814: GLsizei, arg_6815: [*c]const GLint64EXT) void {
    return epoxy_glProgramUniform2i64vNV.?(arg_6812, arg_6813, arg_6814, arg_6815);
}
pub inline fn glProgramUniform2iEXT(arg_6816: GLuint, arg_6817: GLint, arg_6818: GLint, arg_6819: GLint) void {
    return epoxy_glProgramUniform2iEXT.?(arg_6816, arg_6817, arg_6818, arg_6819);
}
pub inline fn glProgramUniform2iv(arg_6820: GLuint, arg_6821: GLint, arg_6822: GLsizei, arg_6823: [*c]const GLint) void {
    return epoxy_glProgramUniform2iv.?(arg_6820, arg_6821, arg_6822, arg_6823);
}
pub inline fn glProgramUniform2ivEXT(arg_6824: GLuint, arg_6825: GLint, arg_6826: GLsizei, arg_6827: [*c]const GLint) void {
    return epoxy_glProgramUniform2ivEXT.?(arg_6824, arg_6825, arg_6826, arg_6827);
}
pub inline fn glProgramUniform2ui(arg_6828: GLuint, arg_6829: GLint, arg_6830: GLuint, arg_6831: GLuint) void {
    return epoxy_glProgramUniform2ui.?(arg_6828, arg_6829, arg_6830, arg_6831);
}
pub inline fn glProgramUniform2ui64ARB(arg_6832: GLuint, arg_6833: GLint, arg_6834: GLuint64, arg_6835: GLuint64) void {
    return epoxy_glProgramUniform2ui64ARB.?(arg_6832, arg_6833, arg_6834, arg_6835);
}
pub inline fn glProgramUniform2ui64NV(arg_6836: GLuint, arg_6837: GLint, arg_6838: GLuint64EXT, arg_6839: GLuint64EXT) void {
    return epoxy_glProgramUniform2ui64NV.?(arg_6836, arg_6837, arg_6838, arg_6839);
}
pub inline fn glProgramUniform2ui64vARB(arg_6840: GLuint, arg_6841: GLint, arg_6842: GLsizei, arg_6843: [*c]const GLuint64) void {
    return epoxy_glProgramUniform2ui64vARB.?(arg_6840, arg_6841, arg_6842, arg_6843);
}
pub inline fn glProgramUniform2ui64vNV(arg_6844: GLuint, arg_6845: GLint, arg_6846: GLsizei, arg_6847: [*c]const GLuint64EXT) void {
    return epoxy_glProgramUniform2ui64vNV.?(arg_6844, arg_6845, arg_6846, arg_6847);
}
pub inline fn glProgramUniform2uiEXT(arg_6848: GLuint, arg_6849: GLint, arg_6850: GLuint, arg_6851: GLuint) void {
    return epoxy_glProgramUniform2uiEXT.?(arg_6848, arg_6849, arg_6850, arg_6851);
}
pub inline fn glProgramUniform2uiv(arg_6852: GLuint, arg_6853: GLint, arg_6854: GLsizei, arg_6855: [*c]const GLuint) void {
    return epoxy_glProgramUniform2uiv.?(arg_6852, arg_6853, arg_6854, arg_6855);
}
pub inline fn glProgramUniform2uivEXT(arg_6856: GLuint, arg_6857: GLint, arg_6858: GLsizei, arg_6859: [*c]const GLuint) void {
    return epoxy_glProgramUniform2uivEXT.?(arg_6856, arg_6857, arg_6858, arg_6859);
}
pub inline fn glProgramUniform3d(arg_6860: GLuint, arg_6861: GLint, arg_6862: GLdouble, arg_6863: GLdouble, arg_6864: GLdouble) void {
    return epoxy_glProgramUniform3d.?(arg_6860, arg_6861, arg_6862, arg_6863, arg_6864);
}
pub inline fn glProgramUniform3dEXT(arg_6865: GLuint, arg_6866: GLint, arg_6867: GLdouble, arg_6868: GLdouble, arg_6869: GLdouble) void {
    return epoxy_glProgramUniform3dEXT.?(arg_6865, arg_6866, arg_6867, arg_6868, arg_6869);
}
pub inline fn glProgramUniform3dv(arg_6870: GLuint, arg_6871: GLint, arg_6872: GLsizei, arg_6873: [*c]const GLdouble) void {
    return epoxy_glProgramUniform3dv.?(arg_6870, arg_6871, arg_6872, arg_6873);
}
pub inline fn glProgramUniform3dvEXT(arg_6874: GLuint, arg_6875: GLint, arg_6876: GLsizei, arg_6877: [*c]const GLdouble) void {
    return epoxy_glProgramUniform3dvEXT.?(arg_6874, arg_6875, arg_6876, arg_6877);
}
pub inline fn glProgramUniform3f(arg_6878: GLuint, arg_6879: GLint, arg_6880: GLfloat, arg_6881: GLfloat, arg_6882: GLfloat) void {
    return epoxy_glProgramUniform3f.?(arg_6878, arg_6879, arg_6880, arg_6881, arg_6882);
}
pub inline fn glProgramUniform3fEXT(arg_6883: GLuint, arg_6884: GLint, arg_6885: GLfloat, arg_6886: GLfloat, arg_6887: GLfloat) void {
    return epoxy_glProgramUniform3fEXT.?(arg_6883, arg_6884, arg_6885, arg_6886, arg_6887);
}
pub inline fn glProgramUniform3fv(arg_6888: GLuint, arg_6889: GLint, arg_6890: GLsizei, arg_6891: [*c]const GLfloat) void {
    return epoxy_glProgramUniform3fv.?(arg_6888, arg_6889, arg_6890, arg_6891);
}
pub inline fn glProgramUniform3fvEXT(arg_6892: GLuint, arg_6893: GLint, arg_6894: GLsizei, arg_6895: [*c]const GLfloat) void {
    return epoxy_glProgramUniform3fvEXT.?(arg_6892, arg_6893, arg_6894, arg_6895);
}
pub inline fn glProgramUniform3i(arg_6896: GLuint, arg_6897: GLint, arg_6898: GLint, arg_6899: GLint, arg_6900: GLint) void {
    return epoxy_glProgramUniform3i.?(arg_6896, arg_6897, arg_6898, arg_6899, arg_6900);
}
pub inline fn glProgramUniform3i64ARB(arg_6901: GLuint, arg_6902: GLint, arg_6903: GLint64, arg_6904: GLint64, arg_6905: GLint64) void {
    return epoxy_glProgramUniform3i64ARB.?(arg_6901, arg_6902, arg_6903, arg_6904, arg_6905);
}
pub inline fn glProgramUniform3i64NV(arg_6906: GLuint, arg_6907: GLint, arg_6908: GLint64EXT, arg_6909: GLint64EXT, arg_6910: GLint64EXT) void {
    return epoxy_glProgramUniform3i64NV.?(arg_6906, arg_6907, arg_6908, arg_6909, arg_6910);
}
pub inline fn glProgramUniform3i64vARB(arg_6911: GLuint, arg_6912: GLint, arg_6913: GLsizei, arg_6914: [*c]const GLint64) void {
    return epoxy_glProgramUniform3i64vARB.?(arg_6911, arg_6912, arg_6913, arg_6914);
}
pub inline fn glProgramUniform3i64vNV(arg_6915: GLuint, arg_6916: GLint, arg_6917: GLsizei, arg_6918: [*c]const GLint64EXT) void {
    return epoxy_glProgramUniform3i64vNV.?(arg_6915, arg_6916, arg_6917, arg_6918);
}
pub inline fn glProgramUniform3iEXT(arg_6919: GLuint, arg_6920: GLint, arg_6921: GLint, arg_6922: GLint, arg_6923: GLint) void {
    return epoxy_glProgramUniform3iEXT.?(arg_6919, arg_6920, arg_6921, arg_6922, arg_6923);
}
pub inline fn glProgramUniform3iv(arg_6924: GLuint, arg_6925: GLint, arg_6926: GLsizei, arg_6927: [*c]const GLint) void {
    return epoxy_glProgramUniform3iv.?(arg_6924, arg_6925, arg_6926, arg_6927);
}
pub inline fn glProgramUniform3ivEXT(arg_6928: GLuint, arg_6929: GLint, arg_6930: GLsizei, arg_6931: [*c]const GLint) void {
    return epoxy_glProgramUniform3ivEXT.?(arg_6928, arg_6929, arg_6930, arg_6931);
}
pub inline fn glProgramUniform3ui(arg_6932: GLuint, arg_6933: GLint, arg_6934: GLuint, arg_6935: GLuint, arg_6936: GLuint) void {
    return epoxy_glProgramUniform3ui.?(arg_6932, arg_6933, arg_6934, arg_6935, arg_6936);
}
pub inline fn glProgramUniform3ui64ARB(arg_6937: GLuint, arg_6938: GLint, arg_6939: GLuint64, arg_6940: GLuint64, arg_6941: GLuint64) void {
    return epoxy_glProgramUniform3ui64ARB.?(arg_6937, arg_6938, arg_6939, arg_6940, arg_6941);
}
pub inline fn glProgramUniform3ui64NV(arg_6942: GLuint, arg_6943: GLint, arg_6944: GLuint64EXT, arg_6945: GLuint64EXT, arg_6946: GLuint64EXT) void {
    return epoxy_glProgramUniform3ui64NV.?(arg_6942, arg_6943, arg_6944, arg_6945, arg_6946);
}
pub inline fn glProgramUniform3ui64vARB(arg_6947: GLuint, arg_6948: GLint, arg_6949: GLsizei, arg_6950: [*c]const GLuint64) void {
    return epoxy_glProgramUniform3ui64vARB.?(arg_6947, arg_6948, arg_6949, arg_6950);
}
pub inline fn glProgramUniform3ui64vNV(arg_6951: GLuint, arg_6952: GLint, arg_6953: GLsizei, arg_6954: [*c]const GLuint64EXT) void {
    return epoxy_glProgramUniform3ui64vNV.?(arg_6951, arg_6952, arg_6953, arg_6954);
}
pub inline fn glProgramUniform3uiEXT(arg_6955: GLuint, arg_6956: GLint, arg_6957: GLuint, arg_6958: GLuint, arg_6959: GLuint) void {
    return epoxy_glProgramUniform3uiEXT.?(arg_6955, arg_6956, arg_6957, arg_6958, arg_6959);
}
pub inline fn glProgramUniform3uiv(arg_6960: GLuint, arg_6961: GLint, arg_6962: GLsizei, arg_6963: [*c]const GLuint) void {
    return epoxy_glProgramUniform3uiv.?(arg_6960, arg_6961, arg_6962, arg_6963);
}
pub inline fn glProgramUniform3uivEXT(arg_6964: GLuint, arg_6965: GLint, arg_6966: GLsizei, arg_6967: [*c]const GLuint) void {
    return epoxy_glProgramUniform3uivEXT.?(arg_6964, arg_6965, arg_6966, arg_6967);
}
pub inline fn glProgramUniform4d(arg_6968: GLuint, arg_6969: GLint, arg_6970: GLdouble, arg_6971: GLdouble, arg_6972: GLdouble, arg_6973: GLdouble) void {
    return epoxy_glProgramUniform4d.?(arg_6968, arg_6969, arg_6970, arg_6971, arg_6972, arg_6973);
}
pub inline fn glProgramUniform4dEXT(arg_6974: GLuint, arg_6975: GLint, arg_6976: GLdouble, arg_6977: GLdouble, arg_6978: GLdouble, arg_6979: GLdouble) void {
    return epoxy_glProgramUniform4dEXT.?(arg_6974, arg_6975, arg_6976, arg_6977, arg_6978, arg_6979);
}
pub inline fn glProgramUniform4dv(arg_6980: GLuint, arg_6981: GLint, arg_6982: GLsizei, arg_6983: [*c]const GLdouble) void {
    return epoxy_glProgramUniform4dv.?(arg_6980, arg_6981, arg_6982, arg_6983);
}
pub inline fn glProgramUniform4dvEXT(arg_6984: GLuint, arg_6985: GLint, arg_6986: GLsizei, arg_6987: [*c]const GLdouble) void {
    return epoxy_glProgramUniform4dvEXT.?(arg_6984, arg_6985, arg_6986, arg_6987);
}
pub inline fn glProgramUniform4f(arg_6988: GLuint, arg_6989: GLint, arg_6990: GLfloat, arg_6991: GLfloat, arg_6992: GLfloat, arg_6993: GLfloat) void {
    return epoxy_glProgramUniform4f.?(arg_6988, arg_6989, arg_6990, arg_6991, arg_6992, arg_6993);
}
pub inline fn glProgramUniform4fEXT(arg_6994: GLuint, arg_6995: GLint, arg_6996: GLfloat, arg_6997: GLfloat, arg_6998: GLfloat, arg_6999: GLfloat) void {
    return epoxy_glProgramUniform4fEXT.?(arg_6994, arg_6995, arg_6996, arg_6997, arg_6998, arg_6999);
}
pub inline fn glProgramUniform4fv(arg_7000: GLuint, arg_7001: GLint, arg_7002: GLsizei, arg_7003: [*c]const GLfloat) void {
    return epoxy_glProgramUniform4fv.?(arg_7000, arg_7001, arg_7002, arg_7003);
}
pub inline fn glProgramUniform4fvEXT(arg_7004: GLuint, arg_7005: GLint, arg_7006: GLsizei, arg_7007: [*c]const GLfloat) void {
    return epoxy_glProgramUniform4fvEXT.?(arg_7004, arg_7005, arg_7006, arg_7007);
}
pub inline fn glProgramUniform4i(arg_7008: GLuint, arg_7009: GLint, arg_7010: GLint, arg_7011: GLint, arg_7012: GLint, arg_7013: GLint) void {
    return epoxy_glProgramUniform4i.?(arg_7008, arg_7009, arg_7010, arg_7011, arg_7012, arg_7013);
}
pub inline fn glProgramUniform4i64ARB(arg_7014: GLuint, arg_7015: GLint, arg_7016: GLint64, arg_7017: GLint64, arg_7018: GLint64, arg_7019: GLint64) void {
    return epoxy_glProgramUniform4i64ARB.?(arg_7014, arg_7015, arg_7016, arg_7017, arg_7018, arg_7019);
}
pub inline fn glProgramUniform4i64NV(arg_7020: GLuint, arg_7021: GLint, arg_7022: GLint64EXT, arg_7023: GLint64EXT, arg_7024: GLint64EXT, arg_7025: GLint64EXT) void {
    return epoxy_glProgramUniform4i64NV.?(arg_7020, arg_7021, arg_7022, arg_7023, arg_7024, arg_7025);
}
pub inline fn glProgramUniform4i64vARB(arg_7026: GLuint, arg_7027: GLint, arg_7028: GLsizei, arg_7029: [*c]const GLint64) void {
    return epoxy_glProgramUniform4i64vARB.?(arg_7026, arg_7027, arg_7028, arg_7029);
}
pub inline fn glProgramUniform4i64vNV(arg_7030: GLuint, arg_7031: GLint, arg_7032: GLsizei, arg_7033: [*c]const GLint64EXT) void {
    return epoxy_glProgramUniform4i64vNV.?(arg_7030, arg_7031, arg_7032, arg_7033);
}
pub inline fn glProgramUniform4iEXT(arg_7034: GLuint, arg_7035: GLint, arg_7036: GLint, arg_7037: GLint, arg_7038: GLint, arg_7039: GLint) void {
    return epoxy_glProgramUniform4iEXT.?(arg_7034, arg_7035, arg_7036, arg_7037, arg_7038, arg_7039);
}
pub inline fn glProgramUniform4iv(arg_7040: GLuint, arg_7041: GLint, arg_7042: GLsizei, arg_7043: [*c]const GLint) void {
    return epoxy_glProgramUniform4iv.?(arg_7040, arg_7041, arg_7042, arg_7043);
}
pub inline fn glProgramUniform4ivEXT(arg_7044: GLuint, arg_7045: GLint, arg_7046: GLsizei, arg_7047: [*c]const GLint) void {
    return epoxy_glProgramUniform4ivEXT.?(arg_7044, arg_7045, arg_7046, arg_7047);
}
pub inline fn glProgramUniform4ui(arg_7048: GLuint, arg_7049: GLint, arg_7050: GLuint, arg_7051: GLuint, arg_7052: GLuint, arg_7053: GLuint) void {
    return epoxy_glProgramUniform4ui.?(arg_7048, arg_7049, arg_7050, arg_7051, arg_7052, arg_7053);
}
pub inline fn glProgramUniform4ui64ARB(arg_7054: GLuint, arg_7055: GLint, arg_7056: GLuint64, arg_7057: GLuint64, arg_7058: GLuint64, arg_7059: GLuint64) void {
    return epoxy_glProgramUniform4ui64ARB.?(arg_7054, arg_7055, arg_7056, arg_7057, arg_7058, arg_7059);
}
pub inline fn glProgramUniform4ui64NV(arg_7060: GLuint, arg_7061: GLint, arg_7062: GLuint64EXT, arg_7063: GLuint64EXT, arg_7064: GLuint64EXT, arg_7065: GLuint64EXT) void {
    return epoxy_glProgramUniform4ui64NV.?(arg_7060, arg_7061, arg_7062, arg_7063, arg_7064, arg_7065);
}
pub inline fn glProgramUniform4ui64vARB(arg_7066: GLuint, arg_7067: GLint, arg_7068: GLsizei, arg_7069: [*c]const GLuint64) void {
    return epoxy_glProgramUniform4ui64vARB.?(arg_7066, arg_7067, arg_7068, arg_7069);
}
pub inline fn glProgramUniform4ui64vNV(arg_7070: GLuint, arg_7071: GLint, arg_7072: GLsizei, arg_7073: [*c]const GLuint64EXT) void {
    return epoxy_glProgramUniform4ui64vNV.?(arg_7070, arg_7071, arg_7072, arg_7073);
}
pub inline fn glProgramUniform4uiEXT(arg_7074: GLuint, arg_7075: GLint, arg_7076: GLuint, arg_7077: GLuint, arg_7078: GLuint, arg_7079: GLuint) void {
    return epoxy_glProgramUniform4uiEXT.?(arg_7074, arg_7075, arg_7076, arg_7077, arg_7078, arg_7079);
}
pub inline fn glProgramUniform4uiv(arg_7080: GLuint, arg_7081: GLint, arg_7082: GLsizei, arg_7083: [*c]const GLuint) void {
    return epoxy_glProgramUniform4uiv.?(arg_7080, arg_7081, arg_7082, arg_7083);
}
pub inline fn glProgramUniform4uivEXT(arg_7084: GLuint, arg_7085: GLint, arg_7086: GLsizei, arg_7087: [*c]const GLuint) void {
    return epoxy_glProgramUniform4uivEXT.?(arg_7084, arg_7085, arg_7086, arg_7087);
}
pub inline fn glProgramUniformHandleui64ARB(arg_7088: GLuint, arg_7089: GLint, arg_7090: GLuint64) void {
    return epoxy_glProgramUniformHandleui64ARB.?(arg_7088, arg_7089, arg_7090);
}
pub inline fn glProgramUniformHandleui64IMG(arg_7091: GLuint, arg_7092: GLint, arg_7093: GLuint64) void {
    return epoxy_glProgramUniformHandleui64IMG.?(arg_7091, arg_7092, arg_7093);
}
pub inline fn glProgramUniformHandleui64NV(arg_7094: GLuint, arg_7095: GLint, arg_7096: GLuint64) void {
    return epoxy_glProgramUniformHandleui64NV.?(arg_7094, arg_7095, arg_7096);
}
pub inline fn glProgramUniformHandleui64vARB(arg_7097: GLuint, arg_7098: GLint, arg_7099: GLsizei, arg_7100: [*c]const GLuint64) void {
    return epoxy_glProgramUniformHandleui64vARB.?(arg_7097, arg_7098, arg_7099, arg_7100);
}
pub inline fn glProgramUniformHandleui64vIMG(arg_7101: GLuint, arg_7102: GLint, arg_7103: GLsizei, arg_7104: [*c]const GLuint64) void {
    return epoxy_glProgramUniformHandleui64vIMG.?(arg_7101, arg_7102, arg_7103, arg_7104);
}
pub inline fn glProgramUniformHandleui64vNV(arg_7105: GLuint, arg_7106: GLint, arg_7107: GLsizei, arg_7108: [*c]const GLuint64) void {
    return epoxy_glProgramUniformHandleui64vNV.?(arg_7105, arg_7106, arg_7107, arg_7108);
}
pub inline fn glProgramUniformMatrix2dv(arg_7109: GLuint, arg_7110: GLint, arg_7111: GLsizei, arg_7112: GLboolean, arg_7113: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2dv.?(arg_7109, arg_7110, arg_7111, arg_7112, arg_7113);
}
pub inline fn glProgramUniformMatrix2dvEXT(arg_7114: GLuint, arg_7115: GLint, arg_7116: GLsizei, arg_7117: GLboolean, arg_7118: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2dvEXT.?(arg_7114, arg_7115, arg_7116, arg_7117, arg_7118);
}
pub inline fn glProgramUniformMatrix2fv(arg_7119: GLuint, arg_7120: GLint, arg_7121: GLsizei, arg_7122: GLboolean, arg_7123: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2fv.?(arg_7119, arg_7120, arg_7121, arg_7122, arg_7123);
}
pub inline fn glProgramUniformMatrix2fvEXT(arg_7124: GLuint, arg_7125: GLint, arg_7126: GLsizei, arg_7127: GLboolean, arg_7128: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2fvEXT.?(arg_7124, arg_7125, arg_7126, arg_7127, arg_7128);
}
pub inline fn glProgramUniformMatrix2x3dv(arg_7129: GLuint, arg_7130: GLint, arg_7131: GLsizei, arg_7132: GLboolean, arg_7133: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2x3dv.?(arg_7129, arg_7130, arg_7131, arg_7132, arg_7133);
}
pub inline fn glProgramUniformMatrix2x3dvEXT(arg_7134: GLuint, arg_7135: GLint, arg_7136: GLsizei, arg_7137: GLboolean, arg_7138: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2x3dvEXT.?(arg_7134, arg_7135, arg_7136, arg_7137, arg_7138);
}
pub inline fn glProgramUniformMatrix2x3fv(arg_7139: GLuint, arg_7140: GLint, arg_7141: GLsizei, arg_7142: GLboolean, arg_7143: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2x3fv.?(arg_7139, arg_7140, arg_7141, arg_7142, arg_7143);
}
pub inline fn glProgramUniformMatrix2x3fvEXT(arg_7144: GLuint, arg_7145: GLint, arg_7146: GLsizei, arg_7147: GLboolean, arg_7148: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2x3fvEXT.?(arg_7144, arg_7145, arg_7146, arg_7147, arg_7148);
}
pub inline fn glProgramUniformMatrix2x4dv(arg_7149: GLuint, arg_7150: GLint, arg_7151: GLsizei, arg_7152: GLboolean, arg_7153: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2x4dv.?(arg_7149, arg_7150, arg_7151, arg_7152, arg_7153);
}
pub inline fn glProgramUniformMatrix2x4dvEXT(arg_7154: GLuint, arg_7155: GLint, arg_7156: GLsizei, arg_7157: GLboolean, arg_7158: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix2x4dvEXT.?(arg_7154, arg_7155, arg_7156, arg_7157, arg_7158);
}
pub inline fn glProgramUniformMatrix2x4fv(arg_7159: GLuint, arg_7160: GLint, arg_7161: GLsizei, arg_7162: GLboolean, arg_7163: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2x4fv.?(arg_7159, arg_7160, arg_7161, arg_7162, arg_7163);
}
pub inline fn glProgramUniformMatrix2x4fvEXT(arg_7164: GLuint, arg_7165: GLint, arg_7166: GLsizei, arg_7167: GLboolean, arg_7168: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix2x4fvEXT.?(arg_7164, arg_7165, arg_7166, arg_7167, arg_7168);
}
pub inline fn glProgramUniformMatrix3dv(arg_7169: GLuint, arg_7170: GLint, arg_7171: GLsizei, arg_7172: GLboolean, arg_7173: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3dv.?(arg_7169, arg_7170, arg_7171, arg_7172, arg_7173);
}
pub inline fn glProgramUniformMatrix3dvEXT(arg_7174: GLuint, arg_7175: GLint, arg_7176: GLsizei, arg_7177: GLboolean, arg_7178: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3dvEXT.?(arg_7174, arg_7175, arg_7176, arg_7177, arg_7178);
}
pub inline fn glProgramUniformMatrix3fv(arg_7179: GLuint, arg_7180: GLint, arg_7181: GLsizei, arg_7182: GLboolean, arg_7183: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3fv.?(arg_7179, arg_7180, arg_7181, arg_7182, arg_7183);
}
pub inline fn glProgramUniformMatrix3fvEXT(arg_7184: GLuint, arg_7185: GLint, arg_7186: GLsizei, arg_7187: GLboolean, arg_7188: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3fvEXT.?(arg_7184, arg_7185, arg_7186, arg_7187, arg_7188);
}
pub inline fn glProgramUniformMatrix3x2dv(arg_7189: GLuint, arg_7190: GLint, arg_7191: GLsizei, arg_7192: GLboolean, arg_7193: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3x2dv.?(arg_7189, arg_7190, arg_7191, arg_7192, arg_7193);
}
pub inline fn glProgramUniformMatrix3x2dvEXT(arg_7194: GLuint, arg_7195: GLint, arg_7196: GLsizei, arg_7197: GLboolean, arg_7198: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3x2dvEXT.?(arg_7194, arg_7195, arg_7196, arg_7197, arg_7198);
}
pub inline fn glProgramUniformMatrix3x2fv(arg_7199: GLuint, arg_7200: GLint, arg_7201: GLsizei, arg_7202: GLboolean, arg_7203: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3x2fv.?(arg_7199, arg_7200, arg_7201, arg_7202, arg_7203);
}
pub inline fn glProgramUniformMatrix3x2fvEXT(arg_7204: GLuint, arg_7205: GLint, arg_7206: GLsizei, arg_7207: GLboolean, arg_7208: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3x2fvEXT.?(arg_7204, arg_7205, arg_7206, arg_7207, arg_7208);
}
pub inline fn glProgramUniformMatrix3x4dv(arg_7209: GLuint, arg_7210: GLint, arg_7211: GLsizei, arg_7212: GLboolean, arg_7213: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3x4dv.?(arg_7209, arg_7210, arg_7211, arg_7212, arg_7213);
}
pub inline fn glProgramUniformMatrix3x4dvEXT(arg_7214: GLuint, arg_7215: GLint, arg_7216: GLsizei, arg_7217: GLboolean, arg_7218: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix3x4dvEXT.?(arg_7214, arg_7215, arg_7216, arg_7217, arg_7218);
}
pub inline fn glProgramUniformMatrix3x4fv(arg_7219: GLuint, arg_7220: GLint, arg_7221: GLsizei, arg_7222: GLboolean, arg_7223: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3x4fv.?(arg_7219, arg_7220, arg_7221, arg_7222, arg_7223);
}
pub inline fn glProgramUniformMatrix3x4fvEXT(arg_7224: GLuint, arg_7225: GLint, arg_7226: GLsizei, arg_7227: GLboolean, arg_7228: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix3x4fvEXT.?(arg_7224, arg_7225, arg_7226, arg_7227, arg_7228);
}
pub inline fn glProgramUniformMatrix4dv(arg_7229: GLuint, arg_7230: GLint, arg_7231: GLsizei, arg_7232: GLboolean, arg_7233: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4dv.?(arg_7229, arg_7230, arg_7231, arg_7232, arg_7233);
}
pub inline fn glProgramUniformMatrix4dvEXT(arg_7234: GLuint, arg_7235: GLint, arg_7236: GLsizei, arg_7237: GLboolean, arg_7238: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4dvEXT.?(arg_7234, arg_7235, arg_7236, arg_7237, arg_7238);
}
pub inline fn glProgramUniformMatrix4fv(arg_7239: GLuint, arg_7240: GLint, arg_7241: GLsizei, arg_7242: GLboolean, arg_7243: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4fv.?(arg_7239, arg_7240, arg_7241, arg_7242, arg_7243);
}
pub inline fn glProgramUniformMatrix4fvEXT(arg_7244: GLuint, arg_7245: GLint, arg_7246: GLsizei, arg_7247: GLboolean, arg_7248: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4fvEXT.?(arg_7244, arg_7245, arg_7246, arg_7247, arg_7248);
}
pub inline fn glProgramUniformMatrix4x2dv(arg_7249: GLuint, arg_7250: GLint, arg_7251: GLsizei, arg_7252: GLboolean, arg_7253: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4x2dv.?(arg_7249, arg_7250, arg_7251, arg_7252, arg_7253);
}
pub inline fn glProgramUniformMatrix4x2dvEXT(arg_7254: GLuint, arg_7255: GLint, arg_7256: GLsizei, arg_7257: GLboolean, arg_7258: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4x2dvEXT.?(arg_7254, arg_7255, arg_7256, arg_7257, arg_7258);
}
pub inline fn glProgramUniformMatrix4x2fv(arg_7259: GLuint, arg_7260: GLint, arg_7261: GLsizei, arg_7262: GLboolean, arg_7263: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4x2fv.?(arg_7259, arg_7260, arg_7261, arg_7262, arg_7263);
}
pub inline fn glProgramUniformMatrix4x2fvEXT(arg_7264: GLuint, arg_7265: GLint, arg_7266: GLsizei, arg_7267: GLboolean, arg_7268: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4x2fvEXT.?(arg_7264, arg_7265, arg_7266, arg_7267, arg_7268);
}
pub inline fn glProgramUniformMatrix4x3dv(arg_7269: GLuint, arg_7270: GLint, arg_7271: GLsizei, arg_7272: GLboolean, arg_7273: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4x3dv.?(arg_7269, arg_7270, arg_7271, arg_7272, arg_7273);
}
pub inline fn glProgramUniformMatrix4x3dvEXT(arg_7274: GLuint, arg_7275: GLint, arg_7276: GLsizei, arg_7277: GLboolean, arg_7278: [*c]const GLdouble) void {
    return epoxy_glProgramUniformMatrix4x3dvEXT.?(arg_7274, arg_7275, arg_7276, arg_7277, arg_7278);
}
pub inline fn glProgramUniformMatrix4x3fv(arg_7279: GLuint, arg_7280: GLint, arg_7281: GLsizei, arg_7282: GLboolean, arg_7283: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4x3fv.?(arg_7279, arg_7280, arg_7281, arg_7282, arg_7283);
}
pub inline fn glProgramUniformMatrix4x3fvEXT(arg_7284: GLuint, arg_7285: GLint, arg_7286: GLsizei, arg_7287: GLboolean, arg_7288: [*c]const GLfloat) void {
    return epoxy_glProgramUniformMatrix4x3fvEXT.?(arg_7284, arg_7285, arg_7286, arg_7287, arg_7288);
}
pub inline fn glProgramUniformui64NV(arg_7289: GLuint, arg_7290: GLint, arg_7291: GLuint64EXT) void {
    return epoxy_glProgramUniformui64NV.?(arg_7289, arg_7290, arg_7291);
}
pub inline fn glProgramUniformui64vNV(arg_7292: GLuint, arg_7293: GLint, arg_7294: GLsizei, arg_7295: [*c]const GLuint64EXT) void {
    return epoxy_glProgramUniformui64vNV.?(arg_7292, arg_7293, arg_7294, arg_7295);
}
pub inline fn glProgramVertexLimitNV(arg_7296: GLenum, arg_7297: GLint) void {
    return epoxy_glProgramVertexLimitNV.?(arg_7296, arg_7297);
}
pub inline fn glProvokingVertex(arg_7298: GLenum) void {
    return epoxy_glProvokingVertex.?(arg_7298);
}
pub inline fn glProvokingVertexEXT(arg_7299: GLenum) void {
    return epoxy_glProvokingVertexEXT.?(arg_7299);
}
pub inline fn glPushAttrib(arg_7300: GLbitfield) void {
    return epoxy_glPushAttrib.?(arg_7300);
}
pub inline fn glPushClientAttrib(arg_7301: GLbitfield) void {
    return epoxy_glPushClientAttrib.?(arg_7301);
}
pub inline fn glPushClientAttribDefaultEXT(arg_7302: GLbitfield) void {
    return epoxy_glPushClientAttribDefaultEXT.?(arg_7302);
}
pub inline fn glPushDebugGroup(arg_7303: GLenum, arg_7304: GLuint, arg_7305: GLsizei, arg_7306: [*c]const GLchar) void {
    return epoxy_glPushDebugGroup.?(arg_7303, arg_7304, arg_7305, arg_7306);
}
pub inline fn glPushDebugGroupKHR(arg_7307: GLenum, arg_7308: GLuint, arg_7309: GLsizei, arg_7310: [*c]const GLchar) void {
    return epoxy_glPushDebugGroupKHR.?(arg_7307, arg_7308, arg_7309, arg_7310);
}
pub inline fn glPushGroupMarkerEXT(arg_7311: GLsizei, arg_7312: [*c]const GLchar) void {
    return epoxy_glPushGroupMarkerEXT.?(arg_7311, arg_7312);
}
pub inline fn glPushMatrix() void {
    return epoxy_glPushMatrix.?();
}
pub inline fn glPushName(arg_7313: GLuint) void {
    return epoxy_glPushName.?(arg_7313);
}
pub inline fn glQueryCounter(arg_7314: GLuint, arg_7315: GLenum) void {
    return epoxy_glQueryCounter.?(arg_7314, arg_7315);
}
pub inline fn glQueryCounterEXT(arg_7316: GLuint, arg_7317: GLenum) void {
    return epoxy_glQueryCounterEXT.?(arg_7316, arg_7317);
}
pub inline fn glQueryMatrixxOES(arg_7318: [*c]GLfixed, arg_7319: [*c]GLint) GLbitfield {
    return epoxy_glQueryMatrixxOES.?(arg_7318, arg_7319);
}
pub inline fn glQueryObjectParameteruiAMD(arg_7320: GLenum, arg_7321: GLuint, arg_7322: GLenum, arg_7323: GLuint) void {
    return epoxy_glQueryObjectParameteruiAMD.?(arg_7320, arg_7321, arg_7322, arg_7323);
}
pub inline fn glQueryResourceNV(arg_7324: GLenum, arg_7325: GLint, arg_7326: GLuint, arg_7327: [*c]GLint) GLint {
    return epoxy_glQueryResourceNV.?(arg_7324, arg_7325, arg_7326, arg_7327);
}
pub inline fn glQueryResourceTagNV(arg_7328: GLint, arg_7329: [*c]const GLchar) void {
    return epoxy_glQueryResourceTagNV.?(arg_7328, arg_7329);
}
pub inline fn glRasterPos2d(arg_7330: GLdouble, arg_7331: GLdouble) void {
    return epoxy_glRasterPos2d.?(arg_7330, arg_7331);
}
pub inline fn glRasterPos2dv(arg_7332: [*c]const GLdouble) void {
    return epoxy_glRasterPos2dv.?(arg_7332);
}
pub inline fn glRasterPos2f(arg_7333: GLfloat, arg_7334: GLfloat) void {
    return epoxy_glRasterPos2f.?(arg_7333, arg_7334);
}
pub inline fn glRasterPos2fv(arg_7335: [*c]const GLfloat) void {
    return epoxy_glRasterPos2fv.?(arg_7335);
}
pub inline fn glRasterPos2i(arg_7336: GLint, arg_7337: GLint) void {
    return epoxy_glRasterPos2i.?(arg_7336, arg_7337);
}
pub inline fn glRasterPos2iv(arg_7338: [*c]const GLint) void {
    return epoxy_glRasterPos2iv.?(arg_7338);
}
pub inline fn glRasterPos2s(arg_7339: GLshort, arg_7340: GLshort) void {
    return epoxy_glRasterPos2s.?(arg_7339, arg_7340);
}
pub inline fn glRasterPos2sv(arg_7341: [*c]const GLshort) void {
    return epoxy_glRasterPos2sv.?(arg_7341);
}
pub inline fn glRasterPos2xOES(arg_7342: GLfixed, arg_7343: GLfixed) void {
    return epoxy_glRasterPos2xOES.?(arg_7342, arg_7343);
}
pub inline fn glRasterPos2xvOES(arg_7344: [*c]const GLfixed) void {
    return epoxy_glRasterPos2xvOES.?(arg_7344);
}
pub inline fn glRasterPos3d(arg_7345: GLdouble, arg_7346: GLdouble, arg_7347: GLdouble) void {
    return epoxy_glRasterPos3d.?(arg_7345, arg_7346, arg_7347);
}
pub inline fn glRasterPos3dv(arg_7348: [*c]const GLdouble) void {
    return epoxy_glRasterPos3dv.?(arg_7348);
}
pub inline fn glRasterPos3f(arg_7349: GLfloat, arg_7350: GLfloat, arg_7351: GLfloat) void {
    return epoxy_glRasterPos3f.?(arg_7349, arg_7350, arg_7351);
}
pub inline fn glRasterPos3fv(arg_7352: [*c]const GLfloat) void {
    return epoxy_glRasterPos3fv.?(arg_7352);
}
pub inline fn glRasterPos3i(arg_7353: GLint, arg_7354: GLint, arg_7355: GLint) void {
    return epoxy_glRasterPos3i.?(arg_7353, arg_7354, arg_7355);
}
pub inline fn glRasterPos3iv(arg_7356: [*c]const GLint) void {
    return epoxy_glRasterPos3iv.?(arg_7356);
}
pub inline fn glRasterPos3s(arg_7357: GLshort, arg_7358: GLshort, arg_7359: GLshort) void {
    return epoxy_glRasterPos3s.?(arg_7357, arg_7358, arg_7359);
}
pub inline fn glRasterPos3sv(arg_7360: [*c]const GLshort) void {
    return epoxy_glRasterPos3sv.?(arg_7360);
}
pub inline fn glRasterPos3xOES(arg_7361: GLfixed, arg_7362: GLfixed, arg_7363: GLfixed) void {
    return epoxy_glRasterPos3xOES.?(arg_7361, arg_7362, arg_7363);
}
pub inline fn glRasterPos3xvOES(arg_7364: [*c]const GLfixed) void {
    return epoxy_glRasterPos3xvOES.?(arg_7364);
}
pub inline fn glRasterPos4d(arg_7365: GLdouble, arg_7366: GLdouble, arg_7367: GLdouble, arg_7368: GLdouble) void {
    return epoxy_glRasterPos4d.?(arg_7365, arg_7366, arg_7367, arg_7368);
}
pub inline fn glRasterPos4dv(arg_7369: [*c]const GLdouble) void {
    return epoxy_glRasterPos4dv.?(arg_7369);
}
pub inline fn glRasterPos4f(arg_7370: GLfloat, arg_7371: GLfloat, arg_7372: GLfloat, arg_7373: GLfloat) void {
    return epoxy_glRasterPos4f.?(arg_7370, arg_7371, arg_7372, arg_7373);
}
pub inline fn glRasterPos4fv(arg_7374: [*c]const GLfloat) void {
    return epoxy_glRasterPos4fv.?(arg_7374);
}
pub inline fn glRasterPos4i(arg_7375: GLint, arg_7376: GLint, arg_7377: GLint, arg_7378: GLint) void {
    return epoxy_glRasterPos4i.?(arg_7375, arg_7376, arg_7377, arg_7378);
}
pub inline fn glRasterPos4iv(arg_7379: [*c]const GLint) void {
    return epoxy_glRasterPos4iv.?(arg_7379);
}
pub inline fn glRasterPos4s(arg_7380: GLshort, arg_7381: GLshort, arg_7382: GLshort, arg_7383: GLshort) void {
    return epoxy_glRasterPos4s.?(arg_7380, arg_7381, arg_7382, arg_7383);
}
pub inline fn glRasterPos4sv(arg_7384: [*c]const GLshort) void {
    return epoxy_glRasterPos4sv.?(arg_7384);
}
pub inline fn glRasterPos4xOES(arg_7385: GLfixed, arg_7386: GLfixed, arg_7387: GLfixed, arg_7388: GLfixed) void {
    return epoxy_glRasterPos4xOES.?(arg_7385, arg_7386, arg_7387, arg_7388);
}
pub inline fn glRasterPos4xvOES(arg_7389: [*c]const GLfixed) void {
    return epoxy_glRasterPos4xvOES.?(arg_7389);
}
pub inline fn glRasterSamplesEXT(arg_7390: GLuint, arg_7391: GLboolean) void {
    return epoxy_glRasterSamplesEXT.?(arg_7390, arg_7391);
}
pub inline fn glReadBuffer(arg_7392: GLenum) void {
    return epoxy_glReadBuffer.?(arg_7392);
}
pub inline fn glReadBufferIndexedEXT(arg_7393: GLenum, arg_7394: GLint) void {
    return epoxy_glReadBufferIndexedEXT.?(arg_7393, arg_7394);
}
pub inline fn glReadBufferNV(arg_7395: GLenum) void {
    return epoxy_glReadBufferNV.?(arg_7395);
}
pub inline fn glReadInstrumentsSGIX(arg_7396: GLint) void {
    return epoxy_glReadInstrumentsSGIX.?(arg_7396);
}
pub inline fn glReadPixels(arg_7397: GLint, arg_7398: GLint, arg_7399: GLsizei, arg_7400: GLsizei, arg_7401: GLenum, arg_7402: GLenum, arg_7403: ?*anyopaque) void {
    return epoxy_glReadPixels.?(arg_7397, arg_7398, arg_7399, arg_7400, arg_7401, arg_7402, arg_7403);
}
pub inline fn glReadnPixels(arg_7404: GLint, arg_7405: GLint, arg_7406: GLsizei, arg_7407: GLsizei, arg_7408: GLenum, arg_7409: GLenum, arg_7410: GLsizei, arg_7411: ?*anyopaque) void {
    return epoxy_glReadnPixels.?(arg_7404, arg_7405, arg_7406, arg_7407, arg_7408, arg_7409, arg_7410, arg_7411);
}
pub inline fn glReadnPixelsARB(arg_7412: GLint, arg_7413: GLint, arg_7414: GLsizei, arg_7415: GLsizei, arg_7416: GLenum, arg_7417: GLenum, arg_7418: GLsizei, arg_7419: ?*anyopaque) void {
    return epoxy_glReadnPixelsARB.?(arg_7412, arg_7413, arg_7414, arg_7415, arg_7416, arg_7417, arg_7418, arg_7419);
}
pub inline fn glReadnPixelsEXT(arg_7420: GLint, arg_7421: GLint, arg_7422: GLsizei, arg_7423: GLsizei, arg_7424: GLenum, arg_7425: GLenum, arg_7426: GLsizei, arg_7427: ?*anyopaque) void {
    return epoxy_glReadnPixelsEXT.?(arg_7420, arg_7421, arg_7422, arg_7423, arg_7424, arg_7425, arg_7426, arg_7427);
}
pub inline fn glReadnPixelsKHR(arg_7428: GLint, arg_7429: GLint, arg_7430: GLsizei, arg_7431: GLsizei, arg_7432: GLenum, arg_7433: GLenum, arg_7434: GLsizei, arg_7435: ?*anyopaque) void {
    return epoxy_glReadnPixelsKHR.?(arg_7428, arg_7429, arg_7430, arg_7431, arg_7432, arg_7433, arg_7434, arg_7435);
}
pub inline fn glRectd(arg_7436: GLdouble, arg_7437: GLdouble, arg_7438: GLdouble, arg_7439: GLdouble) void {
    return epoxy_glRectd.?(arg_7436, arg_7437, arg_7438, arg_7439);
}
pub inline fn glRectdv(arg_7440: [*c]const GLdouble, arg_7441: [*c]const GLdouble) void {
    return epoxy_glRectdv.?(arg_7440, arg_7441);
}
pub inline fn glRectf(arg_7442: GLfloat, arg_7443: GLfloat, arg_7444: GLfloat, arg_7445: GLfloat) void {
    return epoxy_glRectf.?(arg_7442, arg_7443, arg_7444, arg_7445);
}
pub inline fn glRectfv(arg_7446: [*c]const GLfloat, arg_7447: [*c]const GLfloat) void {
    return epoxy_glRectfv.?(arg_7446, arg_7447);
}
pub inline fn glRecti(arg_7448: GLint, arg_7449: GLint, arg_7450: GLint, arg_7451: GLint) void {
    return epoxy_glRecti.?(arg_7448, arg_7449, arg_7450, arg_7451);
}
pub inline fn glRectiv(arg_7452: [*c]const GLint, arg_7453: [*c]const GLint) void {
    return epoxy_glRectiv.?(arg_7452, arg_7453);
}
pub inline fn glRects(arg_7454: GLshort, arg_7455: GLshort, arg_7456: GLshort, arg_7457: GLshort) void {
    return epoxy_glRects.?(arg_7454, arg_7455, arg_7456, arg_7457);
}
pub inline fn glRectsv(arg_7458: [*c]const GLshort, arg_7459: [*c]const GLshort) void {
    return epoxy_glRectsv.?(arg_7458, arg_7459);
}
pub inline fn glRectxOES(arg_7460: GLfixed, arg_7461: GLfixed, arg_7462: GLfixed, arg_7463: GLfixed) void {
    return epoxy_glRectxOES.?(arg_7460, arg_7461, arg_7462, arg_7463);
}
pub inline fn glRectxvOES(arg_7464: [*c]const GLfixed, arg_7465: [*c]const GLfixed) void {
    return epoxy_glRectxvOES.?(arg_7464, arg_7465);
}
pub inline fn glReferencePlaneSGIX(arg_7466: [*c]const GLdouble) void {
    return epoxy_glReferencePlaneSGIX.?(arg_7466);
}
pub inline fn glReleaseKeyedMutexWin32EXT(arg_7467: GLuint, arg_7468: GLuint64) GLboolean {
    return epoxy_glReleaseKeyedMutexWin32EXT.?(arg_7467, arg_7468);
}
pub inline fn glReleaseShaderCompiler() void {
    return epoxy_glReleaseShaderCompiler.?();
}
pub inline fn glRenderGpuMaskNV(arg_7469: GLbitfield) void {
    return epoxy_glRenderGpuMaskNV.?(arg_7469);
}
pub inline fn glRenderMode(arg_7470: GLenum) GLint {
    return epoxy_glRenderMode.?(arg_7470);
}
pub inline fn glRenderbufferStorage(arg_7471: GLenum, arg_7472: GLenum, arg_7473: GLsizei, arg_7474: GLsizei) void {
    return epoxy_glRenderbufferStorage.?(arg_7471, arg_7472, arg_7473, arg_7474);
}
pub inline fn glRenderbufferStorageEXT(arg_7475: GLenum, arg_7476: GLenum, arg_7477: GLsizei, arg_7478: GLsizei) void {
    return epoxy_glRenderbufferStorageEXT.?(arg_7475, arg_7476, arg_7477, arg_7478);
}
pub inline fn glRenderbufferStorageMultisample(arg_7479: GLenum, arg_7480: GLsizei, arg_7481: GLenum, arg_7482: GLsizei, arg_7483: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisample.?(arg_7479, arg_7480, arg_7481, arg_7482, arg_7483);
}
pub inline fn glRenderbufferStorageMultisampleANGLE(arg_7484: GLenum, arg_7485: GLsizei, arg_7486: GLenum, arg_7487: GLsizei, arg_7488: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleANGLE.?(arg_7484, arg_7485, arg_7486, arg_7487, arg_7488);
}
pub inline fn glRenderbufferStorageMultisampleAPPLE(arg_7489: GLenum, arg_7490: GLsizei, arg_7491: GLenum, arg_7492: GLsizei, arg_7493: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleAPPLE.?(arg_7489, arg_7490, arg_7491, arg_7492, arg_7493);
}
pub inline fn glRenderbufferStorageMultisampleAdvancedAMD(arg_7494: GLenum, arg_7495: GLsizei, arg_7496: GLsizei, arg_7497: GLenum, arg_7498: GLsizei, arg_7499: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleAdvancedAMD.?(arg_7494, arg_7495, arg_7496, arg_7497, arg_7498, arg_7499);
}
pub inline fn glRenderbufferStorageMultisampleCoverageNV(arg_7500: GLenum, arg_7501: GLsizei, arg_7502: GLsizei, arg_7503: GLenum, arg_7504: GLsizei, arg_7505: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleCoverageNV.?(arg_7500, arg_7501, arg_7502, arg_7503, arg_7504, arg_7505);
}
pub inline fn glRenderbufferStorageMultisampleEXT(arg_7506: GLenum, arg_7507: GLsizei, arg_7508: GLenum, arg_7509: GLsizei, arg_7510: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleEXT.?(arg_7506, arg_7507, arg_7508, arg_7509, arg_7510);
}
pub inline fn glRenderbufferStorageMultisampleIMG(arg_7511: GLenum, arg_7512: GLsizei, arg_7513: GLenum, arg_7514: GLsizei, arg_7515: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleIMG.?(arg_7511, arg_7512, arg_7513, arg_7514, arg_7515);
}
pub inline fn glRenderbufferStorageMultisampleNV(arg_7516: GLenum, arg_7517: GLsizei, arg_7518: GLenum, arg_7519: GLsizei, arg_7520: GLsizei) void {
    return epoxy_glRenderbufferStorageMultisampleNV.?(arg_7516, arg_7517, arg_7518, arg_7519, arg_7520);
}
pub inline fn glRenderbufferStorageOES(arg_7521: GLenum, arg_7522: GLenum, arg_7523: GLsizei, arg_7524: GLsizei) void {
    return epoxy_glRenderbufferStorageOES.?(arg_7521, arg_7522, arg_7523, arg_7524);
}
pub inline fn glReplacementCodePointerSUN(arg_7525: GLenum, arg_7526: GLsizei, arg_7527: [*c]?*const anyopaque) void {
    return epoxy_glReplacementCodePointerSUN.?(arg_7525, arg_7526, arg_7527);
}
pub inline fn glReplacementCodeubSUN(arg_7528: GLubyte) void {
    return epoxy_glReplacementCodeubSUN.?(arg_7528);
}
pub inline fn glReplacementCodeubvSUN(arg_7529: [*c]const GLubyte) void {
    return epoxy_glReplacementCodeubvSUN.?(arg_7529);
}
pub inline fn glReplacementCodeuiColor3fVertex3fSUN(arg_7530: GLuint, arg_7531: GLfloat, arg_7532: GLfloat, arg_7533: GLfloat, arg_7534: GLfloat, arg_7535: GLfloat, arg_7536: GLfloat) void {
    return epoxy_glReplacementCodeuiColor3fVertex3fSUN.?(arg_7530, arg_7531, arg_7532, arg_7533, arg_7534, arg_7535, arg_7536);
}
pub inline fn glReplacementCodeuiColor3fVertex3fvSUN(arg_7537: [*c]const GLuint, arg_7538: [*c]const GLfloat, arg_7539: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiColor3fVertex3fvSUN.?(arg_7537, arg_7538, arg_7539);
}
pub inline fn glReplacementCodeuiColor4fNormal3fVertex3fSUN(arg_7540: GLuint, arg_7541: GLfloat, arg_7542: GLfloat, arg_7543: GLfloat, arg_7544: GLfloat, arg_7545: GLfloat, arg_7546: GLfloat, arg_7547: GLfloat, arg_7548: GLfloat, arg_7549: GLfloat, arg_7550: GLfloat) void {
    return epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN.?(arg_7540, arg_7541, arg_7542, arg_7543, arg_7544, arg_7545, arg_7546, arg_7547, arg_7548, arg_7549, arg_7550);
}
pub inline fn glReplacementCodeuiColor4fNormal3fVertex3fvSUN(arg_7551: [*c]const GLuint, arg_7552: [*c]const GLfloat, arg_7553: [*c]const GLfloat, arg_7554: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN.?(arg_7551, arg_7552, arg_7553, arg_7554);
}
pub inline fn glReplacementCodeuiColor4ubVertex3fSUN(arg_7555: GLuint, arg_7556: GLubyte, arg_7557: GLubyte, arg_7558: GLubyte, arg_7559: GLubyte, arg_7560: GLfloat, arg_7561: GLfloat, arg_7562: GLfloat) void {
    return epoxy_glReplacementCodeuiColor4ubVertex3fSUN.?(arg_7555, arg_7556, arg_7557, arg_7558, arg_7559, arg_7560, arg_7561, arg_7562);
}
pub inline fn glReplacementCodeuiColor4ubVertex3fvSUN(arg_7563: [*c]const GLuint, arg_7564: [*c]const GLubyte, arg_7565: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiColor4ubVertex3fvSUN.?(arg_7563, arg_7564, arg_7565);
}
pub inline fn glReplacementCodeuiNormal3fVertex3fSUN(arg_7566: GLuint, arg_7567: GLfloat, arg_7568: GLfloat, arg_7569: GLfloat, arg_7570: GLfloat, arg_7571: GLfloat, arg_7572: GLfloat) void {
    return epoxy_glReplacementCodeuiNormal3fVertex3fSUN.?(arg_7566, arg_7567, arg_7568, arg_7569, arg_7570, arg_7571, arg_7572);
}
pub inline fn glReplacementCodeuiNormal3fVertex3fvSUN(arg_7573: [*c]const GLuint, arg_7574: [*c]const GLfloat, arg_7575: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiNormal3fVertex3fvSUN.?(arg_7573, arg_7574, arg_7575);
}
pub inline fn glReplacementCodeuiSUN(arg_7576: GLuint) void {
    return epoxy_glReplacementCodeuiSUN.?(arg_7576);
}
pub inline fn glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(arg_7577: GLuint, arg_7578: GLfloat, arg_7579: GLfloat, arg_7580: GLfloat, arg_7581: GLfloat, arg_7582: GLfloat, arg_7583: GLfloat, arg_7584: GLfloat, arg_7585: GLfloat, arg_7586: GLfloat, arg_7587: GLfloat, arg_7588: GLfloat, arg_7589: GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN.?(arg_7577, arg_7578, arg_7579, arg_7580, arg_7581, arg_7582, arg_7583, arg_7584, arg_7585, arg_7586, arg_7587, arg_7588, arg_7589);
}
pub inline fn glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(arg_7590: [*c]const GLuint, arg_7591: [*c]const GLfloat, arg_7592: [*c]const GLfloat, arg_7593: [*c]const GLfloat, arg_7594: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN.?(arg_7590, arg_7591, arg_7592, arg_7593, arg_7594);
}
pub inline fn glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(arg_7595: GLuint, arg_7596: GLfloat, arg_7597: GLfloat, arg_7598: GLfloat, arg_7599: GLfloat, arg_7600: GLfloat, arg_7601: GLfloat, arg_7602: GLfloat, arg_7603: GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN.?(arg_7595, arg_7596, arg_7597, arg_7598, arg_7599, arg_7600, arg_7601, arg_7602, arg_7603);
}
pub inline fn glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(arg_7604: [*c]const GLuint, arg_7605: [*c]const GLfloat, arg_7606: [*c]const GLfloat, arg_7607: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN.?(arg_7604, arg_7605, arg_7606, arg_7607);
}
pub inline fn glReplacementCodeuiTexCoord2fVertex3fSUN(arg_7608: GLuint, arg_7609: GLfloat, arg_7610: GLfloat, arg_7611: GLfloat, arg_7612: GLfloat, arg_7613: GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN.?(arg_7608, arg_7609, arg_7610, arg_7611, arg_7612, arg_7613);
}
pub inline fn glReplacementCodeuiTexCoord2fVertex3fvSUN(arg_7614: [*c]const GLuint, arg_7615: [*c]const GLfloat, arg_7616: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN.?(arg_7614, arg_7615, arg_7616);
}
pub inline fn glReplacementCodeuiVertex3fSUN(arg_7617: GLuint, arg_7618: GLfloat, arg_7619: GLfloat, arg_7620: GLfloat) void {
    return epoxy_glReplacementCodeuiVertex3fSUN.?(arg_7617, arg_7618, arg_7619, arg_7620);
}
pub inline fn glReplacementCodeuiVertex3fvSUN(arg_7621: [*c]const GLuint, arg_7622: [*c]const GLfloat) void {
    return epoxy_glReplacementCodeuiVertex3fvSUN.?(arg_7621, arg_7622);
}
pub inline fn glReplacementCodeuivSUN(arg_7623: [*c]const GLuint) void {
    return epoxy_glReplacementCodeuivSUN.?(arg_7623);
}
pub inline fn glReplacementCodeusSUN(arg_7624: GLushort) void {
    return epoxy_glReplacementCodeusSUN.?(arg_7624);
}
pub inline fn glReplacementCodeusvSUN(arg_7625: [*c]const GLushort) void {
    return epoxy_glReplacementCodeusvSUN.?(arg_7625);
}
pub inline fn glRequestResidentProgramsNV(arg_7626: GLsizei, arg_7627: [*c]const GLuint) void {
    return epoxy_glRequestResidentProgramsNV.?(arg_7626, arg_7627);
}
pub inline fn glResetHistogram(arg_7628: GLenum) void {
    return epoxy_glResetHistogram.?(arg_7628);
}
pub inline fn glResetHistogramEXT(arg_7629: GLenum) void {
    return epoxy_glResetHistogramEXT.?(arg_7629);
}
pub inline fn glResetMemoryObjectParameterNV(arg_7630: GLuint, arg_7631: GLenum) void {
    return epoxy_glResetMemoryObjectParameterNV.?(arg_7630, arg_7631);
}
pub inline fn glResetMinmax(arg_7632: GLenum) void {
    return epoxy_glResetMinmax.?(arg_7632);
}
pub inline fn glResetMinmaxEXT(arg_7633: GLenum) void {
    return epoxy_glResetMinmaxEXT.?(arg_7633);
}
pub inline fn glResizeBuffersMESA() void {
    return epoxy_glResizeBuffersMESA.?();
}
pub inline fn glResolveDepthValuesNV() void {
    return epoxy_glResolveDepthValuesNV.?();
}
pub inline fn glResolveMultisampleFramebufferAPPLE() void {
    return epoxy_glResolveMultisampleFramebufferAPPLE.?();
}
pub inline fn glResumeTransformFeedback() void {
    return epoxy_glResumeTransformFeedback.?();
}
pub inline fn glResumeTransformFeedbackNV() void {
    return epoxy_glResumeTransformFeedbackNV.?();
}
pub inline fn glRotated(arg_7634: GLdouble, arg_7635: GLdouble, arg_7636: GLdouble, arg_7637: GLdouble) void {
    return epoxy_glRotated.?(arg_7634, arg_7635, arg_7636, arg_7637);
}
pub inline fn glRotatef(arg_7638: GLfloat, arg_7639: GLfloat, arg_7640: GLfloat, arg_7641: GLfloat) void {
    return epoxy_glRotatef.?(arg_7638, arg_7639, arg_7640, arg_7641);
}
pub inline fn glRotatex(arg_7642: GLfixed, arg_7643: GLfixed, arg_7644: GLfixed, arg_7645: GLfixed) void {
    return epoxy_glRotatex.?(arg_7642, arg_7643, arg_7644, arg_7645);
}
pub inline fn glRotatexOES(arg_7646: GLfixed, arg_7647: GLfixed, arg_7648: GLfixed, arg_7649: GLfixed) void {
    return epoxy_glRotatexOES.?(arg_7646, arg_7647, arg_7648, arg_7649);
}
pub inline fn glSampleCoverage(arg_7650: GLfloat, arg_7651: GLboolean) void {
    return epoxy_glSampleCoverage.?(arg_7650, arg_7651);
}
pub inline fn glSampleCoverageARB(arg_7652: GLfloat, arg_7653: GLboolean) void {
    return epoxy_glSampleCoverageARB.?(arg_7652, arg_7653);
}
pub inline fn glSampleCoveragex(arg_7654: GLclampx, arg_7655: GLboolean) void {
    return epoxy_glSampleCoveragex.?(arg_7654, arg_7655);
}
pub inline fn glSampleCoveragexOES(arg_7656: GLclampx, arg_7657: GLboolean) void {
    return epoxy_glSampleCoveragexOES.?(arg_7656, arg_7657);
}
pub inline fn glSampleMapATI(arg_7658: GLuint, arg_7659: GLuint, arg_7660: GLenum) void {
    return epoxy_glSampleMapATI.?(arg_7658, arg_7659, arg_7660);
}
pub inline fn glSampleMaskEXT(arg_7661: GLclampf, arg_7662: GLboolean) void {
    return epoxy_glSampleMaskEXT.?(arg_7661, arg_7662);
}
pub inline fn glSampleMaskIndexedNV(arg_7663: GLuint, arg_7664: GLbitfield) void {
    return epoxy_glSampleMaskIndexedNV.?(arg_7663, arg_7664);
}
pub inline fn glSampleMaskSGIS(arg_7665: GLclampf, arg_7666: GLboolean) void {
    return epoxy_glSampleMaskSGIS.?(arg_7665, arg_7666);
}
pub inline fn glSampleMaski(arg_7667: GLuint, arg_7668: GLbitfield) void {
    return epoxy_glSampleMaski.?(arg_7667, arg_7668);
}
pub inline fn glSamplePatternEXT(arg_7669: GLenum) void {
    return epoxy_glSamplePatternEXT.?(arg_7669);
}
pub inline fn glSamplePatternSGIS(arg_7670: GLenum) void {
    return epoxy_glSamplePatternSGIS.?(arg_7670);
}
pub inline fn glSamplerParameterIiv(arg_7671: GLuint, arg_7672: GLenum, arg_7673: [*c]const GLint) void {
    return epoxy_glSamplerParameterIiv.?(arg_7671, arg_7672, arg_7673);
}
pub inline fn glSamplerParameterIivEXT(arg_7674: GLuint, arg_7675: GLenum, arg_7676: [*c]const GLint) void {
    return epoxy_glSamplerParameterIivEXT.?(arg_7674, arg_7675, arg_7676);
}
pub inline fn glSamplerParameterIivOES(arg_7677: GLuint, arg_7678: GLenum, arg_7679: [*c]const GLint) void {
    return epoxy_glSamplerParameterIivOES.?(arg_7677, arg_7678, arg_7679);
}
pub inline fn glSamplerParameterIuiv(arg_7680: GLuint, arg_7681: GLenum, arg_7682: [*c]const GLuint) void {
    return epoxy_glSamplerParameterIuiv.?(arg_7680, arg_7681, arg_7682);
}
pub inline fn glSamplerParameterIuivEXT(arg_7683: GLuint, arg_7684: GLenum, arg_7685: [*c]const GLuint) void {
    return epoxy_glSamplerParameterIuivEXT.?(arg_7683, arg_7684, arg_7685);
}
pub inline fn glSamplerParameterIuivOES(arg_7686: GLuint, arg_7687: GLenum, arg_7688: [*c]const GLuint) void {
    return epoxy_glSamplerParameterIuivOES.?(arg_7686, arg_7687, arg_7688);
}
pub inline fn glSamplerParameterf(arg_7689: GLuint, arg_7690: GLenum, arg_7691: GLfloat) void {
    return epoxy_glSamplerParameterf.?(arg_7689, arg_7690, arg_7691);
}
pub inline fn glSamplerParameterfv(arg_7692: GLuint, arg_7693: GLenum, arg_7694: [*c]const GLfloat) void {
    return epoxy_glSamplerParameterfv.?(arg_7692, arg_7693, arg_7694);
}
pub inline fn glSamplerParameteri(arg_7695: GLuint, arg_7696: GLenum, arg_7697: GLint) void {
    return epoxy_glSamplerParameteri.?(arg_7695, arg_7696, arg_7697);
}
pub inline fn glSamplerParameteriv(arg_7698: GLuint, arg_7699: GLenum, arg_7700: [*c]const GLint) void {
    return epoxy_glSamplerParameteriv.?(arg_7698, arg_7699, arg_7700);
}
pub inline fn glScaled(arg_7701: GLdouble, arg_7702: GLdouble, arg_7703: GLdouble) void {
    return epoxy_glScaled.?(arg_7701, arg_7702, arg_7703);
}
pub inline fn glScalef(arg_7704: GLfloat, arg_7705: GLfloat, arg_7706: GLfloat) void {
    return epoxy_glScalef.?(arg_7704, arg_7705, arg_7706);
}
pub inline fn glScalex(arg_7707: GLfixed, arg_7708: GLfixed, arg_7709: GLfixed) void {
    return epoxy_glScalex.?(arg_7707, arg_7708, arg_7709);
}
pub inline fn glScalexOES(arg_7710: GLfixed, arg_7711: GLfixed, arg_7712: GLfixed) void {
    return epoxy_glScalexOES.?(arg_7710, arg_7711, arg_7712);
}
pub inline fn glScissor(arg_7713: GLint, arg_7714: GLint, arg_7715: GLsizei, arg_7716: GLsizei) void {
    return epoxy_glScissor.?(arg_7713, arg_7714, arg_7715, arg_7716);
}
pub inline fn glScissorArrayv(arg_7717: GLuint, arg_7718: GLsizei, arg_7719: [*c]const GLint) void {
    return epoxy_glScissorArrayv.?(arg_7717, arg_7718, arg_7719);
}
pub inline fn glScissorArrayvNV(arg_7720: GLuint, arg_7721: GLsizei, arg_7722: [*c]const GLint) void {
    return epoxy_glScissorArrayvNV.?(arg_7720, arg_7721, arg_7722);
}
pub inline fn glScissorArrayvOES(arg_7723: GLuint, arg_7724: GLsizei, arg_7725: [*c]const GLint) void {
    return epoxy_glScissorArrayvOES.?(arg_7723, arg_7724, arg_7725);
}
pub inline fn glScissorExclusiveArrayvNV(arg_7726: GLuint, arg_7727: GLsizei, arg_7728: [*c]const GLint) void {
    return epoxy_glScissorExclusiveArrayvNV.?(arg_7726, arg_7727, arg_7728);
}
pub inline fn glScissorExclusiveNV(arg_7729: GLint, arg_7730: GLint, arg_7731: GLsizei, arg_7732: GLsizei) void {
    return epoxy_glScissorExclusiveNV.?(arg_7729, arg_7730, arg_7731, arg_7732);
}
pub inline fn glScissorIndexed(arg_7733: GLuint, arg_7734: GLint, arg_7735: GLint, arg_7736: GLsizei, arg_7737: GLsizei) void {
    return epoxy_glScissorIndexed.?(arg_7733, arg_7734, arg_7735, arg_7736, arg_7737);
}
pub inline fn glScissorIndexedNV(arg_7738: GLuint, arg_7739: GLint, arg_7740: GLint, arg_7741: GLsizei, arg_7742: GLsizei) void {
    return epoxy_glScissorIndexedNV.?(arg_7738, arg_7739, arg_7740, arg_7741, arg_7742);
}
pub inline fn glScissorIndexedOES(arg_7743: GLuint, arg_7744: GLint, arg_7745: GLint, arg_7746: GLsizei, arg_7747: GLsizei) void {
    return epoxy_glScissorIndexedOES.?(arg_7743, arg_7744, arg_7745, arg_7746, arg_7747);
}
pub inline fn glScissorIndexedv(arg_7748: GLuint, arg_7749: [*c]const GLint) void {
    return epoxy_glScissorIndexedv.?(arg_7748, arg_7749);
}
pub inline fn glScissorIndexedvNV(arg_7750: GLuint, arg_7751: [*c]const GLint) void {
    return epoxy_glScissorIndexedvNV.?(arg_7750, arg_7751);
}
pub inline fn glScissorIndexedvOES(arg_7752: GLuint, arg_7753: [*c]const GLint) void {
    return epoxy_glScissorIndexedvOES.?(arg_7752, arg_7753);
}
pub inline fn glSecondaryColor3b(arg_7754: GLbyte, arg_7755: GLbyte, arg_7756: GLbyte) void {
    return epoxy_glSecondaryColor3b.?(arg_7754, arg_7755, arg_7756);
}
pub inline fn glSecondaryColor3bEXT(arg_7757: GLbyte, arg_7758: GLbyte, arg_7759: GLbyte) void {
    return epoxy_glSecondaryColor3bEXT.?(arg_7757, arg_7758, arg_7759);
}
pub inline fn glSecondaryColor3bv(arg_7760: [*c]const GLbyte) void {
    return epoxy_glSecondaryColor3bv.?(arg_7760);
}
pub inline fn glSecondaryColor3bvEXT(arg_7761: [*c]const GLbyte) void {
    return epoxy_glSecondaryColor3bvEXT.?(arg_7761);
}
pub inline fn glSecondaryColor3d(arg_7762: GLdouble, arg_7763: GLdouble, arg_7764: GLdouble) void {
    return epoxy_glSecondaryColor3d.?(arg_7762, arg_7763, arg_7764);
}
pub inline fn glSecondaryColor3dEXT(arg_7765: GLdouble, arg_7766: GLdouble, arg_7767: GLdouble) void {
    return epoxy_glSecondaryColor3dEXT.?(arg_7765, arg_7766, arg_7767);
}
pub inline fn glSecondaryColor3dv(arg_7768: [*c]const GLdouble) void {
    return epoxy_glSecondaryColor3dv.?(arg_7768);
}
pub inline fn glSecondaryColor3dvEXT(arg_7769: [*c]const GLdouble) void {
    return epoxy_glSecondaryColor3dvEXT.?(arg_7769);
}
pub inline fn glSecondaryColor3f(arg_7770: GLfloat, arg_7771: GLfloat, arg_7772: GLfloat) void {
    return epoxy_glSecondaryColor3f.?(arg_7770, arg_7771, arg_7772);
}
pub inline fn glSecondaryColor3fEXT(arg_7773: GLfloat, arg_7774: GLfloat, arg_7775: GLfloat) void {
    return epoxy_glSecondaryColor3fEXT.?(arg_7773, arg_7774, arg_7775);
}
pub inline fn glSecondaryColor3fv(arg_7776: [*c]const GLfloat) void {
    return epoxy_glSecondaryColor3fv.?(arg_7776);
}
pub inline fn glSecondaryColor3fvEXT(arg_7777: [*c]const GLfloat) void {
    return epoxy_glSecondaryColor3fvEXT.?(arg_7777);
}
pub inline fn glSecondaryColor3hNV(arg_7778: GLhalfNV, arg_7779: GLhalfNV, arg_7780: GLhalfNV) void {
    return epoxy_glSecondaryColor3hNV.?(arg_7778, arg_7779, arg_7780);
}
pub inline fn glSecondaryColor3hvNV(arg_7781: [*c]const GLhalfNV) void {
    return epoxy_glSecondaryColor3hvNV.?(arg_7781);
}
pub inline fn glSecondaryColor3i(arg_7782: GLint, arg_7783: GLint, arg_7784: GLint) void {
    return epoxy_glSecondaryColor3i.?(arg_7782, arg_7783, arg_7784);
}
pub inline fn glSecondaryColor3iEXT(arg_7785: GLint, arg_7786: GLint, arg_7787: GLint) void {
    return epoxy_glSecondaryColor3iEXT.?(arg_7785, arg_7786, arg_7787);
}
pub inline fn glSecondaryColor3iv(arg_7788: [*c]const GLint) void {
    return epoxy_glSecondaryColor3iv.?(arg_7788);
}
pub inline fn glSecondaryColor3ivEXT(arg_7789: [*c]const GLint) void {
    return epoxy_glSecondaryColor3ivEXT.?(arg_7789);
}
pub inline fn glSecondaryColor3s(arg_7790: GLshort, arg_7791: GLshort, arg_7792: GLshort) void {
    return epoxy_glSecondaryColor3s.?(arg_7790, arg_7791, arg_7792);
}
pub inline fn glSecondaryColor3sEXT(arg_7793: GLshort, arg_7794: GLshort, arg_7795: GLshort) void {
    return epoxy_glSecondaryColor3sEXT.?(arg_7793, arg_7794, arg_7795);
}
pub inline fn glSecondaryColor3sv(arg_7796: [*c]const GLshort) void {
    return epoxy_glSecondaryColor3sv.?(arg_7796);
}
pub inline fn glSecondaryColor3svEXT(arg_7797: [*c]const GLshort) void {
    return epoxy_glSecondaryColor3svEXT.?(arg_7797);
}
pub inline fn glSecondaryColor3ub(arg_7798: GLubyte, arg_7799: GLubyte, arg_7800: GLubyte) void {
    return epoxy_glSecondaryColor3ub.?(arg_7798, arg_7799, arg_7800);
}
pub inline fn glSecondaryColor3ubEXT(arg_7801: GLubyte, arg_7802: GLubyte, arg_7803: GLubyte) void {
    return epoxy_glSecondaryColor3ubEXT.?(arg_7801, arg_7802, arg_7803);
}
pub inline fn glSecondaryColor3ubv(arg_7804: [*c]const GLubyte) void {
    return epoxy_glSecondaryColor3ubv.?(arg_7804);
}
pub inline fn glSecondaryColor3ubvEXT(arg_7805: [*c]const GLubyte) void {
    return epoxy_glSecondaryColor3ubvEXT.?(arg_7805);
}
pub inline fn glSecondaryColor3ui(arg_7806: GLuint, arg_7807: GLuint, arg_7808: GLuint) void {
    return epoxy_glSecondaryColor3ui.?(arg_7806, arg_7807, arg_7808);
}
pub inline fn glSecondaryColor3uiEXT(arg_7809: GLuint, arg_7810: GLuint, arg_7811: GLuint) void {
    return epoxy_glSecondaryColor3uiEXT.?(arg_7809, arg_7810, arg_7811);
}
pub inline fn glSecondaryColor3uiv(arg_7812: [*c]const GLuint) void {
    return epoxy_glSecondaryColor3uiv.?(arg_7812);
}
pub inline fn glSecondaryColor3uivEXT(arg_7813: [*c]const GLuint) void {
    return epoxy_glSecondaryColor3uivEXT.?(arg_7813);
}
pub inline fn glSecondaryColor3us(arg_7814: GLushort, arg_7815: GLushort, arg_7816: GLushort) void {
    return epoxy_glSecondaryColor3us.?(arg_7814, arg_7815, arg_7816);
}
pub inline fn glSecondaryColor3usEXT(arg_7817: GLushort, arg_7818: GLushort, arg_7819: GLushort) void {
    return epoxy_glSecondaryColor3usEXT.?(arg_7817, arg_7818, arg_7819);
}
pub inline fn glSecondaryColor3usv(arg_7820: [*c]const GLushort) void {
    return epoxy_glSecondaryColor3usv.?(arg_7820);
}
pub inline fn glSecondaryColor3usvEXT(arg_7821: [*c]const GLushort) void {
    return epoxy_glSecondaryColor3usvEXT.?(arg_7821);
}
pub inline fn glSecondaryColorFormatNV(arg_7822: GLint, arg_7823: GLenum, arg_7824: GLsizei) void {
    return epoxy_glSecondaryColorFormatNV.?(arg_7822, arg_7823, arg_7824);
}
pub inline fn glSecondaryColorP3ui(arg_7825: GLenum, arg_7826: GLuint) void {
    return epoxy_glSecondaryColorP3ui.?(arg_7825, arg_7826);
}
pub inline fn glSecondaryColorP3uiv(arg_7827: GLenum, arg_7828: [*c]const GLuint) void {
    return epoxy_glSecondaryColorP3uiv.?(arg_7827, arg_7828);
}
pub inline fn glSecondaryColorPointer(arg_7829: GLint, arg_7830: GLenum, arg_7831: GLsizei, arg_7832: ?*const anyopaque) void {
    return epoxy_glSecondaryColorPointer.?(arg_7829, arg_7830, arg_7831, arg_7832);
}
pub inline fn glSecondaryColorPointerEXT(arg_7833: GLint, arg_7834: GLenum, arg_7835: GLsizei, arg_7836: ?*const anyopaque) void {
    return epoxy_glSecondaryColorPointerEXT.?(arg_7833, arg_7834, arg_7835, arg_7836);
}
pub inline fn glSecondaryColorPointerListIBM(arg_7837: GLint, arg_7838: GLenum, arg_7839: GLint, arg_7840: [*c]?*const anyopaque, arg_7841: GLint) void {
    return epoxy_glSecondaryColorPointerListIBM.?(arg_7837, arg_7838, arg_7839, arg_7840, arg_7841);
}
pub inline fn glSelectBuffer(arg_7842: GLsizei, arg_7843: [*c]GLuint) void {
    return epoxy_glSelectBuffer.?(arg_7842, arg_7843);
}
pub inline fn glSelectPerfMonitorCountersAMD(arg_7844: GLuint, arg_7845: GLboolean, arg_7846: GLuint, arg_7847: GLint, arg_7848: [*c]GLuint) void {
    return epoxy_glSelectPerfMonitorCountersAMD.?(arg_7844, arg_7845, arg_7846, arg_7847, arg_7848);
}
pub inline fn glSemaphoreParameterui64vEXT(arg_7849: GLuint, arg_7850: GLenum, arg_7851: [*c]const GLuint64) void {
    return epoxy_glSemaphoreParameterui64vEXT.?(arg_7849, arg_7850, arg_7851);
}
pub inline fn glSeparableFilter2D(arg_7852: GLenum, arg_7853: GLenum, arg_7854: GLsizei, arg_7855: GLsizei, arg_7856: GLenum, arg_7857: GLenum, arg_7858: ?*const anyopaque, arg_7859: ?*const anyopaque) void {
    return epoxy_glSeparableFilter2D.?(arg_7852, arg_7853, arg_7854, arg_7855, arg_7856, arg_7857, arg_7858, arg_7859);
}
pub inline fn glSeparableFilter2DEXT(arg_7860: GLenum, arg_7861: GLenum, arg_7862: GLsizei, arg_7863: GLsizei, arg_7864: GLenum, arg_7865: GLenum, arg_7866: ?*const anyopaque, arg_7867: ?*const anyopaque) void {
    return epoxy_glSeparableFilter2DEXT.?(arg_7860, arg_7861, arg_7862, arg_7863, arg_7864, arg_7865, arg_7866, arg_7867);
}
pub inline fn glSetFenceAPPLE(arg_7868: GLuint) void {
    return epoxy_glSetFenceAPPLE.?(arg_7868);
}
pub inline fn glSetFenceNV(arg_7869: GLuint, arg_7870: GLenum) void {
    return epoxy_glSetFenceNV.?(arg_7869, arg_7870);
}
pub inline fn glSetFragmentShaderConstantATI(arg_7871: GLuint, arg_7872: [*c]const GLfloat) void {
    return epoxy_glSetFragmentShaderConstantATI.?(arg_7871, arg_7872);
}
pub inline fn glSetInvariantEXT(arg_7873: GLuint, arg_7874: GLenum, arg_7875: ?*const anyopaque) void {
    return epoxy_glSetInvariantEXT.?(arg_7873, arg_7874, arg_7875);
}
pub inline fn glSetLocalConstantEXT(arg_7876: GLuint, arg_7877: GLenum, arg_7878: ?*const anyopaque) void {
    return epoxy_glSetLocalConstantEXT.?(arg_7876, arg_7877, arg_7878);
}
pub inline fn glSetMultisamplefvAMD(arg_7879: GLenum, arg_7880: GLuint, arg_7881: [*c]const GLfloat) void {
    return epoxy_glSetMultisamplefvAMD.?(arg_7879, arg_7880, arg_7881);
}
pub inline fn glShadeModel(arg_7882: GLenum) void {
    return epoxy_glShadeModel.?(arg_7882);
}
pub inline fn glShaderBinary(arg_7883: GLsizei, arg_7884: [*c]const GLuint, arg_7885: GLenum, arg_7886: ?*const anyopaque, arg_7887: GLsizei) void {
    return epoxy_glShaderBinary.?(arg_7883, arg_7884, arg_7885, arg_7886, arg_7887);
}
pub inline fn glShaderOp1EXT(arg_7888: GLenum, arg_7889: GLuint, arg_7890: GLuint) void {
    return epoxy_glShaderOp1EXT.?(arg_7888, arg_7889, arg_7890);
}
pub inline fn glShaderOp2EXT(arg_7891: GLenum, arg_7892: GLuint, arg_7893: GLuint, arg_7894: GLuint) void {
    return epoxy_glShaderOp2EXT.?(arg_7891, arg_7892, arg_7893, arg_7894);
}
pub inline fn glShaderOp3EXT(arg_7895: GLenum, arg_7896: GLuint, arg_7897: GLuint, arg_7898: GLuint, arg_7899: GLuint) void {
    return epoxy_glShaderOp3EXT.?(arg_7895, arg_7896, arg_7897, arg_7898, arg_7899);
}
pub inline fn glShaderSource(arg_7900: GLuint, arg_7901: GLsizei, arg_7902: [*c]const [*c]const GLchar, arg_7903: [*c]const GLint) void {
    return epoxy_glShaderSource.?(arg_7900, arg_7901, arg_7902, arg_7903);
}
pub inline fn glShaderSourceARB(arg_7904: GLhandleARB, arg_7905: GLsizei, arg_7906: [*c][*c]const GLcharARB, arg_7907: [*c]const GLint) void {
    return epoxy_glShaderSourceARB.?(arg_7904, arg_7905, arg_7906, arg_7907);
}
pub inline fn glShaderStorageBlockBinding(arg_7908: GLuint, arg_7909: GLuint, arg_7910: GLuint) void {
    return epoxy_glShaderStorageBlockBinding.?(arg_7908, arg_7909, arg_7910);
}
pub inline fn glShadingRateImageBarrierNV(arg_7911: GLboolean) void {
    return epoxy_glShadingRateImageBarrierNV.?(arg_7911);
}
pub inline fn glShadingRateImagePaletteNV(arg_7912: GLuint, arg_7913: GLuint, arg_7914: GLsizei, arg_7915: [*c]const GLenum) void {
    return epoxy_glShadingRateImagePaletteNV.?(arg_7912, arg_7913, arg_7914, arg_7915);
}
pub inline fn glShadingRateSampleOrderCustomNV(arg_7916: GLenum, arg_7917: GLuint, arg_7918: [*c]const GLint) void {
    return epoxy_glShadingRateSampleOrderCustomNV.?(arg_7916, arg_7917, arg_7918);
}
pub inline fn glShadingRateSampleOrderNV(arg_7919: GLenum) void {
    return epoxy_glShadingRateSampleOrderNV.?(arg_7919);
}
pub inline fn glSharpenTexFuncSGIS(arg_7920: GLenum, arg_7921: GLsizei, arg_7922: [*c]const GLfloat) void {
    return epoxy_glSharpenTexFuncSGIS.?(arg_7920, arg_7921, arg_7922);
}
pub inline fn glSignalSemaphoreEXT(arg_7923: GLuint, arg_7924: GLuint, arg_7925: [*c]const GLuint, arg_7926: GLuint, arg_7927: [*c]const GLuint, arg_7928: [*c]const GLenum) void {
    return epoxy_glSignalSemaphoreEXT.?(arg_7923, arg_7924, arg_7925, arg_7926, arg_7927, arg_7928);
}
pub inline fn glSignalSemaphoreui64NVX(arg_7929: GLuint, arg_7930: GLsizei, arg_7931: [*c]const GLuint, arg_7932: [*c]const GLuint64) void {
    return epoxy_glSignalSemaphoreui64NVX.?(arg_7929, arg_7930, arg_7931, arg_7932);
}
pub inline fn glSignalVkFenceNV(arg_7933: GLuint64) void {
    return epoxy_glSignalVkFenceNV.?(arg_7933);
}
pub inline fn glSignalVkSemaphoreNV(arg_7934: GLuint64) void {
    return epoxy_glSignalVkSemaphoreNV.?(arg_7934);
}
pub inline fn glSpecializeShader(arg_7935: GLuint, arg_7936: [*c]const GLchar, arg_7937: GLuint, arg_7938: [*c]const GLuint, arg_7939: [*c]const GLuint) void {
    return epoxy_glSpecializeShader.?(arg_7935, arg_7936, arg_7937, arg_7938, arg_7939);
}
pub inline fn glSpecializeShaderARB(arg_7940: GLuint, arg_7941: [*c]const GLchar, arg_7942: GLuint, arg_7943: [*c]const GLuint, arg_7944: [*c]const GLuint) void {
    return epoxy_glSpecializeShaderARB.?(arg_7940, arg_7941, arg_7942, arg_7943, arg_7944);
}
pub inline fn glSpriteParameterfSGIX(arg_7945: GLenum, arg_7946: GLfloat) void {
    return epoxy_glSpriteParameterfSGIX.?(arg_7945, arg_7946);
}
pub inline fn glSpriteParameterfvSGIX(arg_7947: GLenum, arg_7948: [*c]const GLfloat) void {
    return epoxy_glSpriteParameterfvSGIX.?(arg_7947, arg_7948);
}
pub inline fn glSpriteParameteriSGIX(arg_7949: GLenum, arg_7950: GLint) void {
    return epoxy_glSpriteParameteriSGIX.?(arg_7949, arg_7950);
}
pub inline fn glSpriteParameterivSGIX(arg_7951: GLenum, arg_7952: [*c]const GLint) void {
    return epoxy_glSpriteParameterivSGIX.?(arg_7951, arg_7952);
}
pub inline fn glStartInstrumentsSGIX() void {
    return epoxy_glStartInstrumentsSGIX.?();
}
pub inline fn glStartTilingQCOM(arg_7953: GLuint, arg_7954: GLuint, arg_7955: GLuint, arg_7956: GLuint, arg_7957: GLbitfield) void {
    return epoxy_glStartTilingQCOM.?(arg_7953, arg_7954, arg_7955, arg_7956, arg_7957);
}
pub inline fn glStateCaptureNV(arg_7958: GLuint, arg_7959: GLenum) void {
    return epoxy_glStateCaptureNV.?(arg_7958, arg_7959);
}
pub inline fn glStencilClearTagEXT(arg_7960: GLsizei, arg_7961: GLuint) void {
    return epoxy_glStencilClearTagEXT.?(arg_7960, arg_7961);
}
pub inline fn glStencilFillPathInstancedNV(arg_7962: GLsizei, arg_7963: GLenum, arg_7964: ?*const anyopaque, arg_7965: GLuint, arg_7966: GLenum, arg_7967: GLuint, arg_7968: GLenum, arg_7969: [*c]const GLfloat) void {
    return epoxy_glStencilFillPathInstancedNV.?(arg_7962, arg_7963, arg_7964, arg_7965, arg_7966, arg_7967, arg_7968, arg_7969);
}
pub inline fn glStencilFillPathNV(arg_7970: GLuint, arg_7971: GLenum, arg_7972: GLuint) void {
    return epoxy_glStencilFillPathNV.?(arg_7970, arg_7971, arg_7972);
}
pub inline fn glStencilFunc(arg_7973: GLenum, arg_7974: GLint, arg_7975: GLuint) void {
    return epoxy_glStencilFunc.?(arg_7973, arg_7974, arg_7975);
}
pub inline fn glStencilFuncSeparate(arg_7976: GLenum, arg_7977: GLenum, arg_7978: GLint, arg_7979: GLuint) void {
    return epoxy_glStencilFuncSeparate.?(arg_7976, arg_7977, arg_7978, arg_7979);
}
pub inline fn glStencilFuncSeparateATI(arg_7980: GLenum, arg_7981: GLenum, arg_7982: GLint, arg_7983: GLuint) void {
    return epoxy_glStencilFuncSeparateATI.?(arg_7980, arg_7981, arg_7982, arg_7983);
}
pub inline fn glStencilMask(arg_7984: GLuint) void {
    return epoxy_glStencilMask.?(arg_7984);
}
pub inline fn glStencilMaskSeparate(arg_7985: GLenum, arg_7986: GLuint) void {
    return epoxy_glStencilMaskSeparate.?(arg_7985, arg_7986);
}
pub inline fn glStencilOp(arg_7987: GLenum, arg_7988: GLenum, arg_7989: GLenum) void {
    return epoxy_glStencilOp.?(arg_7987, arg_7988, arg_7989);
}
pub inline fn glStencilOpSeparate(arg_7990: GLenum, arg_7991: GLenum, arg_7992: GLenum, arg_7993: GLenum) void {
    return epoxy_glStencilOpSeparate.?(arg_7990, arg_7991, arg_7992, arg_7993);
}
pub inline fn glStencilOpSeparateATI(arg_7994: GLenum, arg_7995: GLenum, arg_7996: GLenum, arg_7997: GLenum) void {
    return epoxy_glStencilOpSeparateATI.?(arg_7994, arg_7995, arg_7996, arg_7997);
}
pub inline fn glStencilOpValueAMD(arg_7998: GLenum, arg_7999: GLuint) void {
    return epoxy_glStencilOpValueAMD.?(arg_7998, arg_7999);
}
pub inline fn glStencilStrokePathInstancedNV(arg_8000: GLsizei, arg_8001: GLenum, arg_8002: ?*const anyopaque, arg_8003: GLuint, arg_8004: GLint, arg_8005: GLuint, arg_8006: GLenum, arg_8007: [*c]const GLfloat) void {
    return epoxy_glStencilStrokePathInstancedNV.?(arg_8000, arg_8001, arg_8002, arg_8003, arg_8004, arg_8005, arg_8006, arg_8007);
}
pub inline fn glStencilStrokePathNV(arg_8008: GLuint, arg_8009: GLint, arg_8010: GLuint) void {
    return epoxy_glStencilStrokePathNV.?(arg_8008, arg_8009, arg_8010);
}
pub inline fn glStencilThenCoverFillPathInstancedNV(arg_8011: GLsizei, arg_8012: GLenum, arg_8013: ?*const anyopaque, arg_8014: GLuint, arg_8015: GLenum, arg_8016: GLuint, arg_8017: GLenum, arg_8018: GLenum, arg_8019: [*c]const GLfloat) void {
    return epoxy_glStencilThenCoverFillPathInstancedNV.?(arg_8011, arg_8012, arg_8013, arg_8014, arg_8015, arg_8016, arg_8017, arg_8018, arg_8019);
}
pub inline fn glStencilThenCoverFillPathNV(arg_8020: GLuint, arg_8021: GLenum, arg_8022: GLuint, arg_8023: GLenum) void {
    return epoxy_glStencilThenCoverFillPathNV.?(arg_8020, arg_8021, arg_8022, arg_8023);
}
pub inline fn glStencilThenCoverStrokePathInstancedNV(arg_8024: GLsizei, arg_8025: GLenum, arg_8026: ?*const anyopaque, arg_8027: GLuint, arg_8028: GLint, arg_8029: GLuint, arg_8030: GLenum, arg_8031: GLenum, arg_8032: [*c]const GLfloat) void {
    return epoxy_glStencilThenCoverStrokePathInstancedNV.?(arg_8024, arg_8025, arg_8026, arg_8027, arg_8028, arg_8029, arg_8030, arg_8031, arg_8032);
}
pub inline fn glStencilThenCoverStrokePathNV(arg_8033: GLuint, arg_8034: GLint, arg_8035: GLuint, arg_8036: GLenum) void {
    return epoxy_glStencilThenCoverStrokePathNV.?(arg_8033, arg_8034, arg_8035, arg_8036);
}
pub inline fn glStopInstrumentsSGIX(arg_8037: GLint) void {
    return epoxy_glStopInstrumentsSGIX.?(arg_8037);
}
pub inline fn glStringMarkerGREMEDY(arg_8038: GLsizei, arg_8039: ?*const anyopaque) void {
    return epoxy_glStringMarkerGREMEDY.?(arg_8038, arg_8039);
}
pub inline fn glSubpixelPrecisionBiasNV(arg_8040: GLuint, arg_8041: GLuint) void {
    return epoxy_glSubpixelPrecisionBiasNV.?(arg_8040, arg_8041);
}
pub inline fn glSwizzleEXT(arg_8042: GLuint, arg_8043: GLuint, arg_8044: GLenum, arg_8045: GLenum, arg_8046: GLenum, arg_8047: GLenum) void {
    return epoxy_glSwizzleEXT.?(arg_8042, arg_8043, arg_8044, arg_8045, arg_8046, arg_8047);
}
pub inline fn glSyncTextureINTEL(arg_8048: GLuint) void {
    return epoxy_glSyncTextureINTEL.?(arg_8048);
}
pub inline fn glTagSampleBufferSGIX() void {
    return epoxy_glTagSampleBufferSGIX.?();
}
pub inline fn glTangent3bEXT(arg_8049: GLbyte, arg_8050: GLbyte, arg_8051: GLbyte) void {
    return epoxy_glTangent3bEXT.?(arg_8049, arg_8050, arg_8051);
}
pub inline fn glTangent3bvEXT(arg_8052: [*c]const GLbyte) void {
    return epoxy_glTangent3bvEXT.?(arg_8052);
}
pub inline fn glTangent3dEXT(arg_8053: GLdouble, arg_8054: GLdouble, arg_8055: GLdouble) void {
    return epoxy_glTangent3dEXT.?(arg_8053, arg_8054, arg_8055);
}
pub inline fn glTangent3dvEXT(arg_8056: [*c]const GLdouble) void {
    return epoxy_glTangent3dvEXT.?(arg_8056);
}
pub inline fn glTangent3fEXT(arg_8057: GLfloat, arg_8058: GLfloat, arg_8059: GLfloat) void {
    return epoxy_glTangent3fEXT.?(arg_8057, arg_8058, arg_8059);
}
pub inline fn glTangent3fvEXT(arg_8060: [*c]const GLfloat) void {
    return epoxy_glTangent3fvEXT.?(arg_8060);
}
pub inline fn glTangent3iEXT(arg_8061: GLint, arg_8062: GLint, arg_8063: GLint) void {
    return epoxy_glTangent3iEXT.?(arg_8061, arg_8062, arg_8063);
}
pub inline fn glTangent3ivEXT(arg_8064: [*c]const GLint) void {
    return epoxy_glTangent3ivEXT.?(arg_8064);
}
pub inline fn glTangent3sEXT(arg_8065: GLshort, arg_8066: GLshort, arg_8067: GLshort) void {
    return epoxy_glTangent3sEXT.?(arg_8065, arg_8066, arg_8067);
}
pub inline fn glTangent3svEXT(arg_8068: [*c]const GLshort) void {
    return epoxy_glTangent3svEXT.?(arg_8068);
}
pub inline fn glTangentPointerEXT(arg_8069: GLenum, arg_8070: GLsizei, arg_8071: ?*const anyopaque) void {
    return epoxy_glTangentPointerEXT.?(arg_8069, arg_8070, arg_8071);
}
pub inline fn glTbufferMask3DFX(arg_8072: GLuint) void {
    return epoxy_glTbufferMask3DFX.?(arg_8072);
}
pub inline fn glTessellationFactorAMD(arg_8073: GLfloat) void {
    return epoxy_glTessellationFactorAMD.?(arg_8073);
}
pub inline fn glTessellationModeAMD(arg_8074: GLenum) void {
    return epoxy_glTessellationModeAMD.?(arg_8074);
}
pub inline fn glTestFenceAPPLE(arg_8075: GLuint) GLboolean {
    return epoxy_glTestFenceAPPLE.?(arg_8075);
}
pub inline fn glTestFenceNV(arg_8076: GLuint) GLboolean {
    return epoxy_glTestFenceNV.?(arg_8076);
}
pub inline fn glTestObjectAPPLE(arg_8077: GLenum, arg_8078: GLuint) GLboolean {
    return epoxy_glTestObjectAPPLE.?(arg_8077, arg_8078);
}
pub inline fn glTexAttachMemoryNV(arg_8079: GLenum, arg_8080: GLuint, arg_8081: GLuint64) void {
    return epoxy_glTexAttachMemoryNV.?(arg_8079, arg_8080, arg_8081);
}
pub inline fn glTexBuffer(arg_8082: GLenum, arg_8083: GLenum, arg_8084: GLuint) void {
    return epoxy_glTexBuffer.?(arg_8082, arg_8083, arg_8084);
}
pub inline fn glTexBufferARB(arg_8085: GLenum, arg_8086: GLenum, arg_8087: GLuint) void {
    return epoxy_glTexBufferARB.?(arg_8085, arg_8086, arg_8087);
}
pub inline fn glTexBufferEXT(arg_8088: GLenum, arg_8089: GLenum, arg_8090: GLuint) void {
    return epoxy_glTexBufferEXT.?(arg_8088, arg_8089, arg_8090);
}
pub inline fn glTexBufferOES(arg_8091: GLenum, arg_8092: GLenum, arg_8093: GLuint) void {
    return epoxy_glTexBufferOES.?(arg_8091, arg_8092, arg_8093);
}
pub inline fn glTexBufferRange(arg_8094: GLenum, arg_8095: GLenum, arg_8096: GLuint, arg_8097: GLintptr, arg_8098: GLsizeiptr) void {
    return epoxy_glTexBufferRange.?(arg_8094, arg_8095, arg_8096, arg_8097, arg_8098);
}
pub inline fn glTexBufferRangeEXT(arg_8099: GLenum, arg_8100: GLenum, arg_8101: GLuint, arg_8102: GLintptr, arg_8103: GLsizeiptr) void {
    return epoxy_glTexBufferRangeEXT.?(arg_8099, arg_8100, arg_8101, arg_8102, arg_8103);
}
pub inline fn glTexBufferRangeOES(arg_8104: GLenum, arg_8105: GLenum, arg_8106: GLuint, arg_8107: GLintptr, arg_8108: GLsizeiptr) void {
    return epoxy_glTexBufferRangeOES.?(arg_8104, arg_8105, arg_8106, arg_8107, arg_8108);
}
pub inline fn glTexBumpParameterfvATI(arg_8109: GLenum, arg_8110: [*c]const GLfloat) void {
    return epoxy_glTexBumpParameterfvATI.?(arg_8109, arg_8110);
}
pub inline fn glTexBumpParameterivATI(arg_8111: GLenum, arg_8112: [*c]const GLint) void {
    return epoxy_glTexBumpParameterivATI.?(arg_8111, arg_8112);
}
pub inline fn glTexCoord1bOES(arg_8113: GLbyte) void {
    return epoxy_glTexCoord1bOES.?(arg_8113);
}
pub inline fn glTexCoord1bvOES(arg_8114: [*c]const GLbyte) void {
    return epoxy_glTexCoord1bvOES.?(arg_8114);
}
pub inline fn glTexCoord1d(arg_8115: GLdouble) void {
    return epoxy_glTexCoord1d.?(arg_8115);
}
pub inline fn glTexCoord1dv(arg_8116: [*c]const GLdouble) void {
    return epoxy_glTexCoord1dv.?(arg_8116);
}
pub inline fn glTexCoord1f(arg_8117: GLfloat) void {
    return epoxy_glTexCoord1f.?(arg_8117);
}
pub inline fn glTexCoord1fv(arg_8118: [*c]const GLfloat) void {
    return epoxy_glTexCoord1fv.?(arg_8118);
}
pub inline fn glTexCoord1hNV(arg_8119: GLhalfNV) void {
    return epoxy_glTexCoord1hNV.?(arg_8119);
}
pub inline fn glTexCoord1hvNV(arg_8120: [*c]const GLhalfNV) void {
    return epoxy_glTexCoord1hvNV.?(arg_8120);
}
pub inline fn glTexCoord1i(arg_8121: GLint) void {
    return epoxy_glTexCoord1i.?(arg_8121);
}
pub inline fn glTexCoord1iv(arg_8122: [*c]const GLint) void {
    return epoxy_glTexCoord1iv.?(arg_8122);
}
pub inline fn glTexCoord1s(arg_8123: GLshort) void {
    return epoxy_glTexCoord1s.?(arg_8123);
}
pub inline fn glTexCoord1sv(arg_8124: [*c]const GLshort) void {
    return epoxy_glTexCoord1sv.?(arg_8124);
}
pub inline fn glTexCoord1xOES(arg_8125: GLfixed) void {
    return epoxy_glTexCoord1xOES.?(arg_8125);
}
pub inline fn glTexCoord1xvOES(arg_8126: [*c]const GLfixed) void {
    return epoxy_glTexCoord1xvOES.?(arg_8126);
}
pub inline fn glTexCoord2bOES(arg_8127: GLbyte, arg_8128: GLbyte) void {
    return epoxy_glTexCoord2bOES.?(arg_8127, arg_8128);
}
pub inline fn glTexCoord2bvOES(arg_8129: [*c]const GLbyte) void {
    return epoxy_glTexCoord2bvOES.?(arg_8129);
}
pub inline fn glTexCoord2d(arg_8130: GLdouble, arg_8131: GLdouble) void {
    return epoxy_glTexCoord2d.?(arg_8130, arg_8131);
}
pub inline fn glTexCoord2dv(arg_8132: [*c]const GLdouble) void {
    return epoxy_glTexCoord2dv.?(arg_8132);
}
pub inline fn glTexCoord2f(arg_8133: GLfloat, arg_8134: GLfloat) void {
    return epoxy_glTexCoord2f.?(arg_8133, arg_8134);
}
pub inline fn glTexCoord2fColor3fVertex3fSUN(arg_8135: GLfloat, arg_8136: GLfloat, arg_8137: GLfloat, arg_8138: GLfloat, arg_8139: GLfloat, arg_8140: GLfloat, arg_8141: GLfloat, arg_8142: GLfloat) void {
    return epoxy_glTexCoord2fColor3fVertex3fSUN.?(arg_8135, arg_8136, arg_8137, arg_8138, arg_8139, arg_8140, arg_8141, arg_8142);
}
pub inline fn glTexCoord2fColor3fVertex3fvSUN(arg_8143: [*c]const GLfloat, arg_8144: [*c]const GLfloat, arg_8145: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fColor3fVertex3fvSUN.?(arg_8143, arg_8144, arg_8145);
}
pub inline fn glTexCoord2fColor4fNormal3fVertex3fSUN(arg_8146: GLfloat, arg_8147: GLfloat, arg_8148: GLfloat, arg_8149: GLfloat, arg_8150: GLfloat, arg_8151: GLfloat, arg_8152: GLfloat, arg_8153: GLfloat, arg_8154: GLfloat, arg_8155: GLfloat, arg_8156: GLfloat, arg_8157: GLfloat) void {
    return epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN.?(arg_8146, arg_8147, arg_8148, arg_8149, arg_8150, arg_8151, arg_8152, arg_8153, arg_8154, arg_8155, arg_8156, arg_8157);
}
pub inline fn glTexCoord2fColor4fNormal3fVertex3fvSUN(arg_8158: [*c]const GLfloat, arg_8159: [*c]const GLfloat, arg_8160: [*c]const GLfloat, arg_8161: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN.?(arg_8158, arg_8159, arg_8160, arg_8161);
}
pub inline fn glTexCoord2fColor4ubVertex3fSUN(arg_8162: GLfloat, arg_8163: GLfloat, arg_8164: GLubyte, arg_8165: GLubyte, arg_8166: GLubyte, arg_8167: GLubyte, arg_8168: GLfloat, arg_8169: GLfloat, arg_8170: GLfloat) void {
    return epoxy_glTexCoord2fColor4ubVertex3fSUN.?(arg_8162, arg_8163, arg_8164, arg_8165, arg_8166, arg_8167, arg_8168, arg_8169, arg_8170);
}
pub inline fn glTexCoord2fColor4ubVertex3fvSUN(arg_8171: [*c]const GLfloat, arg_8172: [*c]const GLubyte, arg_8173: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fColor4ubVertex3fvSUN.?(arg_8171, arg_8172, arg_8173);
}
pub inline fn glTexCoord2fNormal3fVertex3fSUN(arg_8174: GLfloat, arg_8175: GLfloat, arg_8176: GLfloat, arg_8177: GLfloat, arg_8178: GLfloat, arg_8179: GLfloat, arg_8180: GLfloat, arg_8181: GLfloat) void {
    return epoxy_glTexCoord2fNormal3fVertex3fSUN.?(arg_8174, arg_8175, arg_8176, arg_8177, arg_8178, arg_8179, arg_8180, arg_8181);
}
pub inline fn glTexCoord2fNormal3fVertex3fvSUN(arg_8182: [*c]const GLfloat, arg_8183: [*c]const GLfloat, arg_8184: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fNormal3fVertex3fvSUN.?(arg_8182, arg_8183, arg_8184);
}
pub inline fn glTexCoord2fVertex3fSUN(arg_8185: GLfloat, arg_8186: GLfloat, arg_8187: GLfloat, arg_8188: GLfloat, arg_8189: GLfloat) void {
    return epoxy_glTexCoord2fVertex3fSUN.?(arg_8185, arg_8186, arg_8187, arg_8188, arg_8189);
}
pub inline fn glTexCoord2fVertex3fvSUN(arg_8190: [*c]const GLfloat, arg_8191: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fVertex3fvSUN.?(arg_8190, arg_8191);
}
pub inline fn glTexCoord2fv(arg_8192: [*c]const GLfloat) void {
    return epoxy_glTexCoord2fv.?(arg_8192);
}
pub inline fn glTexCoord2hNV(arg_8193: GLhalfNV, arg_8194: GLhalfNV) void {
    return epoxy_glTexCoord2hNV.?(arg_8193, arg_8194);
}
pub inline fn glTexCoord2hvNV(arg_8195: [*c]const GLhalfNV) void {
    return epoxy_glTexCoord2hvNV.?(arg_8195);
}
pub inline fn glTexCoord2i(arg_8196: GLint, arg_8197: GLint) void {
    return epoxy_glTexCoord2i.?(arg_8196, arg_8197);
}
pub inline fn glTexCoord2iv(arg_8198: [*c]const GLint) void {
    return epoxy_glTexCoord2iv.?(arg_8198);
}
pub inline fn glTexCoord2s(arg_8199: GLshort, arg_8200: GLshort) void {
    return epoxy_glTexCoord2s.?(arg_8199, arg_8200);
}
pub inline fn glTexCoord2sv(arg_8201: [*c]const GLshort) void {
    return epoxy_glTexCoord2sv.?(arg_8201);
}
pub inline fn glTexCoord2xOES(arg_8202: GLfixed, arg_8203: GLfixed) void {
    return epoxy_glTexCoord2xOES.?(arg_8202, arg_8203);
}
pub inline fn glTexCoord2xvOES(arg_8204: [*c]const GLfixed) void {
    return epoxy_glTexCoord2xvOES.?(arg_8204);
}
pub inline fn glTexCoord3bOES(arg_8205: GLbyte, arg_8206: GLbyte, arg_8207: GLbyte) void {
    return epoxy_glTexCoord3bOES.?(arg_8205, arg_8206, arg_8207);
}
pub inline fn glTexCoord3bvOES(arg_8208: [*c]const GLbyte) void {
    return epoxy_glTexCoord3bvOES.?(arg_8208);
}
pub inline fn glTexCoord3d(arg_8209: GLdouble, arg_8210: GLdouble, arg_8211: GLdouble) void {
    return epoxy_glTexCoord3d.?(arg_8209, arg_8210, arg_8211);
}
pub inline fn glTexCoord3dv(arg_8212: [*c]const GLdouble) void {
    return epoxy_glTexCoord3dv.?(arg_8212);
}
pub inline fn glTexCoord3f(arg_8213: GLfloat, arg_8214: GLfloat, arg_8215: GLfloat) void {
    return epoxy_glTexCoord3f.?(arg_8213, arg_8214, arg_8215);
}
pub inline fn glTexCoord3fv(arg_8216: [*c]const GLfloat) void {
    return epoxy_glTexCoord3fv.?(arg_8216);
}
pub inline fn glTexCoord3hNV(arg_8217: GLhalfNV, arg_8218: GLhalfNV, arg_8219: GLhalfNV) void {
    return epoxy_glTexCoord3hNV.?(arg_8217, arg_8218, arg_8219);
}
pub inline fn glTexCoord3hvNV(arg_8220: [*c]const GLhalfNV) void {
    return epoxy_glTexCoord3hvNV.?(arg_8220);
}
pub inline fn glTexCoord3i(arg_8221: GLint, arg_8222: GLint, arg_8223: GLint) void {
    return epoxy_glTexCoord3i.?(arg_8221, arg_8222, arg_8223);
}
pub inline fn glTexCoord3iv(arg_8224: [*c]const GLint) void {
    return epoxy_glTexCoord3iv.?(arg_8224);
}
pub inline fn glTexCoord3s(arg_8225: GLshort, arg_8226: GLshort, arg_8227: GLshort) void {
    return epoxy_glTexCoord3s.?(arg_8225, arg_8226, arg_8227);
}
pub inline fn glTexCoord3sv(arg_8228: [*c]const GLshort) void {
    return epoxy_glTexCoord3sv.?(arg_8228);
}
pub inline fn glTexCoord3xOES(arg_8229: GLfixed, arg_8230: GLfixed, arg_8231: GLfixed) void {
    return epoxy_glTexCoord3xOES.?(arg_8229, arg_8230, arg_8231);
}
pub inline fn glTexCoord3xvOES(arg_8232: [*c]const GLfixed) void {
    return epoxy_glTexCoord3xvOES.?(arg_8232);
}
pub inline fn glTexCoord4bOES(arg_8233: GLbyte, arg_8234: GLbyte, arg_8235: GLbyte, arg_8236: GLbyte) void {
    return epoxy_glTexCoord4bOES.?(arg_8233, arg_8234, arg_8235, arg_8236);
}
pub inline fn glTexCoord4bvOES(arg_8237: [*c]const GLbyte) void {
    return epoxy_glTexCoord4bvOES.?(arg_8237);
}
pub inline fn glTexCoord4d(arg_8238: GLdouble, arg_8239: GLdouble, arg_8240: GLdouble, arg_8241: GLdouble) void {
    return epoxy_glTexCoord4d.?(arg_8238, arg_8239, arg_8240, arg_8241);
}
pub inline fn glTexCoord4dv(arg_8242: [*c]const GLdouble) void {
    return epoxy_glTexCoord4dv.?(arg_8242);
}
pub inline fn glTexCoord4f(arg_8243: GLfloat, arg_8244: GLfloat, arg_8245: GLfloat, arg_8246: GLfloat) void {
    return epoxy_glTexCoord4f.?(arg_8243, arg_8244, arg_8245, arg_8246);
}
pub inline fn glTexCoord4fColor4fNormal3fVertex4fSUN(arg_8247: GLfloat, arg_8248: GLfloat, arg_8249: GLfloat, arg_8250: GLfloat, arg_8251: GLfloat, arg_8252: GLfloat, arg_8253: GLfloat, arg_8254: GLfloat, arg_8255: GLfloat, arg_8256: GLfloat, arg_8257: GLfloat, arg_8258: GLfloat, arg_8259: GLfloat, arg_8260: GLfloat, arg_8261: GLfloat) void {
    return epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN.?(arg_8247, arg_8248, arg_8249, arg_8250, arg_8251, arg_8252, arg_8253, arg_8254, arg_8255, arg_8256, arg_8257, arg_8258, arg_8259, arg_8260, arg_8261);
}
pub inline fn glTexCoord4fColor4fNormal3fVertex4fvSUN(arg_8262: [*c]const GLfloat, arg_8263: [*c]const GLfloat, arg_8264: [*c]const GLfloat, arg_8265: [*c]const GLfloat) void {
    return epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN.?(arg_8262, arg_8263, arg_8264, arg_8265);
}
pub inline fn glTexCoord4fVertex4fSUN(arg_8266: GLfloat, arg_8267: GLfloat, arg_8268: GLfloat, arg_8269: GLfloat, arg_8270: GLfloat, arg_8271: GLfloat, arg_8272: GLfloat, arg_8273: GLfloat) void {
    return epoxy_glTexCoord4fVertex4fSUN.?(arg_8266, arg_8267, arg_8268, arg_8269, arg_8270, arg_8271, arg_8272, arg_8273);
}
pub inline fn glTexCoord4fVertex4fvSUN(arg_8274: [*c]const GLfloat, arg_8275: [*c]const GLfloat) void {
    return epoxy_glTexCoord4fVertex4fvSUN.?(arg_8274, arg_8275);
}
pub inline fn glTexCoord4fv(arg_8276: [*c]const GLfloat) void {
    return epoxy_glTexCoord4fv.?(arg_8276);
}
pub inline fn glTexCoord4hNV(arg_8277: GLhalfNV, arg_8278: GLhalfNV, arg_8279: GLhalfNV, arg_8280: GLhalfNV) void {
    return epoxy_glTexCoord4hNV.?(arg_8277, arg_8278, arg_8279, arg_8280);
}
pub inline fn glTexCoord4hvNV(arg_8281: [*c]const GLhalfNV) void {
    return epoxy_glTexCoord4hvNV.?(arg_8281);
}
pub inline fn glTexCoord4i(arg_8282: GLint, arg_8283: GLint, arg_8284: GLint, arg_8285: GLint) void {
    return epoxy_glTexCoord4i.?(arg_8282, arg_8283, arg_8284, arg_8285);
}
pub inline fn glTexCoord4iv(arg_8286: [*c]const GLint) void {
    return epoxy_glTexCoord4iv.?(arg_8286);
}
pub inline fn glTexCoord4s(arg_8287: GLshort, arg_8288: GLshort, arg_8289: GLshort, arg_8290: GLshort) void {
    return epoxy_glTexCoord4s.?(arg_8287, arg_8288, arg_8289, arg_8290);
}
pub inline fn glTexCoord4sv(arg_8291: [*c]const GLshort) void {
    return epoxy_glTexCoord4sv.?(arg_8291);
}
pub inline fn glTexCoord4xOES(arg_8292: GLfixed, arg_8293: GLfixed, arg_8294: GLfixed, arg_8295: GLfixed) void {
    return epoxy_glTexCoord4xOES.?(arg_8292, arg_8293, arg_8294, arg_8295);
}
pub inline fn glTexCoord4xvOES(arg_8296: [*c]const GLfixed) void {
    return epoxy_glTexCoord4xvOES.?(arg_8296);
}
pub inline fn glTexCoordFormatNV(arg_8297: GLint, arg_8298: GLenum, arg_8299: GLsizei) void {
    return epoxy_glTexCoordFormatNV.?(arg_8297, arg_8298, arg_8299);
}
pub inline fn glTexCoordP1ui(arg_8300: GLenum, arg_8301: GLuint) void {
    return epoxy_glTexCoordP1ui.?(arg_8300, arg_8301);
}
pub inline fn glTexCoordP1uiv(arg_8302: GLenum, arg_8303: [*c]const GLuint) void {
    return epoxy_glTexCoordP1uiv.?(arg_8302, arg_8303);
}
pub inline fn glTexCoordP2ui(arg_8304: GLenum, arg_8305: GLuint) void {
    return epoxy_glTexCoordP2ui.?(arg_8304, arg_8305);
}
pub inline fn glTexCoordP2uiv(arg_8306: GLenum, arg_8307: [*c]const GLuint) void {
    return epoxy_glTexCoordP2uiv.?(arg_8306, arg_8307);
}
pub inline fn glTexCoordP3ui(arg_8308: GLenum, arg_8309: GLuint) void {
    return epoxy_glTexCoordP3ui.?(arg_8308, arg_8309);
}
pub inline fn glTexCoordP3uiv(arg_8310: GLenum, arg_8311: [*c]const GLuint) void {
    return epoxy_glTexCoordP3uiv.?(arg_8310, arg_8311);
}
pub inline fn glTexCoordP4ui(arg_8312: GLenum, arg_8313: GLuint) void {
    return epoxy_glTexCoordP4ui.?(arg_8312, arg_8313);
}
pub inline fn glTexCoordP4uiv(arg_8314: GLenum, arg_8315: [*c]const GLuint) void {
    return epoxy_glTexCoordP4uiv.?(arg_8314, arg_8315);
}
pub inline fn glTexCoordPointer(arg_8316: GLint, arg_8317: GLenum, arg_8318: GLsizei, arg_8319: ?*const anyopaque) void {
    return epoxy_glTexCoordPointer.?(arg_8316, arg_8317, arg_8318, arg_8319);
}
pub inline fn glTexCoordPointerEXT(arg_8320: GLint, arg_8321: GLenum, arg_8322: GLsizei, arg_8323: GLsizei, arg_8324: ?*const anyopaque) void {
    return epoxy_glTexCoordPointerEXT.?(arg_8320, arg_8321, arg_8322, arg_8323, arg_8324);
}
pub inline fn glTexCoordPointerListIBM(arg_8325: GLint, arg_8326: GLenum, arg_8327: GLint, arg_8328: [*c]?*const anyopaque, arg_8329: GLint) void {
    return epoxy_glTexCoordPointerListIBM.?(arg_8325, arg_8326, arg_8327, arg_8328, arg_8329);
}
pub inline fn glTexCoordPointervINTEL(arg_8330: GLint, arg_8331: GLenum, arg_8332: [*c]?*const anyopaque) void {
    return epoxy_glTexCoordPointervINTEL.?(arg_8330, arg_8331, arg_8332);
}
pub inline fn glTexEnvf(arg_8333: GLenum, arg_8334: GLenum, arg_8335: GLfloat) void {
    return epoxy_glTexEnvf.?(arg_8333, arg_8334, arg_8335);
}
pub inline fn glTexEnvfv(arg_8336: GLenum, arg_8337: GLenum, arg_8338: [*c]const GLfloat) void {
    return epoxy_glTexEnvfv.?(arg_8336, arg_8337, arg_8338);
}
pub inline fn glTexEnvi(arg_8339: GLenum, arg_8340: GLenum, arg_8341: GLint) void {
    return epoxy_glTexEnvi.?(arg_8339, arg_8340, arg_8341);
}
pub inline fn glTexEnviv(arg_8342: GLenum, arg_8343: GLenum, arg_8344: [*c]const GLint) void {
    return epoxy_glTexEnviv.?(arg_8342, arg_8343, arg_8344);
}
pub inline fn glTexEnvx(arg_8345: GLenum, arg_8346: GLenum, arg_8347: GLfixed) void {
    return epoxy_glTexEnvx.?(arg_8345, arg_8346, arg_8347);
}
pub inline fn glTexEnvxOES(arg_8348: GLenum, arg_8349: GLenum, arg_8350: GLfixed) void {
    return epoxy_glTexEnvxOES.?(arg_8348, arg_8349, arg_8350);
}
pub inline fn glTexEnvxv(arg_8351: GLenum, arg_8352: GLenum, arg_8353: [*c]const GLfixed) void {
    return epoxy_glTexEnvxv.?(arg_8351, arg_8352, arg_8353);
}
pub inline fn glTexEnvxvOES(arg_8354: GLenum, arg_8355: GLenum, arg_8356: [*c]const GLfixed) void {
    return epoxy_glTexEnvxvOES.?(arg_8354, arg_8355, arg_8356);
}
pub inline fn glTexFilterFuncSGIS(arg_8357: GLenum, arg_8358: GLenum, arg_8359: GLsizei, arg_8360: [*c]const GLfloat) void {
    return epoxy_glTexFilterFuncSGIS.?(arg_8357, arg_8358, arg_8359, arg_8360);
}
pub inline fn glTexGend(arg_8361: GLenum, arg_8362: GLenum, arg_8363: GLdouble) void {
    return epoxy_glTexGend.?(arg_8361, arg_8362, arg_8363);
}
pub inline fn glTexGendv(arg_8364: GLenum, arg_8365: GLenum, arg_8366: [*c]const GLdouble) void {
    return epoxy_glTexGendv.?(arg_8364, arg_8365, arg_8366);
}
pub inline fn glTexGenf(arg_8367: GLenum, arg_8368: GLenum, arg_8369: GLfloat) void {
    return epoxy_glTexGenf.?(arg_8367, arg_8368, arg_8369);
}
pub inline fn glTexGenfOES(arg_8370: GLenum, arg_8371: GLenum, arg_8372: GLfloat) void {
    return epoxy_glTexGenfOES.?(arg_8370, arg_8371, arg_8372);
}
pub inline fn glTexGenfv(arg_8373: GLenum, arg_8374: GLenum, arg_8375: [*c]const GLfloat) void {
    return epoxy_glTexGenfv.?(arg_8373, arg_8374, arg_8375);
}
pub inline fn glTexGenfvOES(arg_8376: GLenum, arg_8377: GLenum, arg_8378: [*c]const GLfloat) void {
    return epoxy_glTexGenfvOES.?(arg_8376, arg_8377, arg_8378);
}
pub inline fn glTexGeni(arg_8379: GLenum, arg_8380: GLenum, arg_8381: GLint) void {
    return epoxy_glTexGeni.?(arg_8379, arg_8380, arg_8381);
}
pub inline fn glTexGeniOES(arg_8382: GLenum, arg_8383: GLenum, arg_8384: GLint) void {
    return epoxy_glTexGeniOES.?(arg_8382, arg_8383, arg_8384);
}
pub inline fn glTexGeniv(arg_8385: GLenum, arg_8386: GLenum, arg_8387: [*c]const GLint) void {
    return epoxy_glTexGeniv.?(arg_8385, arg_8386, arg_8387);
}
pub inline fn glTexGenivOES(arg_8388: GLenum, arg_8389: GLenum, arg_8390: [*c]const GLint) void {
    return epoxy_glTexGenivOES.?(arg_8388, arg_8389, arg_8390);
}
pub inline fn glTexGenxOES(arg_8391: GLenum, arg_8392: GLenum, arg_8393: GLfixed) void {
    return epoxy_glTexGenxOES.?(arg_8391, arg_8392, arg_8393);
}
pub inline fn glTexGenxvOES(arg_8394: GLenum, arg_8395: GLenum, arg_8396: [*c]const GLfixed) void {
    return epoxy_glTexGenxvOES.?(arg_8394, arg_8395, arg_8396);
}
pub inline fn glTexImage1D(arg_8397: GLenum, arg_8398: GLint, arg_8399: GLint, arg_8400: GLsizei, arg_8401: GLint, arg_8402: GLenum, arg_8403: GLenum, arg_8404: ?*const anyopaque) void {
    return epoxy_glTexImage1D.?(arg_8397, arg_8398, arg_8399, arg_8400, arg_8401, arg_8402, arg_8403, arg_8404);
}
pub inline fn glTexImage2D(arg_8405: GLenum, arg_8406: GLint, arg_8407: GLint, arg_8408: GLsizei, arg_8409: GLsizei, arg_8410: GLint, arg_8411: GLenum, arg_8412: GLenum, arg_8413: ?*const anyopaque) void {
    return epoxy_glTexImage2D.?(arg_8405, arg_8406, arg_8407, arg_8408, arg_8409, arg_8410, arg_8411, arg_8412, arg_8413);
}
pub inline fn glTexImage2DMultisample(arg_8414: GLenum, arg_8415: GLsizei, arg_8416: GLenum, arg_8417: GLsizei, arg_8418: GLsizei, arg_8419: GLboolean) void {
    return epoxy_glTexImage2DMultisample.?(arg_8414, arg_8415, arg_8416, arg_8417, arg_8418, arg_8419);
}
pub inline fn glTexImage2DMultisampleCoverageNV(arg_8420: GLenum, arg_8421: GLsizei, arg_8422: GLsizei, arg_8423: GLint, arg_8424: GLsizei, arg_8425: GLsizei, arg_8426: GLboolean) void {
    return epoxy_glTexImage2DMultisampleCoverageNV.?(arg_8420, arg_8421, arg_8422, arg_8423, arg_8424, arg_8425, arg_8426);
}
pub inline fn glTexImage3D(arg_8427: GLenum, arg_8428: GLint, arg_8429: GLint, arg_8430: GLsizei, arg_8431: GLsizei, arg_8432: GLsizei, arg_8433: GLint, arg_8434: GLenum, arg_8435: GLenum, arg_8436: ?*const anyopaque) void {
    return epoxy_glTexImage3D.?(arg_8427, arg_8428, arg_8429, arg_8430, arg_8431, arg_8432, arg_8433, arg_8434, arg_8435, arg_8436);
}
pub inline fn glTexImage3DEXT(arg_8437: GLenum, arg_8438: GLint, arg_8439: GLenum, arg_8440: GLsizei, arg_8441: GLsizei, arg_8442: GLsizei, arg_8443: GLint, arg_8444: GLenum, arg_8445: GLenum, arg_8446: ?*const anyopaque) void {
    return epoxy_glTexImage3DEXT.?(arg_8437, arg_8438, arg_8439, arg_8440, arg_8441, arg_8442, arg_8443, arg_8444, arg_8445, arg_8446);
}
pub inline fn glTexImage3DMultisample(arg_8447: GLenum, arg_8448: GLsizei, arg_8449: GLenum, arg_8450: GLsizei, arg_8451: GLsizei, arg_8452: GLsizei, arg_8453: GLboolean) void {
    return epoxy_glTexImage3DMultisample.?(arg_8447, arg_8448, arg_8449, arg_8450, arg_8451, arg_8452, arg_8453);
}
pub inline fn glTexImage3DMultisampleCoverageNV(arg_8454: GLenum, arg_8455: GLsizei, arg_8456: GLsizei, arg_8457: GLint, arg_8458: GLsizei, arg_8459: GLsizei, arg_8460: GLsizei, arg_8461: GLboolean) void {
    return epoxy_glTexImage3DMultisampleCoverageNV.?(arg_8454, arg_8455, arg_8456, arg_8457, arg_8458, arg_8459, arg_8460, arg_8461);
}
pub inline fn glTexImage3DOES(arg_8462: GLenum, arg_8463: GLint, arg_8464: GLenum, arg_8465: GLsizei, arg_8466: GLsizei, arg_8467: GLsizei, arg_8468: GLint, arg_8469: GLenum, arg_8470: GLenum, arg_8471: ?*const anyopaque) void {
    return epoxy_glTexImage3DOES.?(arg_8462, arg_8463, arg_8464, arg_8465, arg_8466, arg_8467, arg_8468, arg_8469, arg_8470, arg_8471);
}
pub inline fn glTexImage4DSGIS(arg_8472: GLenum, arg_8473: GLint, arg_8474: GLenum, arg_8475: GLsizei, arg_8476: GLsizei, arg_8477: GLsizei, arg_8478: GLsizei, arg_8479: GLint, arg_8480: GLenum, arg_8481: GLenum, arg_8482: ?*const anyopaque) void {
    return epoxy_glTexImage4DSGIS.?(arg_8472, arg_8473, arg_8474, arg_8475, arg_8476, arg_8477, arg_8478, arg_8479, arg_8480, arg_8481, arg_8482);
}
pub inline fn glTexPageCommitmentARB(arg_8483: GLenum, arg_8484: GLint, arg_8485: GLint, arg_8486: GLint, arg_8487: GLint, arg_8488: GLsizei, arg_8489: GLsizei, arg_8490: GLsizei, arg_8491: GLboolean) void {
    return epoxy_glTexPageCommitmentARB.?(arg_8483, arg_8484, arg_8485, arg_8486, arg_8487, arg_8488, arg_8489, arg_8490, arg_8491);
}
pub inline fn glTexPageCommitmentEXT(arg_8492: GLenum, arg_8493: GLint, arg_8494: GLint, arg_8495: GLint, arg_8496: GLint, arg_8497: GLsizei, arg_8498: GLsizei, arg_8499: GLsizei, arg_8500: GLboolean) void {
    return epoxy_glTexPageCommitmentEXT.?(arg_8492, arg_8493, arg_8494, arg_8495, arg_8496, arg_8497, arg_8498, arg_8499, arg_8500);
}
pub inline fn glTexParameterIiv(arg_8501: GLenum, arg_8502: GLenum, arg_8503: [*c]const GLint) void {
    return epoxy_glTexParameterIiv.?(arg_8501, arg_8502, arg_8503);
}
pub inline fn glTexParameterIivEXT(arg_8504: GLenum, arg_8505: GLenum, arg_8506: [*c]const GLint) void {
    return epoxy_glTexParameterIivEXT.?(arg_8504, arg_8505, arg_8506);
}
pub inline fn glTexParameterIivOES(arg_8507: GLenum, arg_8508: GLenum, arg_8509: [*c]const GLint) void {
    return epoxy_glTexParameterIivOES.?(arg_8507, arg_8508, arg_8509);
}
pub inline fn glTexParameterIuiv(arg_8510: GLenum, arg_8511: GLenum, arg_8512: [*c]const GLuint) void {
    return epoxy_glTexParameterIuiv.?(arg_8510, arg_8511, arg_8512);
}
pub inline fn glTexParameterIuivEXT(arg_8513: GLenum, arg_8514: GLenum, arg_8515: [*c]const GLuint) void {
    return epoxy_glTexParameterIuivEXT.?(arg_8513, arg_8514, arg_8515);
}
pub inline fn glTexParameterIuivOES(arg_8516: GLenum, arg_8517: GLenum, arg_8518: [*c]const GLuint) void {
    return epoxy_glTexParameterIuivOES.?(arg_8516, arg_8517, arg_8518);
}
pub inline fn glTexParameterf(arg_8519: GLenum, arg_8520: GLenum, arg_8521: GLfloat) void {
    return epoxy_glTexParameterf.?(arg_8519, arg_8520, arg_8521);
}
pub inline fn glTexParameterfv(arg_8522: GLenum, arg_8523: GLenum, arg_8524: [*c]const GLfloat) void {
    return epoxy_glTexParameterfv.?(arg_8522, arg_8523, arg_8524);
}
pub inline fn glTexParameteri(arg_8525: GLenum, arg_8526: GLenum, arg_8527: GLint) void {
    return epoxy_glTexParameteri.?(arg_8525, arg_8526, arg_8527);
}
pub inline fn glTexParameteriv(arg_8528: GLenum, arg_8529: GLenum, arg_8530: [*c]const GLint) void {
    return epoxy_glTexParameteriv.?(arg_8528, arg_8529, arg_8530);
}
pub inline fn glTexParameterx(arg_8531: GLenum, arg_8532: GLenum, arg_8533: GLfixed) void {
    return epoxy_glTexParameterx.?(arg_8531, arg_8532, arg_8533);
}
pub inline fn glTexParameterxOES(arg_8534: GLenum, arg_8535: GLenum, arg_8536: GLfixed) void {
    return epoxy_glTexParameterxOES.?(arg_8534, arg_8535, arg_8536);
}
pub inline fn glTexParameterxv(arg_8537: GLenum, arg_8538: GLenum, arg_8539: [*c]const GLfixed) void {
    return epoxy_glTexParameterxv.?(arg_8537, arg_8538, arg_8539);
}
pub inline fn glTexParameterxvOES(arg_8540: GLenum, arg_8541: GLenum, arg_8542: [*c]const GLfixed) void {
    return epoxy_glTexParameterxvOES.?(arg_8540, arg_8541, arg_8542);
}
pub inline fn glTexRenderbufferNV(arg_8543: GLenum, arg_8544: GLuint) void {
    return epoxy_glTexRenderbufferNV.?(arg_8543, arg_8544);
}
pub inline fn glTexStorage1D(arg_8545: GLenum, arg_8546: GLsizei, arg_8547: GLenum, arg_8548: GLsizei) void {
    return epoxy_glTexStorage1D.?(arg_8545, arg_8546, arg_8547, arg_8548);
}
pub inline fn glTexStorage1DEXT(arg_8549: GLenum, arg_8550: GLsizei, arg_8551: GLenum, arg_8552: GLsizei) void {
    return epoxy_glTexStorage1DEXT.?(arg_8549, arg_8550, arg_8551, arg_8552);
}
pub inline fn glTexStorage2D(arg_8553: GLenum, arg_8554: GLsizei, arg_8555: GLenum, arg_8556: GLsizei, arg_8557: GLsizei) void {
    return epoxy_glTexStorage2D.?(arg_8553, arg_8554, arg_8555, arg_8556, arg_8557);
}
pub inline fn glTexStorage2DEXT(arg_8558: GLenum, arg_8559: GLsizei, arg_8560: GLenum, arg_8561: GLsizei, arg_8562: GLsizei) void {
    return epoxy_glTexStorage2DEXT.?(arg_8558, arg_8559, arg_8560, arg_8561, arg_8562);
}
pub inline fn glTexStorage2DMultisample(arg_8563: GLenum, arg_8564: GLsizei, arg_8565: GLenum, arg_8566: GLsizei, arg_8567: GLsizei, arg_8568: GLboolean) void {
    return epoxy_glTexStorage2DMultisample.?(arg_8563, arg_8564, arg_8565, arg_8566, arg_8567, arg_8568);
}
pub inline fn glTexStorage3D(arg_8569: GLenum, arg_8570: GLsizei, arg_8571: GLenum, arg_8572: GLsizei, arg_8573: GLsizei, arg_8574: GLsizei) void {
    return epoxy_glTexStorage3D.?(arg_8569, arg_8570, arg_8571, arg_8572, arg_8573, arg_8574);
}
pub inline fn glTexStorage3DEXT(arg_8575: GLenum, arg_8576: GLsizei, arg_8577: GLenum, arg_8578: GLsizei, arg_8579: GLsizei, arg_8580: GLsizei) void {
    return epoxy_glTexStorage3DEXT.?(arg_8575, arg_8576, arg_8577, arg_8578, arg_8579, arg_8580);
}
pub inline fn glTexStorage3DMultisample(arg_8581: GLenum, arg_8582: GLsizei, arg_8583: GLenum, arg_8584: GLsizei, arg_8585: GLsizei, arg_8586: GLsizei, arg_8587: GLboolean) void {
    return epoxy_glTexStorage3DMultisample.?(arg_8581, arg_8582, arg_8583, arg_8584, arg_8585, arg_8586, arg_8587);
}
pub inline fn glTexStorage3DMultisampleOES(arg_8588: GLenum, arg_8589: GLsizei, arg_8590: GLenum, arg_8591: GLsizei, arg_8592: GLsizei, arg_8593: GLsizei, arg_8594: GLboolean) void {
    return epoxy_glTexStorage3DMultisampleOES.?(arg_8588, arg_8589, arg_8590, arg_8591, arg_8592, arg_8593, arg_8594);
}
pub inline fn glTexStorageMem1DEXT(arg_8595: GLenum, arg_8596: GLsizei, arg_8597: GLenum, arg_8598: GLsizei, arg_8599: GLuint, arg_8600: GLuint64) void {
    return epoxy_glTexStorageMem1DEXT.?(arg_8595, arg_8596, arg_8597, arg_8598, arg_8599, arg_8600);
}
pub inline fn glTexStorageMem2DEXT(arg_8601: GLenum, arg_8602: GLsizei, arg_8603: GLenum, arg_8604: GLsizei, arg_8605: GLsizei, arg_8606: GLuint, arg_8607: GLuint64) void {
    return epoxy_glTexStorageMem2DEXT.?(arg_8601, arg_8602, arg_8603, arg_8604, arg_8605, arg_8606, arg_8607);
}
pub inline fn glTexStorageMem2DMultisampleEXT(arg_8608: GLenum, arg_8609: GLsizei, arg_8610: GLenum, arg_8611: GLsizei, arg_8612: GLsizei, arg_8613: GLboolean, arg_8614: GLuint, arg_8615: GLuint64) void {
    return epoxy_glTexStorageMem2DMultisampleEXT.?(arg_8608, arg_8609, arg_8610, arg_8611, arg_8612, arg_8613, arg_8614, arg_8615);
}
pub inline fn glTexStorageMem3DEXT(arg_8616: GLenum, arg_8617: GLsizei, arg_8618: GLenum, arg_8619: GLsizei, arg_8620: GLsizei, arg_8621: GLsizei, arg_8622: GLuint, arg_8623: GLuint64) void {
    return epoxy_glTexStorageMem3DEXT.?(arg_8616, arg_8617, arg_8618, arg_8619, arg_8620, arg_8621, arg_8622, arg_8623);
}
pub inline fn glTexStorageMem3DMultisampleEXT(arg_8624: GLenum, arg_8625: GLsizei, arg_8626: GLenum, arg_8627: GLsizei, arg_8628: GLsizei, arg_8629: GLsizei, arg_8630: GLboolean, arg_8631: GLuint, arg_8632: GLuint64) void {
    return epoxy_glTexStorageMem3DMultisampleEXT.?(arg_8624, arg_8625, arg_8626, arg_8627, arg_8628, arg_8629, arg_8630, arg_8631, arg_8632);
}
pub inline fn glTexStorageSparseAMD(arg_8633: GLenum, arg_8634: GLenum, arg_8635: GLsizei, arg_8636: GLsizei, arg_8637: GLsizei, arg_8638: GLsizei, arg_8639: GLbitfield) void {
    return epoxy_glTexStorageSparseAMD.?(arg_8633, arg_8634, arg_8635, arg_8636, arg_8637, arg_8638, arg_8639);
}
pub inline fn glTexSubImage1D(arg_8640: GLenum, arg_8641: GLint, arg_8642: GLint, arg_8643: GLsizei, arg_8644: GLenum, arg_8645: GLenum, arg_8646: ?*const anyopaque) void {
    return epoxy_glTexSubImage1D.?(arg_8640, arg_8641, arg_8642, arg_8643, arg_8644, arg_8645, arg_8646);
}
pub inline fn glTexSubImage1DEXT(arg_8647: GLenum, arg_8648: GLint, arg_8649: GLint, arg_8650: GLsizei, arg_8651: GLenum, arg_8652: GLenum, arg_8653: ?*const anyopaque) void {
    return epoxy_glTexSubImage1DEXT.?(arg_8647, arg_8648, arg_8649, arg_8650, arg_8651, arg_8652, arg_8653);
}
pub inline fn glTexSubImage2D(arg_8654: GLenum, arg_8655: GLint, arg_8656: GLint, arg_8657: GLint, arg_8658: GLsizei, arg_8659: GLsizei, arg_8660: GLenum, arg_8661: GLenum, arg_8662: ?*const anyopaque) void {
    return epoxy_glTexSubImage2D.?(arg_8654, arg_8655, arg_8656, arg_8657, arg_8658, arg_8659, arg_8660, arg_8661, arg_8662);
}
pub inline fn glTexSubImage2DEXT(arg_8663: GLenum, arg_8664: GLint, arg_8665: GLint, arg_8666: GLint, arg_8667: GLsizei, arg_8668: GLsizei, arg_8669: GLenum, arg_8670: GLenum, arg_8671: ?*const anyopaque) void {
    return epoxy_glTexSubImage2DEXT.?(arg_8663, arg_8664, arg_8665, arg_8666, arg_8667, arg_8668, arg_8669, arg_8670, arg_8671);
}
pub inline fn glTexSubImage3D(arg_8672: GLenum, arg_8673: GLint, arg_8674: GLint, arg_8675: GLint, arg_8676: GLint, arg_8677: GLsizei, arg_8678: GLsizei, arg_8679: GLsizei, arg_8680: GLenum, arg_8681: GLenum, arg_8682: ?*const anyopaque) void {
    return epoxy_glTexSubImage3D.?(arg_8672, arg_8673, arg_8674, arg_8675, arg_8676, arg_8677, arg_8678, arg_8679, arg_8680, arg_8681, arg_8682);
}
pub inline fn glTexSubImage3DEXT(arg_8683: GLenum, arg_8684: GLint, arg_8685: GLint, arg_8686: GLint, arg_8687: GLint, arg_8688: GLsizei, arg_8689: GLsizei, arg_8690: GLsizei, arg_8691: GLenum, arg_8692: GLenum, arg_8693: ?*const anyopaque) void {
    return epoxy_glTexSubImage3DEXT.?(arg_8683, arg_8684, arg_8685, arg_8686, arg_8687, arg_8688, arg_8689, arg_8690, arg_8691, arg_8692, arg_8693);
}
pub inline fn glTexSubImage3DOES(arg_8694: GLenum, arg_8695: GLint, arg_8696: GLint, arg_8697: GLint, arg_8698: GLint, arg_8699: GLsizei, arg_8700: GLsizei, arg_8701: GLsizei, arg_8702: GLenum, arg_8703: GLenum, arg_8704: ?*const anyopaque) void {
    return epoxy_glTexSubImage3DOES.?(arg_8694, arg_8695, arg_8696, arg_8697, arg_8698, arg_8699, arg_8700, arg_8701, arg_8702, arg_8703, arg_8704);
}
pub inline fn glTexSubImage4DSGIS(arg_8705: GLenum, arg_8706: GLint, arg_8707: GLint, arg_8708: GLint, arg_8709: GLint, arg_8710: GLint, arg_8711: GLsizei, arg_8712: GLsizei, arg_8713: GLsizei, arg_8714: GLsizei, arg_8715: GLenum, arg_8716: GLenum, arg_8717: ?*const anyopaque) void {
    return epoxy_glTexSubImage4DSGIS.?(arg_8705, arg_8706, arg_8707, arg_8708, arg_8709, arg_8710, arg_8711, arg_8712, arg_8713, arg_8714, arg_8715, arg_8716, arg_8717);
}
pub inline fn glTextureAttachMemoryNV(arg_8718: GLuint, arg_8719: GLuint, arg_8720: GLuint64) void {
    return epoxy_glTextureAttachMemoryNV.?(arg_8718, arg_8719, arg_8720);
}
pub inline fn glTextureBarrier() void {
    return epoxy_glTextureBarrier.?();
}
pub inline fn glTextureBarrierNV() void {
    return epoxy_glTextureBarrierNV.?();
}
pub inline fn glTextureBuffer(arg_8721: GLuint, arg_8722: GLenum, arg_8723: GLuint) void {
    return epoxy_glTextureBuffer.?(arg_8721, arg_8722, arg_8723);
}
pub inline fn glTextureBufferEXT(arg_8724: GLuint, arg_8725: GLenum, arg_8726: GLenum, arg_8727: GLuint) void {
    return epoxy_glTextureBufferEXT.?(arg_8724, arg_8725, arg_8726, arg_8727);
}
pub inline fn glTextureBufferRange(arg_8728: GLuint, arg_8729: GLenum, arg_8730: GLuint, arg_8731: GLintptr, arg_8732: GLsizeiptr) void {
    return epoxy_glTextureBufferRange.?(arg_8728, arg_8729, arg_8730, arg_8731, arg_8732);
}
pub inline fn glTextureBufferRangeEXT(arg_8733: GLuint, arg_8734: GLenum, arg_8735: GLenum, arg_8736: GLuint, arg_8737: GLintptr, arg_8738: GLsizeiptr) void {
    return epoxy_glTextureBufferRangeEXT.?(arg_8733, arg_8734, arg_8735, arg_8736, arg_8737, arg_8738);
}
pub inline fn glTextureColorMaskSGIS(arg_8739: GLboolean, arg_8740: GLboolean, arg_8741: GLboolean, arg_8742: GLboolean) void {
    return epoxy_glTextureColorMaskSGIS.?(arg_8739, arg_8740, arg_8741, arg_8742);
}
pub inline fn glTextureFoveationParametersQCOM(arg_8743: GLuint, arg_8744: GLuint, arg_8745: GLuint, arg_8746: GLfloat, arg_8747: GLfloat, arg_8748: GLfloat, arg_8749: GLfloat, arg_8750: GLfloat) void {
    return epoxy_glTextureFoveationParametersQCOM.?(arg_8743, arg_8744, arg_8745, arg_8746, arg_8747, arg_8748, arg_8749, arg_8750);
}
pub inline fn glTextureImage1DEXT(arg_8751: GLuint, arg_8752: GLenum, arg_8753: GLint, arg_8754: GLint, arg_8755: GLsizei, arg_8756: GLint, arg_8757: GLenum, arg_8758: GLenum, arg_8759: ?*const anyopaque) void {
    return epoxy_glTextureImage1DEXT.?(arg_8751, arg_8752, arg_8753, arg_8754, arg_8755, arg_8756, arg_8757, arg_8758, arg_8759);
}
pub inline fn glTextureImage2DEXT(arg_8760: GLuint, arg_8761: GLenum, arg_8762: GLint, arg_8763: GLint, arg_8764: GLsizei, arg_8765: GLsizei, arg_8766: GLint, arg_8767: GLenum, arg_8768: GLenum, arg_8769: ?*const anyopaque) void {
    return epoxy_glTextureImage2DEXT.?(arg_8760, arg_8761, arg_8762, arg_8763, arg_8764, arg_8765, arg_8766, arg_8767, arg_8768, arg_8769);
}
pub inline fn glTextureImage2DMultisampleCoverageNV(arg_8770: GLuint, arg_8771: GLenum, arg_8772: GLsizei, arg_8773: GLsizei, arg_8774: GLint, arg_8775: GLsizei, arg_8776: GLsizei, arg_8777: GLboolean) void {
    return epoxy_glTextureImage2DMultisampleCoverageNV.?(arg_8770, arg_8771, arg_8772, arg_8773, arg_8774, arg_8775, arg_8776, arg_8777);
}
pub inline fn glTextureImage2DMultisampleNV(arg_8778: GLuint, arg_8779: GLenum, arg_8780: GLsizei, arg_8781: GLint, arg_8782: GLsizei, arg_8783: GLsizei, arg_8784: GLboolean) void {
    return epoxy_glTextureImage2DMultisampleNV.?(arg_8778, arg_8779, arg_8780, arg_8781, arg_8782, arg_8783, arg_8784);
}
pub inline fn glTextureImage3DEXT(arg_8785: GLuint, arg_8786: GLenum, arg_8787: GLint, arg_8788: GLint, arg_8789: GLsizei, arg_8790: GLsizei, arg_8791: GLsizei, arg_8792: GLint, arg_8793: GLenum, arg_8794: GLenum, arg_8795: ?*const anyopaque) void {
    return epoxy_glTextureImage3DEXT.?(arg_8785, arg_8786, arg_8787, arg_8788, arg_8789, arg_8790, arg_8791, arg_8792, arg_8793, arg_8794, arg_8795);
}
pub inline fn glTextureImage3DMultisampleCoverageNV(arg_8796: GLuint, arg_8797: GLenum, arg_8798: GLsizei, arg_8799: GLsizei, arg_8800: GLint, arg_8801: GLsizei, arg_8802: GLsizei, arg_8803: GLsizei, arg_8804: GLboolean) void {
    return epoxy_glTextureImage3DMultisampleCoverageNV.?(arg_8796, arg_8797, arg_8798, arg_8799, arg_8800, arg_8801, arg_8802, arg_8803, arg_8804);
}
pub inline fn glTextureImage3DMultisampleNV(arg_8805: GLuint, arg_8806: GLenum, arg_8807: GLsizei, arg_8808: GLint, arg_8809: GLsizei, arg_8810: GLsizei, arg_8811: GLsizei, arg_8812: GLboolean) void {
    return epoxy_glTextureImage3DMultisampleNV.?(arg_8805, arg_8806, arg_8807, arg_8808, arg_8809, arg_8810, arg_8811, arg_8812);
}
pub inline fn glTextureLightEXT(arg_8813: GLenum) void {
    return epoxy_glTextureLightEXT.?(arg_8813);
}
pub inline fn glTextureMaterialEXT(arg_8814: GLenum, arg_8815: GLenum) void {
    return epoxy_glTextureMaterialEXT.?(arg_8814, arg_8815);
}
pub inline fn glTextureNormalEXT(arg_8816: GLenum) void {
    return epoxy_glTextureNormalEXT.?(arg_8816);
}
pub inline fn glTexturePageCommitmentEXT(arg_8817: GLuint, arg_8818: GLint, arg_8819: GLint, arg_8820: GLint, arg_8821: GLint, arg_8822: GLsizei, arg_8823: GLsizei, arg_8824: GLsizei, arg_8825: GLboolean) void {
    return epoxy_glTexturePageCommitmentEXT.?(arg_8817, arg_8818, arg_8819, arg_8820, arg_8821, arg_8822, arg_8823, arg_8824, arg_8825);
}
pub inline fn glTextureParameterIiv(arg_8826: GLuint, arg_8827: GLenum, arg_8828: [*c]const GLint) void {
    return epoxy_glTextureParameterIiv.?(arg_8826, arg_8827, arg_8828);
}
pub inline fn glTextureParameterIivEXT(arg_8829: GLuint, arg_8830: GLenum, arg_8831: GLenum, arg_8832: [*c]const GLint) void {
    return epoxy_glTextureParameterIivEXT.?(arg_8829, arg_8830, arg_8831, arg_8832);
}
pub inline fn glTextureParameterIuiv(arg_8833: GLuint, arg_8834: GLenum, arg_8835: [*c]const GLuint) void {
    return epoxy_glTextureParameterIuiv.?(arg_8833, arg_8834, arg_8835);
}
pub inline fn glTextureParameterIuivEXT(arg_8836: GLuint, arg_8837: GLenum, arg_8838: GLenum, arg_8839: [*c]const GLuint) void {
    return epoxy_glTextureParameterIuivEXT.?(arg_8836, arg_8837, arg_8838, arg_8839);
}
pub inline fn glTextureParameterf(arg_8840: GLuint, arg_8841: GLenum, arg_8842: GLfloat) void {
    return epoxy_glTextureParameterf.?(arg_8840, arg_8841, arg_8842);
}
pub inline fn glTextureParameterfEXT(arg_8843: GLuint, arg_8844: GLenum, arg_8845: GLenum, arg_8846: GLfloat) void {
    return epoxy_glTextureParameterfEXT.?(arg_8843, arg_8844, arg_8845, arg_8846);
}
pub inline fn glTextureParameterfv(arg_8847: GLuint, arg_8848: GLenum, arg_8849: [*c]const GLfloat) void {
    return epoxy_glTextureParameterfv.?(arg_8847, arg_8848, arg_8849);
}
pub inline fn glTextureParameterfvEXT(arg_8850: GLuint, arg_8851: GLenum, arg_8852: GLenum, arg_8853: [*c]const GLfloat) void {
    return epoxy_glTextureParameterfvEXT.?(arg_8850, arg_8851, arg_8852, arg_8853);
}
pub inline fn glTextureParameteri(arg_8854: GLuint, arg_8855: GLenum, arg_8856: GLint) void {
    return epoxy_glTextureParameteri.?(arg_8854, arg_8855, arg_8856);
}
pub inline fn glTextureParameteriEXT(arg_8857: GLuint, arg_8858: GLenum, arg_8859: GLenum, arg_8860: GLint) void {
    return epoxy_glTextureParameteriEXT.?(arg_8857, arg_8858, arg_8859, arg_8860);
}
pub inline fn glTextureParameteriv(arg_8861: GLuint, arg_8862: GLenum, arg_8863: [*c]const GLint) void {
    return epoxy_glTextureParameteriv.?(arg_8861, arg_8862, arg_8863);
}
pub inline fn glTextureParameterivEXT(arg_8864: GLuint, arg_8865: GLenum, arg_8866: GLenum, arg_8867: [*c]const GLint) void {
    return epoxy_glTextureParameterivEXT.?(arg_8864, arg_8865, arg_8866, arg_8867);
}
pub inline fn glTextureRangeAPPLE(arg_8868: GLenum, arg_8869: GLsizei, arg_8870: ?*const anyopaque) void {
    return epoxy_glTextureRangeAPPLE.?(arg_8868, arg_8869, arg_8870);
}
pub inline fn glTextureRenderbufferEXT(arg_8871: GLuint, arg_8872: GLenum, arg_8873: GLuint) void {
    return epoxy_glTextureRenderbufferEXT.?(arg_8871, arg_8872, arg_8873);
}
pub inline fn glTextureStorage1D(arg_8874: GLuint, arg_8875: GLsizei, arg_8876: GLenum, arg_8877: GLsizei) void {
    return epoxy_glTextureStorage1D.?(arg_8874, arg_8875, arg_8876, arg_8877);
}
pub inline fn glTextureStorage1DEXT(arg_8878: GLuint, arg_8879: GLenum, arg_8880: GLsizei, arg_8881: GLenum, arg_8882: GLsizei) void {
    return epoxy_glTextureStorage1DEXT.?(arg_8878, arg_8879, arg_8880, arg_8881, arg_8882);
}
pub inline fn glTextureStorage2D(arg_8883: GLuint, arg_8884: GLsizei, arg_8885: GLenum, arg_8886: GLsizei, arg_8887: GLsizei) void {
    return epoxy_glTextureStorage2D.?(arg_8883, arg_8884, arg_8885, arg_8886, arg_8887);
}
pub inline fn glTextureStorage2DEXT(arg_8888: GLuint, arg_8889: GLenum, arg_8890: GLsizei, arg_8891: GLenum, arg_8892: GLsizei, arg_8893: GLsizei) void {
    return epoxy_glTextureStorage2DEXT.?(arg_8888, arg_8889, arg_8890, arg_8891, arg_8892, arg_8893);
}
pub inline fn glTextureStorage2DMultisample(arg_8894: GLuint, arg_8895: GLsizei, arg_8896: GLenum, arg_8897: GLsizei, arg_8898: GLsizei, arg_8899: GLboolean) void {
    return epoxy_glTextureStorage2DMultisample.?(arg_8894, arg_8895, arg_8896, arg_8897, arg_8898, arg_8899);
}
pub inline fn glTextureStorage2DMultisampleEXT(arg_8900: GLuint, arg_8901: GLenum, arg_8902: GLsizei, arg_8903: GLenum, arg_8904: GLsizei, arg_8905: GLsizei, arg_8906: GLboolean) void {
    return epoxy_glTextureStorage2DMultisampleEXT.?(arg_8900, arg_8901, arg_8902, arg_8903, arg_8904, arg_8905, arg_8906);
}
pub inline fn glTextureStorage3D(arg_8907: GLuint, arg_8908: GLsizei, arg_8909: GLenum, arg_8910: GLsizei, arg_8911: GLsizei, arg_8912: GLsizei) void {
    return epoxy_glTextureStorage3D.?(arg_8907, arg_8908, arg_8909, arg_8910, arg_8911, arg_8912);
}
pub inline fn glTextureStorage3DEXT(arg_8913: GLuint, arg_8914: GLenum, arg_8915: GLsizei, arg_8916: GLenum, arg_8917: GLsizei, arg_8918: GLsizei, arg_8919: GLsizei) void {
    return epoxy_glTextureStorage3DEXT.?(arg_8913, arg_8914, arg_8915, arg_8916, arg_8917, arg_8918, arg_8919);
}
pub inline fn glTextureStorage3DMultisample(arg_8920: GLuint, arg_8921: GLsizei, arg_8922: GLenum, arg_8923: GLsizei, arg_8924: GLsizei, arg_8925: GLsizei, arg_8926: GLboolean) void {
    return epoxy_glTextureStorage3DMultisample.?(arg_8920, arg_8921, arg_8922, arg_8923, arg_8924, arg_8925, arg_8926);
}
pub inline fn glTextureStorage3DMultisampleEXT(arg_8927: GLuint, arg_8928: GLenum, arg_8929: GLsizei, arg_8930: GLenum, arg_8931: GLsizei, arg_8932: GLsizei, arg_8933: GLsizei, arg_8934: GLboolean) void {
    return epoxy_glTextureStorage3DMultisampleEXT.?(arg_8927, arg_8928, arg_8929, arg_8930, arg_8931, arg_8932, arg_8933, arg_8934);
}
pub inline fn glTextureStorageMem1DEXT(arg_8935: GLuint, arg_8936: GLsizei, arg_8937: GLenum, arg_8938: GLsizei, arg_8939: GLuint, arg_8940: GLuint64) void {
    return epoxy_glTextureStorageMem1DEXT.?(arg_8935, arg_8936, arg_8937, arg_8938, arg_8939, arg_8940);
}
pub inline fn glTextureStorageMem2DEXT(arg_8941: GLuint, arg_8942: GLsizei, arg_8943: GLenum, arg_8944: GLsizei, arg_8945: GLsizei, arg_8946: GLuint, arg_8947: GLuint64) void {
    return epoxy_glTextureStorageMem2DEXT.?(arg_8941, arg_8942, arg_8943, arg_8944, arg_8945, arg_8946, arg_8947);
}
pub inline fn glTextureStorageMem2DMultisampleEXT(arg_8948: GLuint, arg_8949: GLsizei, arg_8950: GLenum, arg_8951: GLsizei, arg_8952: GLsizei, arg_8953: GLboolean, arg_8954: GLuint, arg_8955: GLuint64) void {
    return epoxy_glTextureStorageMem2DMultisampleEXT.?(arg_8948, arg_8949, arg_8950, arg_8951, arg_8952, arg_8953, arg_8954, arg_8955);
}
pub inline fn glTextureStorageMem3DEXT(arg_8956: GLuint, arg_8957: GLsizei, arg_8958: GLenum, arg_8959: GLsizei, arg_8960: GLsizei, arg_8961: GLsizei, arg_8962: GLuint, arg_8963: GLuint64) void {
    return epoxy_glTextureStorageMem3DEXT.?(arg_8956, arg_8957, arg_8958, arg_8959, arg_8960, arg_8961, arg_8962, arg_8963);
}
pub inline fn glTextureStorageMem3DMultisampleEXT(arg_8964: GLuint, arg_8965: GLsizei, arg_8966: GLenum, arg_8967: GLsizei, arg_8968: GLsizei, arg_8969: GLsizei, arg_8970: GLboolean, arg_8971: GLuint, arg_8972: GLuint64) void {
    return epoxy_glTextureStorageMem3DMultisampleEXT.?(arg_8964, arg_8965, arg_8966, arg_8967, arg_8968, arg_8969, arg_8970, arg_8971, arg_8972);
}
pub inline fn glTextureStorageSparseAMD(arg_8973: GLuint, arg_8974: GLenum, arg_8975: GLenum, arg_8976: GLsizei, arg_8977: GLsizei, arg_8978: GLsizei, arg_8979: GLsizei, arg_8980: GLbitfield) void {
    return epoxy_glTextureStorageSparseAMD.?(arg_8973, arg_8974, arg_8975, arg_8976, arg_8977, arg_8978, arg_8979, arg_8980);
}
pub inline fn glTextureSubImage1D(arg_8981: GLuint, arg_8982: GLint, arg_8983: GLint, arg_8984: GLsizei, arg_8985: GLenum, arg_8986: GLenum, arg_8987: ?*const anyopaque) void {
    return epoxy_glTextureSubImage1D.?(arg_8981, arg_8982, arg_8983, arg_8984, arg_8985, arg_8986, arg_8987);
}
pub inline fn glTextureSubImage1DEXT(arg_8988: GLuint, arg_8989: GLenum, arg_8990: GLint, arg_8991: GLint, arg_8992: GLsizei, arg_8993: GLenum, arg_8994: GLenum, arg_8995: ?*const anyopaque) void {
    return epoxy_glTextureSubImage1DEXT.?(arg_8988, arg_8989, arg_8990, arg_8991, arg_8992, arg_8993, arg_8994, arg_8995);
}
pub inline fn glTextureSubImage2D(arg_8996: GLuint, arg_8997: GLint, arg_8998: GLint, arg_8999: GLint, arg_9000: GLsizei, arg_9001: GLsizei, arg_9002: GLenum, arg_9003: GLenum, arg_9004: ?*const anyopaque) void {
    return epoxy_glTextureSubImage2D.?(arg_8996, arg_8997, arg_8998, arg_8999, arg_9000, arg_9001, arg_9002, arg_9003, arg_9004);
}
pub inline fn glTextureSubImage2DEXT(arg_9005: GLuint, arg_9006: GLenum, arg_9007: GLint, arg_9008: GLint, arg_9009: GLint, arg_9010: GLsizei, arg_9011: GLsizei, arg_9012: GLenum, arg_9013: GLenum, arg_9014: ?*const anyopaque) void {
    return epoxy_glTextureSubImage2DEXT.?(arg_9005, arg_9006, arg_9007, arg_9008, arg_9009, arg_9010, arg_9011, arg_9012, arg_9013, arg_9014);
}
pub inline fn glTextureSubImage3D(arg_9015: GLuint, arg_9016: GLint, arg_9017: GLint, arg_9018: GLint, arg_9019: GLint, arg_9020: GLsizei, arg_9021: GLsizei, arg_9022: GLsizei, arg_9023: GLenum, arg_9024: GLenum, arg_9025: ?*const anyopaque) void {
    return epoxy_glTextureSubImage3D.?(arg_9015, arg_9016, arg_9017, arg_9018, arg_9019, arg_9020, arg_9021, arg_9022, arg_9023, arg_9024, arg_9025);
}
pub inline fn glTextureSubImage3DEXT(arg_9026: GLuint, arg_9027: GLenum, arg_9028: GLint, arg_9029: GLint, arg_9030: GLint, arg_9031: GLint, arg_9032: GLsizei, arg_9033: GLsizei, arg_9034: GLsizei, arg_9035: GLenum, arg_9036: GLenum, arg_9037: ?*const anyopaque) void {
    return epoxy_glTextureSubImage3DEXT.?(arg_9026, arg_9027, arg_9028, arg_9029, arg_9030, arg_9031, arg_9032, arg_9033, arg_9034, arg_9035, arg_9036, arg_9037);
}
pub inline fn glTextureView(arg_9038: GLuint, arg_9039: GLenum, arg_9040: GLuint, arg_9041: GLenum, arg_9042: GLuint, arg_9043: GLuint, arg_9044: GLuint, arg_9045: GLuint) void {
    return epoxy_glTextureView.?(arg_9038, arg_9039, arg_9040, arg_9041, arg_9042, arg_9043, arg_9044, arg_9045);
}
pub inline fn glTextureViewEXT(arg_9046: GLuint, arg_9047: GLenum, arg_9048: GLuint, arg_9049: GLenum, arg_9050: GLuint, arg_9051: GLuint, arg_9052: GLuint, arg_9053: GLuint) void {
    return epoxy_glTextureViewEXT.?(arg_9046, arg_9047, arg_9048, arg_9049, arg_9050, arg_9051, arg_9052, arg_9053);
}
pub inline fn glTextureViewOES(arg_9054: GLuint, arg_9055: GLenum, arg_9056: GLuint, arg_9057: GLenum, arg_9058: GLuint, arg_9059: GLuint, arg_9060: GLuint, arg_9061: GLuint) void {
    return epoxy_glTextureViewOES.?(arg_9054, arg_9055, arg_9056, arg_9057, arg_9058, arg_9059, arg_9060, arg_9061);
}
pub inline fn glTrackMatrixNV(arg_9062: GLenum, arg_9063: GLuint, arg_9064: GLenum, arg_9065: GLenum) void {
    return epoxy_glTrackMatrixNV.?(arg_9062, arg_9063, arg_9064, arg_9065);
}
pub inline fn glTransformFeedbackAttribsNV(arg_9066: GLsizei, arg_9067: [*c]const GLint, arg_9068: GLenum) void {
    return epoxy_glTransformFeedbackAttribsNV.?(arg_9066, arg_9067, arg_9068);
}
pub inline fn glTransformFeedbackBufferBase(arg_9069: GLuint, arg_9070: GLuint, arg_9071: GLuint) void {
    return epoxy_glTransformFeedbackBufferBase.?(arg_9069, arg_9070, arg_9071);
}
pub inline fn glTransformFeedbackBufferRange(arg_9072: GLuint, arg_9073: GLuint, arg_9074: GLuint, arg_9075: GLintptr, arg_9076: GLsizeiptr) void {
    return epoxy_glTransformFeedbackBufferRange.?(arg_9072, arg_9073, arg_9074, arg_9075, arg_9076);
}
pub inline fn glTransformFeedbackStreamAttribsNV(arg_9077: GLsizei, arg_9078: [*c]const GLint, arg_9079: GLsizei, arg_9080: [*c]const GLint, arg_9081: GLenum) void {
    return epoxy_glTransformFeedbackStreamAttribsNV.?(arg_9077, arg_9078, arg_9079, arg_9080, arg_9081);
}
pub inline fn glTransformFeedbackVaryings(arg_9082: GLuint, arg_9083: GLsizei, arg_9084: [*c]const [*c]const GLchar, arg_9085: GLenum) void {
    return epoxy_glTransformFeedbackVaryings.?(arg_9082, arg_9083, arg_9084, arg_9085);
}
pub inline fn glTransformFeedbackVaryingsEXT(arg_9086: GLuint, arg_9087: GLsizei, arg_9088: [*c]const [*c]const GLchar, arg_9089: GLenum) void {
    return epoxy_glTransformFeedbackVaryingsEXT.?(arg_9086, arg_9087, arg_9088, arg_9089);
}
pub inline fn glTransformFeedbackVaryingsNV(arg_9090: GLuint, arg_9091: GLsizei, arg_9092: [*c]const GLint, arg_9093: GLenum) void {
    return epoxy_glTransformFeedbackVaryingsNV.?(arg_9090, arg_9091, arg_9092, arg_9093);
}
pub inline fn glTransformPathNV(arg_9094: GLuint, arg_9095: GLuint, arg_9096: GLenum, arg_9097: [*c]const GLfloat) void {
    return epoxy_glTransformPathNV.?(arg_9094, arg_9095, arg_9096, arg_9097);
}
pub inline fn glTranslated(arg_9098: GLdouble, arg_9099: GLdouble, arg_9100: GLdouble) void {
    return epoxy_glTranslated.?(arg_9098, arg_9099, arg_9100);
}
pub inline fn glTranslatef(arg_9101: GLfloat, arg_9102: GLfloat, arg_9103: GLfloat) void {
    return epoxy_glTranslatef.?(arg_9101, arg_9102, arg_9103);
}
pub inline fn glTranslatex(arg_9104: GLfixed, arg_9105: GLfixed, arg_9106: GLfixed) void {
    return epoxy_glTranslatex.?(arg_9104, arg_9105, arg_9106);
}
pub inline fn glTranslatexOES(arg_9107: GLfixed, arg_9108: GLfixed, arg_9109: GLfixed) void {
    return epoxy_glTranslatexOES.?(arg_9107, arg_9108, arg_9109);
}
pub inline fn glUniform1d(arg_9110: GLint, arg_9111: GLdouble) void {
    return epoxy_glUniform1d.?(arg_9110, arg_9111);
}
pub inline fn glUniform1dv(arg_9112: GLint, arg_9113: GLsizei, arg_9114: [*c]const GLdouble) void {
    return epoxy_glUniform1dv.?(arg_9112, arg_9113, arg_9114);
}
pub inline fn glUniform1f(arg_9115: GLint, arg_9116: GLfloat) void {
    return epoxy_glUniform1f.?(arg_9115, arg_9116);
}
pub inline fn glUniform1fARB(arg_9117: GLint, arg_9118: GLfloat) void {
    return epoxy_glUniform1fARB.?(arg_9117, arg_9118);
}
pub inline fn glUniform1fv(arg_9119: GLint, arg_9120: GLsizei, arg_9121: [*c]const GLfloat) void {
    return epoxy_glUniform1fv.?(arg_9119, arg_9120, arg_9121);
}
pub inline fn glUniform1fvARB(arg_9122: GLint, arg_9123: GLsizei, arg_9124: [*c]const GLfloat) void {
    return epoxy_glUniform1fvARB.?(arg_9122, arg_9123, arg_9124);
}
pub inline fn glUniform1i(arg_9125: GLint, arg_9126: GLint) void {
    return epoxy_glUniform1i.?(arg_9125, arg_9126);
}
pub inline fn glUniform1i64ARB(arg_9127: GLint, arg_9128: GLint64) void {
    return epoxy_glUniform1i64ARB.?(arg_9127, arg_9128);
}
pub inline fn glUniform1i64NV(arg_9129: GLint, arg_9130: GLint64EXT) void {
    return epoxy_glUniform1i64NV.?(arg_9129, arg_9130);
}
pub inline fn glUniform1i64vARB(arg_9131: GLint, arg_9132: GLsizei, arg_9133: [*c]const GLint64) void {
    return epoxy_glUniform1i64vARB.?(arg_9131, arg_9132, arg_9133);
}
pub inline fn glUniform1i64vNV(arg_9134: GLint, arg_9135: GLsizei, arg_9136: [*c]const GLint64EXT) void {
    return epoxy_glUniform1i64vNV.?(arg_9134, arg_9135, arg_9136);
}
pub inline fn glUniform1iARB(arg_9137: GLint, arg_9138: GLint) void {
    return epoxy_glUniform1iARB.?(arg_9137, arg_9138);
}
pub inline fn glUniform1iv(arg_9139: GLint, arg_9140: GLsizei, arg_9141: [*c]const GLint) void {
    return epoxy_glUniform1iv.?(arg_9139, arg_9140, arg_9141);
}
pub inline fn glUniform1ivARB(arg_9142: GLint, arg_9143: GLsizei, arg_9144: [*c]const GLint) void {
    return epoxy_glUniform1ivARB.?(arg_9142, arg_9143, arg_9144);
}
pub inline fn glUniform1ui(arg_9145: GLint, arg_9146: GLuint) void {
    return epoxy_glUniform1ui.?(arg_9145, arg_9146);
}
pub inline fn glUniform1ui64ARB(arg_9147: GLint, arg_9148: GLuint64) void {
    return epoxy_glUniform1ui64ARB.?(arg_9147, arg_9148);
}
pub inline fn glUniform1ui64NV(arg_9149: GLint, arg_9150: GLuint64EXT) void {
    return epoxy_glUniform1ui64NV.?(arg_9149, arg_9150);
}
pub inline fn glUniform1ui64vARB(arg_9151: GLint, arg_9152: GLsizei, arg_9153: [*c]const GLuint64) void {
    return epoxy_glUniform1ui64vARB.?(arg_9151, arg_9152, arg_9153);
}
pub inline fn glUniform1ui64vNV(arg_9154: GLint, arg_9155: GLsizei, arg_9156: [*c]const GLuint64EXT) void {
    return epoxy_glUniform1ui64vNV.?(arg_9154, arg_9155, arg_9156);
}
pub inline fn glUniform1uiEXT(arg_9157: GLint, arg_9158: GLuint) void {
    return epoxy_glUniform1uiEXT.?(arg_9157, arg_9158);
}
pub inline fn glUniform1uiv(arg_9159: GLint, arg_9160: GLsizei, arg_9161: [*c]const GLuint) void {
    return epoxy_glUniform1uiv.?(arg_9159, arg_9160, arg_9161);
}
pub inline fn glUniform1uivEXT(arg_9162: GLint, arg_9163: GLsizei, arg_9164: [*c]const GLuint) void {
    return epoxy_glUniform1uivEXT.?(arg_9162, arg_9163, arg_9164);
}
pub inline fn glUniform2d(arg_9165: GLint, arg_9166: GLdouble, arg_9167: GLdouble) void {
    return epoxy_glUniform2d.?(arg_9165, arg_9166, arg_9167);
}
pub inline fn glUniform2dv(arg_9168: GLint, arg_9169: GLsizei, arg_9170: [*c]const GLdouble) void {
    return epoxy_glUniform2dv.?(arg_9168, arg_9169, arg_9170);
}
pub inline fn glUniform2f(arg_9171: GLint, arg_9172: GLfloat, arg_9173: GLfloat) void {
    return epoxy_glUniform2f.?(arg_9171, arg_9172, arg_9173);
}
pub inline fn glUniform2fARB(arg_9174: GLint, arg_9175: GLfloat, arg_9176: GLfloat) void {
    return epoxy_glUniform2fARB.?(arg_9174, arg_9175, arg_9176);
}
pub inline fn glUniform2fv(arg_9177: GLint, arg_9178: GLsizei, arg_9179: [*c]const GLfloat) void {
    return epoxy_glUniform2fv.?(arg_9177, arg_9178, arg_9179);
}
pub inline fn glUniform2fvARB(arg_9180: GLint, arg_9181: GLsizei, arg_9182: [*c]const GLfloat) void {
    return epoxy_glUniform2fvARB.?(arg_9180, arg_9181, arg_9182);
}
pub inline fn glUniform2i(arg_9183: GLint, arg_9184: GLint, arg_9185: GLint) void {
    return epoxy_glUniform2i.?(arg_9183, arg_9184, arg_9185);
}
pub inline fn glUniform2i64ARB(arg_9186: GLint, arg_9187: GLint64, arg_9188: GLint64) void {
    return epoxy_glUniform2i64ARB.?(arg_9186, arg_9187, arg_9188);
}
pub inline fn glUniform2i64NV(arg_9189: GLint, arg_9190: GLint64EXT, arg_9191: GLint64EXT) void {
    return epoxy_glUniform2i64NV.?(arg_9189, arg_9190, arg_9191);
}
pub inline fn glUniform2i64vARB(arg_9192: GLint, arg_9193: GLsizei, arg_9194: [*c]const GLint64) void {
    return epoxy_glUniform2i64vARB.?(arg_9192, arg_9193, arg_9194);
}
pub inline fn glUniform2i64vNV(arg_9195: GLint, arg_9196: GLsizei, arg_9197: [*c]const GLint64EXT) void {
    return epoxy_glUniform2i64vNV.?(arg_9195, arg_9196, arg_9197);
}
pub inline fn glUniform2iARB(arg_9198: GLint, arg_9199: GLint, arg_9200: GLint) void {
    return epoxy_glUniform2iARB.?(arg_9198, arg_9199, arg_9200);
}
pub inline fn glUniform2iv(arg_9201: GLint, arg_9202: GLsizei, arg_9203: [*c]const GLint) void {
    return epoxy_glUniform2iv.?(arg_9201, arg_9202, arg_9203);
}
pub inline fn glUniform2ivARB(arg_9204: GLint, arg_9205: GLsizei, arg_9206: [*c]const GLint) void {
    return epoxy_glUniform2ivARB.?(arg_9204, arg_9205, arg_9206);
}
pub inline fn glUniform2ui(arg_9207: GLint, arg_9208: GLuint, arg_9209: GLuint) void {
    return epoxy_glUniform2ui.?(arg_9207, arg_9208, arg_9209);
}
pub inline fn glUniform2ui64ARB(arg_9210: GLint, arg_9211: GLuint64, arg_9212: GLuint64) void {
    return epoxy_glUniform2ui64ARB.?(arg_9210, arg_9211, arg_9212);
}
pub inline fn glUniform2ui64NV(arg_9213: GLint, arg_9214: GLuint64EXT, arg_9215: GLuint64EXT) void {
    return epoxy_glUniform2ui64NV.?(arg_9213, arg_9214, arg_9215);
}
pub inline fn glUniform2ui64vARB(arg_9216: GLint, arg_9217: GLsizei, arg_9218: [*c]const GLuint64) void {
    return epoxy_glUniform2ui64vARB.?(arg_9216, arg_9217, arg_9218);
}
pub inline fn glUniform2ui64vNV(arg_9219: GLint, arg_9220: GLsizei, arg_9221: [*c]const GLuint64EXT) void {
    return epoxy_glUniform2ui64vNV.?(arg_9219, arg_9220, arg_9221);
}
pub inline fn glUniform2uiEXT(arg_9222: GLint, arg_9223: GLuint, arg_9224: GLuint) void {
    return epoxy_glUniform2uiEXT.?(arg_9222, arg_9223, arg_9224);
}
pub inline fn glUniform2uiv(arg_9225: GLint, arg_9226: GLsizei, arg_9227: [*c]const GLuint) void {
    return epoxy_glUniform2uiv.?(arg_9225, arg_9226, arg_9227);
}
pub inline fn glUniform2uivEXT(arg_9228: GLint, arg_9229: GLsizei, arg_9230: [*c]const GLuint) void {
    return epoxy_glUniform2uivEXT.?(arg_9228, arg_9229, arg_9230);
}
pub inline fn glUniform3d(arg_9231: GLint, arg_9232: GLdouble, arg_9233: GLdouble, arg_9234: GLdouble) void {
    return epoxy_glUniform3d.?(arg_9231, arg_9232, arg_9233, arg_9234);
}
pub inline fn glUniform3dv(arg_9235: GLint, arg_9236: GLsizei, arg_9237: [*c]const GLdouble) void {
    return epoxy_glUniform3dv.?(arg_9235, arg_9236, arg_9237);
}
pub inline fn glUniform3f(arg_9238: GLint, arg_9239: GLfloat, arg_9240: GLfloat, arg_9241: GLfloat) void {
    return epoxy_glUniform3f.?(arg_9238, arg_9239, arg_9240, arg_9241);
}
pub inline fn glUniform3fARB(arg_9242: GLint, arg_9243: GLfloat, arg_9244: GLfloat, arg_9245: GLfloat) void {
    return epoxy_glUniform3fARB.?(arg_9242, arg_9243, arg_9244, arg_9245);
}
pub inline fn glUniform3fv(arg_9246: GLint, arg_9247: GLsizei, arg_9248: [*c]const GLfloat) void {
    return epoxy_glUniform3fv.?(arg_9246, arg_9247, arg_9248);
}
pub inline fn glUniform3fvARB(arg_9249: GLint, arg_9250: GLsizei, arg_9251: [*c]const GLfloat) void {
    return epoxy_glUniform3fvARB.?(arg_9249, arg_9250, arg_9251);
}
pub inline fn glUniform3i(arg_9252: GLint, arg_9253: GLint, arg_9254: GLint, arg_9255: GLint) void {
    return epoxy_glUniform3i.?(arg_9252, arg_9253, arg_9254, arg_9255);
}
pub inline fn glUniform3i64ARB(arg_9256: GLint, arg_9257: GLint64, arg_9258: GLint64, arg_9259: GLint64) void {
    return epoxy_glUniform3i64ARB.?(arg_9256, arg_9257, arg_9258, arg_9259);
}
pub inline fn glUniform3i64NV(arg_9260: GLint, arg_9261: GLint64EXT, arg_9262: GLint64EXT, arg_9263: GLint64EXT) void {
    return epoxy_glUniform3i64NV.?(arg_9260, arg_9261, arg_9262, arg_9263);
}
pub inline fn glUniform3i64vARB(arg_9264: GLint, arg_9265: GLsizei, arg_9266: [*c]const GLint64) void {
    return epoxy_glUniform3i64vARB.?(arg_9264, arg_9265, arg_9266);
}
pub inline fn glUniform3i64vNV(arg_9267: GLint, arg_9268: GLsizei, arg_9269: [*c]const GLint64EXT) void {
    return epoxy_glUniform3i64vNV.?(arg_9267, arg_9268, arg_9269);
}
pub inline fn glUniform3iARB(arg_9270: GLint, arg_9271: GLint, arg_9272: GLint, arg_9273: GLint) void {
    return epoxy_glUniform3iARB.?(arg_9270, arg_9271, arg_9272, arg_9273);
}
pub inline fn glUniform3iv(arg_9274: GLint, arg_9275: GLsizei, arg_9276: [*c]const GLint) void {
    return epoxy_glUniform3iv.?(arg_9274, arg_9275, arg_9276);
}
pub inline fn glUniform3ivARB(arg_9277: GLint, arg_9278: GLsizei, arg_9279: [*c]const GLint) void {
    return epoxy_glUniform3ivARB.?(arg_9277, arg_9278, arg_9279);
}
pub inline fn glUniform3ui(arg_9280: GLint, arg_9281: GLuint, arg_9282: GLuint, arg_9283: GLuint) void {
    return epoxy_glUniform3ui.?(arg_9280, arg_9281, arg_9282, arg_9283);
}
pub inline fn glUniform3ui64ARB(arg_9284: GLint, arg_9285: GLuint64, arg_9286: GLuint64, arg_9287: GLuint64) void {
    return epoxy_glUniform3ui64ARB.?(arg_9284, arg_9285, arg_9286, arg_9287);
}
pub inline fn glUniform3ui64NV(arg_9288: GLint, arg_9289: GLuint64EXT, arg_9290: GLuint64EXT, arg_9291: GLuint64EXT) void {
    return epoxy_glUniform3ui64NV.?(arg_9288, arg_9289, arg_9290, arg_9291);
}
pub inline fn glUniform3ui64vARB(arg_9292: GLint, arg_9293: GLsizei, arg_9294: [*c]const GLuint64) void {
    return epoxy_glUniform3ui64vARB.?(arg_9292, arg_9293, arg_9294);
}
pub inline fn glUniform3ui64vNV(arg_9295: GLint, arg_9296: GLsizei, arg_9297: [*c]const GLuint64EXT) void {
    return epoxy_glUniform3ui64vNV.?(arg_9295, arg_9296, arg_9297);
}
pub inline fn glUniform3uiEXT(arg_9298: GLint, arg_9299: GLuint, arg_9300: GLuint, arg_9301: GLuint) void {
    return epoxy_glUniform3uiEXT.?(arg_9298, arg_9299, arg_9300, arg_9301);
}
pub inline fn glUniform3uiv(arg_9302: GLint, arg_9303: GLsizei, arg_9304: [*c]const GLuint) void {
    return epoxy_glUniform3uiv.?(arg_9302, arg_9303, arg_9304);
}
pub inline fn glUniform3uivEXT(arg_9305: GLint, arg_9306: GLsizei, arg_9307: [*c]const GLuint) void {
    return epoxy_glUniform3uivEXT.?(arg_9305, arg_9306, arg_9307);
}
pub inline fn glUniform4d(arg_9308: GLint, arg_9309: GLdouble, arg_9310: GLdouble, arg_9311: GLdouble, arg_9312: GLdouble) void {
    return epoxy_glUniform4d.?(arg_9308, arg_9309, arg_9310, arg_9311, arg_9312);
}
pub inline fn glUniform4dv(arg_9313: GLint, arg_9314: GLsizei, arg_9315: [*c]const GLdouble) void {
    return epoxy_glUniform4dv.?(arg_9313, arg_9314, arg_9315);
}
pub inline fn glUniform4f(arg_9316: GLint, arg_9317: GLfloat, arg_9318: GLfloat, arg_9319: GLfloat, arg_9320: GLfloat) void {
    return epoxy_glUniform4f.?(arg_9316, arg_9317, arg_9318, arg_9319, arg_9320);
}
pub inline fn glUniform4fARB(arg_9321: GLint, arg_9322: GLfloat, arg_9323: GLfloat, arg_9324: GLfloat, arg_9325: GLfloat) void {
    return epoxy_glUniform4fARB.?(arg_9321, arg_9322, arg_9323, arg_9324, arg_9325);
}
pub inline fn glUniform4fv(arg_9326: GLint, arg_9327: GLsizei, arg_9328: [*c]const GLfloat) void {
    return epoxy_glUniform4fv.?(arg_9326, arg_9327, arg_9328);
}
pub inline fn glUniform4fvARB(arg_9329: GLint, arg_9330: GLsizei, arg_9331: [*c]const GLfloat) void {
    return epoxy_glUniform4fvARB.?(arg_9329, arg_9330, arg_9331);
}
pub inline fn glUniform4i(arg_9332: GLint, arg_9333: GLint, arg_9334: GLint, arg_9335: GLint, arg_9336: GLint) void {
    return epoxy_glUniform4i.?(arg_9332, arg_9333, arg_9334, arg_9335, arg_9336);
}
pub inline fn glUniform4i64ARB(arg_9337: GLint, arg_9338: GLint64, arg_9339: GLint64, arg_9340: GLint64, arg_9341: GLint64) void {
    return epoxy_glUniform4i64ARB.?(arg_9337, arg_9338, arg_9339, arg_9340, arg_9341);
}
pub inline fn glUniform4i64NV(arg_9342: GLint, arg_9343: GLint64EXT, arg_9344: GLint64EXT, arg_9345: GLint64EXT, arg_9346: GLint64EXT) void {
    return epoxy_glUniform4i64NV.?(arg_9342, arg_9343, arg_9344, arg_9345, arg_9346);
}
pub inline fn glUniform4i64vARB(arg_9347: GLint, arg_9348: GLsizei, arg_9349: [*c]const GLint64) void {
    return epoxy_glUniform4i64vARB.?(arg_9347, arg_9348, arg_9349);
}
pub inline fn glUniform4i64vNV(arg_9350: GLint, arg_9351: GLsizei, arg_9352: [*c]const GLint64EXT) void {
    return epoxy_glUniform4i64vNV.?(arg_9350, arg_9351, arg_9352);
}
pub inline fn glUniform4iARB(arg_9353: GLint, arg_9354: GLint, arg_9355: GLint, arg_9356: GLint, arg_9357: GLint) void {
    return epoxy_glUniform4iARB.?(arg_9353, arg_9354, arg_9355, arg_9356, arg_9357);
}
pub inline fn glUniform4iv(arg_9358: GLint, arg_9359: GLsizei, arg_9360: [*c]const GLint) void {
    return epoxy_glUniform4iv.?(arg_9358, arg_9359, arg_9360);
}
pub inline fn glUniform4ivARB(arg_9361: GLint, arg_9362: GLsizei, arg_9363: [*c]const GLint) void {
    return epoxy_glUniform4ivARB.?(arg_9361, arg_9362, arg_9363);
}
pub inline fn glUniform4ui(arg_9364: GLint, arg_9365: GLuint, arg_9366: GLuint, arg_9367: GLuint, arg_9368: GLuint) void {
    return epoxy_glUniform4ui.?(arg_9364, arg_9365, arg_9366, arg_9367, arg_9368);
}
pub inline fn glUniform4ui64ARB(arg_9369: GLint, arg_9370: GLuint64, arg_9371: GLuint64, arg_9372: GLuint64, arg_9373: GLuint64) void {
    return epoxy_glUniform4ui64ARB.?(arg_9369, arg_9370, arg_9371, arg_9372, arg_9373);
}
pub inline fn glUniform4ui64NV(arg_9374: GLint, arg_9375: GLuint64EXT, arg_9376: GLuint64EXT, arg_9377: GLuint64EXT, arg_9378: GLuint64EXT) void {
    return epoxy_glUniform4ui64NV.?(arg_9374, arg_9375, arg_9376, arg_9377, arg_9378);
}
pub inline fn glUniform4ui64vARB(arg_9379: GLint, arg_9380: GLsizei, arg_9381: [*c]const GLuint64) void {
    return epoxy_glUniform4ui64vARB.?(arg_9379, arg_9380, arg_9381);
}
pub inline fn glUniform4ui64vNV(arg_9382: GLint, arg_9383: GLsizei, arg_9384: [*c]const GLuint64EXT) void {
    return epoxy_glUniform4ui64vNV.?(arg_9382, arg_9383, arg_9384);
}
pub inline fn glUniform4uiEXT(arg_9385: GLint, arg_9386: GLuint, arg_9387: GLuint, arg_9388: GLuint, arg_9389: GLuint) void {
    return epoxy_glUniform4uiEXT.?(arg_9385, arg_9386, arg_9387, arg_9388, arg_9389);
}
pub inline fn glUniform4uiv(arg_9390: GLint, arg_9391: GLsizei, arg_9392: [*c]const GLuint) void {
    return epoxy_glUniform4uiv.?(arg_9390, arg_9391, arg_9392);
}
pub inline fn glUniform4uivEXT(arg_9393: GLint, arg_9394: GLsizei, arg_9395: [*c]const GLuint) void {
    return epoxy_glUniform4uivEXT.?(arg_9393, arg_9394, arg_9395);
}
pub inline fn glUniformBlockBinding(arg_9396: GLuint, arg_9397: GLuint, arg_9398: GLuint) void {
    return epoxy_glUniformBlockBinding.?(arg_9396, arg_9397, arg_9398);
}
pub inline fn glUniformBufferEXT(arg_9399: GLuint, arg_9400: GLint, arg_9401: GLuint) void {
    return epoxy_glUniformBufferEXT.?(arg_9399, arg_9400, arg_9401);
}
pub inline fn glUniformHandleui64ARB(arg_9402: GLint, arg_9403: GLuint64) void {
    return epoxy_glUniformHandleui64ARB.?(arg_9402, arg_9403);
}
pub inline fn glUniformHandleui64IMG(arg_9404: GLint, arg_9405: GLuint64) void {
    return epoxy_glUniformHandleui64IMG.?(arg_9404, arg_9405);
}
pub inline fn glUniformHandleui64NV(arg_9406: GLint, arg_9407: GLuint64) void {
    return epoxy_glUniformHandleui64NV.?(arg_9406, arg_9407);
}
pub inline fn glUniformHandleui64vARB(arg_9408: GLint, arg_9409: GLsizei, arg_9410: [*c]const GLuint64) void {
    return epoxy_glUniformHandleui64vARB.?(arg_9408, arg_9409, arg_9410);
}
pub inline fn glUniformHandleui64vIMG(arg_9411: GLint, arg_9412: GLsizei, arg_9413: [*c]const GLuint64) void {
    return epoxy_glUniformHandleui64vIMG.?(arg_9411, arg_9412, arg_9413);
}
pub inline fn glUniformHandleui64vNV(arg_9414: GLint, arg_9415: GLsizei, arg_9416: [*c]const GLuint64) void {
    return epoxy_glUniformHandleui64vNV.?(arg_9414, arg_9415, arg_9416);
}
pub inline fn glUniformMatrix2dv(arg_9417: GLint, arg_9418: GLsizei, arg_9419: GLboolean, arg_9420: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix2dv.?(arg_9417, arg_9418, arg_9419, arg_9420);
}
pub inline fn glUniformMatrix2fv(arg_9421: GLint, arg_9422: GLsizei, arg_9423: GLboolean, arg_9424: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2fv.?(arg_9421, arg_9422, arg_9423, arg_9424);
}
pub inline fn glUniformMatrix2fvARB(arg_9425: GLint, arg_9426: GLsizei, arg_9427: GLboolean, arg_9428: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2fvARB.?(arg_9425, arg_9426, arg_9427, arg_9428);
}
pub inline fn glUniformMatrix2x3dv(arg_9429: GLint, arg_9430: GLsizei, arg_9431: GLboolean, arg_9432: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix2x3dv.?(arg_9429, arg_9430, arg_9431, arg_9432);
}
pub inline fn glUniformMatrix2x3fv(arg_9433: GLint, arg_9434: GLsizei, arg_9435: GLboolean, arg_9436: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2x3fv.?(arg_9433, arg_9434, arg_9435, arg_9436);
}
pub inline fn glUniformMatrix2x3fvNV(arg_9437: GLint, arg_9438: GLsizei, arg_9439: GLboolean, arg_9440: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2x3fvNV.?(arg_9437, arg_9438, arg_9439, arg_9440);
}
pub inline fn glUniformMatrix2x4dv(arg_9441: GLint, arg_9442: GLsizei, arg_9443: GLboolean, arg_9444: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix2x4dv.?(arg_9441, arg_9442, arg_9443, arg_9444);
}
pub inline fn glUniformMatrix2x4fv(arg_9445: GLint, arg_9446: GLsizei, arg_9447: GLboolean, arg_9448: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2x4fv.?(arg_9445, arg_9446, arg_9447, arg_9448);
}
pub inline fn glUniformMatrix2x4fvNV(arg_9449: GLint, arg_9450: GLsizei, arg_9451: GLboolean, arg_9452: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix2x4fvNV.?(arg_9449, arg_9450, arg_9451, arg_9452);
}
pub inline fn glUniformMatrix3dv(arg_9453: GLint, arg_9454: GLsizei, arg_9455: GLboolean, arg_9456: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix3dv.?(arg_9453, arg_9454, arg_9455, arg_9456);
}
pub inline fn glUniformMatrix3fv(arg_9457: GLint, arg_9458: GLsizei, arg_9459: GLboolean, arg_9460: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3fv.?(arg_9457, arg_9458, arg_9459, arg_9460);
}
pub inline fn glUniformMatrix3fvARB(arg_9461: GLint, arg_9462: GLsizei, arg_9463: GLboolean, arg_9464: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3fvARB.?(arg_9461, arg_9462, arg_9463, arg_9464);
}
pub inline fn glUniformMatrix3x2dv(arg_9465: GLint, arg_9466: GLsizei, arg_9467: GLboolean, arg_9468: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix3x2dv.?(arg_9465, arg_9466, arg_9467, arg_9468);
}
pub inline fn glUniformMatrix3x2fv(arg_9469: GLint, arg_9470: GLsizei, arg_9471: GLboolean, arg_9472: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3x2fv.?(arg_9469, arg_9470, arg_9471, arg_9472);
}
pub inline fn glUniformMatrix3x2fvNV(arg_9473: GLint, arg_9474: GLsizei, arg_9475: GLboolean, arg_9476: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3x2fvNV.?(arg_9473, arg_9474, arg_9475, arg_9476);
}
pub inline fn glUniformMatrix3x4dv(arg_9477: GLint, arg_9478: GLsizei, arg_9479: GLboolean, arg_9480: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix3x4dv.?(arg_9477, arg_9478, arg_9479, arg_9480);
}
pub inline fn glUniformMatrix3x4fv(arg_9481: GLint, arg_9482: GLsizei, arg_9483: GLboolean, arg_9484: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3x4fv.?(arg_9481, arg_9482, arg_9483, arg_9484);
}
pub inline fn glUniformMatrix3x4fvNV(arg_9485: GLint, arg_9486: GLsizei, arg_9487: GLboolean, arg_9488: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix3x4fvNV.?(arg_9485, arg_9486, arg_9487, arg_9488);
}
pub inline fn glUniformMatrix4dv(arg_9489: GLint, arg_9490: GLsizei, arg_9491: GLboolean, arg_9492: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix4dv.?(arg_9489, arg_9490, arg_9491, arg_9492);
}
pub inline fn glUniformMatrix4fv(arg_9493: GLint, arg_9494: GLsizei, arg_9495: GLboolean, arg_9496: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4fv.?(arg_9493, arg_9494, arg_9495, arg_9496);
}
pub inline fn glUniformMatrix4fvARB(arg_9497: GLint, arg_9498: GLsizei, arg_9499: GLboolean, arg_9500: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4fvARB.?(arg_9497, arg_9498, arg_9499, arg_9500);
}
pub inline fn glUniformMatrix4x2dv(arg_9501: GLint, arg_9502: GLsizei, arg_9503: GLboolean, arg_9504: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix4x2dv.?(arg_9501, arg_9502, arg_9503, arg_9504);
}
pub inline fn glUniformMatrix4x2fv(arg_9505: GLint, arg_9506: GLsizei, arg_9507: GLboolean, arg_9508: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4x2fv.?(arg_9505, arg_9506, arg_9507, arg_9508);
}
pub inline fn glUniformMatrix4x2fvNV(arg_9509: GLint, arg_9510: GLsizei, arg_9511: GLboolean, arg_9512: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4x2fvNV.?(arg_9509, arg_9510, arg_9511, arg_9512);
}
pub inline fn glUniformMatrix4x3dv(arg_9513: GLint, arg_9514: GLsizei, arg_9515: GLboolean, arg_9516: [*c]const GLdouble) void {
    return epoxy_glUniformMatrix4x3dv.?(arg_9513, arg_9514, arg_9515, arg_9516);
}
pub inline fn glUniformMatrix4x3fv(arg_9517: GLint, arg_9518: GLsizei, arg_9519: GLboolean, arg_9520: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4x3fv.?(arg_9517, arg_9518, arg_9519, arg_9520);
}
pub inline fn glUniformMatrix4x3fvNV(arg_9521: GLint, arg_9522: GLsizei, arg_9523: GLboolean, arg_9524: [*c]const GLfloat) void {
    return epoxy_glUniformMatrix4x3fvNV.?(arg_9521, arg_9522, arg_9523, arg_9524);
}
pub inline fn glUniformSubroutinesuiv(arg_9525: GLenum, arg_9526: GLsizei, arg_9527: [*c]const GLuint) void {
    return epoxy_glUniformSubroutinesuiv.?(arg_9525, arg_9526, arg_9527);
}
pub inline fn glUniformui64NV(arg_9528: GLint, arg_9529: GLuint64EXT) void {
    return epoxy_glUniformui64NV.?(arg_9528, arg_9529);
}
pub inline fn glUniformui64vNV(arg_9530: GLint, arg_9531: GLsizei, arg_9532: [*c]const GLuint64EXT) void {
    return epoxy_glUniformui64vNV.?(arg_9530, arg_9531, arg_9532);
}
pub inline fn glUnlockArraysEXT() void {
    return epoxy_glUnlockArraysEXT.?();
}
pub inline fn glUnmapBuffer(arg_9533: GLenum) GLboolean {
    return epoxy_glUnmapBuffer.?(arg_9533);
}
pub inline fn glUnmapBufferARB(arg_9534: GLenum) GLboolean {
    return epoxy_glUnmapBufferARB.?(arg_9534);
}
pub inline fn glUnmapBufferOES(arg_9535: GLenum) GLboolean {
    return epoxy_glUnmapBufferOES.?(arg_9535);
}
pub inline fn glUnmapNamedBuffer(arg_9536: GLuint) GLboolean {
    return epoxy_glUnmapNamedBuffer.?(arg_9536);
}
pub inline fn glUnmapNamedBufferEXT(arg_9537: GLuint) GLboolean {
    return epoxy_glUnmapNamedBufferEXT.?(arg_9537);
}
pub inline fn glUnmapObjectBufferATI(arg_9538: GLuint) void {
    return epoxy_glUnmapObjectBufferATI.?(arg_9538);
}
pub inline fn glUnmapTexture2DINTEL(arg_9539: GLuint, arg_9540: GLint) void {
    return epoxy_glUnmapTexture2DINTEL.?(arg_9539, arg_9540);
}
pub inline fn glUpdateObjectBufferATI(arg_9541: GLuint, arg_9542: GLuint, arg_9543: GLsizei, arg_9544: ?*const anyopaque, arg_9545: GLenum) void {
    return epoxy_glUpdateObjectBufferATI.?(arg_9541, arg_9542, arg_9543, arg_9544, arg_9545);
}
pub inline fn glUploadGpuMaskNVX(arg_9546: GLbitfield) void {
    return epoxy_glUploadGpuMaskNVX.?(arg_9546);
}
pub inline fn glUseProgram(arg_9547: GLuint) void {
    return epoxy_glUseProgram.?(arg_9547);
}
pub inline fn glUseProgramObjectARB(arg_9548: GLhandleARB) void {
    return epoxy_glUseProgramObjectARB.?(arg_9548);
}
pub inline fn glUseProgramStages(arg_9549: GLuint, arg_9550: GLbitfield, arg_9551: GLuint) void {
    return epoxy_glUseProgramStages.?(arg_9549, arg_9550, arg_9551);
}
pub inline fn glUseProgramStagesEXT(arg_9552: GLuint, arg_9553: GLbitfield, arg_9554: GLuint) void {
    return epoxy_glUseProgramStagesEXT.?(arg_9552, arg_9553, arg_9554);
}
pub inline fn glUseShaderProgramEXT(arg_9555: GLenum, arg_9556: GLuint) void {
    return epoxy_glUseShaderProgramEXT.?(arg_9555, arg_9556);
}
pub inline fn glVDPAUFiniNV() void {
    return epoxy_glVDPAUFiniNV.?();
}
pub inline fn glVDPAUGetSurfaceivNV(arg_9557: GLvdpauSurfaceNV, arg_9558: GLenum, arg_9559: GLsizei, arg_9560: [*c]GLsizei, arg_9561: [*c]GLint) void {
    return epoxy_glVDPAUGetSurfaceivNV.?(arg_9557, arg_9558, arg_9559, arg_9560, arg_9561);
}
pub inline fn glVDPAUInitNV(arg_9562: ?*const anyopaque, arg_9563: ?*const anyopaque) void {
    return epoxy_glVDPAUInitNV.?(arg_9562, arg_9563);
}
pub inline fn glVDPAUIsSurfaceNV(arg_9564: GLvdpauSurfaceNV) GLboolean {
    return epoxy_glVDPAUIsSurfaceNV.?(arg_9564);
}
pub inline fn glVDPAUMapSurfacesNV(arg_9565: GLsizei, arg_9566: [*c]const GLvdpauSurfaceNV) void {
    return epoxy_glVDPAUMapSurfacesNV.?(arg_9565, arg_9566);
}
pub inline fn glVDPAURegisterOutputSurfaceNV(arg_9567: ?*const anyopaque, arg_9568: GLenum, arg_9569: GLsizei, arg_9570: [*c]const GLuint) GLvdpauSurfaceNV {
    return epoxy_glVDPAURegisterOutputSurfaceNV.?(arg_9567, arg_9568, arg_9569, arg_9570);
}
pub inline fn glVDPAURegisterVideoSurfaceNV(arg_9571: ?*const anyopaque, arg_9572: GLenum, arg_9573: GLsizei, arg_9574: [*c]const GLuint) GLvdpauSurfaceNV {
    return epoxy_glVDPAURegisterVideoSurfaceNV.?(arg_9571, arg_9572, arg_9573, arg_9574);
}
pub inline fn glVDPAURegisterVideoSurfaceWithPictureStructureNV(arg_9575: ?*const anyopaque, arg_9576: GLenum, arg_9577: GLsizei, arg_9578: [*c]const GLuint, arg_9579: GLboolean) GLvdpauSurfaceNV {
    return epoxy_glVDPAURegisterVideoSurfaceWithPictureStructureNV.?(arg_9575, arg_9576, arg_9577, arg_9578, arg_9579);
}
pub inline fn glVDPAUSurfaceAccessNV(arg_9580: GLvdpauSurfaceNV, arg_9581: GLenum) void {
    return epoxy_glVDPAUSurfaceAccessNV.?(arg_9580, arg_9581);
}
pub inline fn glVDPAUUnmapSurfacesNV(arg_9582: GLsizei, arg_9583: [*c]const GLvdpauSurfaceNV) void {
    return epoxy_glVDPAUUnmapSurfacesNV.?(arg_9582, arg_9583);
}
pub inline fn glVDPAUUnregisterSurfaceNV(arg_9584: GLvdpauSurfaceNV) void {
    return epoxy_glVDPAUUnregisterSurfaceNV.?(arg_9584);
}
pub inline fn glValidateProgram(arg_9585: GLuint) void {
    return epoxy_glValidateProgram.?(arg_9585);
}
pub inline fn glValidateProgramARB(arg_9586: GLhandleARB) void {
    return epoxy_glValidateProgramARB.?(arg_9586);
}
pub inline fn glValidateProgramPipeline(arg_9587: GLuint) void {
    return epoxy_glValidateProgramPipeline.?(arg_9587);
}
pub inline fn glValidateProgramPipelineEXT(arg_9588: GLuint) void {
    return epoxy_glValidateProgramPipelineEXT.?(arg_9588);
}
pub inline fn glVariantArrayObjectATI(arg_9589: GLuint, arg_9590: GLenum, arg_9591: GLsizei, arg_9592: GLuint, arg_9593: GLuint) void {
    return epoxy_glVariantArrayObjectATI.?(arg_9589, arg_9590, arg_9591, arg_9592, arg_9593);
}
pub inline fn glVariantPointerEXT(arg_9594: GLuint, arg_9595: GLenum, arg_9596: GLuint, arg_9597: ?*const anyopaque) void {
    return epoxy_glVariantPointerEXT.?(arg_9594, arg_9595, arg_9596, arg_9597);
}
pub inline fn glVariantbvEXT(arg_9598: GLuint, arg_9599: [*c]const GLbyte) void {
    return epoxy_glVariantbvEXT.?(arg_9598, arg_9599);
}
pub inline fn glVariantdvEXT(arg_9600: GLuint, arg_9601: [*c]const GLdouble) void {
    return epoxy_glVariantdvEXT.?(arg_9600, arg_9601);
}
pub inline fn glVariantfvEXT(arg_9602: GLuint, arg_9603: [*c]const GLfloat) void {
    return epoxy_glVariantfvEXT.?(arg_9602, arg_9603);
}
pub inline fn glVariantivEXT(arg_9604: GLuint, arg_9605: [*c]const GLint) void {
    return epoxy_glVariantivEXT.?(arg_9604, arg_9605);
}
pub inline fn glVariantsvEXT(arg_9606: GLuint, arg_9607: [*c]const GLshort) void {
    return epoxy_glVariantsvEXT.?(arg_9606, arg_9607);
}
pub inline fn glVariantubvEXT(arg_9608: GLuint, arg_9609: [*c]const GLubyte) void {
    return epoxy_glVariantubvEXT.?(arg_9608, arg_9609);
}
pub inline fn glVariantuivEXT(arg_9610: GLuint, arg_9611: [*c]const GLuint) void {
    return epoxy_glVariantuivEXT.?(arg_9610, arg_9611);
}
pub inline fn glVariantusvEXT(arg_9612: GLuint, arg_9613: [*c]const GLushort) void {
    return epoxy_glVariantusvEXT.?(arg_9612, arg_9613);
}
pub inline fn glVertex2bOES(arg_9614: GLbyte, arg_9615: GLbyte) void {
    return epoxy_glVertex2bOES.?(arg_9614, arg_9615);
}
pub inline fn glVertex2bvOES(arg_9616: [*c]const GLbyte) void {
    return epoxy_glVertex2bvOES.?(arg_9616);
}
pub inline fn glVertex2d(arg_9617: GLdouble, arg_9618: GLdouble) void {
    return epoxy_glVertex2d.?(arg_9617, arg_9618);
}
pub inline fn glVertex2dv(arg_9619: [*c]const GLdouble) void {
    return epoxy_glVertex2dv.?(arg_9619);
}
pub inline fn glVertex2f(arg_9620: GLfloat, arg_9621: GLfloat) void {
    return epoxy_glVertex2f.?(arg_9620, arg_9621);
}
pub inline fn glVertex2fv(arg_9622: [*c]const GLfloat) void {
    return epoxy_glVertex2fv.?(arg_9622);
}
pub inline fn glVertex2hNV(arg_9623: GLhalfNV, arg_9624: GLhalfNV) void {
    return epoxy_glVertex2hNV.?(arg_9623, arg_9624);
}
pub inline fn glVertex2hvNV(arg_9625: [*c]const GLhalfNV) void {
    return epoxy_glVertex2hvNV.?(arg_9625);
}
pub inline fn glVertex2i(arg_9626: GLint, arg_9627: GLint) void {
    return epoxy_glVertex2i.?(arg_9626, arg_9627);
}
pub inline fn glVertex2iv(arg_9628: [*c]const GLint) void {
    return epoxy_glVertex2iv.?(arg_9628);
}
pub inline fn glVertex2s(arg_9629: GLshort, arg_9630: GLshort) void {
    return epoxy_glVertex2s.?(arg_9629, arg_9630);
}
pub inline fn glVertex2sv(arg_9631: [*c]const GLshort) void {
    return epoxy_glVertex2sv.?(arg_9631);
}
pub inline fn glVertex2xOES(arg_9632: GLfixed) void {
    return epoxy_glVertex2xOES.?(arg_9632);
}
pub inline fn glVertex2xvOES(arg_9633: [*c]const GLfixed) void {
    return epoxy_glVertex2xvOES.?(arg_9633);
}
pub inline fn glVertex3bOES(arg_9634: GLbyte, arg_9635: GLbyte, arg_9636: GLbyte) void {
    return epoxy_glVertex3bOES.?(arg_9634, arg_9635, arg_9636);
}
pub inline fn glVertex3bvOES(arg_9637: [*c]const GLbyte) void {
    return epoxy_glVertex3bvOES.?(arg_9637);
}
pub inline fn glVertex3d(arg_9638: GLdouble, arg_9639: GLdouble, arg_9640: GLdouble) void {
    return epoxy_glVertex3d.?(arg_9638, arg_9639, arg_9640);
}
pub inline fn glVertex3dv(arg_9641: [*c]const GLdouble) void {
    return epoxy_glVertex3dv.?(arg_9641);
}
pub inline fn glVertex3f(arg_9642: GLfloat, arg_9643: GLfloat, arg_9644: GLfloat) void {
    return epoxy_glVertex3f.?(arg_9642, arg_9643, arg_9644);
}
pub inline fn glVertex3fv(arg_9645: [*c]const GLfloat) void {
    return epoxy_glVertex3fv.?(arg_9645);
}
pub inline fn glVertex3hNV(arg_9646: GLhalfNV, arg_9647: GLhalfNV, arg_9648: GLhalfNV) void {
    return epoxy_glVertex3hNV.?(arg_9646, arg_9647, arg_9648);
}
pub inline fn glVertex3hvNV(arg_9649: [*c]const GLhalfNV) void {
    return epoxy_glVertex3hvNV.?(arg_9649);
}
pub inline fn glVertex3i(arg_9650: GLint, arg_9651: GLint, arg_9652: GLint) void {
    return epoxy_glVertex3i.?(arg_9650, arg_9651, arg_9652);
}
pub inline fn glVertex3iv(arg_9653: [*c]const GLint) void {
    return epoxy_glVertex3iv.?(arg_9653);
}
pub inline fn glVertex3s(arg_9654: GLshort, arg_9655: GLshort, arg_9656: GLshort) void {
    return epoxy_glVertex3s.?(arg_9654, arg_9655, arg_9656);
}
pub inline fn glVertex3sv(arg_9657: [*c]const GLshort) void {
    return epoxy_glVertex3sv.?(arg_9657);
}
pub inline fn glVertex3xOES(arg_9658: GLfixed, arg_9659: GLfixed) void {
    return epoxy_glVertex3xOES.?(arg_9658, arg_9659);
}
pub inline fn glVertex3xvOES(arg_9660: [*c]const GLfixed) void {
    return epoxy_glVertex3xvOES.?(arg_9660);
}
pub inline fn glVertex4bOES(arg_9661: GLbyte, arg_9662: GLbyte, arg_9663: GLbyte, arg_9664: GLbyte) void {
    return epoxy_glVertex4bOES.?(arg_9661, arg_9662, arg_9663, arg_9664);
}
pub inline fn glVertex4bvOES(arg_9665: [*c]const GLbyte) void {
    return epoxy_glVertex4bvOES.?(arg_9665);
}
pub inline fn glVertex4d(arg_9666: GLdouble, arg_9667: GLdouble, arg_9668: GLdouble, arg_9669: GLdouble) void {
    return epoxy_glVertex4d.?(arg_9666, arg_9667, arg_9668, arg_9669);
}
pub inline fn glVertex4dv(arg_9670: [*c]const GLdouble) void {
    return epoxy_glVertex4dv.?(arg_9670);
}
pub inline fn glVertex4f(arg_9671: GLfloat, arg_9672: GLfloat, arg_9673: GLfloat, arg_9674: GLfloat) void {
    return epoxy_glVertex4f.?(arg_9671, arg_9672, arg_9673, arg_9674);
}
pub inline fn glVertex4fv(arg_9675: [*c]const GLfloat) void {
    return epoxy_glVertex4fv.?(arg_9675);
}
pub inline fn glVertex4hNV(arg_9676: GLhalfNV, arg_9677: GLhalfNV, arg_9678: GLhalfNV, arg_9679: GLhalfNV) void {
    return epoxy_glVertex4hNV.?(arg_9676, arg_9677, arg_9678, arg_9679);
}
pub inline fn glVertex4hvNV(arg_9680: [*c]const GLhalfNV) void {
    return epoxy_glVertex4hvNV.?(arg_9680);
}
pub inline fn glVertex4i(arg_9681: GLint, arg_9682: GLint, arg_9683: GLint, arg_9684: GLint) void {
    return epoxy_glVertex4i.?(arg_9681, arg_9682, arg_9683, arg_9684);
}
pub inline fn glVertex4iv(arg_9685: [*c]const GLint) void {
    return epoxy_glVertex4iv.?(arg_9685);
}
pub inline fn glVertex4s(arg_9686: GLshort, arg_9687: GLshort, arg_9688: GLshort, arg_9689: GLshort) void {
    return epoxy_glVertex4s.?(arg_9686, arg_9687, arg_9688, arg_9689);
}
pub inline fn glVertex4sv(arg_9690: [*c]const GLshort) void {
    return epoxy_glVertex4sv.?(arg_9690);
}
pub inline fn glVertex4xOES(arg_9691: GLfixed, arg_9692: GLfixed, arg_9693: GLfixed) void {
    return epoxy_glVertex4xOES.?(arg_9691, arg_9692, arg_9693);
}
pub inline fn glVertex4xvOES(arg_9694: [*c]const GLfixed) void {
    return epoxy_glVertex4xvOES.?(arg_9694);
}
pub inline fn glVertexArrayAttribBinding(arg_9695: GLuint, arg_9696: GLuint, arg_9697: GLuint) void {
    return epoxy_glVertexArrayAttribBinding.?(arg_9695, arg_9696, arg_9697);
}
pub inline fn glVertexArrayAttribFormat(arg_9698: GLuint, arg_9699: GLuint, arg_9700: GLint, arg_9701: GLenum, arg_9702: GLboolean, arg_9703: GLuint) void {
    return epoxy_glVertexArrayAttribFormat.?(arg_9698, arg_9699, arg_9700, arg_9701, arg_9702, arg_9703);
}
pub inline fn glVertexArrayAttribIFormat(arg_9704: GLuint, arg_9705: GLuint, arg_9706: GLint, arg_9707: GLenum, arg_9708: GLuint) void {
    return epoxy_glVertexArrayAttribIFormat.?(arg_9704, arg_9705, arg_9706, arg_9707, arg_9708);
}
pub inline fn glVertexArrayAttribLFormat(arg_9709: GLuint, arg_9710: GLuint, arg_9711: GLint, arg_9712: GLenum, arg_9713: GLuint) void {
    return epoxy_glVertexArrayAttribLFormat.?(arg_9709, arg_9710, arg_9711, arg_9712, arg_9713);
}
pub inline fn glVertexArrayBindVertexBufferEXT(arg_9714: GLuint, arg_9715: GLuint, arg_9716: GLuint, arg_9717: GLintptr, arg_9718: GLsizei) void {
    return epoxy_glVertexArrayBindVertexBufferEXT.?(arg_9714, arg_9715, arg_9716, arg_9717, arg_9718);
}
pub inline fn glVertexArrayBindingDivisor(arg_9719: GLuint, arg_9720: GLuint, arg_9721: GLuint) void {
    return epoxy_glVertexArrayBindingDivisor.?(arg_9719, arg_9720, arg_9721);
}
pub inline fn glVertexArrayColorOffsetEXT(arg_9722: GLuint, arg_9723: GLuint, arg_9724: GLint, arg_9725: GLenum, arg_9726: GLsizei, arg_9727: GLintptr) void {
    return epoxy_glVertexArrayColorOffsetEXT.?(arg_9722, arg_9723, arg_9724, arg_9725, arg_9726, arg_9727);
}
pub inline fn glVertexArrayEdgeFlagOffsetEXT(arg_9728: GLuint, arg_9729: GLuint, arg_9730: GLsizei, arg_9731: GLintptr) void {
    return epoxy_glVertexArrayEdgeFlagOffsetEXT.?(arg_9728, arg_9729, arg_9730, arg_9731);
}
pub inline fn glVertexArrayElementBuffer(arg_9732: GLuint, arg_9733: GLuint) void {
    return epoxy_glVertexArrayElementBuffer.?(arg_9732, arg_9733);
}
pub inline fn glVertexArrayFogCoordOffsetEXT(arg_9734: GLuint, arg_9735: GLuint, arg_9736: GLenum, arg_9737: GLsizei, arg_9738: GLintptr) void {
    return epoxy_glVertexArrayFogCoordOffsetEXT.?(arg_9734, arg_9735, arg_9736, arg_9737, arg_9738);
}
pub inline fn glVertexArrayIndexOffsetEXT(arg_9739: GLuint, arg_9740: GLuint, arg_9741: GLenum, arg_9742: GLsizei, arg_9743: GLintptr) void {
    return epoxy_glVertexArrayIndexOffsetEXT.?(arg_9739, arg_9740, arg_9741, arg_9742, arg_9743);
}
pub inline fn glVertexArrayMultiTexCoordOffsetEXT(arg_9744: GLuint, arg_9745: GLuint, arg_9746: GLenum, arg_9747: GLint, arg_9748: GLenum, arg_9749: GLsizei, arg_9750: GLintptr) void {
    return epoxy_glVertexArrayMultiTexCoordOffsetEXT.?(arg_9744, arg_9745, arg_9746, arg_9747, arg_9748, arg_9749, arg_9750);
}
pub inline fn glVertexArrayNormalOffsetEXT(arg_9751: GLuint, arg_9752: GLuint, arg_9753: GLenum, arg_9754: GLsizei, arg_9755: GLintptr) void {
    return epoxy_glVertexArrayNormalOffsetEXT.?(arg_9751, arg_9752, arg_9753, arg_9754, arg_9755);
}
pub inline fn glVertexArrayParameteriAPPLE(arg_9756: GLenum, arg_9757: GLint) void {
    return epoxy_glVertexArrayParameteriAPPLE.?(arg_9756, arg_9757);
}
pub inline fn glVertexArrayRangeAPPLE(arg_9758: GLsizei, arg_9759: ?*anyopaque) void {
    return epoxy_glVertexArrayRangeAPPLE.?(arg_9758, arg_9759);
}
pub inline fn glVertexArrayRangeNV(arg_9760: GLsizei, arg_9761: ?*const anyopaque) void {
    return epoxy_glVertexArrayRangeNV.?(arg_9760, arg_9761);
}
pub inline fn glVertexArraySecondaryColorOffsetEXT(arg_9762: GLuint, arg_9763: GLuint, arg_9764: GLint, arg_9765: GLenum, arg_9766: GLsizei, arg_9767: GLintptr) void {
    return epoxy_glVertexArraySecondaryColorOffsetEXT.?(arg_9762, arg_9763, arg_9764, arg_9765, arg_9766, arg_9767);
}
pub inline fn glVertexArrayTexCoordOffsetEXT(arg_9768: GLuint, arg_9769: GLuint, arg_9770: GLint, arg_9771: GLenum, arg_9772: GLsizei, arg_9773: GLintptr) void {
    return epoxy_glVertexArrayTexCoordOffsetEXT.?(arg_9768, arg_9769, arg_9770, arg_9771, arg_9772, arg_9773);
}
pub inline fn glVertexArrayVertexAttribBindingEXT(arg_9774: GLuint, arg_9775: GLuint, arg_9776: GLuint) void {
    return epoxy_glVertexArrayVertexAttribBindingEXT.?(arg_9774, arg_9775, arg_9776);
}
pub inline fn glVertexArrayVertexAttribDivisorEXT(arg_9777: GLuint, arg_9778: GLuint, arg_9779: GLuint) void {
    return epoxy_glVertexArrayVertexAttribDivisorEXT.?(arg_9777, arg_9778, arg_9779);
}
pub inline fn glVertexArrayVertexAttribFormatEXT(arg_9780: GLuint, arg_9781: GLuint, arg_9782: GLint, arg_9783: GLenum, arg_9784: GLboolean, arg_9785: GLuint) void {
    return epoxy_glVertexArrayVertexAttribFormatEXT.?(arg_9780, arg_9781, arg_9782, arg_9783, arg_9784, arg_9785);
}
pub inline fn glVertexArrayVertexAttribIFormatEXT(arg_9786: GLuint, arg_9787: GLuint, arg_9788: GLint, arg_9789: GLenum, arg_9790: GLuint) void {
    return epoxy_glVertexArrayVertexAttribIFormatEXT.?(arg_9786, arg_9787, arg_9788, arg_9789, arg_9790);
}
pub inline fn glVertexArrayVertexAttribIOffsetEXT(arg_9791: GLuint, arg_9792: GLuint, arg_9793: GLuint, arg_9794: GLint, arg_9795: GLenum, arg_9796: GLsizei, arg_9797: GLintptr) void {
    return epoxy_glVertexArrayVertexAttribIOffsetEXT.?(arg_9791, arg_9792, arg_9793, arg_9794, arg_9795, arg_9796, arg_9797);
}
pub inline fn glVertexArrayVertexAttribLFormatEXT(arg_9798: GLuint, arg_9799: GLuint, arg_9800: GLint, arg_9801: GLenum, arg_9802: GLuint) void {
    return epoxy_glVertexArrayVertexAttribLFormatEXT.?(arg_9798, arg_9799, arg_9800, arg_9801, arg_9802);
}
pub inline fn glVertexArrayVertexAttribLOffsetEXT(arg_9803: GLuint, arg_9804: GLuint, arg_9805: GLuint, arg_9806: GLint, arg_9807: GLenum, arg_9808: GLsizei, arg_9809: GLintptr) void {
    return epoxy_glVertexArrayVertexAttribLOffsetEXT.?(arg_9803, arg_9804, arg_9805, arg_9806, arg_9807, arg_9808, arg_9809);
}
pub inline fn glVertexArrayVertexAttribOffsetEXT(arg_9810: GLuint, arg_9811: GLuint, arg_9812: GLuint, arg_9813: GLint, arg_9814: GLenum, arg_9815: GLboolean, arg_9816: GLsizei, arg_9817: GLintptr) void {
    return epoxy_glVertexArrayVertexAttribOffsetEXT.?(arg_9810, arg_9811, arg_9812, arg_9813, arg_9814, arg_9815, arg_9816, arg_9817);
}
pub inline fn glVertexArrayVertexBindingDivisorEXT(arg_9818: GLuint, arg_9819: GLuint, arg_9820: GLuint) void {
    return epoxy_glVertexArrayVertexBindingDivisorEXT.?(arg_9818, arg_9819, arg_9820);
}
pub inline fn glVertexArrayVertexBuffer(arg_9821: GLuint, arg_9822: GLuint, arg_9823: GLuint, arg_9824: GLintptr, arg_9825: GLsizei) void {
    return epoxy_glVertexArrayVertexBuffer.?(arg_9821, arg_9822, arg_9823, arg_9824, arg_9825);
}
pub inline fn glVertexArrayVertexBuffers(arg_9826: GLuint, arg_9827: GLuint, arg_9828: GLsizei, arg_9829: [*c]const GLuint, arg_9830: [*c]const GLintptr, arg_9831: [*c]const GLsizei) void {
    return epoxy_glVertexArrayVertexBuffers.?(arg_9826, arg_9827, arg_9828, arg_9829, arg_9830, arg_9831);
}
pub inline fn glVertexArrayVertexOffsetEXT(arg_9832: GLuint, arg_9833: GLuint, arg_9834: GLint, arg_9835: GLenum, arg_9836: GLsizei, arg_9837: GLintptr) void {
    return epoxy_glVertexArrayVertexOffsetEXT.?(arg_9832, arg_9833, arg_9834, arg_9835, arg_9836, arg_9837);
}
pub inline fn glVertexAttrib1d(arg_9838: GLuint, arg_9839: GLdouble) void {
    return epoxy_glVertexAttrib1d.?(arg_9838, arg_9839);
}
pub inline fn glVertexAttrib1dARB(arg_9840: GLuint, arg_9841: GLdouble) void {
    return epoxy_glVertexAttrib1dARB.?(arg_9840, arg_9841);
}
pub inline fn glVertexAttrib1dNV(arg_9842: GLuint, arg_9843: GLdouble) void {
    return epoxy_glVertexAttrib1dNV.?(arg_9842, arg_9843);
}
pub inline fn glVertexAttrib1dv(arg_9844: GLuint, arg_9845: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib1dv.?(arg_9844, arg_9845);
}
pub inline fn glVertexAttrib1dvARB(arg_9846: GLuint, arg_9847: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib1dvARB.?(arg_9846, arg_9847);
}
pub inline fn glVertexAttrib1dvNV(arg_9848: GLuint, arg_9849: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib1dvNV.?(arg_9848, arg_9849);
}
pub inline fn glVertexAttrib1f(arg_9850: GLuint, arg_9851: GLfloat) void {
    return epoxy_glVertexAttrib1f.?(arg_9850, arg_9851);
}
pub inline fn glVertexAttrib1fARB(arg_9852: GLuint, arg_9853: GLfloat) void {
    return epoxy_glVertexAttrib1fARB.?(arg_9852, arg_9853);
}
pub inline fn glVertexAttrib1fNV(arg_9854: GLuint, arg_9855: GLfloat) void {
    return epoxy_glVertexAttrib1fNV.?(arg_9854, arg_9855);
}
pub inline fn glVertexAttrib1fv(arg_9856: GLuint, arg_9857: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib1fv.?(arg_9856, arg_9857);
}
pub inline fn glVertexAttrib1fvARB(arg_9858: GLuint, arg_9859: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib1fvARB.?(arg_9858, arg_9859);
}
pub inline fn glVertexAttrib1fvNV(arg_9860: GLuint, arg_9861: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib1fvNV.?(arg_9860, arg_9861);
}
pub inline fn glVertexAttrib1hNV(arg_9862: GLuint, arg_9863: GLhalfNV) void {
    return epoxy_glVertexAttrib1hNV.?(arg_9862, arg_9863);
}
pub inline fn glVertexAttrib1hvNV(arg_9864: GLuint, arg_9865: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttrib1hvNV.?(arg_9864, arg_9865);
}
pub inline fn glVertexAttrib1s(arg_9866: GLuint, arg_9867: GLshort) void {
    return epoxy_glVertexAttrib1s.?(arg_9866, arg_9867);
}
pub inline fn glVertexAttrib1sARB(arg_9868: GLuint, arg_9869: GLshort) void {
    return epoxy_glVertexAttrib1sARB.?(arg_9868, arg_9869);
}
pub inline fn glVertexAttrib1sNV(arg_9870: GLuint, arg_9871: GLshort) void {
    return epoxy_glVertexAttrib1sNV.?(arg_9870, arg_9871);
}
pub inline fn glVertexAttrib1sv(arg_9872: GLuint, arg_9873: [*c]const GLshort) void {
    return epoxy_glVertexAttrib1sv.?(arg_9872, arg_9873);
}
pub inline fn glVertexAttrib1svARB(arg_9874: GLuint, arg_9875: [*c]const GLshort) void {
    return epoxy_glVertexAttrib1svARB.?(arg_9874, arg_9875);
}
pub inline fn glVertexAttrib1svNV(arg_9876: GLuint, arg_9877: [*c]const GLshort) void {
    return epoxy_glVertexAttrib1svNV.?(arg_9876, arg_9877);
}
pub inline fn glVertexAttrib2d(arg_9878: GLuint, arg_9879: GLdouble, arg_9880: GLdouble) void {
    return epoxy_glVertexAttrib2d.?(arg_9878, arg_9879, arg_9880);
}
pub inline fn glVertexAttrib2dARB(arg_9881: GLuint, arg_9882: GLdouble, arg_9883: GLdouble) void {
    return epoxy_glVertexAttrib2dARB.?(arg_9881, arg_9882, arg_9883);
}
pub inline fn glVertexAttrib2dNV(arg_9884: GLuint, arg_9885: GLdouble, arg_9886: GLdouble) void {
    return epoxy_glVertexAttrib2dNV.?(arg_9884, arg_9885, arg_9886);
}
pub inline fn glVertexAttrib2dv(arg_9887: GLuint, arg_9888: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib2dv.?(arg_9887, arg_9888);
}
pub inline fn glVertexAttrib2dvARB(arg_9889: GLuint, arg_9890: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib2dvARB.?(arg_9889, arg_9890);
}
pub inline fn glVertexAttrib2dvNV(arg_9891: GLuint, arg_9892: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib2dvNV.?(arg_9891, arg_9892);
}
pub inline fn glVertexAttrib2f(arg_9893: GLuint, arg_9894: GLfloat, arg_9895: GLfloat) void {
    return epoxy_glVertexAttrib2f.?(arg_9893, arg_9894, arg_9895);
}
pub inline fn glVertexAttrib2fARB(arg_9896: GLuint, arg_9897: GLfloat, arg_9898: GLfloat) void {
    return epoxy_glVertexAttrib2fARB.?(arg_9896, arg_9897, arg_9898);
}
pub inline fn glVertexAttrib2fNV(arg_9899: GLuint, arg_9900: GLfloat, arg_9901: GLfloat) void {
    return epoxy_glVertexAttrib2fNV.?(arg_9899, arg_9900, arg_9901);
}
pub inline fn glVertexAttrib2fv(arg_9902: GLuint, arg_9903: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib2fv.?(arg_9902, arg_9903);
}
pub inline fn glVertexAttrib2fvARB(arg_9904: GLuint, arg_9905: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib2fvARB.?(arg_9904, arg_9905);
}
pub inline fn glVertexAttrib2fvNV(arg_9906: GLuint, arg_9907: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib2fvNV.?(arg_9906, arg_9907);
}
pub inline fn glVertexAttrib2hNV(arg_9908: GLuint, arg_9909: GLhalfNV, arg_9910: GLhalfNV) void {
    return epoxy_glVertexAttrib2hNV.?(arg_9908, arg_9909, arg_9910);
}
pub inline fn glVertexAttrib2hvNV(arg_9911: GLuint, arg_9912: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttrib2hvNV.?(arg_9911, arg_9912);
}
pub inline fn glVertexAttrib2s(arg_9913: GLuint, arg_9914: GLshort, arg_9915: GLshort) void {
    return epoxy_glVertexAttrib2s.?(arg_9913, arg_9914, arg_9915);
}
pub inline fn glVertexAttrib2sARB(arg_9916: GLuint, arg_9917: GLshort, arg_9918: GLshort) void {
    return epoxy_glVertexAttrib2sARB.?(arg_9916, arg_9917, arg_9918);
}
pub inline fn glVertexAttrib2sNV(arg_9919: GLuint, arg_9920: GLshort, arg_9921: GLshort) void {
    return epoxy_glVertexAttrib2sNV.?(arg_9919, arg_9920, arg_9921);
}
pub inline fn glVertexAttrib2sv(arg_9922: GLuint, arg_9923: [*c]const GLshort) void {
    return epoxy_glVertexAttrib2sv.?(arg_9922, arg_9923);
}
pub inline fn glVertexAttrib2svARB(arg_9924: GLuint, arg_9925: [*c]const GLshort) void {
    return epoxy_glVertexAttrib2svARB.?(arg_9924, arg_9925);
}
pub inline fn glVertexAttrib2svNV(arg_9926: GLuint, arg_9927: [*c]const GLshort) void {
    return epoxy_glVertexAttrib2svNV.?(arg_9926, arg_9927);
}
pub inline fn glVertexAttrib3d(arg_9928: GLuint, arg_9929: GLdouble, arg_9930: GLdouble, arg_9931: GLdouble) void {
    return epoxy_glVertexAttrib3d.?(arg_9928, arg_9929, arg_9930, arg_9931);
}
pub inline fn glVertexAttrib3dARB(arg_9932: GLuint, arg_9933: GLdouble, arg_9934: GLdouble, arg_9935: GLdouble) void {
    return epoxy_glVertexAttrib3dARB.?(arg_9932, arg_9933, arg_9934, arg_9935);
}
pub inline fn glVertexAttrib3dNV(arg_9936: GLuint, arg_9937: GLdouble, arg_9938: GLdouble, arg_9939: GLdouble) void {
    return epoxy_glVertexAttrib3dNV.?(arg_9936, arg_9937, arg_9938, arg_9939);
}
pub inline fn glVertexAttrib3dv(arg_9940: GLuint, arg_9941: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib3dv.?(arg_9940, arg_9941);
}
pub inline fn glVertexAttrib3dvARB(arg_9942: GLuint, arg_9943: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib3dvARB.?(arg_9942, arg_9943);
}
pub inline fn glVertexAttrib3dvNV(arg_9944: GLuint, arg_9945: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib3dvNV.?(arg_9944, arg_9945);
}
pub inline fn glVertexAttrib3f(arg_9946: GLuint, arg_9947: GLfloat, arg_9948: GLfloat, arg_9949: GLfloat) void {
    return epoxy_glVertexAttrib3f.?(arg_9946, arg_9947, arg_9948, arg_9949);
}
pub inline fn glVertexAttrib3fARB(arg_9950: GLuint, arg_9951: GLfloat, arg_9952: GLfloat, arg_9953: GLfloat) void {
    return epoxy_glVertexAttrib3fARB.?(arg_9950, arg_9951, arg_9952, arg_9953);
}
pub inline fn glVertexAttrib3fNV(arg_9954: GLuint, arg_9955: GLfloat, arg_9956: GLfloat, arg_9957: GLfloat) void {
    return epoxy_glVertexAttrib3fNV.?(arg_9954, arg_9955, arg_9956, arg_9957);
}
pub inline fn glVertexAttrib3fv(arg_9958: GLuint, arg_9959: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib3fv.?(arg_9958, arg_9959);
}
pub inline fn glVertexAttrib3fvARB(arg_9960: GLuint, arg_9961: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib3fvARB.?(arg_9960, arg_9961);
}
pub inline fn glVertexAttrib3fvNV(arg_9962: GLuint, arg_9963: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib3fvNV.?(arg_9962, arg_9963);
}
pub inline fn glVertexAttrib3hNV(arg_9964: GLuint, arg_9965: GLhalfNV, arg_9966: GLhalfNV, arg_9967: GLhalfNV) void {
    return epoxy_glVertexAttrib3hNV.?(arg_9964, arg_9965, arg_9966, arg_9967);
}
pub inline fn glVertexAttrib3hvNV(arg_9968: GLuint, arg_9969: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttrib3hvNV.?(arg_9968, arg_9969);
}
pub inline fn glVertexAttrib3s(arg_9970: GLuint, arg_9971: GLshort, arg_9972: GLshort, arg_9973: GLshort) void {
    return epoxy_glVertexAttrib3s.?(arg_9970, arg_9971, arg_9972, arg_9973);
}
pub inline fn glVertexAttrib3sARB(arg_9974: GLuint, arg_9975: GLshort, arg_9976: GLshort, arg_9977: GLshort) void {
    return epoxy_glVertexAttrib3sARB.?(arg_9974, arg_9975, arg_9976, arg_9977);
}
pub inline fn glVertexAttrib3sNV(arg_9978: GLuint, arg_9979: GLshort, arg_9980: GLshort, arg_9981: GLshort) void {
    return epoxy_glVertexAttrib3sNV.?(arg_9978, arg_9979, arg_9980, arg_9981);
}
pub inline fn glVertexAttrib3sv(arg_9982: GLuint, arg_9983: [*c]const GLshort) void {
    return epoxy_glVertexAttrib3sv.?(arg_9982, arg_9983);
}
pub inline fn glVertexAttrib3svARB(arg_9984: GLuint, arg_9985: [*c]const GLshort) void {
    return epoxy_glVertexAttrib3svARB.?(arg_9984, arg_9985);
}
pub inline fn glVertexAttrib3svNV(arg_9986: GLuint, arg_9987: [*c]const GLshort) void {
    return epoxy_glVertexAttrib3svNV.?(arg_9986, arg_9987);
}
pub inline fn glVertexAttrib4Nbv(arg_9988: GLuint, arg_9989: [*c]const GLbyte) void {
    return epoxy_glVertexAttrib4Nbv.?(arg_9988, arg_9989);
}
pub inline fn glVertexAttrib4NbvARB(arg_9990: GLuint, arg_9991: [*c]const GLbyte) void {
    return epoxy_glVertexAttrib4NbvARB.?(arg_9990, arg_9991);
}
pub inline fn glVertexAttrib4Niv(arg_9992: GLuint, arg_9993: [*c]const GLint) void {
    return epoxy_glVertexAttrib4Niv.?(arg_9992, arg_9993);
}
pub inline fn glVertexAttrib4NivARB(arg_9994: GLuint, arg_9995: [*c]const GLint) void {
    return epoxy_glVertexAttrib4NivARB.?(arg_9994, arg_9995);
}
pub inline fn glVertexAttrib4Nsv(arg_9996: GLuint, arg_9997: [*c]const GLshort) void {
    return epoxy_glVertexAttrib4Nsv.?(arg_9996, arg_9997);
}
pub inline fn glVertexAttrib4NsvARB(arg_9998: GLuint, arg_9999: [*c]const GLshort) void {
    return epoxy_glVertexAttrib4NsvARB.?(arg_9998, arg_9999);
}
pub inline fn glVertexAttrib4Nub(arg_10000: GLuint, arg_10001: GLubyte, arg_10002: GLubyte, arg_10003: GLubyte, arg_10004: GLubyte) void {
    return epoxy_glVertexAttrib4Nub.?(arg_10000, arg_10001, arg_10002, arg_10003, arg_10004);
}
pub inline fn glVertexAttrib4NubARB(arg_10005: GLuint, arg_10006: GLubyte, arg_10007: GLubyte, arg_10008: GLubyte, arg_10009: GLubyte) void {
    return epoxy_glVertexAttrib4NubARB.?(arg_10005, arg_10006, arg_10007, arg_10008, arg_10009);
}
pub inline fn glVertexAttrib4Nubv(arg_10010: GLuint, arg_10011: [*c]const GLubyte) void {
    return epoxy_glVertexAttrib4Nubv.?(arg_10010, arg_10011);
}
pub inline fn glVertexAttrib4NubvARB(arg_10012: GLuint, arg_10013: [*c]const GLubyte) void {
    return epoxy_glVertexAttrib4NubvARB.?(arg_10012, arg_10013);
}
pub inline fn glVertexAttrib4Nuiv(arg_10014: GLuint, arg_10015: [*c]const GLuint) void {
    return epoxy_glVertexAttrib4Nuiv.?(arg_10014, arg_10015);
}
pub inline fn glVertexAttrib4NuivARB(arg_10016: GLuint, arg_10017: [*c]const GLuint) void {
    return epoxy_glVertexAttrib4NuivARB.?(arg_10016, arg_10017);
}
pub inline fn glVertexAttrib4Nusv(arg_10018: GLuint, arg_10019: [*c]const GLushort) void {
    return epoxy_glVertexAttrib4Nusv.?(arg_10018, arg_10019);
}
pub inline fn glVertexAttrib4NusvARB(arg_10020: GLuint, arg_10021: [*c]const GLushort) void {
    return epoxy_glVertexAttrib4NusvARB.?(arg_10020, arg_10021);
}
pub inline fn glVertexAttrib4bv(arg_10022: GLuint, arg_10023: [*c]const GLbyte) void {
    return epoxy_glVertexAttrib4bv.?(arg_10022, arg_10023);
}
pub inline fn glVertexAttrib4bvARB(arg_10024: GLuint, arg_10025: [*c]const GLbyte) void {
    return epoxy_glVertexAttrib4bvARB.?(arg_10024, arg_10025);
}
pub inline fn glVertexAttrib4d(arg_10026: GLuint, arg_10027: GLdouble, arg_10028: GLdouble, arg_10029: GLdouble, arg_10030: GLdouble) void {
    return epoxy_glVertexAttrib4d.?(arg_10026, arg_10027, arg_10028, arg_10029, arg_10030);
}
pub inline fn glVertexAttrib4dARB(arg_10031: GLuint, arg_10032: GLdouble, arg_10033: GLdouble, arg_10034: GLdouble, arg_10035: GLdouble) void {
    return epoxy_glVertexAttrib4dARB.?(arg_10031, arg_10032, arg_10033, arg_10034, arg_10035);
}
pub inline fn glVertexAttrib4dNV(arg_10036: GLuint, arg_10037: GLdouble, arg_10038: GLdouble, arg_10039: GLdouble, arg_10040: GLdouble) void {
    return epoxy_glVertexAttrib4dNV.?(arg_10036, arg_10037, arg_10038, arg_10039, arg_10040);
}
pub inline fn glVertexAttrib4dv(arg_10041: GLuint, arg_10042: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib4dv.?(arg_10041, arg_10042);
}
pub inline fn glVertexAttrib4dvARB(arg_10043: GLuint, arg_10044: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib4dvARB.?(arg_10043, arg_10044);
}
pub inline fn glVertexAttrib4dvNV(arg_10045: GLuint, arg_10046: [*c]const GLdouble) void {
    return epoxy_glVertexAttrib4dvNV.?(arg_10045, arg_10046);
}
pub inline fn glVertexAttrib4f(arg_10047: GLuint, arg_10048: GLfloat, arg_10049: GLfloat, arg_10050: GLfloat, arg_10051: GLfloat) void {
    return epoxy_glVertexAttrib4f.?(arg_10047, arg_10048, arg_10049, arg_10050, arg_10051);
}
pub inline fn glVertexAttrib4fARB(arg_10052: GLuint, arg_10053: GLfloat, arg_10054: GLfloat, arg_10055: GLfloat, arg_10056: GLfloat) void {
    return epoxy_glVertexAttrib4fARB.?(arg_10052, arg_10053, arg_10054, arg_10055, arg_10056);
}
pub inline fn glVertexAttrib4fNV(arg_10057: GLuint, arg_10058: GLfloat, arg_10059: GLfloat, arg_10060: GLfloat, arg_10061: GLfloat) void {
    return epoxy_glVertexAttrib4fNV.?(arg_10057, arg_10058, arg_10059, arg_10060, arg_10061);
}
pub inline fn glVertexAttrib4fv(arg_10062: GLuint, arg_10063: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib4fv.?(arg_10062, arg_10063);
}
pub inline fn glVertexAttrib4fvARB(arg_10064: GLuint, arg_10065: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib4fvARB.?(arg_10064, arg_10065);
}
pub inline fn glVertexAttrib4fvNV(arg_10066: GLuint, arg_10067: [*c]const GLfloat) void {
    return epoxy_glVertexAttrib4fvNV.?(arg_10066, arg_10067);
}
pub inline fn glVertexAttrib4hNV(arg_10068: GLuint, arg_10069: GLhalfNV, arg_10070: GLhalfNV, arg_10071: GLhalfNV, arg_10072: GLhalfNV) void {
    return epoxy_glVertexAttrib4hNV.?(arg_10068, arg_10069, arg_10070, arg_10071, arg_10072);
}
pub inline fn glVertexAttrib4hvNV(arg_10073: GLuint, arg_10074: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttrib4hvNV.?(arg_10073, arg_10074);
}
pub inline fn glVertexAttrib4iv(arg_10075: GLuint, arg_10076: [*c]const GLint) void {
    return epoxy_glVertexAttrib4iv.?(arg_10075, arg_10076);
}
pub inline fn glVertexAttrib4ivARB(arg_10077: GLuint, arg_10078: [*c]const GLint) void {
    return epoxy_glVertexAttrib4ivARB.?(arg_10077, arg_10078);
}
pub inline fn glVertexAttrib4s(arg_10079: GLuint, arg_10080: GLshort, arg_10081: GLshort, arg_10082: GLshort, arg_10083: GLshort) void {
    return epoxy_glVertexAttrib4s.?(arg_10079, arg_10080, arg_10081, arg_10082, arg_10083);
}
pub inline fn glVertexAttrib4sARB(arg_10084: GLuint, arg_10085: GLshort, arg_10086: GLshort, arg_10087: GLshort, arg_10088: GLshort) void {
    return epoxy_glVertexAttrib4sARB.?(arg_10084, arg_10085, arg_10086, arg_10087, arg_10088);
}
pub inline fn glVertexAttrib4sNV(arg_10089: GLuint, arg_10090: GLshort, arg_10091: GLshort, arg_10092: GLshort, arg_10093: GLshort) void {
    return epoxy_glVertexAttrib4sNV.?(arg_10089, arg_10090, arg_10091, arg_10092, arg_10093);
}
pub inline fn glVertexAttrib4sv(arg_10094: GLuint, arg_10095: [*c]const GLshort) void {
    return epoxy_glVertexAttrib4sv.?(arg_10094, arg_10095);
}
pub inline fn glVertexAttrib4svARB(arg_10096: GLuint, arg_10097: [*c]const GLshort) void {
    return epoxy_glVertexAttrib4svARB.?(arg_10096, arg_10097);
}
pub inline fn glVertexAttrib4svNV(arg_10098: GLuint, arg_10099: [*c]const GLshort) void {
    return epoxy_glVertexAttrib4svNV.?(arg_10098, arg_10099);
}
pub inline fn glVertexAttrib4ubNV(arg_10100: GLuint, arg_10101: GLubyte, arg_10102: GLubyte, arg_10103: GLubyte, arg_10104: GLubyte) void {
    return epoxy_glVertexAttrib4ubNV.?(arg_10100, arg_10101, arg_10102, arg_10103, arg_10104);
}
pub inline fn glVertexAttrib4ubv(arg_10105: GLuint, arg_10106: [*c]const GLubyte) void {
    return epoxy_glVertexAttrib4ubv.?(arg_10105, arg_10106);
}
pub inline fn glVertexAttrib4ubvARB(arg_10107: GLuint, arg_10108: [*c]const GLubyte) void {
    return epoxy_glVertexAttrib4ubvARB.?(arg_10107, arg_10108);
}
pub inline fn glVertexAttrib4ubvNV(arg_10109: GLuint, arg_10110: [*c]const GLubyte) void {
    return epoxy_glVertexAttrib4ubvNV.?(arg_10109, arg_10110);
}
pub inline fn glVertexAttrib4uiv(arg_10111: GLuint, arg_10112: [*c]const GLuint) void {
    return epoxy_glVertexAttrib4uiv.?(arg_10111, arg_10112);
}
pub inline fn glVertexAttrib4uivARB(arg_10113: GLuint, arg_10114: [*c]const GLuint) void {
    return epoxy_glVertexAttrib4uivARB.?(arg_10113, arg_10114);
}
pub inline fn glVertexAttrib4usv(arg_10115: GLuint, arg_10116: [*c]const GLushort) void {
    return epoxy_glVertexAttrib4usv.?(arg_10115, arg_10116);
}
pub inline fn glVertexAttrib4usvARB(arg_10117: GLuint, arg_10118: [*c]const GLushort) void {
    return epoxy_glVertexAttrib4usvARB.?(arg_10117, arg_10118);
}
pub inline fn glVertexAttribArrayObjectATI(arg_10119: GLuint, arg_10120: GLint, arg_10121: GLenum, arg_10122: GLboolean, arg_10123: GLsizei, arg_10124: GLuint, arg_10125: GLuint) void {
    return epoxy_glVertexAttribArrayObjectATI.?(arg_10119, arg_10120, arg_10121, arg_10122, arg_10123, arg_10124, arg_10125);
}
pub inline fn glVertexAttribBinding(arg_10126: GLuint, arg_10127: GLuint) void {
    return epoxy_glVertexAttribBinding.?(arg_10126, arg_10127);
}
pub inline fn glVertexAttribDivisor(arg_10128: GLuint, arg_10129: GLuint) void {
    return epoxy_glVertexAttribDivisor.?(arg_10128, arg_10129);
}
pub inline fn glVertexAttribDivisorANGLE(arg_10130: GLuint, arg_10131: GLuint) void {
    return epoxy_glVertexAttribDivisorANGLE.?(arg_10130, arg_10131);
}
pub inline fn glVertexAttribDivisorARB(arg_10132: GLuint, arg_10133: GLuint) void {
    return epoxy_glVertexAttribDivisorARB.?(arg_10132, arg_10133);
}
pub inline fn glVertexAttribDivisorEXT(arg_10134: GLuint, arg_10135: GLuint) void {
    return epoxy_glVertexAttribDivisorEXT.?(arg_10134, arg_10135);
}
pub inline fn glVertexAttribDivisorNV(arg_10136: GLuint, arg_10137: GLuint) void {
    return epoxy_glVertexAttribDivisorNV.?(arg_10136, arg_10137);
}
pub inline fn glVertexAttribFormat(arg_10138: GLuint, arg_10139: GLint, arg_10140: GLenum, arg_10141: GLboolean, arg_10142: GLuint) void {
    return epoxy_glVertexAttribFormat.?(arg_10138, arg_10139, arg_10140, arg_10141, arg_10142);
}
pub inline fn glVertexAttribFormatNV(arg_10143: GLuint, arg_10144: GLint, arg_10145: GLenum, arg_10146: GLboolean, arg_10147: GLsizei) void {
    return epoxy_glVertexAttribFormatNV.?(arg_10143, arg_10144, arg_10145, arg_10146, arg_10147);
}
pub inline fn glVertexAttribI1i(arg_10148: GLuint, arg_10149: GLint) void {
    return epoxy_glVertexAttribI1i.?(arg_10148, arg_10149);
}
pub inline fn glVertexAttribI1iEXT(arg_10150: GLuint, arg_10151: GLint) void {
    return epoxy_glVertexAttribI1iEXT.?(arg_10150, arg_10151);
}
pub inline fn glVertexAttribI1iv(arg_10152: GLuint, arg_10153: [*c]const GLint) void {
    return epoxy_glVertexAttribI1iv.?(arg_10152, arg_10153);
}
pub inline fn glVertexAttribI1ivEXT(arg_10154: GLuint, arg_10155: [*c]const GLint) void {
    return epoxy_glVertexAttribI1ivEXT.?(arg_10154, arg_10155);
}
pub inline fn glVertexAttribI1ui(arg_10156: GLuint, arg_10157: GLuint) void {
    return epoxy_glVertexAttribI1ui.?(arg_10156, arg_10157);
}
pub inline fn glVertexAttribI1uiEXT(arg_10158: GLuint, arg_10159: GLuint) void {
    return epoxy_glVertexAttribI1uiEXT.?(arg_10158, arg_10159);
}
pub inline fn glVertexAttribI1uiv(arg_10160: GLuint, arg_10161: [*c]const GLuint) void {
    return epoxy_glVertexAttribI1uiv.?(arg_10160, arg_10161);
}
pub inline fn glVertexAttribI1uivEXT(arg_10162: GLuint, arg_10163: [*c]const GLuint) void {
    return epoxy_glVertexAttribI1uivEXT.?(arg_10162, arg_10163);
}
pub inline fn glVertexAttribI2i(arg_10164: GLuint, arg_10165: GLint, arg_10166: GLint) void {
    return epoxy_glVertexAttribI2i.?(arg_10164, arg_10165, arg_10166);
}
pub inline fn glVertexAttribI2iEXT(arg_10167: GLuint, arg_10168: GLint, arg_10169: GLint) void {
    return epoxy_glVertexAttribI2iEXT.?(arg_10167, arg_10168, arg_10169);
}
pub inline fn glVertexAttribI2iv(arg_10170: GLuint, arg_10171: [*c]const GLint) void {
    return epoxy_glVertexAttribI2iv.?(arg_10170, arg_10171);
}
pub inline fn glVertexAttribI2ivEXT(arg_10172: GLuint, arg_10173: [*c]const GLint) void {
    return epoxy_glVertexAttribI2ivEXT.?(arg_10172, arg_10173);
}
pub inline fn glVertexAttribI2ui(arg_10174: GLuint, arg_10175: GLuint, arg_10176: GLuint) void {
    return epoxy_glVertexAttribI2ui.?(arg_10174, arg_10175, arg_10176);
}
pub inline fn glVertexAttribI2uiEXT(arg_10177: GLuint, arg_10178: GLuint, arg_10179: GLuint) void {
    return epoxy_glVertexAttribI2uiEXT.?(arg_10177, arg_10178, arg_10179);
}
pub inline fn glVertexAttribI2uiv(arg_10180: GLuint, arg_10181: [*c]const GLuint) void {
    return epoxy_glVertexAttribI2uiv.?(arg_10180, arg_10181);
}
pub inline fn glVertexAttribI2uivEXT(arg_10182: GLuint, arg_10183: [*c]const GLuint) void {
    return epoxy_glVertexAttribI2uivEXT.?(arg_10182, arg_10183);
}
pub inline fn glVertexAttribI3i(arg_10184: GLuint, arg_10185: GLint, arg_10186: GLint, arg_10187: GLint) void {
    return epoxy_glVertexAttribI3i.?(arg_10184, arg_10185, arg_10186, arg_10187);
}
pub inline fn glVertexAttribI3iEXT(arg_10188: GLuint, arg_10189: GLint, arg_10190: GLint, arg_10191: GLint) void {
    return epoxy_glVertexAttribI3iEXT.?(arg_10188, arg_10189, arg_10190, arg_10191);
}
pub inline fn glVertexAttribI3iv(arg_10192: GLuint, arg_10193: [*c]const GLint) void {
    return epoxy_glVertexAttribI3iv.?(arg_10192, arg_10193);
}
pub inline fn glVertexAttribI3ivEXT(arg_10194: GLuint, arg_10195: [*c]const GLint) void {
    return epoxy_glVertexAttribI3ivEXT.?(arg_10194, arg_10195);
}
pub inline fn glVertexAttribI3ui(arg_10196: GLuint, arg_10197: GLuint, arg_10198: GLuint, arg_10199: GLuint) void {
    return epoxy_glVertexAttribI3ui.?(arg_10196, arg_10197, arg_10198, arg_10199);
}
pub inline fn glVertexAttribI3uiEXT(arg_10200: GLuint, arg_10201: GLuint, arg_10202: GLuint, arg_10203: GLuint) void {
    return epoxy_glVertexAttribI3uiEXT.?(arg_10200, arg_10201, arg_10202, arg_10203);
}
pub inline fn glVertexAttribI3uiv(arg_10204: GLuint, arg_10205: [*c]const GLuint) void {
    return epoxy_glVertexAttribI3uiv.?(arg_10204, arg_10205);
}
pub inline fn glVertexAttribI3uivEXT(arg_10206: GLuint, arg_10207: [*c]const GLuint) void {
    return epoxy_glVertexAttribI3uivEXT.?(arg_10206, arg_10207);
}
pub inline fn glVertexAttribI4bv(arg_10208: GLuint, arg_10209: [*c]const GLbyte) void {
    return epoxy_glVertexAttribI4bv.?(arg_10208, arg_10209);
}
pub inline fn glVertexAttribI4bvEXT(arg_10210: GLuint, arg_10211: [*c]const GLbyte) void {
    return epoxy_glVertexAttribI4bvEXT.?(arg_10210, arg_10211);
}
pub inline fn glVertexAttribI4i(arg_10212: GLuint, arg_10213: GLint, arg_10214: GLint, arg_10215: GLint, arg_10216: GLint) void {
    return epoxy_glVertexAttribI4i.?(arg_10212, arg_10213, arg_10214, arg_10215, arg_10216);
}
pub inline fn glVertexAttribI4iEXT(arg_10217: GLuint, arg_10218: GLint, arg_10219: GLint, arg_10220: GLint, arg_10221: GLint) void {
    return epoxy_glVertexAttribI4iEXT.?(arg_10217, arg_10218, arg_10219, arg_10220, arg_10221);
}
pub inline fn glVertexAttribI4iv(arg_10222: GLuint, arg_10223: [*c]const GLint) void {
    return epoxy_glVertexAttribI4iv.?(arg_10222, arg_10223);
}
pub inline fn glVertexAttribI4ivEXT(arg_10224: GLuint, arg_10225: [*c]const GLint) void {
    return epoxy_glVertexAttribI4ivEXT.?(arg_10224, arg_10225);
}
pub inline fn glVertexAttribI4sv(arg_10226: GLuint, arg_10227: [*c]const GLshort) void {
    return epoxy_glVertexAttribI4sv.?(arg_10226, arg_10227);
}
pub inline fn glVertexAttribI4svEXT(arg_10228: GLuint, arg_10229: [*c]const GLshort) void {
    return epoxy_glVertexAttribI4svEXT.?(arg_10228, arg_10229);
}
pub inline fn glVertexAttribI4ubv(arg_10230: GLuint, arg_10231: [*c]const GLubyte) void {
    return epoxy_glVertexAttribI4ubv.?(arg_10230, arg_10231);
}
pub inline fn glVertexAttribI4ubvEXT(arg_10232: GLuint, arg_10233: [*c]const GLubyte) void {
    return epoxy_glVertexAttribI4ubvEXT.?(arg_10232, arg_10233);
}
pub inline fn glVertexAttribI4ui(arg_10234: GLuint, arg_10235: GLuint, arg_10236: GLuint, arg_10237: GLuint, arg_10238: GLuint) void {
    return epoxy_glVertexAttribI4ui.?(arg_10234, arg_10235, arg_10236, arg_10237, arg_10238);
}
pub inline fn glVertexAttribI4uiEXT(arg_10239: GLuint, arg_10240: GLuint, arg_10241: GLuint, arg_10242: GLuint, arg_10243: GLuint) void {
    return epoxy_glVertexAttribI4uiEXT.?(arg_10239, arg_10240, arg_10241, arg_10242, arg_10243);
}
pub inline fn glVertexAttribI4uiv(arg_10244: GLuint, arg_10245: [*c]const GLuint) void {
    return epoxy_glVertexAttribI4uiv.?(arg_10244, arg_10245);
}
pub inline fn glVertexAttribI4uivEXT(arg_10246: GLuint, arg_10247: [*c]const GLuint) void {
    return epoxy_glVertexAttribI4uivEXT.?(arg_10246, arg_10247);
}
pub inline fn glVertexAttribI4usv(arg_10248: GLuint, arg_10249: [*c]const GLushort) void {
    return epoxy_glVertexAttribI4usv.?(arg_10248, arg_10249);
}
pub inline fn glVertexAttribI4usvEXT(arg_10250: GLuint, arg_10251: [*c]const GLushort) void {
    return epoxy_glVertexAttribI4usvEXT.?(arg_10250, arg_10251);
}
pub inline fn glVertexAttribIFormat(arg_10252: GLuint, arg_10253: GLint, arg_10254: GLenum, arg_10255: GLuint) void {
    return epoxy_glVertexAttribIFormat.?(arg_10252, arg_10253, arg_10254, arg_10255);
}
pub inline fn glVertexAttribIFormatNV(arg_10256: GLuint, arg_10257: GLint, arg_10258: GLenum, arg_10259: GLsizei) void {
    return epoxy_glVertexAttribIFormatNV.?(arg_10256, arg_10257, arg_10258, arg_10259);
}
pub inline fn glVertexAttribIPointer(arg_10260: GLuint, arg_10261: GLint, arg_10262: GLenum, arg_10263: GLsizei, arg_10264: ?*const anyopaque) void {
    return epoxy_glVertexAttribIPointer.?(arg_10260, arg_10261, arg_10262, arg_10263, arg_10264);
}
pub inline fn glVertexAttribIPointerEXT(arg_10265: GLuint, arg_10266: GLint, arg_10267: GLenum, arg_10268: GLsizei, arg_10269: ?*const anyopaque) void {
    return epoxy_glVertexAttribIPointerEXT.?(arg_10265, arg_10266, arg_10267, arg_10268, arg_10269);
}
pub inline fn glVertexAttribL1d(arg_10270: GLuint, arg_10271: GLdouble) void {
    return epoxy_glVertexAttribL1d.?(arg_10270, arg_10271);
}
pub inline fn glVertexAttribL1dEXT(arg_10272: GLuint, arg_10273: GLdouble) void {
    return epoxy_glVertexAttribL1dEXT.?(arg_10272, arg_10273);
}
pub inline fn glVertexAttribL1dv(arg_10274: GLuint, arg_10275: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL1dv.?(arg_10274, arg_10275);
}
pub inline fn glVertexAttribL1dvEXT(arg_10276: GLuint, arg_10277: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL1dvEXT.?(arg_10276, arg_10277);
}
pub inline fn glVertexAttribL1i64NV(arg_10278: GLuint, arg_10279: GLint64EXT) void {
    return epoxy_glVertexAttribL1i64NV.?(arg_10278, arg_10279);
}
pub inline fn glVertexAttribL1i64vNV(arg_10280: GLuint, arg_10281: [*c]const GLint64EXT) void {
    return epoxy_glVertexAttribL1i64vNV.?(arg_10280, arg_10281);
}
pub inline fn glVertexAttribL1ui64ARB(arg_10282: GLuint, arg_10283: GLuint64EXT) void {
    return epoxy_glVertexAttribL1ui64ARB.?(arg_10282, arg_10283);
}
pub inline fn glVertexAttribL1ui64NV(arg_10284: GLuint, arg_10285: GLuint64EXT) void {
    return epoxy_glVertexAttribL1ui64NV.?(arg_10284, arg_10285);
}
pub inline fn glVertexAttribL1ui64vARB(arg_10286: GLuint, arg_10287: [*c]const GLuint64EXT) void {
    return epoxy_glVertexAttribL1ui64vARB.?(arg_10286, arg_10287);
}
pub inline fn glVertexAttribL1ui64vNV(arg_10288: GLuint, arg_10289: [*c]const GLuint64EXT) void {
    return epoxy_glVertexAttribL1ui64vNV.?(arg_10288, arg_10289);
}
pub inline fn glVertexAttribL2d(arg_10290: GLuint, arg_10291: GLdouble, arg_10292: GLdouble) void {
    return epoxy_glVertexAttribL2d.?(arg_10290, arg_10291, arg_10292);
}
pub inline fn glVertexAttribL2dEXT(arg_10293: GLuint, arg_10294: GLdouble, arg_10295: GLdouble) void {
    return epoxy_glVertexAttribL2dEXT.?(arg_10293, arg_10294, arg_10295);
}
pub inline fn glVertexAttribL2dv(arg_10296: GLuint, arg_10297: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL2dv.?(arg_10296, arg_10297);
}
pub inline fn glVertexAttribL2dvEXT(arg_10298: GLuint, arg_10299: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL2dvEXT.?(arg_10298, arg_10299);
}
pub inline fn glVertexAttribL2i64NV(arg_10300: GLuint, arg_10301: GLint64EXT, arg_10302: GLint64EXT) void {
    return epoxy_glVertexAttribL2i64NV.?(arg_10300, arg_10301, arg_10302);
}
pub inline fn glVertexAttribL2i64vNV(arg_10303: GLuint, arg_10304: [*c]const GLint64EXT) void {
    return epoxy_glVertexAttribL2i64vNV.?(arg_10303, arg_10304);
}
pub inline fn glVertexAttribL2ui64NV(arg_10305: GLuint, arg_10306: GLuint64EXT, arg_10307: GLuint64EXT) void {
    return epoxy_glVertexAttribL2ui64NV.?(arg_10305, arg_10306, arg_10307);
}
pub inline fn glVertexAttribL2ui64vNV(arg_10308: GLuint, arg_10309: [*c]const GLuint64EXT) void {
    return epoxy_glVertexAttribL2ui64vNV.?(arg_10308, arg_10309);
}
pub inline fn glVertexAttribL3d(arg_10310: GLuint, arg_10311: GLdouble, arg_10312: GLdouble, arg_10313: GLdouble) void {
    return epoxy_glVertexAttribL3d.?(arg_10310, arg_10311, arg_10312, arg_10313);
}
pub inline fn glVertexAttribL3dEXT(arg_10314: GLuint, arg_10315: GLdouble, arg_10316: GLdouble, arg_10317: GLdouble) void {
    return epoxy_glVertexAttribL3dEXT.?(arg_10314, arg_10315, arg_10316, arg_10317);
}
pub inline fn glVertexAttribL3dv(arg_10318: GLuint, arg_10319: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL3dv.?(arg_10318, arg_10319);
}
pub inline fn glVertexAttribL3dvEXT(arg_10320: GLuint, arg_10321: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL3dvEXT.?(arg_10320, arg_10321);
}
pub inline fn glVertexAttribL3i64NV(arg_10322: GLuint, arg_10323: GLint64EXT, arg_10324: GLint64EXT, arg_10325: GLint64EXT) void {
    return epoxy_glVertexAttribL3i64NV.?(arg_10322, arg_10323, arg_10324, arg_10325);
}
pub inline fn glVertexAttribL3i64vNV(arg_10326: GLuint, arg_10327: [*c]const GLint64EXT) void {
    return epoxy_glVertexAttribL3i64vNV.?(arg_10326, arg_10327);
}
pub inline fn glVertexAttribL3ui64NV(arg_10328: GLuint, arg_10329: GLuint64EXT, arg_10330: GLuint64EXT, arg_10331: GLuint64EXT) void {
    return epoxy_glVertexAttribL3ui64NV.?(arg_10328, arg_10329, arg_10330, arg_10331);
}
pub inline fn glVertexAttribL3ui64vNV(arg_10332: GLuint, arg_10333: [*c]const GLuint64EXT) void {
    return epoxy_glVertexAttribL3ui64vNV.?(arg_10332, arg_10333);
}
pub inline fn glVertexAttribL4d(arg_10334: GLuint, arg_10335: GLdouble, arg_10336: GLdouble, arg_10337: GLdouble, arg_10338: GLdouble) void {
    return epoxy_glVertexAttribL4d.?(arg_10334, arg_10335, arg_10336, arg_10337, arg_10338);
}
pub inline fn glVertexAttribL4dEXT(arg_10339: GLuint, arg_10340: GLdouble, arg_10341: GLdouble, arg_10342: GLdouble, arg_10343: GLdouble) void {
    return epoxy_glVertexAttribL4dEXT.?(arg_10339, arg_10340, arg_10341, arg_10342, arg_10343);
}
pub inline fn glVertexAttribL4dv(arg_10344: GLuint, arg_10345: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL4dv.?(arg_10344, arg_10345);
}
pub inline fn glVertexAttribL4dvEXT(arg_10346: GLuint, arg_10347: [*c]const GLdouble) void {
    return epoxy_glVertexAttribL4dvEXT.?(arg_10346, arg_10347);
}
pub inline fn glVertexAttribL4i64NV(arg_10348: GLuint, arg_10349: GLint64EXT, arg_10350: GLint64EXT, arg_10351: GLint64EXT, arg_10352: GLint64EXT) void {
    return epoxy_glVertexAttribL4i64NV.?(arg_10348, arg_10349, arg_10350, arg_10351, arg_10352);
}
pub inline fn glVertexAttribL4i64vNV(arg_10353: GLuint, arg_10354: [*c]const GLint64EXT) void {
    return epoxy_glVertexAttribL4i64vNV.?(arg_10353, arg_10354);
}
pub inline fn glVertexAttribL4ui64NV(arg_10355: GLuint, arg_10356: GLuint64EXT, arg_10357: GLuint64EXT, arg_10358: GLuint64EXT, arg_10359: GLuint64EXT) void {
    return epoxy_glVertexAttribL4ui64NV.?(arg_10355, arg_10356, arg_10357, arg_10358, arg_10359);
}
pub inline fn glVertexAttribL4ui64vNV(arg_10360: GLuint, arg_10361: [*c]const GLuint64EXT) void {
    return epoxy_glVertexAttribL4ui64vNV.?(arg_10360, arg_10361);
}
pub inline fn glVertexAttribLFormat(arg_10362: GLuint, arg_10363: GLint, arg_10364: GLenum, arg_10365: GLuint) void {
    return epoxy_glVertexAttribLFormat.?(arg_10362, arg_10363, arg_10364, arg_10365);
}
pub inline fn glVertexAttribLFormatNV(arg_10366: GLuint, arg_10367: GLint, arg_10368: GLenum, arg_10369: GLsizei) void {
    return epoxy_glVertexAttribLFormatNV.?(arg_10366, arg_10367, arg_10368, arg_10369);
}
pub inline fn glVertexAttribLPointer(arg_10370: GLuint, arg_10371: GLint, arg_10372: GLenum, arg_10373: GLsizei, arg_10374: ?*const anyopaque) void {
    return epoxy_glVertexAttribLPointer.?(arg_10370, arg_10371, arg_10372, arg_10373, arg_10374);
}
pub inline fn glVertexAttribLPointerEXT(arg_10375: GLuint, arg_10376: GLint, arg_10377: GLenum, arg_10378: GLsizei, arg_10379: ?*const anyopaque) void {
    return epoxy_glVertexAttribLPointerEXT.?(arg_10375, arg_10376, arg_10377, arg_10378, arg_10379);
}
pub inline fn glVertexAttribP1ui(arg_10380: GLuint, arg_10381: GLenum, arg_10382: GLboolean, arg_10383: GLuint) void {
    return epoxy_glVertexAttribP1ui.?(arg_10380, arg_10381, arg_10382, arg_10383);
}
pub inline fn glVertexAttribP1uiv(arg_10384: GLuint, arg_10385: GLenum, arg_10386: GLboolean, arg_10387: [*c]const GLuint) void {
    return epoxy_glVertexAttribP1uiv.?(arg_10384, arg_10385, arg_10386, arg_10387);
}
pub inline fn glVertexAttribP2ui(arg_10388: GLuint, arg_10389: GLenum, arg_10390: GLboolean, arg_10391: GLuint) void {
    return epoxy_glVertexAttribP2ui.?(arg_10388, arg_10389, arg_10390, arg_10391);
}
pub inline fn glVertexAttribP2uiv(arg_10392: GLuint, arg_10393: GLenum, arg_10394: GLboolean, arg_10395: [*c]const GLuint) void {
    return epoxy_glVertexAttribP2uiv.?(arg_10392, arg_10393, arg_10394, arg_10395);
}
pub inline fn glVertexAttribP3ui(arg_10396: GLuint, arg_10397: GLenum, arg_10398: GLboolean, arg_10399: GLuint) void {
    return epoxy_glVertexAttribP3ui.?(arg_10396, arg_10397, arg_10398, arg_10399);
}
pub inline fn glVertexAttribP3uiv(arg_10400: GLuint, arg_10401: GLenum, arg_10402: GLboolean, arg_10403: [*c]const GLuint) void {
    return epoxy_glVertexAttribP3uiv.?(arg_10400, arg_10401, arg_10402, arg_10403);
}
pub inline fn glVertexAttribP4ui(arg_10404: GLuint, arg_10405: GLenum, arg_10406: GLboolean, arg_10407: GLuint) void {
    return epoxy_glVertexAttribP4ui.?(arg_10404, arg_10405, arg_10406, arg_10407);
}
pub inline fn glVertexAttribP4uiv(arg_10408: GLuint, arg_10409: GLenum, arg_10410: GLboolean, arg_10411: [*c]const GLuint) void {
    return epoxy_glVertexAttribP4uiv.?(arg_10408, arg_10409, arg_10410, arg_10411);
}
pub inline fn glVertexAttribParameteriAMD(arg_10412: GLuint, arg_10413: GLenum, arg_10414: GLint) void {
    return epoxy_glVertexAttribParameteriAMD.?(arg_10412, arg_10413, arg_10414);
}
pub inline fn glVertexAttribPointer(arg_10415: GLuint, arg_10416: GLint, arg_10417: GLenum, arg_10418: GLboolean, arg_10419: GLsizei, arg_10420: ?*const anyopaque) void {
    return epoxy_glVertexAttribPointer.?(arg_10415, arg_10416, arg_10417, arg_10418, arg_10419, arg_10420);
}
pub inline fn glVertexAttribPointerARB(arg_10421: GLuint, arg_10422: GLint, arg_10423: GLenum, arg_10424: GLboolean, arg_10425: GLsizei, arg_10426: ?*const anyopaque) void {
    return epoxy_glVertexAttribPointerARB.?(arg_10421, arg_10422, arg_10423, arg_10424, arg_10425, arg_10426);
}
pub inline fn glVertexAttribPointerNV(arg_10427: GLuint, arg_10428: GLint, arg_10429: GLenum, arg_10430: GLsizei, arg_10431: ?*const anyopaque) void {
    return epoxy_glVertexAttribPointerNV.?(arg_10427, arg_10428, arg_10429, arg_10430, arg_10431);
}
pub inline fn glVertexAttribs1dvNV(arg_10432: GLuint, arg_10433: GLsizei, arg_10434: [*c]const GLdouble) void {
    return epoxy_glVertexAttribs1dvNV.?(arg_10432, arg_10433, arg_10434);
}
pub inline fn glVertexAttribs1fvNV(arg_10435: GLuint, arg_10436: GLsizei, arg_10437: [*c]const GLfloat) void {
    return epoxy_glVertexAttribs1fvNV.?(arg_10435, arg_10436, arg_10437);
}
pub inline fn glVertexAttribs1hvNV(arg_10438: GLuint, arg_10439: GLsizei, arg_10440: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttribs1hvNV.?(arg_10438, arg_10439, arg_10440);
}
pub inline fn glVertexAttribs1svNV(arg_10441: GLuint, arg_10442: GLsizei, arg_10443: [*c]const GLshort) void {
    return epoxy_glVertexAttribs1svNV.?(arg_10441, arg_10442, arg_10443);
}
pub inline fn glVertexAttribs2dvNV(arg_10444: GLuint, arg_10445: GLsizei, arg_10446: [*c]const GLdouble) void {
    return epoxy_glVertexAttribs2dvNV.?(arg_10444, arg_10445, arg_10446);
}
pub inline fn glVertexAttribs2fvNV(arg_10447: GLuint, arg_10448: GLsizei, arg_10449: [*c]const GLfloat) void {
    return epoxy_glVertexAttribs2fvNV.?(arg_10447, arg_10448, arg_10449);
}
pub inline fn glVertexAttribs2hvNV(arg_10450: GLuint, arg_10451: GLsizei, arg_10452: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttribs2hvNV.?(arg_10450, arg_10451, arg_10452);
}
pub inline fn glVertexAttribs2svNV(arg_10453: GLuint, arg_10454: GLsizei, arg_10455: [*c]const GLshort) void {
    return epoxy_glVertexAttribs2svNV.?(arg_10453, arg_10454, arg_10455);
}
pub inline fn glVertexAttribs3dvNV(arg_10456: GLuint, arg_10457: GLsizei, arg_10458: [*c]const GLdouble) void {
    return epoxy_glVertexAttribs3dvNV.?(arg_10456, arg_10457, arg_10458);
}
pub inline fn glVertexAttribs3fvNV(arg_10459: GLuint, arg_10460: GLsizei, arg_10461: [*c]const GLfloat) void {
    return epoxy_glVertexAttribs3fvNV.?(arg_10459, arg_10460, arg_10461);
}
pub inline fn glVertexAttribs3hvNV(arg_10462: GLuint, arg_10463: GLsizei, arg_10464: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttribs3hvNV.?(arg_10462, arg_10463, arg_10464);
}
pub inline fn glVertexAttribs3svNV(arg_10465: GLuint, arg_10466: GLsizei, arg_10467: [*c]const GLshort) void {
    return epoxy_glVertexAttribs3svNV.?(arg_10465, arg_10466, arg_10467);
}
pub inline fn glVertexAttribs4dvNV(arg_10468: GLuint, arg_10469: GLsizei, arg_10470: [*c]const GLdouble) void {
    return epoxy_glVertexAttribs4dvNV.?(arg_10468, arg_10469, arg_10470);
}
pub inline fn glVertexAttribs4fvNV(arg_10471: GLuint, arg_10472: GLsizei, arg_10473: [*c]const GLfloat) void {
    return epoxy_glVertexAttribs4fvNV.?(arg_10471, arg_10472, arg_10473);
}
pub inline fn glVertexAttribs4hvNV(arg_10474: GLuint, arg_10475: GLsizei, arg_10476: [*c]const GLhalfNV) void {
    return epoxy_glVertexAttribs4hvNV.?(arg_10474, arg_10475, arg_10476);
}
pub inline fn glVertexAttribs4svNV(arg_10477: GLuint, arg_10478: GLsizei, arg_10479: [*c]const GLshort) void {
    return epoxy_glVertexAttribs4svNV.?(arg_10477, arg_10478, arg_10479);
}
pub inline fn glVertexAttribs4ubvNV(arg_10480: GLuint, arg_10481: GLsizei, arg_10482: [*c]const GLubyte) void {
    return epoxy_glVertexAttribs4ubvNV.?(arg_10480, arg_10481, arg_10482);
}
pub inline fn glVertexBindingDivisor(arg_10483: GLuint, arg_10484: GLuint) void {
    return epoxy_glVertexBindingDivisor.?(arg_10483, arg_10484);
}
pub inline fn glVertexBlendARB(arg_10485: GLint) void {
    return epoxy_glVertexBlendARB.?(arg_10485);
}
pub inline fn glVertexBlendEnvfATI(arg_10486: GLenum, arg_10487: GLfloat) void {
    return epoxy_glVertexBlendEnvfATI.?(arg_10486, arg_10487);
}
pub inline fn glVertexBlendEnviATI(arg_10488: GLenum, arg_10489: GLint) void {
    return epoxy_glVertexBlendEnviATI.?(arg_10488, arg_10489);
}
pub inline fn glVertexFormatNV(arg_10490: GLint, arg_10491: GLenum, arg_10492: GLsizei) void {
    return epoxy_glVertexFormatNV.?(arg_10490, arg_10491, arg_10492);
}
pub inline fn glVertexP2ui(arg_10493: GLenum, arg_10494: GLuint) void {
    return epoxy_glVertexP2ui.?(arg_10493, arg_10494);
}
pub inline fn glVertexP2uiv(arg_10495: GLenum, arg_10496: [*c]const GLuint) void {
    return epoxy_glVertexP2uiv.?(arg_10495, arg_10496);
}
pub inline fn glVertexP3ui(arg_10497: GLenum, arg_10498: GLuint) void {
    return epoxy_glVertexP3ui.?(arg_10497, arg_10498);
}
pub inline fn glVertexP3uiv(arg_10499: GLenum, arg_10500: [*c]const GLuint) void {
    return epoxy_glVertexP3uiv.?(arg_10499, arg_10500);
}
pub inline fn glVertexP4ui(arg_10501: GLenum, arg_10502: GLuint) void {
    return epoxy_glVertexP4ui.?(arg_10501, arg_10502);
}
pub inline fn glVertexP4uiv(arg_10503: GLenum, arg_10504: [*c]const GLuint) void {
    return epoxy_glVertexP4uiv.?(arg_10503, arg_10504);
}
pub inline fn glVertexPointer(arg_10505: GLint, arg_10506: GLenum, arg_10507: GLsizei, arg_10508: ?*const anyopaque) void {
    return epoxy_glVertexPointer.?(arg_10505, arg_10506, arg_10507, arg_10508);
}
pub inline fn glVertexPointerEXT(arg_10509: GLint, arg_10510: GLenum, arg_10511: GLsizei, arg_10512: GLsizei, arg_10513: ?*const anyopaque) void {
    return epoxy_glVertexPointerEXT.?(arg_10509, arg_10510, arg_10511, arg_10512, arg_10513);
}
pub inline fn glVertexPointerListIBM(arg_10514: GLint, arg_10515: GLenum, arg_10516: GLint, arg_10517: [*c]?*const anyopaque, arg_10518: GLint) void {
    return epoxy_glVertexPointerListIBM.?(arg_10514, arg_10515, arg_10516, arg_10517, arg_10518);
}
pub inline fn glVertexPointervINTEL(arg_10519: GLint, arg_10520: GLenum, arg_10521: [*c]?*const anyopaque) void {
    return epoxy_glVertexPointervINTEL.?(arg_10519, arg_10520, arg_10521);
}
pub inline fn glVertexStream1dATI(arg_10522: GLenum, arg_10523: GLdouble) void {
    return epoxy_glVertexStream1dATI.?(arg_10522, arg_10523);
}
pub inline fn glVertexStream1dvATI(arg_10524: GLenum, arg_10525: [*c]const GLdouble) void {
    return epoxy_glVertexStream1dvATI.?(arg_10524, arg_10525);
}
pub inline fn glVertexStream1fATI(arg_10526: GLenum, arg_10527: GLfloat) void {
    return epoxy_glVertexStream1fATI.?(arg_10526, arg_10527);
}
pub inline fn glVertexStream1fvATI(arg_10528: GLenum, arg_10529: [*c]const GLfloat) void {
    return epoxy_glVertexStream1fvATI.?(arg_10528, arg_10529);
}
pub inline fn glVertexStream1iATI(arg_10530: GLenum, arg_10531: GLint) void {
    return epoxy_glVertexStream1iATI.?(arg_10530, arg_10531);
}
pub inline fn glVertexStream1ivATI(arg_10532: GLenum, arg_10533: [*c]const GLint) void {
    return epoxy_glVertexStream1ivATI.?(arg_10532, arg_10533);
}
pub inline fn glVertexStream1sATI(arg_10534: GLenum, arg_10535: GLshort) void {
    return epoxy_glVertexStream1sATI.?(arg_10534, arg_10535);
}
pub inline fn glVertexStream1svATI(arg_10536: GLenum, arg_10537: [*c]const GLshort) void {
    return epoxy_glVertexStream1svATI.?(arg_10536, arg_10537);
}
pub inline fn glVertexStream2dATI(arg_10538: GLenum, arg_10539: GLdouble, arg_10540: GLdouble) void {
    return epoxy_glVertexStream2dATI.?(arg_10538, arg_10539, arg_10540);
}
pub inline fn glVertexStream2dvATI(arg_10541: GLenum, arg_10542: [*c]const GLdouble) void {
    return epoxy_glVertexStream2dvATI.?(arg_10541, arg_10542);
}
pub inline fn glVertexStream2fATI(arg_10543: GLenum, arg_10544: GLfloat, arg_10545: GLfloat) void {
    return epoxy_glVertexStream2fATI.?(arg_10543, arg_10544, arg_10545);
}
pub inline fn glVertexStream2fvATI(arg_10546: GLenum, arg_10547: [*c]const GLfloat) void {
    return epoxy_glVertexStream2fvATI.?(arg_10546, arg_10547);
}
pub inline fn glVertexStream2iATI(arg_10548: GLenum, arg_10549: GLint, arg_10550: GLint) void {
    return epoxy_glVertexStream2iATI.?(arg_10548, arg_10549, arg_10550);
}
pub inline fn glVertexStream2ivATI(arg_10551: GLenum, arg_10552: [*c]const GLint) void {
    return epoxy_glVertexStream2ivATI.?(arg_10551, arg_10552);
}
pub inline fn glVertexStream2sATI(arg_10553: GLenum, arg_10554: GLshort, arg_10555: GLshort) void {
    return epoxy_glVertexStream2sATI.?(arg_10553, arg_10554, arg_10555);
}
pub inline fn glVertexStream2svATI(arg_10556: GLenum, arg_10557: [*c]const GLshort) void {
    return epoxy_glVertexStream2svATI.?(arg_10556, arg_10557);
}
pub inline fn glVertexStream3dATI(arg_10558: GLenum, arg_10559: GLdouble, arg_10560: GLdouble, arg_10561: GLdouble) void {
    return epoxy_glVertexStream3dATI.?(arg_10558, arg_10559, arg_10560, arg_10561);
}
pub inline fn glVertexStream3dvATI(arg_10562: GLenum, arg_10563: [*c]const GLdouble) void {
    return epoxy_glVertexStream3dvATI.?(arg_10562, arg_10563);
}
pub inline fn glVertexStream3fATI(arg_10564: GLenum, arg_10565: GLfloat, arg_10566: GLfloat, arg_10567: GLfloat) void {
    return epoxy_glVertexStream3fATI.?(arg_10564, arg_10565, arg_10566, arg_10567);
}
pub inline fn glVertexStream3fvATI(arg_10568: GLenum, arg_10569: [*c]const GLfloat) void {
    return epoxy_glVertexStream3fvATI.?(arg_10568, arg_10569);
}
pub inline fn glVertexStream3iATI(arg_10570: GLenum, arg_10571: GLint, arg_10572: GLint, arg_10573: GLint) void {
    return epoxy_glVertexStream3iATI.?(arg_10570, arg_10571, arg_10572, arg_10573);
}
pub inline fn glVertexStream3ivATI(arg_10574: GLenum, arg_10575: [*c]const GLint) void {
    return epoxy_glVertexStream3ivATI.?(arg_10574, arg_10575);
}
pub inline fn glVertexStream3sATI(arg_10576: GLenum, arg_10577: GLshort, arg_10578: GLshort, arg_10579: GLshort) void {
    return epoxy_glVertexStream3sATI.?(arg_10576, arg_10577, arg_10578, arg_10579);
}
pub inline fn glVertexStream3svATI(arg_10580: GLenum, arg_10581: [*c]const GLshort) void {
    return epoxy_glVertexStream3svATI.?(arg_10580, arg_10581);
}
pub inline fn glVertexStream4dATI(arg_10582: GLenum, arg_10583: GLdouble, arg_10584: GLdouble, arg_10585: GLdouble, arg_10586: GLdouble) void {
    return epoxy_glVertexStream4dATI.?(arg_10582, arg_10583, arg_10584, arg_10585, arg_10586);
}
pub inline fn glVertexStream4dvATI(arg_10587: GLenum, arg_10588: [*c]const GLdouble) void {
    return epoxy_glVertexStream4dvATI.?(arg_10587, arg_10588);
}
pub inline fn glVertexStream4fATI(arg_10589: GLenum, arg_10590: GLfloat, arg_10591: GLfloat, arg_10592: GLfloat, arg_10593: GLfloat) void {
    return epoxy_glVertexStream4fATI.?(arg_10589, arg_10590, arg_10591, arg_10592, arg_10593);
}
pub inline fn glVertexStream4fvATI(arg_10594: GLenum, arg_10595: [*c]const GLfloat) void {
    return epoxy_glVertexStream4fvATI.?(arg_10594, arg_10595);
}
pub inline fn glVertexStream4iATI(arg_10596: GLenum, arg_10597: GLint, arg_10598: GLint, arg_10599: GLint, arg_10600: GLint) void {
    return epoxy_glVertexStream4iATI.?(arg_10596, arg_10597, arg_10598, arg_10599, arg_10600);
}
pub inline fn glVertexStream4ivATI(arg_10601: GLenum, arg_10602: [*c]const GLint) void {
    return epoxy_glVertexStream4ivATI.?(arg_10601, arg_10602);
}
pub inline fn glVertexStream4sATI(arg_10603: GLenum, arg_10604: GLshort, arg_10605: GLshort, arg_10606: GLshort, arg_10607: GLshort) void {
    return epoxy_glVertexStream4sATI.?(arg_10603, arg_10604, arg_10605, arg_10606, arg_10607);
}
pub inline fn glVertexStream4svATI(arg_10608: GLenum, arg_10609: [*c]const GLshort) void {
    return epoxy_glVertexStream4svATI.?(arg_10608, arg_10609);
}
pub inline fn glVertexWeightPointerEXT(arg_10610: GLint, arg_10611: GLenum, arg_10612: GLsizei, arg_10613: ?*const anyopaque) void {
    return epoxy_glVertexWeightPointerEXT.?(arg_10610, arg_10611, arg_10612, arg_10613);
}
pub inline fn glVertexWeightfEXT(arg_10614: GLfloat) void {
    return epoxy_glVertexWeightfEXT.?(arg_10614);
}
pub inline fn glVertexWeightfvEXT(arg_10615: [*c]const GLfloat) void {
    return epoxy_glVertexWeightfvEXT.?(arg_10615);
}
pub inline fn glVertexWeighthNV(arg_10616: GLhalfNV) void {
    return epoxy_glVertexWeighthNV.?(arg_10616);
}
pub inline fn glVertexWeighthvNV(arg_10617: [*c]const GLhalfNV) void {
    return epoxy_glVertexWeighthvNV.?(arg_10617);
}
pub inline fn glVideoCaptureNV(arg_10618: GLuint, arg_10619: [*c]GLuint, arg_10620: [*c]GLuint64EXT) GLenum {
    return epoxy_glVideoCaptureNV.?(arg_10618, arg_10619, arg_10620);
}
pub inline fn glVideoCaptureStreamParameterdvNV(arg_10621: GLuint, arg_10622: GLuint, arg_10623: GLenum, arg_10624: [*c]const GLdouble) void {
    return epoxy_glVideoCaptureStreamParameterdvNV.?(arg_10621, arg_10622, arg_10623, arg_10624);
}
pub inline fn glVideoCaptureStreamParameterfvNV(arg_10625: GLuint, arg_10626: GLuint, arg_10627: GLenum, arg_10628: [*c]const GLfloat) void {
    return epoxy_glVideoCaptureStreamParameterfvNV.?(arg_10625, arg_10626, arg_10627, arg_10628);
}
pub inline fn glVideoCaptureStreamParameterivNV(arg_10629: GLuint, arg_10630: GLuint, arg_10631: GLenum, arg_10632: [*c]const GLint) void {
    return epoxy_glVideoCaptureStreamParameterivNV.?(arg_10629, arg_10630, arg_10631, arg_10632);
}
pub inline fn glViewport(arg_10633: GLint, arg_10634: GLint, arg_10635: GLsizei, arg_10636: GLsizei) void {
    return epoxy_glViewport.?(arg_10633, arg_10634, arg_10635, arg_10636);
}
pub inline fn glViewportArrayv(arg_10637: GLuint, arg_10638: GLsizei, arg_10639: [*c]const GLfloat) void {
    return epoxy_glViewportArrayv.?(arg_10637, arg_10638, arg_10639);
}
pub inline fn glViewportArrayvNV(arg_10640: GLuint, arg_10641: GLsizei, arg_10642: [*c]const GLfloat) void {
    return epoxy_glViewportArrayvNV.?(arg_10640, arg_10641, arg_10642);
}
pub inline fn glViewportArrayvOES(arg_10643: GLuint, arg_10644: GLsizei, arg_10645: [*c]const GLfloat) void {
    return epoxy_glViewportArrayvOES.?(arg_10643, arg_10644, arg_10645);
}
pub inline fn glViewportIndexedf(arg_10646: GLuint, arg_10647: GLfloat, arg_10648: GLfloat, arg_10649: GLfloat, arg_10650: GLfloat) void {
    return epoxy_glViewportIndexedf.?(arg_10646, arg_10647, arg_10648, arg_10649, arg_10650);
}
pub inline fn glViewportIndexedfNV(arg_10651: GLuint, arg_10652: GLfloat, arg_10653: GLfloat, arg_10654: GLfloat, arg_10655: GLfloat) void {
    return epoxy_glViewportIndexedfNV.?(arg_10651, arg_10652, arg_10653, arg_10654, arg_10655);
}
pub inline fn glViewportIndexedfOES(arg_10656: GLuint, arg_10657: GLfloat, arg_10658: GLfloat, arg_10659: GLfloat, arg_10660: GLfloat) void {
    return epoxy_glViewportIndexedfOES.?(arg_10656, arg_10657, arg_10658, arg_10659, arg_10660);
}
pub inline fn glViewportIndexedfv(arg_10661: GLuint, arg_10662: [*c]const GLfloat) void {
    return epoxy_glViewportIndexedfv.?(arg_10661, arg_10662);
}
pub inline fn glViewportIndexedfvNV(arg_10663: GLuint, arg_10664: [*c]const GLfloat) void {
    return epoxy_glViewportIndexedfvNV.?(arg_10663, arg_10664);
}
pub inline fn glViewportIndexedfvOES(arg_10665: GLuint, arg_10666: [*c]const GLfloat) void {
    return epoxy_glViewportIndexedfvOES.?(arg_10665, arg_10666);
}
pub inline fn glViewportPositionWScaleNV(arg_10667: GLuint, arg_10668: GLfloat, arg_10669: GLfloat) void {
    return epoxy_glViewportPositionWScaleNV.?(arg_10667, arg_10668, arg_10669);
}
pub inline fn glViewportSwizzleNV(arg_10670: GLuint, arg_10671: GLenum, arg_10672: GLenum, arg_10673: GLenum, arg_10674: GLenum) void {
    return epoxy_glViewportSwizzleNV.?(arg_10670, arg_10671, arg_10672, arg_10673, arg_10674);
}
pub inline fn glWaitSemaphoreEXT(arg_10675: GLuint, arg_10676: GLuint, arg_10677: [*c]const GLuint, arg_10678: GLuint, arg_10679: [*c]const GLuint, arg_10680: [*c]const GLenum) void {
    return epoxy_glWaitSemaphoreEXT.?(arg_10675, arg_10676, arg_10677, arg_10678, arg_10679, arg_10680);
}
pub inline fn glWaitSemaphoreui64NVX(arg_10681: GLuint, arg_10682: GLsizei, arg_10683: [*c]const GLuint, arg_10684: [*c]const GLuint64) void {
    return epoxy_glWaitSemaphoreui64NVX.?(arg_10681, arg_10682, arg_10683, arg_10684);
}
pub inline fn glWaitSync(arg_10685: GLsync, arg_10686: GLbitfield, arg_10687: GLuint64) void {
    return epoxy_glWaitSync.?(arg_10685, arg_10686, arg_10687);
}
pub inline fn glWaitSyncAPPLE(arg_10688: GLsync, arg_10689: GLbitfield, arg_10690: GLuint64) void {
    return epoxy_glWaitSyncAPPLE.?(arg_10688, arg_10689, arg_10690);
}
pub inline fn glWaitVkSemaphoreNV(arg_10691: GLuint64) void {
    return epoxy_glWaitVkSemaphoreNV.?(arg_10691);
}
pub inline fn glWeightPathsNV(arg_10692: GLuint, arg_10693: GLsizei, arg_10694: [*c]const GLuint, arg_10695: [*c]const GLfloat) void {
    return epoxy_glWeightPathsNV.?(arg_10692, arg_10693, arg_10694, arg_10695);
}
pub inline fn glWeightPointerARB(arg_10696: GLint, arg_10697: GLenum, arg_10698: GLsizei, arg_10699: ?*const anyopaque) void {
    return epoxy_glWeightPointerARB.?(arg_10696, arg_10697, arg_10698, arg_10699);
}
pub inline fn glWeightPointerOES(arg_10700: GLint, arg_10701: GLenum, arg_10702: GLsizei, arg_10703: ?*const anyopaque) void {
    return epoxy_glWeightPointerOES.?(arg_10700, arg_10701, arg_10702, arg_10703);
}
pub inline fn glWeightbvARB(arg_10704: GLint, arg_10705: [*c]const GLbyte) void {
    return epoxy_glWeightbvARB.?(arg_10704, arg_10705);
}
pub inline fn glWeightdvARB(arg_10706: GLint, arg_10707: [*c]const GLdouble) void {
    return epoxy_glWeightdvARB.?(arg_10706, arg_10707);
}
pub inline fn glWeightfvARB(arg_10708: GLint, arg_10709: [*c]const GLfloat) void {
    return epoxy_glWeightfvARB.?(arg_10708, arg_10709);
}
pub inline fn glWeightivARB(arg_10710: GLint, arg_10711: [*c]const GLint) void {
    return epoxy_glWeightivARB.?(arg_10710, arg_10711);
}
pub inline fn glWeightsvARB(arg_10712: GLint, arg_10713: [*c]const GLshort) void {
    return epoxy_glWeightsvARB.?(arg_10712, arg_10713);
}
pub inline fn glWeightubvARB(arg_10714: GLint, arg_10715: [*c]const GLubyte) void {
    return epoxy_glWeightubvARB.?(arg_10714, arg_10715);
}
pub inline fn glWeightuivARB(arg_10716: GLint, arg_10717: [*c]const GLuint) void {
    return epoxy_glWeightuivARB.?(arg_10716, arg_10717);
}
pub inline fn glWeightusvARB(arg_10718: GLint, arg_10719: [*c]const GLushort) void {
    return epoxy_glWeightusvARB.?(arg_10718, arg_10719);
}
pub inline fn glWindowPos2d(arg_10720: GLdouble, arg_10721: GLdouble) void {
    return epoxy_glWindowPos2d.?(arg_10720, arg_10721);
}
pub inline fn glWindowPos2dARB(arg_10722: GLdouble, arg_10723: GLdouble) void {
    return epoxy_glWindowPos2dARB.?(arg_10722, arg_10723);
}
pub inline fn glWindowPos2dMESA(arg_10724: GLdouble, arg_10725: GLdouble) void {
    return epoxy_glWindowPos2dMESA.?(arg_10724, arg_10725);
}
pub inline fn glWindowPos2dv(arg_10726: [*c]const GLdouble) void {
    return epoxy_glWindowPos2dv.?(arg_10726);
}
pub inline fn glWindowPos2dvARB(arg_10727: [*c]const GLdouble) void {
    return epoxy_glWindowPos2dvARB.?(arg_10727);
}
pub inline fn glWindowPos2dvMESA(arg_10728: [*c]const GLdouble) void {
    return epoxy_glWindowPos2dvMESA.?(arg_10728);
}
pub inline fn glWindowPos2f(arg_10729: GLfloat, arg_10730: GLfloat) void {
    return epoxy_glWindowPos2f.?(arg_10729, arg_10730);
}
pub inline fn glWindowPos2fARB(arg_10731: GLfloat, arg_10732: GLfloat) void {
    return epoxy_glWindowPos2fARB.?(arg_10731, arg_10732);
}
pub inline fn glWindowPos2fMESA(arg_10733: GLfloat, arg_10734: GLfloat) void {
    return epoxy_glWindowPos2fMESA.?(arg_10733, arg_10734);
}
pub inline fn glWindowPos2fv(arg_10735: [*c]const GLfloat) void {
    return epoxy_glWindowPos2fv.?(arg_10735);
}
pub inline fn glWindowPos2fvARB(arg_10736: [*c]const GLfloat) void {
    return epoxy_glWindowPos2fvARB.?(arg_10736);
}
pub inline fn glWindowPos2fvMESA(arg_10737: [*c]const GLfloat) void {
    return epoxy_glWindowPos2fvMESA.?(arg_10737);
}
pub inline fn glWindowPos2i(arg_10738: GLint, arg_10739: GLint) void {
    return epoxy_glWindowPos2i.?(arg_10738, arg_10739);
}
pub inline fn glWindowPos2iARB(arg_10740: GLint, arg_10741: GLint) void {
    return epoxy_glWindowPos2iARB.?(arg_10740, arg_10741);
}
pub inline fn glWindowPos2iMESA(arg_10742: GLint, arg_10743: GLint) void {
    return epoxy_glWindowPos2iMESA.?(arg_10742, arg_10743);
}
pub inline fn glWindowPos2iv(arg_10744: [*c]const GLint) void {
    return epoxy_glWindowPos2iv.?(arg_10744);
}
pub inline fn glWindowPos2ivARB(arg_10745: [*c]const GLint) void {
    return epoxy_glWindowPos2ivARB.?(arg_10745);
}
pub inline fn glWindowPos2ivMESA(arg_10746: [*c]const GLint) void {
    return epoxy_glWindowPos2ivMESA.?(arg_10746);
}
pub inline fn glWindowPos2s(arg_10747: GLshort, arg_10748: GLshort) void {
    return epoxy_glWindowPos2s.?(arg_10747, arg_10748);
}
pub inline fn glWindowPos2sARB(arg_10749: GLshort, arg_10750: GLshort) void {
    return epoxy_glWindowPos2sARB.?(arg_10749, arg_10750);
}
pub inline fn glWindowPos2sMESA(arg_10751: GLshort, arg_10752: GLshort) void {
    return epoxy_glWindowPos2sMESA.?(arg_10751, arg_10752);
}
pub inline fn glWindowPos2sv(arg_10753: [*c]const GLshort) void {
    return epoxy_glWindowPos2sv.?(arg_10753);
}
pub inline fn glWindowPos2svARB(arg_10754: [*c]const GLshort) void {
    return epoxy_glWindowPos2svARB.?(arg_10754);
}
pub inline fn glWindowPos2svMESA(arg_10755: [*c]const GLshort) void {
    return epoxy_glWindowPos2svMESA.?(arg_10755);
}
pub inline fn glWindowPos3d(arg_10756: GLdouble, arg_10757: GLdouble, arg_10758: GLdouble) void {
    return epoxy_glWindowPos3d.?(arg_10756, arg_10757, arg_10758);
}
pub inline fn glWindowPos3dARB(arg_10759: GLdouble, arg_10760: GLdouble, arg_10761: GLdouble) void {
    return epoxy_glWindowPos3dARB.?(arg_10759, arg_10760, arg_10761);
}
pub inline fn glWindowPos3dMESA(arg_10762: GLdouble, arg_10763: GLdouble, arg_10764: GLdouble) void {
    return epoxy_glWindowPos3dMESA.?(arg_10762, arg_10763, arg_10764);
}
pub inline fn glWindowPos3dv(arg_10765: [*c]const GLdouble) void {
    return epoxy_glWindowPos3dv.?(arg_10765);
}
pub inline fn glWindowPos3dvARB(arg_10766: [*c]const GLdouble) void {
    return epoxy_glWindowPos3dvARB.?(arg_10766);
}
pub inline fn glWindowPos3dvMESA(arg_10767: [*c]const GLdouble) void {
    return epoxy_glWindowPos3dvMESA.?(arg_10767);
}
pub inline fn glWindowPos3f(arg_10768: GLfloat, arg_10769: GLfloat, arg_10770: GLfloat) void {
    return epoxy_glWindowPos3f.?(arg_10768, arg_10769, arg_10770);
}
pub inline fn glWindowPos3fARB(arg_10771: GLfloat, arg_10772: GLfloat, arg_10773: GLfloat) void {
    return epoxy_glWindowPos3fARB.?(arg_10771, arg_10772, arg_10773);
}
pub inline fn glWindowPos3fMESA(arg_10774: GLfloat, arg_10775: GLfloat, arg_10776: GLfloat) void {
    return epoxy_glWindowPos3fMESA.?(arg_10774, arg_10775, arg_10776);
}
pub inline fn glWindowPos3fv(arg_10777: [*c]const GLfloat) void {
    return epoxy_glWindowPos3fv.?(arg_10777);
}
pub inline fn glWindowPos3fvARB(arg_10778: [*c]const GLfloat) void {
    return epoxy_glWindowPos3fvARB.?(arg_10778);
}
pub inline fn glWindowPos3fvMESA(arg_10779: [*c]const GLfloat) void {
    return epoxy_glWindowPos3fvMESA.?(arg_10779);
}
pub inline fn glWindowPos3i(arg_10780: GLint, arg_10781: GLint, arg_10782: GLint) void {
    return epoxy_glWindowPos3i.?(arg_10780, arg_10781, arg_10782);
}
pub inline fn glWindowPos3iARB(arg_10783: GLint, arg_10784: GLint, arg_10785: GLint) void {
    return epoxy_glWindowPos3iARB.?(arg_10783, arg_10784, arg_10785);
}
pub inline fn glWindowPos3iMESA(arg_10786: GLint, arg_10787: GLint, arg_10788: GLint) void {
    return epoxy_glWindowPos3iMESA.?(arg_10786, arg_10787, arg_10788);
}
pub inline fn glWindowPos3iv(arg_10789: [*c]const GLint) void {
    return epoxy_glWindowPos3iv.?(arg_10789);
}
pub inline fn glWindowPos3ivARB(arg_10790: [*c]const GLint) void {
    return epoxy_glWindowPos3ivARB.?(arg_10790);
}
pub inline fn glWindowPos3ivMESA(arg_10791: [*c]const GLint) void {
    return epoxy_glWindowPos3ivMESA.?(arg_10791);
}
pub inline fn glWindowPos3s(arg_10792: GLshort, arg_10793: GLshort, arg_10794: GLshort) void {
    return epoxy_glWindowPos3s.?(arg_10792, arg_10793, arg_10794);
}
pub inline fn glWindowPos3sARB(arg_10795: GLshort, arg_10796: GLshort, arg_10797: GLshort) void {
    return epoxy_glWindowPos3sARB.?(arg_10795, arg_10796, arg_10797);
}
pub inline fn glWindowPos3sMESA(arg_10798: GLshort, arg_10799: GLshort, arg_10800: GLshort) void {
    return epoxy_glWindowPos3sMESA.?(arg_10798, arg_10799, arg_10800);
}
pub inline fn glWindowPos3sv(arg_10801: [*c]const GLshort) void {
    return epoxy_glWindowPos3sv.?(arg_10801);
}
pub inline fn glWindowPos3svARB(arg_10802: [*c]const GLshort) void {
    return epoxy_glWindowPos3svARB.?(arg_10802);
}
pub inline fn glWindowPos3svMESA(arg_10803: [*c]const GLshort) void {
    return epoxy_glWindowPos3svMESA.?(arg_10803);
}
pub inline fn glWindowPos4dMESA(arg_10804: GLdouble, arg_10805: GLdouble, arg_10806: GLdouble, arg_10807: GLdouble) void {
    return epoxy_glWindowPos4dMESA.?(arg_10804, arg_10805, arg_10806, arg_10807);
}
pub inline fn glWindowPos4dvMESA(arg_10808: [*c]const GLdouble) void {
    return epoxy_glWindowPos4dvMESA.?(arg_10808);
}
pub inline fn glWindowPos4fMESA(arg_10809: GLfloat, arg_10810: GLfloat, arg_10811: GLfloat, arg_10812: GLfloat) void {
    return epoxy_glWindowPos4fMESA.?(arg_10809, arg_10810, arg_10811, arg_10812);
}
pub inline fn glWindowPos4fvMESA(arg_10813: [*c]const GLfloat) void {
    return epoxy_glWindowPos4fvMESA.?(arg_10813);
}
pub inline fn glWindowPos4iMESA(arg_10814: GLint, arg_10815: GLint, arg_10816: GLint, arg_10817: GLint) void {
    return epoxy_glWindowPos4iMESA.?(arg_10814, arg_10815, arg_10816, arg_10817);
}
pub inline fn glWindowPos4ivMESA(arg_10818: [*c]const GLint) void {
    return epoxy_glWindowPos4ivMESA.?(arg_10818);
}
pub inline fn glWindowPos4sMESA(arg_10819: GLshort, arg_10820: GLshort, arg_10821: GLshort, arg_10822: GLshort) void {
    return epoxy_glWindowPos4sMESA.?(arg_10819, arg_10820, arg_10821, arg_10822);
}
pub inline fn glWindowPos4svMESA(arg_10823: [*c]const GLshort) void {
    return epoxy_glWindowPos4svMESA.?(arg_10823);
}
pub inline fn glWindowRectanglesEXT(arg_10824: GLenum, arg_10825: GLsizei, arg_10826: [*c]const GLint) void {
    return epoxy_glWindowRectanglesEXT.?(arg_10824, arg_10825, arg_10826);
}
pub inline fn glWriteMaskEXT(arg_10827: GLuint, arg_10828: GLuint, arg_10829: GLenum, arg_10830: GLenum, arg_10831: GLenum, arg_10832: GLenum) void {
    return epoxy_glWriteMaskEXT.?(arg_10827, arg_10828, arg_10829, arg_10830, arg_10831, arg_10832);
}
pub const __darwin_pthread_handler_rec = struct___darwin_pthread_handler_rec;
pub const _opaque_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const _opaque_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const _opaque_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const _opaque_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const _opaque_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const _opaque_pthread_once_t = struct__opaque_pthread_once_t;
pub const _opaque_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const _opaque_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const _opaque_pthread_t = struct__opaque_pthread_t;
pub const __sbuf = struct___sbuf;
pub const __sFILEX = struct___sFILEX;
pub const __sFILE = struct___sFILE;
pub const __darwin_arm_exception_state = struct___darwin_arm_exception_state;
pub const __darwin_arm_exception_state64 = struct___darwin_arm_exception_state64;
pub const __darwin_arm_thread_state = struct___darwin_arm_thread_state;
pub const __darwin_arm_thread_state64 = struct___darwin_arm_thread_state64;
pub const __darwin_arm_vfp_state = struct___darwin_arm_vfp_state;
pub const __darwin_arm_neon_state64 = struct___darwin_arm_neon_state64;
pub const __darwin_arm_neon_state = struct___darwin_arm_neon_state;
pub const __arm_pagein_state = struct___arm_pagein_state;
pub const __arm_legacy_debug_state = struct___arm_legacy_debug_state;
pub const __darwin_arm_debug_state32 = struct___darwin_arm_debug_state32;
pub const __darwin_arm_debug_state64 = struct___darwin_arm_debug_state64;
pub const __darwin_arm_cpmu_state64 = struct___darwin_arm_cpmu_state64;
pub const __darwin_mcontext32 = struct___darwin_mcontext32;
pub const __darwin_mcontext64 = struct___darwin_mcontext64;
pub const __darwin_sigaltstack = struct___darwin_sigaltstack;
pub const __darwin_ucontext = struct___darwin_ucontext;
pub const sigval = union_sigval;
pub const sigevent = struct_sigevent;
pub const __siginfo = struct___siginfo;
pub const __sigaction_u = union___sigaction_u;
pub const __sigaction = struct___sigaction;
pub const sigaction = struct_sigaction;
pub const sigvec = struct_sigvec;
pub const sigstack = struct_sigstack;
pub const timeval = struct_timeval;
pub const rusage = struct_rusage;
pub const rusage_info_v0 = struct_rusage_info_v0;
pub const rusage_info_v1 = struct_rusage_info_v1;
pub const rusage_info_v2 = struct_rusage_info_v2;
pub const rusage_info_v3 = struct_rusage_info_v3;
pub const rusage_info_v4 = struct_rusage_info_v4;
pub const rusage_info_v5 = struct_rusage_info_v5;
pub const rusage_info_v6 = struct_rusage_info_v6;
pub const rlimit = struct_rlimit;
pub const proc_rlimit_control_wakeupmon = struct_proc_rlimit_control_wakeupmon;
pub const _OSUnalignedU16 = struct__OSUnalignedU16;
pub const _OSUnalignedU32 = struct__OSUnalignedU32;
pub const _OSUnalignedU64 = struct__OSUnalignedU64;
pub const _malloc_zone_t = struct__malloc_zone_t;
pub const timespec = struct_timespec;
pub const tm = struct_tm;
pub const __float2 = struct___float2;
pub const __double2 = struct___double2;
pub const exception = struct_exception;
pub const _SDL_iconv_t = struct__SDL_iconv_t;
pub const SDL_semaphore = struct_SDL_semaphore;
pub const _SDL_AudioStream = struct__SDL_AudioStream;
pub const _SDL_Joystick = struct__SDL_Joystick;
pub const _SDL_Sensor = struct__SDL_Sensor;
pub const _SDL_GameController = struct__SDL_GameController;
pub const _SDL_Haptic = struct__SDL_Haptic;
pub const SDL_hid_device_ = struct_SDL_hid_device_;
pub const __GLsync = struct___GLsync;
pub const _cl_context = struct__cl_context;
pub const _cl_event = struct__cl_event;
